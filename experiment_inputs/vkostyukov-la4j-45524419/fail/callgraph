CALLER: org.la4j.matrix.AbstractMatrix#copyOfRows(int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#copyOfShape(int,int)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#copyOfShape(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#copyOfShape(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#copyOfShape(int,int)
CALLER: org.la4j.matrix.sparse.ColumnMajorSparseMatrix#iterator()
	CALLEE: org.la4j.matrix.sparse.ColumnMajorSparseMatrix#iterator()
CALLER: org.la4j.vector.AbstractVector#toDenseVector()
	CALLEE: org.la4j.vector.AbstractVector#to(org.la4j.vector.VectorFactory)
	CALLEE: org.la4j.vector.sparse.SparseVector#to(org.la4j.vector.VectorFactory)
	CALLEE: org.la4j.vector.sparse.CompressedVector#to(org.la4j.vector.VectorFactory)
	CALLEE: org.la4j.vector.dense.BasicVector#to(org.la4j.vector.VectorFactory)
CALLER: org.la4j.factory.Basic1DFactory#createDiagonalMatrix(double[])
CALLER: org.la4j.matrix.dense.Basic2DMatrix#copyOfShape(int,int)
	CALLEE: org.la4j.matrix.AbstractMatrix#ensureDimensionsAreCorrect(int,int)
CALLER: static org.la4j.matrix.Matrices#asSymbolSeparatedSource(java.io.InputStream,java.lang.String)
	CALLEE: org.la4j.io.SymbolSeparatedStream#<init>(java.io.InputStream,java.lang.String)
	CALLEE: org.la4j.matrix.source.StreamMatrixSource#<init>(org.la4j.io.MatrixStream)
CALLER: org.la4j.factory.Basic2DFactory#createBlockMatrix(org.la4j.matrix.Matrix,org.la4j.matrix.Matrix,org.la4j.matrix.Matrix,org.la4j.matrix.Matrix)
	CALLEE: static org.la4j.matrix.dense.Basic2DMatrix#block(org.la4j.matrix.Matrix,org.la4j.matrix.Matrix,org.la4j.matrix.Matrix,org.la4j.matrix.Matrix)
CALLER: org.la4j.factory.CCSFactory#createDiagonalMatrix(double[])
CALLER: static org.la4j.matrix.sparse.ColumnMajorSparseMatrix#from1DArray(int,int,double[])
	CALLEE: static org.la4j.matrix.sparse.CCSMatrix#from1DArray(int,int,double[])
CALLER: org.la4j.matrix.AbstractMatrix#multiply(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.matrix.AbstractMatrix#ensureArgumentIsNotNull(java.lang.Object,java.lang.String)
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
	CALLEE: org.la4j.matrix.AbstractMatrix#fail(java.lang.String)
	CALLEE: org.la4j.factory.Basic1DFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.Basic2DFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.CRSFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.CCSFactory#createMatrix(int,int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#getColumn(int)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#getColumn(int)
	CALLEE: org.la4j.matrix.dense.DenseMatrix#getColumn(int)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
	CALLEE: org.la4j.vector.sparse.SparseVector#get(int)
	CALLEE: org.la4j.vector.dense.BasicVector#get(int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#set(int,int,double)
CALLER: org.la4j.matrix.operation.ooplace.OoPlaceMatrixByVectorMultiplication#apply(org.la4j.matrix.dense.DenseMatrix,org.la4j.vector.dense.DenseVector)
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
	CALLEE: org.la4j.vector.dense.BasicVector#blankOfLength(int)
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
	CALLEE: org.la4j.vector.dense.BasicVector#get(int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#set(int,double)
	CALLEE: org.la4j.vector.dense.BasicVector#set(int,double)
CALLER: org.la4j.factory.CRSFactory#createMatrix(int,int,double[])
	CALLEE: static org.la4j.matrix.sparse.CRSMatrix#from1DArray(int,int,double[])
CALLER: static org.la4j.matrix.sparse.ColumnMajorSparseMatrix#zero(int,int)
	CALLEE: static org.la4j.matrix.sparse.CCSMatrix#zero(int,int)
CALLER: org.la4j.matrix.AbstractMatrix#multiply(org.la4j.matrix.Matrix,org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#ensureFactoryIsNotNull(org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#multiply(org.la4j.matrix.Matrix)
	CALLEE: static org.la4j.factory.Factory#asMatrixFactory(org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#to(org.la4j.matrix.MatrixFactory)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#to(org.la4j.matrix.MatrixFactory)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#to(org.la4j.matrix.MatrixFactory)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#to(org.la4j.matrix.MatrixFactory)
CALLER: org.la4j.vector.sparse.SparseVector#foldNonZero(org.la4j.vector.functor.VectorAccumulator)
	CALLEE: static org.la4j.vector.Vectors#asAccumulatorProcedure(org.la4j.vector.functor.VectorAccumulator)
	CALLEE: org.la4j.vector.sparse.SparseVector#eachNonZero(org.la4j.vector.functor.VectorProcedure)
	CALLEE: org.la4j.vector.sparse.CompressedVector#eachNonZero(org.la4j.vector.functor.VectorProcedure)
CALLER: org.la4j.matrix.operation.inplace.InPlaceCopyMatrixToMatrix#apply(org.la4j.matrix.sparse.RowMajorSparseMatrix,org.la4j.matrix.sparse.RowMajorSparseMatrix)
	CALLEE: org.la4j.matrix.operation.inplace.InPlaceCopyMatrixToMatrix#apply(org.la4j.matrix.sparse.RowMajorSparseMatrix,org.la4j.matrix.sparse.RowMajorSparseMatrix)
CALLER: org.la4j.matrix.operation.ooplace.OoPlaceMatrixByVectorMultiplication#apply(org.la4j.matrix.sparse.ColumnMajorSparseMatrix,org.la4j.vector.dense.DenseVector)
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
	CALLEE: static org.la4j.vector.dense.DenseVector#zero(int)
	CALLEE: org.la4j.matrix.sparse.ColumnMajorSparseMatrix#nonZeroIterator()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#rowIndex()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#rowIndex()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#columnIndex()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#columnIndex()
	CALLEE: org.la4j.vector.sparse.SparseVector#get(int)
	CALLEE: org.la4j.vector.dense.BasicVector#get(int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#set(int,double)
	CALLEE: org.la4j.vector.dense.BasicVector#set(int,double)
CALLER: org.la4j.matrix.operation.ooplace.OoPlaceMatricesAddition#apply(org.la4j.matrix.sparse.ColumnMajorSparseMatrix,org.la4j.matrix.sparse.ColumnMajorSparseMatrix)
	CALLEE: org.la4j.matrix.AbstractMatrix#blank()
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#nonZeroColumnMajorIterator()
	CALLEE: org.la4j.iterator.ColumnMajorMatrixIterator#orElseAdd(org.la4j.iterator.ColumnMajorMatrixIterator)
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#rowIndex()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#rowIndex()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#columnIndex()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#columnIndex()
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#set(int,int,double)
CALLER: org.la4j.matrix.dense.Basic1DMatrix#to(org.la4j.matrix.MatrixFactory)
	CALLEE: org.la4j.matrix.AbstractMatrix#to(org.la4j.matrix.MatrixFactory)
CALLER: org.la4j.vector.operation.ooplace.OoPlaceInnerProduct#apply(org.la4j.vector.dense.DenseVector,org.la4j.vector.dense.DenseVector)
	CALLEE: org.la4j.vector.AbstractVector#length()
	CALLEE: org.la4j.vector.dense.BasicVector#get(int)
CALLER: org.la4j.vector.AbstractVector#toString()
	CALLEE: org.la4j.vector.AbstractVector#mkString(java.text.NumberFormat,java.lang.String)
CALLER: org.la4j.inversion.GaussJordanInverter#inverse(org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
	CALLEE: org.la4j.factory.Basic1DFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.Basic2DFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.CRSFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.CCSFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.BasicFactory#createVector(int)
	CALLEE: org.la4j.factory.CompressedFactory#createVector(int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#set(int,double)
	CALLEE: org.la4j.vector.dense.BasicVector#set(int,double)
	CALLEE: org.la4j.linear.SquareRootSolver#solve(org.la4j.vector.Vector,org.la4j.factory.Factory)
	CALLEE: org.la4j.linear.SeidelSolver#solve(org.la4j.vector.Vector,org.la4j.factory.Factory)
	CALLEE: org.la4j.linear.GaussianSolver#solve(org.la4j.vector.Vector,org.la4j.factory.Factory)
	CALLEE: org.la4j.linear.SweepSolver#solve(org.la4j.vector.Vector,org.la4j.factory.Factory)
	CALLEE: org.la4j.linear.LeastSquaresSolver#solve(org.la4j.vector.Vector,org.la4j.factory.Factory)
	CALLEE: org.la4j.linear.ForwardBackSubstitutionSolver#solve(org.la4j.vector.Vector,org.la4j.factory.Factory)
	CALLEE: org.la4j.linear.LeastNormSolver#solve(org.la4j.vector.Vector,org.la4j.factory.Factory)
	CALLEE: org.la4j.linear.JacobiSolver#solve(org.la4j.vector.Vector,org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#setColumn(int,org.la4j.vector.Vector)
CALLER: org.la4j.matrix.AbstractMatrix#getColumn(int,org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#ensureFactoryIsNotNull(org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#getColumn(int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#getColumn(int)
	CALLEE: org.la4j.matrix.dense.DenseMatrix#getColumn(int)
	CALLEE: static org.la4j.factory.Factory#asVectorFactory(org.la4j.factory.Factory)
	CALLEE: org.la4j.vector.sparse.CompressedVector#to(org.la4j.vector.VectorFactory)
	CALLEE: org.la4j.vector.dense.BasicVector#to(org.la4j.vector.VectorFactory)
CALLER: org.la4j.matrix.sparse.CCSMatrix#getColumn(int,org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#ensureFactoryIsNotNull(org.la4j.factory.Factory)
	CALLEE: org.la4j.factory.BasicFactory#createVector(int)
	CALLEE: org.la4j.factory.CompressedFactory#createVector(int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#set(int,double)
	CALLEE: org.la4j.vector.dense.BasicVector#set(int,double)
CALLER: org.la4j.matrix.sparse.CRSMatrix#getColumn(int,org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#ensureFactoryIsNotNull(org.la4j.factory.Factory)
	CALLEE: org.la4j.factory.BasicFactory#createVector(int)
	CALLEE: org.la4j.factory.CompressedFactory#createVector(int)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#searchForColumnIndex(int,int,int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#set(int,double)
	CALLEE: org.la4j.vector.dense.BasicVector#set(int,double)
CALLER: org.la4j.linear.SweepSolver#applicableTo(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.matrix.AbstractMatrix#is(org.la4j.matrix.functor.MatrixPredicate)
CALLER: org.la4j.matrix.AbstractMatrix#blankOfRows(int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#blankOfShape(int,int)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#blankOfShape(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#blankOfShape(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#blankOfShape(int,int)
CALLER: org.la4j.matrix.Matrices.DiagonallyDominantPredicate#test(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
CALLER: org.la4j.matrix.sparse.CRSMatrix#select(int[],int[])
	CALLEE: org.la4j.matrix.AbstractMatrix#fail(java.lang.String)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#get(int,int)
CALLER: org.la4j.decomposition.RawLUDecompositor#<init>(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.decomposition.AbstractDecompositor#<init>(org.la4j.matrix.Matrix)
CALLER: org.la4j.matrix.operation.inplace.InPlaceCopyMatrixToMatrix#applySimple(org.la4j.matrix.sparse.SparseMatrix,org.la4j.matrix.dense.DenseMatrix)
	CALLEE: org.la4j.matrix.operation.inplace.InPlaceCopyMatrixToMatrix#fromSparseToMatrix(org.la4j.matrix.sparse.SparseMatrix,org.la4j.matrix.Matrix)
CALLER: static org.la4j.vector.Vectors#mkManhattanNormAccumulator()
CALLER: org.la4j.vector.operation.ooplace.OoPlaceVectorsAddition#apply(org.la4j.vector.dense.DenseVector,org.la4j.vector.sparse.SparseVector)
	CALLEE: org.la4j.vector.operation.ooplace.OoPlaceVectorsAddition#apply(org.la4j.vector.dense.DenseVector,org.la4j.vector.sparse.SparseVector)
CALLER: org.la4j.matrix.sparse.CRSMatrix#getOrElse(int,int,double)
	CALLEE: org.la4j.matrix.AbstractMatrix#ensureIndexesAreInBounds(int,int)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#searchForColumnIndex(int,int,int)
CALLER: org.la4j.iterator.CursorToVectorIterator#set(double)
	CALLEE: org.la4j.iterator.CursorToVectorIterator#set(double)
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#set(double)
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#set(double)
CALLER: org.la4j.vector.dense.BasicVector#<init>()
	CALLEE: org.la4j.vector.dense.BasicVector#<init>(int)
CALLER: org.la4j.iterator.CursorToVectorIterator#next()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#next()
CALLER: org.la4j.vector.dense.DenseVector#apply(org.la4j.vector.operation.VectorMatrixOperation,org.la4j.matrix.Matrix)
	CALLEE: org.la4j.vector.operation.VectorMatrixOperation#partiallyApply(org.la4j.vector.dense.DenseVector)
	CALLEE: org.la4j.matrix.sparse.ColumnMajorSparseMatrix#apply(org.la4j.matrix.operation.MatrixOperation)
	CALLEE: org.la4j.matrix.sparse.RowMajorSparseMatrix#apply(org.la4j.matrix.operation.MatrixOperation)
	CALLEE: org.la4j.matrix.dense.DenseMatrix#apply(org.la4j.matrix.operation.MatrixOperation)
CALLER: org.la4j.matrix.AbstractMatrix#transformRow(int,org.la4j.matrix.functor.MatrixFunction)
	CALLEE: org.la4j.matrix.AbstractMatrix#transformRow(int,org.la4j.matrix.functor.MatrixFunction,org.la4j.factory.Factory)
CALLER: org.la4j.io.SymbolSeparatedStream#<init>(java.io.OutputStream,java.lang.String)
	CALLEE: org.la4j.io.AbstractStream#<init>(java.io.OutputStream)
CALLER: org.la4j.vector.AbstractVector#fold(org.la4j.vector.functor.VectorAccumulator)
	CALLEE: static org.la4j.vector.Vectors#asAccumulatorProcedure(org.la4j.vector.functor.VectorAccumulator)
	CALLEE: org.la4j.vector.AbstractVector#each(org.la4j.vector.functor.VectorProcedure)
	CALLEE: org.la4j.vector.sparse.CompressedVector#each(org.la4j.vector.functor.VectorProcedure)
CALLER: org.la4j.matrix.AbstractMatrix#foldRow(int,org.la4j.vector.functor.VectorAccumulator)
	CALLEE: static org.la4j.vector.Vectors#asAccumulatorProcedure(org.la4j.vector.functor.VectorAccumulator)
	CALLEE: org.la4j.matrix.AbstractMatrix#eachInRow(int,org.la4j.vector.functor.VectorProcedure)
CALLER: org.la4j.matrix.AbstractMatrix#is(org.la4j.matrix.functor.MatrixPredicate)
	CALLEE: org.la4j.matrix.AbstractMatrix#iterator()
	CALLEE: org.la4j.matrix.sparse.ColumnMajorSparseMatrix#iterator()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#rowIndex()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#rowIndex()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#columnIndex()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#columnIndex()
CALLER: org.la4j.vector.operation.ooplace.OoPlaceVectorsSubtraction#apply(org.la4j.vector.sparse.SparseVector,org.la4j.vector.dense.DenseVector)
	CALLEE: org.la4j.vector.operation.ooplace.OoPlaceVectorsSubtraction#apply(org.la4j.vector.sparse.SparseVector,org.la4j.vector.dense.DenseVector)
CALLER: org.la4j.matrix.Matrices.SymmetricMatrixPredicate#test(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
CALLER: org.la4j.vector.AbstractVector#sliceRight(int)
	CALLEE: org.la4j.vector.AbstractVector#slice(int,int)
CALLER: static org.la4j.vector.Vectors#asConstFunction(double)
CALLER: org.la4j.matrix.dense.Basic2DMatrix#blankOfShape(int,int)
	CALLEE: static org.la4j.matrix.dense.Basic2DMatrix#zero(int,int)
CALLER: org.la4j.matrix.sparse.ColumnMajorSparseMatrix#<init>(org.la4j.factory.Factory,int,int)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#<init>(org.la4j.factory.Factory,int,int)
CALLER: org.la4j.factory.CompressedFactory#createRandomVector(int,java.util.Random)
	CALLEE: static org.la4j.vector.sparse.CompressedVector#random(int,double,java.util.Random)
CALLER: org.la4j.matrix.sparse.SparseMatrix#isZeroAt(int,int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#nonZeroAt(int,int)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#nonZeroAt(int,int)
CALLER: static org.la4j.matrix.sparse.SparseMatrix#random(int,int,double,java.util.Random)
	CALLEE: static org.la4j.matrix.sparse.CRSMatrix#random(int,int,double,java.util.Random)
CALLER: org.la4j.inversion.GaussJordanInverter#inverse()
	CALLEE: org.la4j.matrix.AbstractMatrix#factory()
	CALLEE: org.la4j.inversion.GaussJordanInverter#inverse(org.la4j.factory.Factory)
CALLER: org.la4j.vector.source.LoopbackVectorSource#get(int)
	CALLEE: org.la4j.vector.sparse.SparseVector#get(int)
	CALLEE: org.la4j.vector.dense.BasicVector#get(int)
CALLER: org.la4j.vector.AbstractVector#sliceRight(int,org.la4j.factory.Factory)
	CALLEE: org.la4j.vector.AbstractVector#slice(int,int,org.la4j.factory.Factory)
CALLER: org.la4j.iterator.VectorIterator#andAlso(org.la4j.iterator.VectorIterator,org.la4j.iterator.JoinFunction)
	CALLEE: org.la4j.iterator.CursorIterator#andAlso(org.la4j.iterator.CursorIterator,org.la4j.iterator.JoinFunction)
	CALLEE: org.la4j.iterator.CursorToVectorIterator#<init>(org.la4j.iterator.CursorIterator,int)
CALLER: org.la4j.vector.operation.ooplace.OoPlaceInnerProduct#apply(org.la4j.vector.sparse.SparseVector,org.la4j.vector.sparse.SparseVector)
	CALLEE: org.la4j.vector.sparse.CompressedVector#nonZeroIterator()
	CALLEE: org.la4j.iterator.VectorIterator#andAlsoMultiply(org.la4j.iterator.VectorIterator)
	CALLEE: org.la4j.iterator.CursorToVectorIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#next()
CALLER: org.la4j.matrix.AbstractMatrix#max()
	CALLEE: static org.la4j.matrix.Matrices#mkMaxAccumulator()
	CALLEE: org.la4j.matrix.AbstractMatrix#fold(org.la4j.matrix.functor.MatrixAccumulator)
CALLER: org.la4j.vector.source.StreamVectorSource#length()
	CALLEE: org.la4j.vector.AbstractVector#length()
CALLER: org.la4j.vector.sparse.CompressedVector#insert(int,int,double)
	CALLEE: org.la4j.vector.sparse.CompressedVector#growUp()
CALLER: org.la4j.vector.sparse.SparseVector#min()
	CALLEE: static org.la4j.vector.Vectors#mkMinAccumulator()
	CALLEE: org.la4j.vector.sparse.SparseVector#foldNonZero(org.la4j.vector.functor.VectorAccumulator)
CALLER: org.la4j.iterator.ColumnMajorMatrixIterator#<init>(int,int)
	CALLEE: org.la4j.iterator.MatrixIterator#<init>(int,int)
CALLER: org.la4j.matrix.AbstractMatrix#eachInRow(int,org.la4j.matrix.functor.MatrixProcedure)
	CALLEE: org.la4j.matrix.AbstractMatrix#eachInRow(int,org.la4j.vector.functor.VectorProcedure)
CALLER: org.la4j.matrix.sparse.CRSMatrix#eachInRow(int,org.la4j.matrix.functor.MatrixProcedure)
	CALLEE: org.la4j.io.MatrixMarketStream.SparseMatrixWriteProcedure#apply(int,int,double)
CALLER: org.la4j.matrix.operation.inplace.InPlaceCopyMatrixToMatrix#apply(org.la4j.matrix.dense.DenseMatrix,org.la4j.matrix.dense.DenseMatrix)
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#set(int,int,double)
CALLER: org.la4j.factory.CCSFactory#createBlockMatrix(org.la4j.matrix.Matrix,org.la4j.matrix.Matrix,org.la4j.matrix.Matrix,org.la4j.matrix.Matrix)
	CALLEE: static org.la4j.matrix.sparse.CCSMatrix#block(org.la4j.matrix.Matrix,org.la4j.matrix.Matrix,org.la4j.matrix.Matrix,org.la4j.matrix.Matrix)
CALLER: static org.la4j.vector.sparse.CompressedVector#random(int,double,java.util.Random)
CALLER: org.la4j.decomposition.SingularValueDecompositor#decompose(org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#copy()
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
	CALLEE: org.la4j.factory.Basic1DFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.Basic2DFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.CRSFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.CCSFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.BasicFactory#createVector(int)
	CALLEE: org.la4j.factory.CompressedFactory#createVector(int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
	CALLEE: org.la4j.decomposition.SingularValueDecompositor#hypot(double,double)
	CALLEE: org.la4j.matrix.AbstractMatrix#update(int,int,org.la4j.matrix.functor.MatrixFunction)
	CALLEE: static org.la4j.matrix.Matrices#asDivFunction(double)
	CALLEE: static org.la4j.matrix.Matrices#asPlusFunction(double)
	CALLEE: org.la4j.vector.sparse.CompressedVector#set(int,double)
	CALLEE: org.la4j.vector.dense.BasicVector#set(int,double)
	CALLEE: org.la4j.vector.sparse.SparseVector#get(int)
	CALLEE: org.la4j.vector.dense.BasicVector#get(int)
	CALLEE: org.la4j.vector.AbstractVector#update(int,org.la4j.vector.functor.VectorFunction)
	CALLEE: static org.la4j.vector.Vectors#asDivFunction(double)
	CALLEE: static org.la4j.vector.Vectors#asPlusFunction(double)
	CALLEE: static org.la4j.vector.Vectors#asMulFunction(double)
	CALLEE: org.la4j.matrix.AbstractMatrix#resize(int,int,org.la4j.factory.Factory)
CALLER: org.la4j.factory.Basic1DFactory#createBlockMatrix(org.la4j.matrix.Matrix,org.la4j.matrix.Matrix,org.la4j.matrix.Matrix,org.la4j.matrix.Matrix)
	CALLEE: static org.la4j.matrix.dense.Basic1DMatrix#block(org.la4j.matrix.Matrix,org.la4j.matrix.Matrix,org.la4j.matrix.Matrix,org.la4j.matrix.Matrix)
CALLER: org.la4j.io.MatrixMarketStream#writeDenseMatrix(org.la4j.matrix.dense.DenseMatrix)
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
CALLER: org.la4j.matrix.dense.Basic1DMatrix#copyOfShape(int,int)
	CALLEE: org.la4j.matrix.AbstractMatrix#ensureDimensionsAreCorrect(int,int)
CALLER: static org.la4j.vector.dense.DenseVector#fromArray(double[])
	CALLEE: static org.la4j.vector.dense.BasicVector#fromArray(double[])
CALLER: org.la4j.matrix.operation.ooplace.OoPlaceMatrixByVectorMultiplication#apply(org.la4j.matrix.dense.DenseMatrix,org.la4j.vector.sparse.SparseVector)
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
	CALLEE: static org.la4j.vector.dense.DenseVector#zero(int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#nonZeroIterator()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#next()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#index()
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#set(int,double)
	CALLEE: org.la4j.vector.dense.BasicVector#set(int,double)
CALLER: org.la4j.vector.operation.ooplace.OoPlaceInnerProduct#apply(org.la4j.vector.sparse.SparseVector,org.la4j.vector.dense.DenseVector)
	CALLEE: org.la4j.vector.operation.ooplace.OoPlaceInnerProduct#dot(org.la4j.vector.Vector)
	CALLEE: static org.la4j.vector.Vectors#asSumFunctionAccumulator(double,org.la4j.vector.functor.VectorFunction)
	CALLEE: org.la4j.vector.sparse.SparseVector#foldNonZero(org.la4j.vector.functor.VectorAccumulator)
CALLER: org.la4j.vector.dense.BasicVector#<init>(int)
CALLER: static org.la4j.vector.Vectors#asSymbolSeparatedSource(java.io.InputStream)
	CALLEE: org.la4j.io.SymbolSeparatedStream#<init>(java.io.InputStream)
	CALLEE: org.la4j.vector.source.StreamVectorSource#<init>(org.la4j.io.VectorStream)
CALLER: org.la4j.matrix.AbstractMatrix#resizeRows(int)
	CALLEE: org.la4j.matrix.AbstractMatrix#copyOfRows(int)
CALLER: org.la4j.matrix.AbstractMatrix#each(org.la4j.matrix.functor.MatrixProcedure)
	CALLEE: org.la4j.matrix.AbstractMatrix#iterator()
	CALLEE: org.la4j.matrix.sparse.ColumnMajorSparseMatrix#iterator()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#rowIndex()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#rowIndex()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#columnIndex()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#columnIndex()
	CALLEE: org.la4j.io.MatrixMarketStream.SparseMatrixWriteProcedure#apply(int,int,double)
CALLER: org.la4j.matrix.sparse.CCSMatrix#each(org.la4j.matrix.functor.MatrixProcedure)
	CALLEE: org.la4j.io.MatrixMarketStream.SparseMatrixWriteProcedure#apply(int,int,double)
CALLER: org.la4j.matrix.sparse.CRSMatrix#each(org.la4j.matrix.functor.MatrixProcedure)
	CALLEE: org.la4j.io.MatrixMarketStream.SparseMatrixWriteProcedure#apply(int,int,double)
CALLER: org.la4j.vector.dense.DenseVector#toRowMatrix()
	CALLEE: static org.la4j.matrix.dense.Basic2DMatrix#zero(int,int)
	CALLEE: org.la4j.vector.dense.BasicVector#get(int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#set(int,int,double)
CALLER: org.la4j.vector.operation.ooplace.OoPlaceVectorsAddition#apply(org.la4j.vector.dense.DenseVector,org.la4j.vector.dense.DenseVector)
	CALLEE: org.la4j.vector.operation.ooplace.OoPlaceVectorsAddition#apply(org.la4j.vector.dense.DenseVector,org.la4j.vector.dense.DenseVector)
CALLER: org.la4j.matrix.operation.ooplace.OoPlaceMatricesAddition#applySymmetric(org.la4j.matrix.sparse.RowMajorSparseMatrix,org.la4j.matrix.sparse.ColumnMajorSparseMatrix)
	CALLEE: org.la4j.matrix.operation.ooplace.OoPlaceMatricesAddition#applySymmetric(org.la4j.matrix.sparse.RowMajorSparseMatrix,org.la4j.matrix.sparse.ColumnMajorSparseMatrix)
CALLER: org.la4j.decomposition.EigenDecompositor#generateR(org.la4j.matrix.Matrix,org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
	CALLEE: org.la4j.factory.BasicFactory#createVector(int)
	CALLEE: org.la4j.factory.CompressedFactory#createVector(int)
	CALLEE: org.la4j.decomposition.EigenDecompositor#generateRi(org.la4j.matrix.Matrix,int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#set(int,double)
	CALLEE: org.la4j.vector.dense.BasicVector#set(int,double)
CALLER: org.la4j.factory.Basic2DFactory#createDiagonalMatrix(double[])
CALLER: org.la4j.io.MatrixMarketStream#parseVector(org.la4j.factory.Factory)
	CALLEE: org.la4j.io.MatrixMarketStream#ensureNext(java.lang.String)
	CALLEE: org.la4j.io.MatrixMarketStream#nextToken()
	CALLEE: org.la4j.io.MatrixMarketStream#chooseNotNull(org.la4j.factory.Factory,org.la4j.factory.Factory)
	CALLEE: org.la4j.io.MatrixMarketStream#parseDenseVector(org.la4j.factory.Factory)
	CALLEE: org.la4j.io.MatrixMarketStream#parseSparseVector(org.la4j.factory.Factory)
CALLER: org.la4j.vector.AbstractVector#multiply(double,org.la4j.factory.Factory)
	CALLEE: org.la4j.vector.AbstractVector#ensureFactoryIsNotNull(org.la4j.factory.Factory)
	CALLEE: org.la4j.vector.AbstractVector#multiply(double)
	CALLEE: org.la4j.vector.sparse.SparseVector#multiply(double)
	CALLEE: static org.la4j.factory.Factory#asVectorFactory(org.la4j.factory.Factory)
	CALLEE: org.la4j.vector.sparse.CompressedVector#to(org.la4j.vector.VectorFactory)
	CALLEE: org.la4j.vector.dense.BasicVector#to(org.la4j.vector.VectorFactory)
CALLER: static org.la4j.matrix.sparse.CRSMatrix#diagonal(int,double)
CALLER: org.la4j.matrix.sparse.CRSMatrix#copyOfShape(int,int)
	CALLEE: org.la4j.matrix.AbstractMatrix#ensureDimensionsAreCorrect(int,int)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#align(int)
CALLER: static org.la4j.vector.Vectors#asProductFunctionAccumulator(double,org.la4j.vector.functor.VectorFunction)
CALLER: org.la4j.matrix.AbstractMatrix#product()
	CALLEE: static org.la4j.matrix.Matrices#asProductAccumulator(double)
	CALLEE: org.la4j.matrix.AbstractMatrix#fold(org.la4j.matrix.functor.MatrixAccumulator)
CALLER: org.la4j.vector.sparse.CompressedVector#eachNonZero(org.la4j.vector.functor.VectorProcedure)
	CALLEE: org.la4j.io.MatrixMarketStream.SparseVectorWriteProcedure#apply(int,double)
CALLER: org.la4j.matrix.AbstractMatrix#transformRow(int,org.la4j.matrix.functor.MatrixFunction,org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#copy(org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#set(int,int,double)
CALLER: org.la4j.vector.operation.ooplace.OoPlaceVectorsAddition#apply(org.la4j.vector.sparse.SparseVector,org.la4j.vector.sparse.SparseVector)
	CALLEE: org.la4j.vector.operation.ooplace.OoPlaceVectorsAddition#apply(org.la4j.vector.sparse.SparseVector,org.la4j.vector.sparse.SparseVector)
CALLER: org.la4j.matrix.AbstractMatrix#mkString(java.text.NumberFormat,java.lang.String,java.lang.String)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.AbstractMatrix#indent(java.lang.StringBuilder,int)
CALLER: static org.la4j.matrix.sparse.CCSMatrix#block(org.la4j.matrix.Matrix,org.la4j.matrix.Matrix,org.la4j.matrix.Matrix,org.la4j.matrix.Matrix)
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
CALLER: org.la4j.matrix.AbstractMatrix#add(double,org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#add(double)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#add(double)
	CALLEE: static org.la4j.factory.Factory#asMatrixFactory(org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#to(org.la4j.matrix.MatrixFactory)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#to(org.la4j.matrix.MatrixFactory)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#to(org.la4j.matrix.MatrixFactory)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#to(org.la4j.matrix.MatrixFactory)
CALLER: org.la4j.matrix.dense.DenseMatrix#apply(org.la4j.matrix.operation.MatrixVectorOperation,org.la4j.vector.Vector)
	CALLEE: org.la4j.matrix.operation.MatrixVectorOperation#partiallyApply(org.la4j.matrix.dense.DenseMatrix)
	CALLEE: org.la4j.vector.sparse.SparseVector#apply(org.la4j.vector.operation.VectorOperation)
	CALLEE: org.la4j.vector.dense.DenseVector#apply(org.la4j.vector.operation.VectorOperation)
CALLER: org.la4j.vector.AbstractVector#setAll(double)
	CALLEE: org.la4j.vector.AbstractVector#iterator()
	CALLEE: org.la4j.vector.sparse.CompressedVector#iterator()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#next()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#set(double)
CALLER: org.la4j.vector.source.StreamVectorSource#<init>(org.la4j.io.VectorStream)
	CALLEE: org.la4j.io.SymbolSeparatedStream#readVector()
	CALLEE: org.la4j.io.MatrixMarketStream#readVector()
CALLER: org.la4j.iterator.VectorIterator#andAlsoMultiply(org.la4j.iterator.VectorIterator)
	CALLEE: org.la4j.iterator.CursorIterator#andAlso(org.la4j.iterator.CursorIterator,org.la4j.iterator.JoinFunction)
	CALLEE: org.la4j.iterator.CursorToVectorIterator#<init>(org.la4j.iterator.CursorIterator,int)
CALLER: org.la4j.vector.dense.DenseVector#apply(org.la4j.vector.operation.VectorOperation)
CALLER: static org.la4j.matrix.dense.Basic1DMatrix#constant(int,int,double)
CALLER: org.la4j.linear.LeastNormSolver#applicableTo(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.matrix.AbstractMatrix#rank()
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
CALLER: org.la4j.linear.SeidelSolver#solve(org.la4j.vector.Vector,org.la4j.factory.Factory)
	CALLEE: org.la4j.linear.AbstractSolver#ensureRHSIsCorrect(org.la4j.vector.Vector)
	CALLEE: org.la4j.linear.AbstractSolver#unknowns()
	CALLEE: org.la4j.factory.BasicFactory#createVector(int)
	CALLEE: org.la4j.factory.CompressedFactory#createVector(int)
	CALLEE: org.la4j.matrix.AbstractMatrix#multiply(org.la4j.vector.Vector)
	CALLEE: org.la4j.matrix.AbstractMatrix#equals(java.lang.Object)
	CALLEE: org.la4j.vector.AbstractVector#equals(java.lang.Object)
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
	CALLEE: org.la4j.vector.sparse.SparseVector#get(int)
	CALLEE: org.la4j.vector.dense.BasicVector#get(int)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
	CALLEE: org.la4j.vector.sparse.CompressedVector#set(int,double)
	CALLEE: org.la4j.vector.dense.BasicVector#set(int,double)
CALLER: org.la4j.matrix.operation.SymmetricMatrixOperation#apply(org.la4j.matrix.sparse.ColumnMajorSparseMatrix,org.la4j.matrix.dense.DenseMatrix)
	CALLEE: org.la4j.matrix.operation.ooplace.OoPlaceMatricesAddition#applySymmetric(org.la4j.matrix.dense.DenseMatrix,org.la4j.matrix.sparse.SparseMatrix)
CALLER: org.la4j.iterator.CursorToVectorIterator#<init>(org.la4j.iterator.CursorIterator,int)
	CALLEE: org.la4j.iterator.VectorIterator#<init>(int)
CALLER: org.la4j.matrix.sparse.CCSMatrix#updateAt(int,int,org.la4j.matrix.functor.MatrixFunction)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#searchForRowIndex(int,int,int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#remove(int,int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#insert(int,int,int,double)
CALLER: org.la4j.io.SymbolSeparatedStream#<init>(java.io.InputStream)
	CALLEE: org.la4j.io.SymbolSeparatedStream#<init>(java.io.InputStream,java.lang.String)
CALLER: org.la4j.matrix.operation.ooplace.OoPlaceMatrixByVectorMultiplication#apply(org.la4j.matrix.sparse.ColumnMajorSparseMatrix,org.la4j.vector.sparse.SparseVector)
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
	CALLEE: org.la4j.vector.sparse.CompressedVector#blankOfLength(int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#nonZeroIterator()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#next()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#index()
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#nonZeroIteratorOfColumn(int)
	CALLEE: static org.la4j.vector.Vectors#asPlusFunction(double)
	CALLEE: org.la4j.vector.sparse.CompressedVector#updateAt(int,org.la4j.vector.functor.VectorFunction)
	CALLEE: org.la4j.vector.AbstractVector#updateAt(int,org.la4j.vector.functor.VectorFunction)
CALLER: org.la4j.matrix.operation.MatrixVectorOperation#partiallyApply(org.la4j.matrix.sparse.RowMajorSparseMatrix)
CALLER: static org.la4j.matrix.dense.Basic1DMatrix#unit(int,int)
	CALLEE: static org.la4j.matrix.dense.Basic1DMatrix#constant(int,int,double)
CALLER: static org.la4j.matrix.sparse.CCSMatrix#randomSymmetric(int,double,java.util.Random)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#<init>(int,int,int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#set(int,int,double)
CALLER: org.la4j.vector.operation.ooplace.OoPlaceInnerProduct#apply(org.la4j.vector.sparse.SparseVector,org.la4j.vector.dense.DenseVector)
	CALLEE: org.la4j.vector.operation.ooplace.OoPlaceInnerProduct#apply(org.la4j.vector.sparse.SparseVector,org.la4j.vector.dense.DenseVector)
CALLER: org.la4j.vector.AbstractVector#updateAt(int,org.la4j.vector.functor.VectorFunction)
	CALLEE: org.la4j.vector.sparse.SparseVector#get(int)
	CALLEE: org.la4j.vector.dense.BasicVector#get(int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#set(int,double)
	CALLEE: org.la4j.vector.dense.BasicVector#set(int,double)
CALLER: org.la4j.vector.sparse.CompressedVector#updateAt(int,org.la4j.vector.functor.VectorFunction)
	CALLEE: org.la4j.vector.sparse.CompressedVector#searchForIndex(int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#remove(int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#insert(int,int,double)
CALLER: org.la4j.vector.AbstractVector#add(org.la4j.vector.Vector)
	CALLEE: org.la4j.vector.AbstractVector#ensureArgumentIsNotNull(java.lang.Object,java.lang.String)
	CALLEE: org.la4j.vector.AbstractVector#ensureVectorIsSimilar(org.la4j.vector.Vector)
	CALLEE: org.la4j.vector.sparse.SparseVector#apply(org.la4j.vector.operation.VectorVectorOperation,org.la4j.vector.Vector)
	CALLEE: org.la4j.vector.dense.DenseVector#apply(org.la4j.vector.operation.VectorVectorOperation,org.la4j.vector.Vector)
CALLER: org.la4j.matrix.operation.SimpleMatrixMatrixOperation#apply(org.la4j.matrix.dense.DenseMatrix,org.la4j.matrix.sparse.ColumnMajorSparseMatrix)
	CALLEE: org.la4j.matrix.operation.inplace.InPlaceCopyMatrixToMatrix#applySimple(org.la4j.matrix.dense.DenseMatrix,org.la4j.matrix.sparse.SparseMatrix)
CALLER: org.la4j.matrix.sparse.ColumnMajorSparseMatrix#rotate()
	CALLEE: static org.la4j.matrix.sparse.RowMajorSparseMatrix#zero(int,int)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#nonZeroColumnMajorIterator()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#rowIndex()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#rowIndex()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#columnIndex()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#columnIndex()
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#set(int,int,double)
CALLER: org.la4j.vector.operation.ooplace.OoPlaceHadamardProduct#apply(org.la4j.vector.sparse.SparseVector,org.la4j.vector.dense.DenseVector)
	CALLEE: org.la4j.vector.operation.ooplace.OoPlaceHadamardProduct#apply(org.la4j.vector.dense.DenseVector,org.la4j.vector.sparse.SparseVector)
CALLER: org.la4j.matrix.AbstractMatrix#multiply(double,org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#multiply(double)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#multiply(double)
	CALLEE: static org.la4j.factory.Factory#asMatrixFactory(org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#to(org.la4j.matrix.MatrixFactory)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#to(org.la4j.matrix.MatrixFactory)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#to(org.la4j.matrix.MatrixFactory)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#to(org.la4j.matrix.MatrixFactory)
CALLER: org.la4j.matrix.AbstractMatrix#multiply(double)
	CALLEE: org.la4j.matrix.AbstractMatrix#blank()
	CALLEE: org.la4j.matrix.AbstractMatrix#iterator()
	CALLEE: org.la4j.matrix.sparse.ColumnMajorSparseMatrix#iterator()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#rowIndex()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#rowIndex()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#columnIndex()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#columnIndex()
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#set(int,int,double)
CALLER: org.la4j.matrix.sparse.SparseMatrix#multiply(double)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#nonZeroIterator()
	CALLEE: org.la4j.matrix.sparse.ColumnMajorSparseMatrix#nonZeroIterator()
	CALLEE: org.la4j.matrix.AbstractMatrix#blank()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#rowIndex()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#rowIndex()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#columnIndex()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#columnIndex()
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#set(int,int,double)
CALLER: org.la4j.vector.operation.ooplace.OoPlaceVectorsAddition#apply(org.la4j.vector.sparse.SparseVector,org.la4j.vector.dense.DenseVector)
	CALLEE: org.la4j.vector.operation.ooplace.OoPlaceVectorsAddition#apply(org.la4j.vector.sparse.SparseVector,org.la4j.vector.dense.DenseVector)
CALLER: org.la4j.matrix.AbstractMatrix#toString()
	CALLEE: org.la4j.matrix.AbstractMatrix#mkString(java.text.NumberFormat,java.lang.String,java.lang.String)
CALLER: org.la4j.matrix.AbstractMatrix#transformColumn(int,org.la4j.matrix.functor.MatrixFunction,org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#copy(org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#set(int,int,double)
CALLER: org.la4j.io.MatrixMarketStream#readVector()
	CALLEE: org.la4j.io.MatrixMarketStream#readVector(org.la4j.factory.Factory)
CALLER: org.la4j.matrix.operation.ooplace.OoPlaceMatrixByVectorMultiplication#apply(org.la4j.matrix.sparse.RowMajorSparseMatrix,org.la4j.vector.dense.DenseVector)
	CALLEE: org.la4j.matrix.operation.ooplace.OoPlaceMatrixByVectorMultiplication#apply(org.la4j.matrix.sparse.RowMajorSparseMatrix,org.la4j.vector.dense.DenseVector)
CALLER: org.la4j.matrix.AbstractMatrix#updateAt(int,int,org.la4j.matrix.functor.MatrixFunction)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#set(int,int,double)
CALLER: org.la4j.matrix.sparse.CRSMatrix#updateAt(int,int,org.la4j.matrix.functor.MatrixFunction)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#searchForColumnIndex(int,int,int)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#remove(int,int)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#insert(int,int,int,double)
CALLER: org.la4j.matrix.sparse.CCSMatrix#eachNonZeroInColumn(int,org.la4j.matrix.functor.MatrixProcedure)
	CALLEE: org.la4j.io.MatrixMarketStream.SparseMatrixWriteProcedure#apply(int,int,double)
CALLER: org.la4j.vector.sparse.CompressedVector#<init>(int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#<init>(int,int)
CALLER: org.la4j.matrix.sparse.CRSMatrix#to(org.la4j.matrix.MatrixFactory)
	CALLEE: org.la4j.matrix.AbstractMatrix#to(org.la4j.matrix.MatrixFactory)
CALLER: org.la4j.vector.sparse.SparseVector#apply(org.la4j.vector.operation.VectorOperation)
CALLER: org.la4j.vector.operation.ooplace.OoPlaceInnerProduct#apply(org.la4j.vector.sparse.SparseVector,org.la4j.vector.sparse.SparseVector)
	CALLEE: org.la4j.vector.operation.ooplace.OoPlaceInnerProduct#apply(org.la4j.vector.sparse.SparseVector,org.la4j.vector.sparse.SparseVector)
CALLER: org.la4j.matrix.sparse.CCSMatrix#getColumn(int)
CALLER: org.la4j.matrix.sparse.SparseMatrix#eachNonZero(org.la4j.matrix.functor.MatrixProcedure)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#nonZeroIterator()
	CALLEE: org.la4j.matrix.sparse.ColumnMajorSparseMatrix#nonZeroIterator()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#rowIndex()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#rowIndex()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#columnIndex()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#columnIndex()
	CALLEE: org.la4j.io.MatrixMarketStream.SparseMatrixWriteProcedure#apply(int,int,double)
CALLER: org.la4j.matrix.sparse.CCSMatrix#eachNonZero(org.la4j.matrix.functor.MatrixProcedure)
	CALLEE: org.la4j.io.MatrixMarketStream.SparseMatrixWriteProcedure#apply(int,int,double)
CALLER: org.la4j.matrix.sparse.CRSMatrix#eachNonZero(org.la4j.matrix.functor.MatrixProcedure)
	CALLEE: org.la4j.io.MatrixMarketStream.SparseMatrixWriteProcedure#apply(int,int,double)
CALLER: org.la4j.iterator.CursorToVectorIterator#next()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#next()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#next()
CALLER: org.la4j.matrix.AbstractMatrix#foldColumn(int,org.la4j.matrix.functor.MatrixAccumulator)
	CALLEE: static org.la4j.matrix.Matrices#asAccumulatorProcedure(org.la4j.matrix.functor.MatrixAccumulator)
	CALLEE: org.la4j.matrix.AbstractMatrix#eachInColumn(int,org.la4j.matrix.functor.MatrixProcedure)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#eachInColumn(int,org.la4j.matrix.functor.MatrixProcedure)
CALLER: org.la4j.matrix.dense.Basic2DMatrix#<init>(org.la4j.matrix.Matrix)
	CALLEE: static org.la4j.matrix.Matrices#asMatrixSource(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#<init>(org.la4j.matrix.source.MatrixSource)
CALLER: org.la4j.decomposition.EigenDecompositor#<init>(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.decomposition.AbstractDecompositor#<init>(org.la4j.matrix.Matrix)
CALLER: org.la4j.linear.JacobiSolver#solve(org.la4j.vector.Vector,org.la4j.factory.Factory)
	CALLEE: org.la4j.linear.AbstractSolver#ensureRHSIsCorrect(org.la4j.vector.Vector)
	CALLEE: org.la4j.linear.AbstractSolver#unknowns()
	CALLEE: org.la4j.factory.BasicFactory#createVector(int)
	CALLEE: org.la4j.factory.CompressedFactory#createVector(int)
	CALLEE: org.la4j.matrix.AbstractMatrix#multiply(org.la4j.vector.Vector)
	CALLEE: org.la4j.matrix.AbstractMatrix#equals(java.lang.Object)
	CALLEE: org.la4j.vector.AbstractVector#equals(java.lang.Object)
	CALLEE: org.la4j.vector.AbstractVector#blank()
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
	CALLEE: org.la4j.vector.sparse.SparseVector#get(int)
	CALLEE: org.la4j.vector.dense.BasicVector#get(int)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
	CALLEE: org.la4j.vector.sparse.CompressedVector#set(int,double)
	CALLEE: org.la4j.vector.dense.BasicVector#set(int,double)
CALLER: org.la4j.matrix.AbstractMatrix#setAll(double)
	CALLEE: org.la4j.matrix.AbstractMatrix#iterator()
	CALLEE: org.la4j.matrix.sparse.ColumnMajorSparseMatrix#iterator()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#set(double)
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#set(double)
CALLER: org.la4j.matrix.sparse.CCSMatrix#setAll(double)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#capacity()
CALLER: org.la4j.matrix.sparse.CRSMatrix#setAll(double)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#capacity()
CALLER: org.la4j.vector.operation.ooplace.OoPlaceInnerProduct#apply(org.la4j.vector.dense.DenseVector,org.la4j.vector.dense.DenseVector)
	CALLEE: org.la4j.vector.operation.ooplace.OoPlaceInnerProduct#apply(org.la4j.vector.dense.DenseVector,org.la4j.vector.dense.DenseVector)
CALLER: org.la4j.matrix.AbstractMatrix#ensureArgumentIsNotNull(java.lang.Object,java.lang.String)
	CALLEE: org.la4j.matrix.AbstractMatrix#fail(java.lang.String)
CALLER: org.la4j.vector.AbstractVector#product()
	CALLEE: static org.la4j.vector.Vectors#asProductAccumulator(double)
	CALLEE: org.la4j.vector.AbstractVector#fold(org.la4j.vector.functor.VectorAccumulator)
CALLER: org.la4j.factory.CCSFactory#createRandomMatrix(int,int,java.util.Random)
	CALLEE: static org.la4j.matrix.sparse.CCSMatrix#random(int,int,double,java.util.Random)
CALLER: org.la4j.factory.Basic2DFactory#createRandomMatrix(int,int,java.util.Random)
	CALLEE: static org.la4j.matrix.dense.Basic2DMatrix#random(int,int,java.util.Random)
CALLER: org.la4j.vector.operation.ooplace.OoPlaceVectorByMatrixMultiplication#apply(org.la4j.vector.dense.DenseVector,org.la4j.matrix.sparse.ColumnMajorSparseMatrix)
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
	CALLEE: static org.la4j.vector.sparse.SparseVector#zero(int)
	CALLEE: org.la4j.matrix.AbstractMatrix#columnMajorIterator()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#rowIndex()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#rowIndex()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#columnIndex()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#columnIndex()
	CALLEE: org.la4j.vector.sparse.CompressedVector#set(int,double)
	CALLEE: org.la4j.vector.dense.BasicVector#set(int,double)
	CALLEE: org.la4j.vector.dense.BasicVector#get(int)
CALLER: org.la4j.matrix.operation.SimpleMatrixMatrixOperation#apply(org.la4j.matrix.sparse.ColumnMajorSparseMatrix,org.la4j.matrix.dense.DenseMatrix)
	CALLEE: org.la4j.matrix.operation.inplace.InPlaceCopyMatrixToMatrix#applySimple(org.la4j.matrix.sparse.SparseMatrix,org.la4j.matrix.dense.DenseMatrix)
CALLER: org.la4j.matrix.AbstractMatrix#iteratorOfRow(int)
CALLER: org.la4j.factory.CCSFactory#createRandomSymmetricMatrix(int,java.util.Random)
	CALLEE: static org.la4j.matrix.sparse.CCSMatrix#randomSymmetric(int,double,java.util.Random)
CALLER: static org.la4j.matrix.dense.Basic2DMatrix#randomSymmetric(int,java.util.Random)
CALLER: org.la4j.vector.sparse.SparseVector#add(double)
	CALLEE: static org.la4j.vector.dense.DenseVector#constant(int,double)
	CALLEE: org.la4j.vector.sparse.CompressedVector#nonZeroIterator()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#next()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#index()
	CALLEE: org.la4j.vector.sparse.CompressedVector#set(int,double)
	CALLEE: org.la4j.vector.dense.BasicVector#set(int,double)
CALLER: org.la4j.vector.operation.ooplace.OoPlaceVectorsSubtraction#apply(org.la4j.vector.sparse.SparseVector,org.la4j.vector.sparse.SparseVector)
	CALLEE: org.la4j.vector.operation.ooplace.OoPlaceVectorsSubtraction#apply(org.la4j.vector.sparse.SparseVector,org.la4j.vector.sparse.SparseVector)
CALLER: org.la4j.vector.AbstractVector#divide(double)
	CALLEE: org.la4j.vector.AbstractVector#divide(double,org.la4j.factory.Factory)
CALLER: static org.la4j.vector.dense.BasicVector#constant(int,double)
CALLER: static org.la4j.matrix.dense.Basic2DMatrix#random(int,int,java.util.Random)
CALLER: org.la4j.linear.AbstractSolver#solve(org.la4j.vector.Vector)
	CALLEE: org.la4j.vector.AbstractVector#factory()
	CALLEE: org.la4j.linear.SquareRootSolver#solve(org.la4j.vector.Vector,org.la4j.factory.Factory)
	CALLEE: org.la4j.linear.SeidelSolver#solve(org.la4j.vector.Vector,org.la4j.factory.Factory)
	CALLEE: org.la4j.linear.GaussianSolver#solve(org.la4j.vector.Vector,org.la4j.factory.Factory)
	CALLEE: org.la4j.linear.SweepSolver#solve(org.la4j.vector.Vector,org.la4j.factory.Factory)
	CALLEE: org.la4j.linear.LeastSquaresSolver#solve(org.la4j.vector.Vector,org.la4j.factory.Factory)
	CALLEE: org.la4j.linear.ForwardBackSubstitutionSolver#solve(org.la4j.vector.Vector,org.la4j.factory.Factory)
	CALLEE: org.la4j.linear.LeastNormSolver#solve(org.la4j.vector.Vector,org.la4j.factory.Factory)
	CALLEE: org.la4j.linear.JacobiSolver#solve(org.la4j.vector.Vector,org.la4j.factory.Factory)
CALLER: org.la4j.vector.sparse.SparseVector#toRowMatrix()
	CALLEE: org.la4j.vector.sparse.CompressedVector#nonZeroIterator()
	CALLEE: static org.la4j.matrix.sparse.CRSMatrix#zero(int,int)
	CALLEE: org.la4j.iterator.CursorToVectorIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#next()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#index()
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#set(int,int,double)
CALLER: static org.la4j.vector.Vectors#asProductAccumulator(double)
CALLER: org.la4j.iterator.CursorToVectorIterator#get()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#get()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#get()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#get()
CALLER: org.la4j.vector.AbstractVector#toSparseVector()
	CALLEE: org.la4j.vector.AbstractVector#to(org.la4j.vector.VectorFactory)
	CALLEE: org.la4j.vector.sparse.SparseVector#to(org.la4j.vector.VectorFactory)
	CALLEE: org.la4j.vector.sparse.CompressedVector#to(org.la4j.vector.VectorFactory)
	CALLEE: org.la4j.vector.dense.BasicVector#to(org.la4j.vector.VectorFactory)
CALLER: org.la4j.factory.CCSFactory#createMatrix(int,int)
	CALLEE: static org.la4j.matrix.sparse.CCSMatrix#zero(int,int)
CALLER: org.la4j.vector.operation.VectorMatrixOperation#partiallyApply(org.la4j.vector.dense.DenseVector)
CALLER: org.la4j.matrix.AbstractMatrix#toColumnVector(org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#getColumn(int,org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#getColumn(int,org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#getColumn(int,org.la4j.factory.Factory)
CALLER: org.la4j.vector.operation.ooplace.OoPlaceVectorByMatrixMultiplication#apply(org.la4j.vector.sparse.SparseVector,org.la4j.matrix.sparse.RowMajorSparseMatrix)
	CALLEE: org.la4j.vector.operation.ooplace.OoPlaceVectorByMatrixMultiplication#apply(org.la4j.vector.sparse.SparseVector,org.la4j.matrix.sparse.RowMajorSparseMatrix)
CALLER: org.la4j.matrix.sparse.SparseMatrix#nonZeroRowMajorIterator()
CALLER: org.la4j.vector.AbstractVector#divide(double,org.la4j.factory.Factory)
	CALLEE: org.la4j.vector.AbstractVector#multiply(double,org.la4j.factory.Factory)
CALLER: org.la4j.matrix.sparse.CRSMatrix#<init>(org.la4j.matrix.Matrix)
	CALLEE: static org.la4j.matrix.Matrices#asMatrixSource(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#<init>(org.la4j.matrix.source.MatrixSource)
CALLER: org.la4j.iterator.MatrixIterator#<init>(int,int)
CALLER: org.la4j.matrix.AbstractMatrix#removeColumn(int)
	CALLEE: org.la4j.factory.Basic1DFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.Basic2DFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.CRSFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.CCSFactory#createMatrix(int,int)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#getColumn(int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#getColumn(int)
	CALLEE: org.la4j.matrix.dense.DenseMatrix#getColumn(int)
	CALLEE: org.la4j.matrix.AbstractMatrix#setColumn(int,org.la4j.vector.Vector)
CALLER: org.la4j.vector.AbstractVector#subtract(double)
	CALLEE: org.la4j.vector.AbstractVector#add(double)
	CALLEE: org.la4j.vector.sparse.SparseVector#add(double)
CALLER: org.la4j.matrix.AbstractMatrix#sliceTopLeft(int,int)
	CALLEE: org.la4j.matrix.AbstractMatrix#slice(int,int,int,int,org.la4j.factory.Factory)
CALLER: static org.la4j.matrix.dense.Basic2DMatrix#constant(int,int,double)
CALLER: org.la4j.matrix.sparse.CRSMatrix#nonZeroAt(int,int)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#searchForColumnIndex(int,int,int)
CALLER: org.la4j.matrix.AbstractMatrix#ensureDimensionsAreCorrect(int,int)
	CALLEE: org.la4j.matrix.AbstractMatrix#fail(java.lang.String)
CALLER: org.la4j.matrix.AbstractMatrix#slice(int,int,int,int,org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#ensureFactoryIsNotNull(org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#fail(java.lang.String)
	CALLEE: org.la4j.factory.Basic1DFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.Basic2DFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.CRSFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.CCSFactory#createMatrix(int,int)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#set(int,int,double)
CALLER: static org.la4j.matrix.sparse.CRSMatrix#from1DArray(int,int,double[])
	CALLEE: static org.la4j.matrix.sparse.CRSMatrix#zero(int,int)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#set(int,int,double)
CALLER: org.la4j.vector.AbstractVector#sum()
	CALLEE: static org.la4j.vector.Vectors#asSumAccumulator(double)
	CALLEE: org.la4j.vector.AbstractVector#fold(org.la4j.vector.functor.VectorAccumulator)
CALLER: org.la4j.matrix.operation.ooplace.OoPlaceMatrixByVectorMultiplication#apply(org.la4j.matrix.sparse.RowMajorSparseMatrix,org.la4j.vector.sparse.SparseVector)
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
	CALLEE: org.la4j.vector.sparse.CompressedVector#blankOfLength(int)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#iteratorOfNonZeroRows()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#next()
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#nonZeroIteratorOfRow(int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#nonZeroIterator()
	CALLEE: org.la4j.iterator.VectorIterator#andAlsoMultiply(org.la4j.iterator.VectorIterator)
	CALLEE: org.la4j.vector.sparse.CompressedVector#set(int,double)
	CALLEE: org.la4j.vector.dense.BasicVector#set(int,double)
CALLER: org.la4j.vector.AbstractVector#slice(int,int,org.la4j.factory.Factory)
	CALLEE: org.la4j.vector.AbstractVector#ensureFactoryIsNotNull(org.la4j.factory.Factory)
	CALLEE: org.la4j.vector.AbstractVector#slice(int,int)
	CALLEE: static org.la4j.factory.Factory#asVectorFactory(org.la4j.factory.Factory)
	CALLEE: org.la4j.vector.sparse.CompressedVector#to(org.la4j.vector.VectorFactory)
	CALLEE: org.la4j.vector.dense.BasicVector#to(org.la4j.vector.VectorFactory)
CALLER: org.la4j.linear.SeidelSolver#<init>(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.linear.AbstractSolver#<init>(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.matrix.AbstractMatrix#copy()
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
	CALLEE: static org.la4j.matrix.Matrices#asDivFunction(double)
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
	CALLEE: org.la4j.matrix.AbstractMatrix#update(int,int,org.la4j.matrix.functor.MatrixFunction)
CALLER: org.la4j.vector.AbstractVector#slice(int,int)
	CALLEE: org.la4j.vector.AbstractVector#fail(java.lang.String)
	CALLEE: org.la4j.vector.sparse.CompressedVector#blankOfLength(int)
	CALLEE: org.la4j.vector.dense.BasicVector#blankOfLength(int)
	CALLEE: org.la4j.vector.sparse.SparseVector#get(int)
	CALLEE: org.la4j.vector.dense.BasicVector#get(int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#set(int,double)
	CALLEE: org.la4j.vector.dense.BasicVector#set(int,double)
CALLER: org.la4j.factory.Factory#createRandomVector(int)
	CALLEE: org.la4j.factory.BasicFactory#createRandomVector(int,java.util.Random)
	CALLEE: org.la4j.factory.CompressedFactory#createRandomVector(int,java.util.Random)
CALLER: org.la4j.matrix.AbstractMatrix#assignColumn(int,double)
	CALLEE: org.la4j.matrix.AbstractMatrix#setColumn(int,double)
CALLER: org.la4j.matrix.AbstractMatrix#sliceTopLeft(int,int,org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#slice(int,int,int,int,org.la4j.factory.Factory)
CALLER: org.la4j.vector.AbstractVector#max()
	CALLEE: static org.la4j.vector.Vectors#mkMaxAccumulator()
	CALLEE: org.la4j.vector.AbstractVector#fold(org.la4j.vector.functor.VectorAccumulator)
CALLER: org.la4j.vector.sparse.SparseVector#max()
	CALLEE: static org.la4j.vector.Vectors#mkMaxAccumulator()
	CALLEE: org.la4j.vector.sparse.SparseVector#foldNonZero(org.la4j.vector.functor.VectorAccumulator)
CALLER: static org.la4j.matrix.dense.Basic1DMatrix#randomSymmetric(int,java.util.Random)
CALLER: org.la4j.matrix.dense.Basic1DMatrix#<init>()
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#<init>(int,int)
CALLER: org.la4j.vector.operation.ooplace.OoPlaceVectorsSubtraction#apply(org.la4j.vector.dense.DenseVector,org.la4j.vector.dense.DenseVector)
	CALLEE: org.la4j.vector.operation.ooplace.OoPlaceVectorsSubtraction#apply(org.la4j.vector.dense.DenseVector,org.la4j.vector.dense.DenseVector)
CALLER: static org.la4j.matrix.sparse.SparseMatrix#block(org.la4j.matrix.Matrix,org.la4j.matrix.Matrix,org.la4j.matrix.Matrix,org.la4j.matrix.Matrix)
	CALLEE: static org.la4j.matrix.sparse.CRSMatrix#block(org.la4j.matrix.Matrix,org.la4j.matrix.Matrix,org.la4j.matrix.Matrix,org.la4j.matrix.Matrix)
CALLER: org.la4j.matrix.sparse.RowMajorSparseMatrix#apply(org.la4j.matrix.operation.MatrixMatrixOperation,org.la4j.matrix.Matrix)
	CALLEE: org.la4j.matrix.operation.MatrixMatrixOperation#partiallyApply(org.la4j.matrix.sparse.RowMajorSparseMatrix)
	CALLEE: org.la4j.matrix.sparse.ColumnMajorSparseMatrix#apply(org.la4j.matrix.operation.MatrixOperation)
	CALLEE: org.la4j.matrix.sparse.RowMajorSparseMatrix#apply(org.la4j.matrix.operation.MatrixOperation)
	CALLEE: org.la4j.matrix.dense.DenseMatrix#apply(org.la4j.matrix.operation.MatrixOperation)
CALLER: org.la4j.vector.operation.ooplace.OoPlaceVectorByMatrixMultiplication#apply(org.la4j.vector.dense.DenseVector,org.la4j.matrix.sparse.RowMajorSparseMatrix)
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
	CALLEE: static org.la4j.vector.sparse.SparseVector#zero(int)
	CALLEE: org.la4j.matrix.AbstractMatrix#rowMajorIterator()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#rowIndex()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#rowIndex()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#columnIndex()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#columnIndex()
	CALLEE: org.la4j.vector.dense.BasicVector#get(int)
	CALLEE: static org.la4j.vector.Vectors#asPlusFunction(double)
	CALLEE: org.la4j.vector.sparse.CompressedVector#updateAt(int,org.la4j.vector.functor.VectorFunction)
	CALLEE: org.la4j.vector.AbstractVector#updateAt(int,org.la4j.vector.functor.VectorFunction)
CALLER: static org.la4j.matrix.Matrices#asSingletonMatrix(double)
CALLER: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.AbstractMatrix#ensureIndexesAreInBounds(int,int)
CALLER: static org.la4j.vector.dense.BasicVector#unit(int)
	CALLEE: static org.la4j.vector.dense.BasicVector#constant(int,double)
CALLER: org.la4j.matrix.AbstractMatrix#slice(int,int,int,int)
	CALLEE: org.la4j.matrix.AbstractMatrix#slice(int,int,int,int,org.la4j.factory.Factory)
CALLER: static org.la4j.matrix.dense.DenseMatrix#unit(int,int)
	CALLEE: static org.la4j.matrix.dense.Basic2DMatrix#unit(int,int)
CALLER: org.la4j.vector.sparse.SparseVector#<init>(int,int)
	CALLEE: org.la4j.vector.AbstractVector#<init>(org.la4j.factory.Factory,int)
CALLER: org.la4j.vector.operation.ooplace.OoPlaceOuterProduct#apply(org.la4j.vector.dense.DenseVector,org.la4j.vector.dense.DenseVector)
	CALLEE: org.la4j.vector.operation.ooplace.OoPlaceOuterProduct#apply(org.la4j.vector.dense.DenseVector,org.la4j.vector.dense.DenseVector)
CALLER: org.la4j.matrix.sparse.CRSMatrix#<init>(org.la4j.matrix.source.MatrixSource)
	CALLEE: org.la4j.matrix.source.IdentityMatrixSource#rows()
	CALLEE: org.la4j.matrix.source.RandomSymmetricMatrixSource#rows()
	CALLEE: org.la4j.matrix.source.StreamMatrixSource#rows()
	CALLEE: org.la4j.matrix.source.LoopbackMatrixSource#rows()
	CALLEE: org.la4j.matrix.source.RandomMatrixSource#rows()
	CALLEE: org.la4j.matrix.source.Array1DMatrixSource#rows()
	CALLEE: org.la4j.matrix.source.Array2DMatrixSource#rows()
	CALLEE: org.la4j.matrix.source.IdentityMatrixSource#columns()
	CALLEE: org.la4j.matrix.source.RandomSymmetricMatrixSource#columns()
	CALLEE: org.la4j.matrix.source.StreamMatrixSource#columns()
	CALLEE: org.la4j.matrix.source.LoopbackMatrixSource#columns()
	CALLEE: org.la4j.matrix.source.RandomMatrixSource#columns()
	CALLEE: org.la4j.matrix.source.Array1DMatrixSource#columns()
	CALLEE: org.la4j.matrix.source.Array2DMatrixSource#columns()
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#<init>(int,int,int)
	CALLEE: org.la4j.matrix.source.IdentityMatrixSource#get(int,int)
	CALLEE: org.la4j.matrix.source.RandomSymmetricMatrixSource#get(int,int)
	CALLEE: org.la4j.matrix.source.StreamMatrixSource#get(int,int)
	CALLEE: org.la4j.matrix.source.LoopbackMatrixSource#get(int,int)
	CALLEE: org.la4j.matrix.source.RandomMatrixSource#get(int,int)
	CALLEE: org.la4j.matrix.source.Array1DMatrixSource#get(int,int)
	CALLEE: org.la4j.matrix.source.Array2DMatrixSource#get(int,int)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#growUp()
CALLER: org.la4j.factory.CompressedFactory#createConstantVector(int,double)
	CALLEE: org.la4j.vector.sparse.CompressedVector#setAll(double)
CALLER: org.la4j.vector.sparse.CompressedVector#<init>()
	CALLEE: org.la4j.vector.sparse.CompressedVector#<init>(int)
CALLER: org.la4j.matrix.AbstractMatrix#resizeRows(int,org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#resize(int,int,org.la4j.factory.Factory)
CALLER: org.la4j.matrix.dense.Basic2DMatrix#<init>(org.la4j.matrix.source.MatrixSource)
	CALLEE: org.la4j.matrix.source.IdentityMatrixSource#rows()
	CALLEE: org.la4j.matrix.source.RandomSymmetricMatrixSource#rows()
	CALLEE: org.la4j.matrix.source.StreamMatrixSource#rows()
	CALLEE: org.la4j.matrix.source.LoopbackMatrixSource#rows()
	CALLEE: org.la4j.matrix.source.RandomMatrixSource#rows()
	CALLEE: org.la4j.matrix.source.Array1DMatrixSource#rows()
	CALLEE: org.la4j.matrix.source.Array2DMatrixSource#rows()
	CALLEE: org.la4j.matrix.source.IdentityMatrixSource#columns()
	CALLEE: org.la4j.matrix.source.RandomSymmetricMatrixSource#columns()
	CALLEE: org.la4j.matrix.source.StreamMatrixSource#columns()
	CALLEE: org.la4j.matrix.source.LoopbackMatrixSource#columns()
	CALLEE: org.la4j.matrix.source.RandomMatrixSource#columns()
	CALLEE: org.la4j.matrix.source.Array1DMatrixSource#columns()
	CALLEE: org.la4j.matrix.source.Array2DMatrixSource#columns()
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#<init>(int,int)
	CALLEE: org.la4j.matrix.source.IdentityMatrixSource#get(int,int)
	CALLEE: org.la4j.matrix.source.RandomSymmetricMatrixSource#get(int,int)
	CALLEE: org.la4j.matrix.source.StreamMatrixSource#get(int,int)
	CALLEE: org.la4j.matrix.source.LoopbackMatrixSource#get(int,int)
	CALLEE: org.la4j.matrix.source.RandomMatrixSource#get(int,int)
	CALLEE: org.la4j.matrix.source.Array1DMatrixSource#get(int,int)
	CALLEE: org.la4j.matrix.source.Array2DMatrixSource#get(int,int)
CALLER: org.la4j.factory.CRSFactory#createMatrix(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#<init>(org.la4j.matrix.Matrix)
CALLER: org.la4j.matrix.sparse.CRSMatrix#blankOfShape(int,int)
	CALLEE: static org.la4j.matrix.sparse.CRSMatrix#zero(int,int)
CALLER: org.la4j.vector.operation.ooplace.OoPlaceInnerProduct#apply(org.la4j.vector.dense.DenseVector,org.la4j.vector.sparse.SparseVector)
	CALLEE: org.la4j.vector.operation.ooplace.OoPlaceInnerProduct#dot(org.la4j.vector.Vector)
	CALLEE: static org.la4j.vector.Vectors#asSumFunctionAccumulator(double,org.la4j.vector.functor.VectorFunction)
	CALLEE: org.la4j.vector.sparse.SparseVector#foldNonZero(org.la4j.vector.functor.VectorAccumulator)
CALLER: org.la4j.factory.Factory#createRandomSymmetricMatrix(int)
	CALLEE: org.la4j.factory.Basic1DFactory#createRandomSymmetricMatrix(int,java.util.Random)
	CALLEE: org.la4j.factory.Basic2DFactory#createRandomSymmetricMatrix(int,java.util.Random)
	CALLEE: org.la4j.factory.CRSFactory#createRandomSymmetricMatrix(int,java.util.Random)
	CALLEE: org.la4j.factory.CCSFactory#createRandomSymmetricMatrix(int,java.util.Random)
CALLER: org.la4j.matrix.AbstractMatrix#add(double)
	CALLEE: org.la4j.matrix.AbstractMatrix#iterator()
	CALLEE: org.la4j.matrix.sparse.ColumnMajorSparseMatrix#iterator()
	CALLEE: org.la4j.matrix.AbstractMatrix#blank()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#rowIndex()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#rowIndex()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#columnIndex()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#columnIndex()
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#set(int,int,double)
CALLER: org.la4j.matrix.sparse.SparseMatrix#add(double)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#nonZeroIterator()
	CALLEE: org.la4j.matrix.sparse.ColumnMajorSparseMatrix#nonZeroIterator()
	CALLEE: static org.la4j.matrix.dense.DenseMatrix#constant(int,int,double)
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#rowIndex()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#rowIndex()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#columnIndex()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#columnIndex()
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#set(int,int,double)
CALLER: org.la4j.matrix.AbstractMatrix#kroneckerProduct(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.matrix.AbstractMatrix#ensureArgumentIsNotNull(java.lang.Object,java.lang.String)
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
	CALLEE: org.la4j.factory.Basic1DFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.Basic2DFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.CRSFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.CCSFactory#createMatrix(int,int)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#set(int,int,double)
CALLER: org.la4j.vector.sparse.SparseVector#isZeroAt(int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#nonZeroAt(int)
CALLER: org.la4j.factory.CRSFactory#createMatrix(org.la4j.matrix.source.MatrixSource)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#<init>(org.la4j.matrix.source.MatrixSource)
CALLER: org.la4j.factory.BasicFactory#createVector(double[])
	CALLEE: static org.la4j.vector.dense.BasicVector#fromArray(double[])
CALLER: org.la4j.iterator.VectorIterator#orElseAdd(org.la4j.iterator.VectorIterator)
	CALLEE: org.la4j.iterator.CursorIterator#orElse(org.la4j.iterator.CursorIterator,org.la4j.iterator.JoinFunction)
	CALLEE: org.la4j.iterator.CursorToVectorIterator#<init>(org.la4j.iterator.CursorIterator,int)
CALLER: org.la4j.vector.operation.ooplace.OoPlaceVectorByMatrixMultiplication#apply(org.la4j.vector.sparse.SparseVector,org.la4j.matrix.dense.DenseMatrix)
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
	CALLEE: static org.la4j.vector.dense.DenseVector#zero(int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#nonZeroIterator()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#next()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#index()
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#set(int,double)
	CALLEE: org.la4j.vector.dense.BasicVector#set(int,double)
CALLER: org.la4j.matrix.sparse.SparseMatrix#foldNonZeroInColumn(int,org.la4j.vector.functor.VectorAccumulator)
	CALLEE: static org.la4j.vector.Vectors#asAccumulatorProcedure(org.la4j.vector.functor.VectorAccumulator)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#eachNonZeroInColumn(int,org.la4j.vector.functor.VectorProcedure)
CALLER: org.la4j.matrix.sparse.CCSMatrix#<init>()
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#<init>(int,int)
CALLER: org.la4j.matrix.AbstractMatrix#shuffle()
	CALLEE: org.la4j.matrix.AbstractMatrix#copy()
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#set(int,int,double)
CALLER: static org.la4j.matrix.Matrices#asMulFunction(double)
CALLER: org.la4j.matrix.dense.Basic2DMatrix#to(org.la4j.matrix.MatrixFactory)
	CALLEE: org.la4j.matrix.AbstractMatrix#to(org.la4j.matrix.MatrixFactory)
CALLER: static org.la4j.vector.dense.BasicVector#random(int,java.util.Random)
CALLER: org.la4j.vector.AbstractVector#multiply(org.la4j.matrix.Matrix,org.la4j.factory.Factory)
	CALLEE: org.la4j.vector.AbstractVector#ensureFactoryIsNotNull(org.la4j.factory.Factory)
	CALLEE: org.la4j.vector.AbstractVector#multiply(org.la4j.matrix.Matrix)
	CALLEE: static org.la4j.factory.Factory#asVectorFactory(org.la4j.factory.Factory)
	CALLEE: org.la4j.vector.sparse.CompressedVector#to(org.la4j.vector.VectorFactory)
	CALLEE: org.la4j.vector.dense.BasicVector#to(org.la4j.vector.VectorFactory)
CALLER: org.la4j.matrix.AbstractMatrix#columnMajorIterator()
CALLER: org.la4j.vector.operation.ooplace.OoPlaceOuterProduct#apply(org.la4j.vector.sparse.SparseVector,org.la4j.vector.sparse.SparseVector)
	CALLEE: org.la4j.vector.operation.ooplace.OoPlaceOuterProduct#apply(org.la4j.vector.sparse.SparseVector,org.la4j.vector.sparse.SparseVector)
CALLER: org.la4j.matrix.AbstractMatrix#updateRow(int,org.la4j.vector.functor.VectorFunction)
	CALLEE: org.la4j.matrix.AbstractMatrix#iteratorOfRow(int)
	CALLEE: org.la4j.iterator.CursorToVectorIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#next()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#index()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#set(double)
CALLER: org.la4j.io.SymbolSeparatedStream#readVector()
	CALLEE: org.la4j.io.SymbolSeparatedStream#readVector(org.la4j.factory.Factory)
CALLER: org.la4j.decomposition.EigenDecompositor#findMax(org.la4j.vector.Vector)
	CALLEE: org.la4j.vector.sparse.SparseVector#get(int)
	CALLEE: org.la4j.vector.dense.BasicVector#get(int)
	CALLEE: org.la4j.vector.AbstractVector#length()
CALLER: org.la4j.matrix.dense.Basic1DMatrix#getRow(int)
CALLER: org.la4j.vector.source.StreamVectorSource#get(int)
	CALLEE: org.la4j.vector.sparse.SparseVector#get(int)
	CALLEE: org.la4j.vector.dense.BasicVector#get(int)
CALLER: org.la4j.matrix.AbstractMatrix#removeRow(int)
	CALLEE: org.la4j.factory.Basic1DFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.Basic2DFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.CRSFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.CCSFactory#createMatrix(int,int)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#getRow(int)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#getRow(int)
	CALLEE: org.la4j.matrix.dense.DenseMatrix#getRow(int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#getRow(int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#getRow(int)
	CALLEE: org.la4j.matrix.AbstractMatrix#setRow(int,org.la4j.vector.Vector)
CALLER: org.la4j.io.MatrixMarketStream#ensureNext(java.lang.String)
	CALLEE: org.la4j.io.MatrixMarketStream#nextToken()
CALLER: org.la4j.vector.operation.ooplace.OoPlaceVectorByMatrixMultiplication#apply(org.la4j.vector.sparse.SparseVector,org.la4j.matrix.sparse.RowMajorSparseMatrix)
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
	CALLEE: org.la4j.vector.sparse.CompressedVector#blankOfLength(int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#nonZeroIterator()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#next()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#index()
	CALLEE: org.la4j.matrix.AbstractMatrix#iteratorOfRow(int)
	CALLEE: static org.la4j.vector.Vectors#asPlusFunction(double)
	CALLEE: org.la4j.vector.sparse.CompressedVector#updateAt(int,org.la4j.vector.functor.VectorFunction)
	CALLEE: org.la4j.vector.AbstractVector#updateAt(int,org.la4j.vector.functor.VectorFunction)
CALLER: static org.la4j.matrix.Matrices#asMatrixMarketSource(java.io.InputStream)
	CALLEE: org.la4j.io.MatrixMarketStream#<init>(java.io.InputStream)
	CALLEE: org.la4j.matrix.source.StreamMatrixSource#<init>(org.la4j.io.MatrixStream)
CALLER: org.la4j.vector.sparse.CompressedVector#<init>(org.la4j.vector.Vector)
	CALLEE: static org.la4j.vector.Vectors#asVectorSource(org.la4j.vector.Vector)
	CALLEE: org.la4j.vector.sparse.CompressedVector#<init>(org.la4j.vector.source.VectorSource)
CALLER: org.la4j.matrix.AbstractMatrix#foldColumns(org.la4j.matrix.functor.MatrixAccumulator)
	CALLEE: org.la4j.factory.BasicFactory#createVector(int)
	CALLEE: org.la4j.factory.CompressedFactory#createVector(int)
	CALLEE: org.la4j.matrix.AbstractMatrix#foldColumn(int,org.la4j.matrix.functor.MatrixAccumulator)
	CALLEE: org.la4j.vector.sparse.CompressedVector#set(int,double)
	CALLEE: org.la4j.vector.dense.BasicVector#set(int,double)
CALLER: org.la4j.linear.SquareRootSolver#solve(org.la4j.vector.Vector,org.la4j.factory.Factory)
	CALLEE: org.la4j.linear.AbstractSolver#ensureRHSIsCorrect(org.la4j.vector.Vector)
	CALLEE: org.la4j.matrix.AbstractMatrix#blank()
	CALLEE: org.la4j.linear.AbstractSolver#unknowns()
	CALLEE: org.la4j.factory.BasicFactory#createVector(int)
	CALLEE: org.la4j.factory.CompressedFactory#createVector(int)
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#set(int,int,double)
	CALLEE: org.la4j.linear.AbstractSolver#fail(java.lang.String)
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
	CALLEE: org.la4j.vector.sparse.SparseVector#get(int)
	CALLEE: org.la4j.vector.dense.BasicVector#get(int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#set(int,double)
	CALLEE: org.la4j.vector.dense.BasicVector#set(int,double)
CALLER: org.la4j.vector.AbstractVector#swapElements(int,int)
	CALLEE: org.la4j.vector.sparse.SparseVector#get(int)
	CALLEE: org.la4j.vector.dense.BasicVector#get(int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#set(int,double)
	CALLEE: org.la4j.vector.dense.BasicVector#set(int,double)
CALLER: org.la4j.vector.sparse.CompressedVector#swapElements(int,int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#searchForIndex(int)
CALLER: org.la4j.io.MatrixMarketStream#parseDenseMatrix(org.la4j.factory.Factory)
	CALLEE: org.la4j.io.MatrixMarketStream#nextToken()
	CALLEE: org.la4j.factory.Basic1DFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.Basic2DFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.CRSFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.CCSFactory#createMatrix(int,int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#set(int,int,double)
CALLER: org.la4j.vector.AbstractVector#blank(org.la4j.factory.Factory)
	CALLEE: org.la4j.vector.AbstractVector#ensureFactoryIsNotNull(org.la4j.factory.Factory)
	CALLEE: org.la4j.factory.BasicFactory#createVector(int)
	CALLEE: org.la4j.factory.CompressedFactory#createVector(int)
CALLER: static org.la4j.vector.dense.BasicVector#zero(int)
	CALLEE: org.la4j.vector.dense.BasicVector#<init>(int)
CALLER: org.la4j.linear.GaussianSolver#backSubstitution(org.la4j.matrix.Matrix,org.la4j.vector.Vector)
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
	CALLEE: org.la4j.vector.sparse.SparseVector#get(int)
	CALLEE: org.la4j.vector.dense.BasicVector#get(int)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#set(int,double)
	CALLEE: org.la4j.vector.dense.BasicVector#set(int,double)
CALLER: org.la4j.matrix.AbstractMatrix#copyOfColumns(int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#copyOfShape(int,int)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#copyOfShape(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#copyOfShape(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#copyOfShape(int,int)
CALLER: org.la4j.matrix.AbstractMatrix#subtract(org.la4j.matrix.Matrix,org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#ensureFactoryIsNotNull(org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#subtract(org.la4j.matrix.Matrix)
	CALLEE: static org.la4j.factory.Factory#asMatrixFactory(org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#to(org.la4j.matrix.MatrixFactory)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#to(org.la4j.matrix.MatrixFactory)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#to(org.la4j.matrix.MatrixFactory)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#to(org.la4j.matrix.MatrixFactory)
CALLER: org.la4j.matrix.operation.inplace.InPlaceCopyMatrixToMatrix#apply(org.la4j.matrix.sparse.ColumnMajorSparseMatrix,org.la4j.matrix.sparse.RowMajorSparseMatrix)
	CALLEE: org.la4j.matrix.operation.inplace.InPlaceCopyMatrixToMatrix#apply(org.la4j.matrix.sparse.ColumnMajorSparseMatrix,org.la4j.matrix.sparse.RowMajorSparseMatrix)
CALLER: static org.la4j.vector.Vectors#asMatrixMarketSource(java.io.InputStream)
	CALLEE: org.la4j.io.MatrixMarketStream#<init>(java.io.InputStream)
	CALLEE: org.la4j.vector.source.StreamVectorSource#<init>(org.la4j.io.VectorStream)
CALLER: org.la4j.vector.sparse.SparseVector#apply(org.la4j.vector.operation.VectorMatrixOperation,org.la4j.matrix.Matrix)
	CALLEE: org.la4j.vector.operation.VectorMatrixOperation#partiallyApply(org.la4j.vector.sparse.SparseVector)
	CALLEE: org.la4j.matrix.sparse.ColumnMajorSparseMatrix#apply(org.la4j.matrix.operation.MatrixOperation)
	CALLEE: org.la4j.matrix.sparse.RowMajorSparseMatrix#apply(org.la4j.matrix.operation.MatrixOperation)
	CALLEE: org.la4j.matrix.dense.DenseMatrix#apply(org.la4j.matrix.operation.MatrixOperation)
CALLER: org.la4j.matrix.AbstractMatrix#toRowVector(org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#getRow(int,org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#getRow(int,org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#getRow(int,org.la4j.factory.Factory)
CALLER: static org.la4j.vector.Vectors#mkMaxAccumulator()
CALLER: org.la4j.matrix.operation.ooplace.OoPlaceMatricesAddition#applySymmetric(org.la4j.matrix.dense.DenseMatrix,org.la4j.matrix.sparse.SparseMatrix)
	CALLEE: org.la4j.matrix.AbstractMatrix#copy()
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#nonZeroIterator()
	CALLEE: org.la4j.matrix.sparse.ColumnMajorSparseMatrix#nonZeroIterator()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#rowIndex()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#rowIndex()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#columnIndex()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#columnIndex()
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#set(int,int,double)
CALLER: static org.la4j.matrix.Matrices#mkMaxAccumulator()
CALLER: org.la4j.matrix.sparse.CCSMatrix#<init>(int,int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#<init>(int,int,int)
CALLER: static org.la4j.vector.Vectors#mkInfinityNormAccumulator()
CALLER: org.la4j.vector.AbstractVector#select(int[])
	CALLEE: org.la4j.vector.AbstractVector#fail(java.lang.String)
	CALLEE: org.la4j.vector.sparse.CompressedVector#blankOfLength(int)
	CALLEE: org.la4j.vector.dense.BasicVector#blankOfLength(int)
	CALLEE: org.la4j.vector.sparse.SparseVector#get(int)
	CALLEE: org.la4j.vector.dense.BasicVector#get(int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#set(int,double)
	CALLEE: org.la4j.vector.dense.BasicVector#set(int,double)
CALLER: org.la4j.matrix.AbstractMatrix#shuffle(org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#ensureFactoryIsNotNull(org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#shuffle()
	CALLEE: static org.la4j.factory.Factory#asMatrixFactory(org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#to(org.la4j.matrix.MatrixFactory)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#to(org.la4j.matrix.MatrixFactory)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#to(org.la4j.matrix.MatrixFactory)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#to(org.la4j.matrix.MatrixFactory)
CALLER: org.la4j.iterator.CursorToRowMajorMatrixIterator#<init>(org.la4j.iterator.CursorIterator,int,int)
	CALLEE: org.la4j.iterator.RowMajorMatrixIterator#<init>(int,int)
CALLER: org.la4j.matrix.operation.MatrixMatrixOperation#partiallyApply(org.la4j.matrix.dense.DenseMatrix)
CALLER: org.la4j.iterator.ColumnMajorMatrixIterator#orElseAdd(org.la4j.iterator.ColumnMajorMatrixIterator)
	CALLEE: org.la4j.iterator.CursorIterator#orElse(org.la4j.iterator.CursorIterator,org.la4j.iterator.JoinFunction)
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#<init>(org.la4j.iterator.CursorIterator,int,int)
CALLER: org.la4j.matrix.AbstractMatrix#hadamardProduct(org.la4j.matrix.Matrix,org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#ensureFactoryIsNotNull(org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#hadamardProduct(org.la4j.matrix.Matrix)
	CALLEE: static org.la4j.factory.Factory#asMatrixFactory(org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#to(org.la4j.matrix.MatrixFactory)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#to(org.la4j.matrix.MatrixFactory)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#to(org.la4j.matrix.MatrixFactory)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#to(org.la4j.matrix.MatrixFactory)
CALLER: org.la4j.linear.LeastNormSolver#<init>(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.linear.AbstractSolver#<init>(org.la4j.matrix.Matrix)
CALLER: org.la4j.vector.AbstractVector#update(org.la4j.vector.functor.VectorFunction)
	CALLEE: org.la4j.vector.AbstractVector#iterator()
	CALLEE: org.la4j.vector.sparse.CompressedVector#iterator()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#next()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#index()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#set(double)
CALLER: org.la4j.vector.AbstractVector#hashCode()
	CALLEE: org.la4j.vector.AbstractVector#iterator()
	CALLEE: org.la4j.vector.sparse.CompressedVector#iterator()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#next()
CALLER: org.la4j.vector.sparse.SparseVector#hashCode()
	CALLEE: org.la4j.vector.sparse.CompressedVector#nonZeroIterator()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#next()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#index()
CALLER: org.la4j.matrix.AbstractMatrix#hadamardProduct(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.matrix.AbstractMatrix#ensureArgumentIsNotNull(java.lang.Object,java.lang.String)
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
	CALLEE: org.la4j.matrix.AbstractMatrix#fail(java.lang.String)
	CALLEE: org.la4j.factory.Basic1DFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.Basic2DFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.CRSFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.CCSFactory#createMatrix(int,int)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#set(int,int,double)
CALLER: static org.la4j.matrix.Matrices#asMatrix2x2(double[])
CALLER: static org.la4j.matrix.dense.DenseMatrix#block(org.la4j.matrix.Matrix,org.la4j.matrix.Matrix,org.la4j.matrix.Matrix,org.la4j.matrix.Matrix)
	CALLEE: static org.la4j.matrix.dense.Basic2DMatrix#block(org.la4j.matrix.Matrix,org.la4j.matrix.Matrix,org.la4j.matrix.Matrix,org.la4j.matrix.Matrix)
CALLER: org.la4j.factory.Factory#createRandomMatrix(int,int)
	CALLEE: org.la4j.factory.Basic1DFactory#createRandomMatrix(int,int,java.util.Random)
	CALLEE: org.la4j.factory.Basic2DFactory#createRandomMatrix(int,int,java.util.Random)
	CALLEE: org.la4j.factory.CRSFactory#createRandomMatrix(int,int,java.util.Random)
	CALLEE: org.la4j.factory.CCSFactory#createRandomMatrix(int,int,java.util.Random)
CALLER: org.la4j.matrix.operation.ooplace.OoPlaceMatricesAddition#apply(org.la4j.matrix.dense.DenseMatrix,org.la4j.matrix.dense.DenseMatrix)
	CALLEE: org.la4j.matrix.AbstractMatrix#blank()
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#set(int,int,double)
CALLER: org.la4j.matrix.sparse.CCSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.AbstractMatrix#ensureIndexesAreInBounds(int,int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#searchForRowIndex(int,int,int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#remove(int,int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#insert(int,int,int,double)
CALLER: org.la4j.matrix.AbstractMatrix#removeFirstColumn()
	CALLEE: org.la4j.matrix.AbstractMatrix#removeColumn(int)
CALLER: org.la4j.vector.sparse.CompressedVector#iterator()
CALLER: org.la4j.matrix.AbstractMatrix#updateColumn(int,org.la4j.matrix.functor.MatrixFunction)
	CALLEE: org.la4j.matrix.AbstractMatrix#updateColumn(int,org.la4j.vector.functor.VectorFunction)
CALLER: org.la4j.vector.dense.BasicVector#blankOfLength(int)
	CALLEE: static org.la4j.vector.dense.BasicVector#zero(int)
CALLER: org.la4j.matrix.operation.SimpleMatrixMatrixOperation#apply(org.la4j.matrix.sparse.RowMajorSparseMatrix,org.la4j.matrix.dense.DenseMatrix)
	CALLEE: org.la4j.matrix.operation.inplace.InPlaceCopyMatrixToMatrix#applySimple(org.la4j.matrix.sparse.SparseMatrix,org.la4j.matrix.dense.DenseMatrix)
CALLER: org.la4j.factory.CRSFactory#createSquareMatrix(int)
	CALLEE: org.la4j.factory.CRSFactory#createMatrix(int,int)
CALLER: org.la4j.factory.Basic1DFactory#createMatrix(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#<init>(org.la4j.matrix.Matrix)
CALLER: org.la4j.vector.AbstractVector#subtract(double,org.la4j.factory.Factory)
	CALLEE: org.la4j.vector.AbstractVector#add(double,org.la4j.factory.Factory)
CALLER: org.la4j.matrix.sparse.CCSMatrix#getRow(int,org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#ensureFactoryIsNotNull(org.la4j.factory.Factory)
	CALLEE: org.la4j.factory.BasicFactory#createVector(int)
	CALLEE: org.la4j.factory.CompressedFactory#createVector(int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#searchForRowIndex(int,int,int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#set(int,double)
	CALLEE: org.la4j.vector.dense.BasicVector#set(int,double)
CALLER: static org.la4j.matrix.Matrices#asDivFunction(double)
CALLER: static org.la4j.vector.Vectors#asDivFunction(double)
CALLER: org.la4j.vector.sparse.SparseVector#get(int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#getOrElse(int,double)
CALLER: org.la4j.factory.Basic1DFactory#createMatrix()
	CALLEE: static org.la4j.matrix.dense.Basic1DMatrix#zero(int,int)
CALLER: org.la4j.vector.sparse.SparseVector#infinityNorm()
	CALLEE: static org.la4j.vector.Vectors#mkInfinityNormAccumulator()
	CALLEE: org.la4j.vector.sparse.SparseVector#foldNonZero(org.la4j.vector.functor.VectorAccumulator)
CALLER: org.la4j.factory.BasicFactory#createConstantVector(int,double)
	CALLEE: static org.la4j.vector.dense.BasicVector#constant(int,double)
CALLER: org.la4j.matrix.AbstractMatrix#is(org.la4j.matrix.functor.AdvancedMatrixPredicate)
	CALLEE: org.la4j.matrix.Matrices.DiagonallyDominantPredicate#test(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.matrix.Matrices.PositiveDefiniteMatrixPredicate#test(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.matrix.Matrices.SymmetricMatrixPredicate#test(org.la4j.matrix.Matrix)
CALLER: org.la4j.matrix.AbstractMatrix#power(int)
	CALLEE: org.la4j.matrix.AbstractMatrix#fail(java.lang.String)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#blankOfShape(int,int)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#blankOfShape(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#blankOfShape(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#blankOfShape(int,int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.AbstractMatrix#multiply(org.la4j.matrix.Matrix)
CALLER: static org.la4j.matrix.sparse.CCSMatrix#identity(int)
	CALLEE: static org.la4j.matrix.sparse.CCSMatrix#diagonal(int,double)
CALLER: org.la4j.vector.sparse.SparseVector#multiply(double)
	CALLEE: org.la4j.vector.AbstractVector#copy()
	CALLEE: org.la4j.vector.sparse.CompressedVector#nonZeroIterator()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#next()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#index()
	CALLEE: org.la4j.vector.sparse.CompressedVector#set(int,double)
	CALLEE: org.la4j.vector.dense.BasicVector#set(int,double)
CALLER: org.la4j.linear.ForwardBackSubstitutionSolver#solve(org.la4j.vector.Vector,org.la4j.factory.Factory)
	CALLEE: org.la4j.linear.AbstractSolver#ensureRHSIsCorrect(org.la4j.vector.Vector)
	CALLEE: org.la4j.linear.AbstractSolver#unknowns()
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
	CALLEE: org.la4j.linear.AbstractSolver#fail(java.lang.String)
	CALLEE: org.la4j.factory.BasicFactory#createVector(int)
	CALLEE: org.la4j.factory.CompressedFactory#createVector(int)
	CALLEE: org.la4j.vector.sparse.SparseVector#get(int)
	CALLEE: org.la4j.vector.dense.BasicVector#get(int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#set(int,double)
	CALLEE: org.la4j.vector.dense.BasicVector#set(int,double)
	CALLEE: static org.la4j.vector.Vectors#asMinusFunction(double)
	CALLEE: org.la4j.vector.AbstractVector#update(int,org.la4j.vector.functor.VectorFunction)
	CALLEE: static org.la4j.vector.Vectors#asDivFunction(double)
CALLER: org.la4j.matrix.sparse.SparseMatrix#eachNonZeroInRow(int,org.la4j.vector.functor.VectorProcedure)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#nonZeroIteratorOfRow(int)
	CALLEE: org.la4j.iterator.CursorToVectorIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#next()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#index()
	CALLEE: org.la4j.io.MatrixMarketStream.SparseVectorWriteProcedure#apply(int,double)
CALLER: org.la4j.matrix.sparse.RowMajorSparseMatrix#<init>(org.la4j.factory.Factory,int,int)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#<init>(org.la4j.factory.Factory,int,int)
CALLER: org.la4j.matrix.AbstractMatrix#setColumn(int,double)
	CALLEE: org.la4j.matrix.AbstractMatrix#iteratorOfColumn(int)
	CALLEE: org.la4j.iterator.CursorToVectorIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#next()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#set(double)
CALLER: org.la4j.vector.sparse.SparseVector#apply(org.la4j.vector.operation.VectorVectorOperation,org.la4j.vector.Vector)
	CALLEE: org.la4j.vector.operation.VectorVectorOperation#partiallyApply(org.la4j.vector.sparse.SparseVector)
	CALLEE: org.la4j.vector.sparse.SparseVector#apply(org.la4j.vector.operation.VectorOperation)
	CALLEE: org.la4j.vector.dense.DenseVector#apply(org.la4j.vector.operation.VectorOperation)
CALLER: org.la4j.vector.operation.ooplace.OoPlaceHadamardProduct#apply(org.la4j.vector.sparse.SparseVector,org.la4j.vector.sparse.SparseVector)
	CALLEE: org.la4j.vector.sparse.CompressedVector#nonZeroIterator()
	CALLEE: org.la4j.iterator.VectorIterator#andAlsoMultiply(org.la4j.iterator.VectorIterator)
	CALLEE: org.la4j.vector.AbstractVector#blank()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#next()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#index()
	CALLEE: org.la4j.vector.sparse.CompressedVector#set(int,double)
	CALLEE: org.la4j.vector.dense.BasicVector#set(int,double)
CALLER: org.la4j.linear.SweepSolver#<init>(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.linear.AbstractSolver#<init>(org.la4j.matrix.Matrix)
CALLER: static org.la4j.vector.Vectors#asPlusFunction(double)
CALLER: static org.la4j.matrix.dense.DenseMatrix#from1DArray(int,int,double[])
	CALLEE: static org.la4j.matrix.dense.Basic1DMatrix#from1DArray(int,int,double[])
CALLER: org.la4j.matrix.AbstractMatrix#iteratorOfColumn(int)
CALLER: org.la4j.decomposition.AbstractDecompositor#decompose()
	CALLEE: org.la4j.matrix.AbstractMatrix#factory()
	CALLEE: org.la4j.decomposition.RawQRDecompositor#decompose(org.la4j.factory.Factory)
	CALLEE: org.la4j.decomposition.QRDecompositor#decompose(org.la4j.factory.Factory)
	CALLEE: org.la4j.decomposition.CholeskyDecompositor#decompose(org.la4j.factory.Factory)
	CALLEE: org.la4j.decomposition.RawLUDecompositor#decompose(org.la4j.factory.Factory)
	CALLEE: org.la4j.decomposition.LUDecompositor#decompose(org.la4j.factory.Factory)
	CALLEE: org.la4j.decomposition.EigenDecompositor#decompose(org.la4j.factory.Factory)
	CALLEE: org.la4j.decomposition.SingularValueDecompositor#decompose(org.la4j.factory.Factory)
CALLER: org.la4j.matrix.AbstractMatrix#select(int[],int[],org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#fail(java.lang.String)
	CALLEE: org.la4j.factory.Basic1DFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.Basic2DFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.CRSFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.CCSFactory#createMatrix(int,int)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#set(int,int,double)
CALLER: static org.la4j.matrix.sparse.RowMajorSparseMatrix#randomSymmetric(int,double,java.util.Random)
	CALLEE: static org.la4j.matrix.sparse.CRSMatrix#randomSymmetric(int,double,java.util.Random)
CALLER: org.la4j.matrix.operation.MatrixMatrixOperation#partiallyApply(org.la4j.matrix.sparse.ColumnMajorSparseMatrix)
CALLER: org.la4j.linear.LeastSquaresSolver#applicableTo(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
CALLER: org.la4j.matrix.AbstractMatrix#toColumnVector()
	CALLEE: org.la4j.matrix.AbstractMatrix#toColumnVector(org.la4j.factory.Factory)
CALLER: static org.la4j.matrix.dense.DenseMatrix#zero(int,int)
	CALLEE: static org.la4j.matrix.dense.Basic2DMatrix#zero(int,int)
CALLER: static org.la4j.matrix.dense.Basic1DMatrix#block(org.la4j.matrix.Matrix,org.la4j.matrix.Matrix,org.la4j.matrix.Matrix,org.la4j.matrix.Matrix)
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
CALLER: org.la4j.matrix.AbstractMatrix#multiplyByItsTranspose()
	CALLEE: org.la4j.matrix.AbstractMatrix#fail(java.lang.String)
	CALLEE: org.la4j.factory.Basic1DFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.Basic2DFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.CRSFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.CCSFactory#createMatrix(int,int)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#set(int,int,double)
CALLER: org.la4j.factory.Basic2DFactory#createMatrix()
	CALLEE: static org.la4j.matrix.dense.Basic2DMatrix#zero(int,int)
CALLER: org.la4j.iterator.RowMajorMatrixIterator#orElseAdd(org.la4j.iterator.RowMajorMatrixIterator)
	CALLEE: org.la4j.iterator.CursorIterator#orElse(org.la4j.iterator.CursorIterator,org.la4j.iterator.JoinFunction)
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#<init>(org.la4j.iterator.CursorIterator,int,int)
CALLER: static org.la4j.matrix.Matrices#asMatrix3x3(double[])
CALLER: org.la4j.io.MatrixMarketStream#writeDenseVector(org.la4j.vector.dense.DenseVector)
	CALLEE: org.la4j.vector.AbstractVector#length()
	CALLEE: org.la4j.vector.dense.BasicVector#get(int)
CALLER: org.la4j.vector.operation.VectorMatrixOperation#partiallyApply(org.la4j.vector.sparse.SparseVector)
CALLER: org.la4j.vector.dense.BasicVector#<init>(org.la4j.vector.Vector)
	CALLEE: static org.la4j.vector.Vectors#asVectorSource(org.la4j.vector.Vector)
	CALLEE: org.la4j.vector.dense.BasicVector#<init>(org.la4j.vector.source.VectorSource)
CALLER: org.la4j.iterator.VectorIterator#orElseSubtract(org.la4j.iterator.VectorIterator)
	CALLEE: org.la4j.iterator.CursorIterator#orElse(org.la4j.iterator.CursorIterator,org.la4j.iterator.JoinFunction)
	CALLEE: org.la4j.iterator.CursorToVectorIterator#<init>(org.la4j.iterator.CursorIterator,int)
CALLER: org.la4j.matrix.operation.inplace.InPlaceCopyMatrixToMatrix#apply(org.la4j.matrix.sparse.ColumnMajorSparseMatrix,org.la4j.matrix.sparse.ColumnMajorSparseMatrix)
	CALLEE: org.la4j.matrix.operation.inplace.InPlaceCopyMatrixToMatrix#fromSparseToMatrix(org.la4j.matrix.sparse.SparseMatrix,org.la4j.matrix.Matrix)
CALLER: org.la4j.vector.operation.ooplace.OoPlaceVectorsSubtraction#apply(org.la4j.vector.dense.DenseVector,org.la4j.vector.sparse.SparseVector)
	CALLEE: org.la4j.vector.operation.ooplace.OoPlaceVectorsSubtraction#apply(org.la4j.vector.dense.DenseVector,org.la4j.vector.sparse.SparseVector)
CALLER: org.la4j.vector.AbstractVector#add(org.la4j.vector.Vector,org.la4j.factory.Factory)
	CALLEE: org.la4j.vector.AbstractVector#ensureFactoryIsNotNull(org.la4j.factory.Factory)
	CALLEE: org.la4j.vector.AbstractVector#add(org.la4j.vector.Vector)
	CALLEE: static org.la4j.factory.Factory#asVectorFactory(org.la4j.factory.Factory)
	CALLEE: org.la4j.vector.sparse.CompressedVector#to(org.la4j.vector.VectorFactory)
	CALLEE: org.la4j.vector.dense.BasicVector#to(org.la4j.vector.VectorFactory)
CALLER: static org.la4j.matrix.sparse.CCSMatrix#random(int,int,double,java.util.Random)
CALLER: static org.la4j.matrix.dense.Basic2DMatrix#zero(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#<init>(int,int)
CALLER: org.la4j.matrix.AbstractMatrix#hashCode()
	CALLEE: org.la4j.matrix.AbstractMatrix#iterator()
	CALLEE: org.la4j.matrix.sparse.ColumnMajorSparseMatrix#iterator()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#next()
CALLER: org.la4j.decomposition.QRDecompositor#decompose(org.la4j.factory.Factory)
	CALLEE: org.la4j.decomposition.RawQRDecompositor#decompose(org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#blank(org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
	CALLEE: static org.la4j.matrix.Matrices#asPlusFunction(double)
	CALLEE: org.la4j.matrix.AbstractMatrix#update(int,int,org.la4j.matrix.functor.MatrixFunction)
CALLER: org.la4j.io.SymbolSeparatedStream#readVector(org.la4j.factory.Factory)
	CALLEE: org.la4j.io.AbstractStream#ensureReaderInitialized()
	CALLEE: org.la4j.factory.BasicFactory#createVector(int)
	CALLEE: org.la4j.factory.CompressedFactory#createVector(int)
	CALLEE: org.la4j.vector.AbstractVector#length()
	CALLEE: org.la4j.vector.sparse.CompressedVector#copyOfLength(int)
	CALLEE: org.la4j.vector.dense.BasicVector#copyOfLength(int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#set(int,double)
	CALLEE: org.la4j.vector.dense.BasicVector#set(int,double)
	CALLEE: org.la4j.io.AbstractStream#closeReader()
CALLER: org.la4j.io.SymbolSeparatedStream#writeMatrix(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.io.AbstractStream#ensureWriterInitialized()
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
	CALLEE: org.la4j.io.AbstractStream#closeWriter()
CALLER: static org.la4j.matrix.sparse.SparseMatrix#from1DArray(int,int,double[])
	CALLEE: static org.la4j.matrix.sparse.CRSMatrix#from1DArray(int,int,double[])
CALLER: org.la4j.factory.Basic2DFactory#createMatrix(org.la4j.matrix.source.MatrixSource)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#<init>(org.la4j.matrix.source.MatrixSource)
CALLER: org.la4j.linear.GaussianSolver#<init>(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.linear.AbstractSolver#<init>(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.linear.AbstractSolver#unknowns()
	CALLEE: org.la4j.matrix.AbstractMatrix#resizeColumns(int)
CALLER: org.la4j.vector.AbstractVector#ensureLengthIsCorrect(int)
	CALLEE: org.la4j.vector.AbstractVector#fail(java.lang.String)
CALLER: org.la4j.matrix.AbstractMatrix#foldColumns(org.la4j.vector.functor.VectorAccumulator)
	CALLEE: org.la4j.matrix.AbstractMatrix#foldColumn(int,org.la4j.vector.functor.VectorAccumulator)
CALLER: static org.la4j.matrix.Matrices#asModFunction(double)
CALLER: org.la4j.matrix.operation.ooplace.OoPlaceMatrixByVectorMultiplication#apply(org.la4j.matrix.dense.DenseMatrix,org.la4j.vector.dense.DenseVector)
	CALLEE: org.la4j.matrix.operation.ooplace.OoPlaceMatrixByVectorMultiplication#apply(org.la4j.matrix.dense.DenseMatrix,org.la4j.vector.dense.DenseVector)
CALLER: org.la4j.iterator.VectorIterator#cursor()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#index()
CALLER: org.la4j.matrix.AbstractMatrix#equals(java.lang.Object)
	CALLEE: org.la4j.matrix.AbstractMatrix#equals(org.la4j.matrix.Matrix,double)
CALLER: static org.la4j.matrix.sparse.ColumnMajorSparseMatrix#diagonal(int,double)
	CALLEE: static org.la4j.matrix.sparse.CCSMatrix#diagonal(int,double)
CALLER: org.la4j.vector.AbstractVector#manhattanNorm()
	CALLEE: static org.la4j.vector.Vectors#mkManhattanNormAccumulator()
	CALLEE: org.la4j.vector.AbstractVector#fold(org.la4j.vector.functor.VectorAccumulator)
CALLER: org.la4j.vector.sparse.SparseVector#manhattanNorm()
	CALLEE: static org.la4j.vector.Vectors#mkManhattanNormAccumulator()
	CALLEE: org.la4j.vector.sparse.SparseVector#foldNonZero(org.la4j.vector.functor.VectorAccumulator)
CALLER: org.la4j.matrix.AbstractMatrix#kroneckerProduct(org.la4j.matrix.Matrix,org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#ensureFactoryIsNotNull(org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#kroneckerProduct(org.la4j.matrix.Matrix)
	CALLEE: static org.la4j.factory.Factory#asMatrixFactory(org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#to(org.la4j.matrix.MatrixFactory)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#to(org.la4j.matrix.MatrixFactory)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#to(org.la4j.matrix.MatrixFactory)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#to(org.la4j.matrix.MatrixFactory)
CALLER: org.la4j.matrix.AbstractMatrix#equals(org.la4j.matrix.Matrix,double)
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
CALLER: org.la4j.matrix.sparse.ColumnMajorSparseMatrix#iterator()
	CALLEE: org.la4j.matrix.sparse.ColumnMajorSparseMatrix#iterator()
CALLER: org.la4j.matrix.AbstractMatrix#rank()
	CALLEE: org.la4j.decomposition.RawQRDecompositor#decompose(org.la4j.factory.Factory)
	CALLEE: org.la4j.decomposition.QRDecompositor#decompose(org.la4j.factory.Factory)
	CALLEE: org.la4j.decomposition.CholeskyDecompositor#decompose(org.la4j.factory.Factory)
	CALLEE: org.la4j.decomposition.RawLUDecompositor#decompose(org.la4j.factory.Factory)
	CALLEE: org.la4j.decomposition.LUDecompositor#decompose(org.la4j.factory.Factory)
	CALLEE: org.la4j.decomposition.EigenDecompositor#decompose(org.la4j.factory.Factory)
	CALLEE: org.la4j.decomposition.SingularValueDecompositor#decompose(org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
CALLER: static org.la4j.matrix.dense.Basic1DMatrix#random(int,int,java.util.Random)
CALLER: static org.la4j.matrix.sparse.CRSMatrix#random(int,int,double,java.util.Random)
CALLER: org.la4j.matrix.operation.inplace.InPlaceCopyMatrixToMatrix#applySimple(org.la4j.matrix.dense.DenseMatrix,org.la4j.matrix.sparse.SparseMatrix)
	CALLEE: org.la4j.matrix.operation.inplace.InPlaceCopyMatrixToMatrix#applySimple(org.la4j.matrix.dense.DenseMatrix,org.la4j.matrix.sparse.SparseMatrix)
CALLER: org.la4j.factory.CRSFactory#createIdentityMatrix(int)
	CALLEE: static org.la4j.matrix.sparse.CRSMatrix#identity(int)
CALLER: static org.la4j.matrix.sparse.RowMajorSparseMatrix#identity(int)
	CALLEE: static org.la4j.matrix.sparse.CRSMatrix#identity(int)
CALLER: org.la4j.vector.operation.ooplace.OoPlaceInnerProduct#dot(org.la4j.vector.Vector)
CALLER: org.la4j.matrix.sparse.ColumnMajorSparseMatrix#apply(org.la4j.matrix.operation.MatrixVectorOperation,org.la4j.vector.Vector)
	CALLEE: org.la4j.matrix.operation.MatrixVectorOperation#partiallyApply(org.la4j.matrix.sparse.ColumnMajorSparseMatrix)
	CALLEE: org.la4j.vector.sparse.SparseVector#apply(org.la4j.vector.operation.VectorOperation)
	CALLEE: org.la4j.vector.dense.DenseVector#apply(org.la4j.vector.operation.VectorOperation)
CALLER: org.la4j.vector.AbstractVector#resize(int,org.la4j.factory.Factory)
	CALLEE: org.la4j.vector.sparse.CompressedVector#copyOfLength(int)
	CALLEE: org.la4j.vector.dense.BasicVector#copyOfLength(int)
	CALLEE: static org.la4j.factory.Factory#asVectorFactory(org.la4j.factory.Factory)
	CALLEE: org.la4j.vector.sparse.CompressedVector#to(org.la4j.vector.VectorFactory)
	CALLEE: org.la4j.vector.dense.BasicVector#to(org.la4j.vector.VectorFactory)
CALLER: org.la4j.decomposition.CholeskyDecompositor#decompose(org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
	CALLEE: org.la4j.factory.Basic1DFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.Basic2DFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.CRSFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.CCSFactory#createMatrix(int,int)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#set(int,int,double)
CALLER: org.la4j.matrix.AbstractMatrix#foldRows(org.la4j.matrix.functor.MatrixAccumulator)
	CALLEE: org.la4j.factory.BasicFactory#createVector(int)
	CALLEE: org.la4j.factory.CompressedFactory#createVector(int)
	CALLEE: org.la4j.matrix.AbstractMatrix#foldRow(int,org.la4j.matrix.functor.MatrixAccumulator)
	CALLEE: org.la4j.vector.sparse.CompressedVector#set(int,double)
	CALLEE: org.la4j.vector.dense.BasicVector#set(int,double)
CALLER: org.la4j.matrix.sparse.SparseMatrix#get(int,int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#getOrElse(int,int,double)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#getOrElse(int,int,double)
CALLER: static org.la4j.matrix.sparse.ColumnMajorSparseMatrix#random(int,int,double,java.util.Random)
	CALLEE: static org.la4j.matrix.sparse.CCSMatrix#random(int,int,double,java.util.Random)
CALLER: static org.la4j.matrix.Matrices#asArray1DSource(int,int,double[])
CALLER: org.la4j.matrix.sparse.CRSMatrix#insert(int,int,int,double)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#growUp()
CALLER: static org.la4j.matrix.Matrices#asSumAccumulator(double)
CALLER: static org.la4j.matrix.sparse.RowMajorSparseMatrix#random(int,int,double,java.util.Random)
	CALLEE: static org.la4j.matrix.sparse.CRSMatrix#random(int,int,double,java.util.Random)
CALLER: org.la4j.vector.AbstractVector#resize(int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#copyOfLength(int)
	CALLEE: org.la4j.vector.dense.BasicVector#copyOfLength(int)
CALLER: static org.la4j.matrix.sparse.ColumnMajorSparseMatrix#identity(int)
	CALLEE: static org.la4j.matrix.sparse.CCSMatrix#identity(int)
CALLER: org.la4j.vector.operation.ooplace.OoPlaceOuterProduct#apply(org.la4j.vector.dense.DenseVector,org.la4j.vector.dense.DenseVector)
	CALLEE: org.la4j.vector.AbstractVector#length()
	CALLEE: static org.la4j.matrix.dense.DenseMatrix#zero(int,int)
	CALLEE: org.la4j.vector.dense.BasicVector#get(int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#set(int,int,double)
CALLER: static org.la4j.matrix.Matrices#asProductFunctionAccumulator(double,org.la4j.matrix.functor.MatrixFunction)
CALLER: org.la4j.matrix.AbstractMatrix#subtract(double)
	CALLEE: org.la4j.matrix.AbstractMatrix#add(double)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#add(double)
CALLER: org.la4j.vector.operation.ooplace.OoPlaceOuterProduct#apply(org.la4j.vector.sparse.SparseVector,org.la4j.vector.sparse.SparseVector)
	CALLEE: org.la4j.vector.AbstractVector#length()
	CALLEE: static org.la4j.matrix.sparse.CRSMatrix#zero(int,int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#nonZeroIterator()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#next()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#index()
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#set(int,int,double)
CALLER: static org.la4j.matrix.dense.Basic2DMatrix#block(org.la4j.matrix.Matrix,org.la4j.matrix.Matrix,org.la4j.matrix.Matrix,org.la4j.matrix.Matrix)
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
CALLER: org.la4j.vector.operation.ooplace.OoPlaceOuterProduct#apply(org.la4j.vector.dense.DenseVector,org.la4j.vector.sparse.SparseVector)
	CALLEE: org.la4j.vector.operation.ooplace.OoPlaceOuterProduct#apply(org.la4j.vector.dense.DenseVector,org.la4j.vector.sparse.SparseVector)
CALLER: org.la4j.matrix.sparse.CCSMatrix#<init>(int,int,int)
	CALLEE: org.la4j.matrix.sparse.ColumnMajorSparseMatrix#<init>(org.la4j.factory.Factory,int,int)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#ensureCardinalityIsCorrect(long,long,long)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#align(int)
CALLER: static org.la4j.matrix.Matrices#asProductAccumulator(double)
CALLER: org.la4j.matrix.sparse.ColumnMajorSparseMatrix#apply(org.la4j.matrix.operation.MatrixMatrixOperation,org.la4j.matrix.Matrix)
	CALLEE: org.la4j.matrix.operation.MatrixMatrixOperation#partiallyApply(org.la4j.matrix.sparse.ColumnMajorSparseMatrix)
	CALLEE: org.la4j.matrix.sparse.ColumnMajorSparseMatrix#apply(org.la4j.matrix.operation.MatrixOperation)
	CALLEE: org.la4j.matrix.sparse.RowMajorSparseMatrix#apply(org.la4j.matrix.operation.MatrixOperation)
	CALLEE: org.la4j.matrix.dense.DenseMatrix#apply(org.la4j.matrix.operation.MatrixOperation)
CALLER: org.la4j.matrix.sparse.SparseMatrix#eachNonZeroInRow(int,org.la4j.matrix.functor.MatrixProcedure)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#eachNonZeroInRow(int,org.la4j.vector.functor.VectorProcedure)
CALLER: org.la4j.matrix.sparse.CRSMatrix#eachNonZeroInRow(int,org.la4j.matrix.functor.MatrixProcedure)
	CALLEE: org.la4j.io.MatrixMarketStream.SparseMatrixWriteProcedure#apply(int,int,double)
CALLER: org.la4j.vector.sparse.SparseVector#to(org.la4j.vector.VectorFactory)
	CALLEE: org.la4j.vector.sparse.CompressedVector#nonZeroIterator()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#next()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#index()
	CALLEE: org.la4j.vector.sparse.CompressedVector#set(int,double)
	CALLEE: org.la4j.vector.dense.BasicVector#set(int,double)
CALLER: org.la4j.vector.sparse.CompressedVector#to(org.la4j.vector.VectorFactory)
	CALLEE: org.la4j.vector.sparse.SparseVector#to(org.la4j.vector.VectorFactory)
CALLER: static org.la4j.matrix.Matrices#asMinusFunction(double)
CALLER: org.la4j.matrix.AbstractMatrix#blank(org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#ensureFactoryIsNotNull(org.la4j.factory.Factory)
	CALLEE: org.la4j.factory.Basic1DFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.Basic2DFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.CRSFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.CCSFactory#createMatrix(int,int)
CALLER: org.la4j.matrix.AbstractMatrix#select(int[],int[])
	CALLEE: org.la4j.matrix.AbstractMatrix#select(int[],int[],org.la4j.factory.Factory)
CALLER: org.la4j.matrix.sparse.CCSMatrix#select(int[],int[])
	CALLEE: org.la4j.matrix.AbstractMatrix#fail(java.lang.String)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#get(int,int)
CALLER: org.la4j.matrix.sparse.SparseMatrix#foldNonZeroInColumns(org.la4j.vector.functor.VectorAccumulator)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#foldNonZeroInColumn(int,org.la4j.vector.functor.VectorAccumulator)
CALLER: org.la4j.vector.sparse.CompressedVector#nonZeroIterator()
CALLER: org.la4j.io.MatrixMarketStream#readVector(org.la4j.factory.Factory)
	CALLEE: org.la4j.io.AbstractStream#ensureReaderInitialized()
	CALLEE: org.la4j.io.MatrixMarketStream#parseVector(org.la4j.factory.Factory)
	CALLEE: org.la4j.io.AbstractStream#closeReader()
CALLER: org.la4j.vector.operation.ooplace.OoPlaceHadamardProduct#apply(org.la4j.vector.dense.DenseVector,org.la4j.vector.dense.DenseVector)
	CALLEE: org.la4j.vector.AbstractVector#blank()
	CALLEE: org.la4j.vector.AbstractVector#length()
	CALLEE: org.la4j.vector.dense.BasicVector#get(int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#set(int,double)
	CALLEE: org.la4j.vector.dense.BasicVector#set(int,double)
CALLER: org.la4j.matrix.sparse.CCSMatrix#readExternal(java.io.ObjectInput)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#align(int)
CALLER: org.la4j.vector.operation.ooplace.OoPlaceVectorsSubtraction#apply(org.la4j.vector.dense.DenseVector,org.la4j.vector.dense.DenseVector)
	CALLEE: org.la4j.vector.AbstractVector#blank()
	CALLEE: org.la4j.vector.AbstractVector#length()
	CALLEE: org.la4j.vector.dense.BasicVector#get(int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#set(int,double)
	CALLEE: org.la4j.vector.dense.BasicVector#set(int,double)
CALLER: org.la4j.vector.operation.ooplace.OoPlaceVectorByMatrixMultiplication#apply(org.la4j.vector.sparse.SparseVector,org.la4j.matrix.dense.DenseMatrix)
	CALLEE: org.la4j.vector.operation.ooplace.OoPlaceVectorByMatrixMultiplication#apply(org.la4j.vector.sparse.SparseVector,org.la4j.matrix.dense.DenseMatrix)
CALLER: static org.la4j.vector.sparse.CompressedVector#zero(int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#<init>(int)
CALLER: org.la4j.vector.AbstractVector#multiply(double)
	CALLEE: org.la4j.vector.AbstractVector#iterator()
	CALLEE: org.la4j.vector.sparse.CompressedVector#iterator()
	CALLEE: org.la4j.vector.AbstractVector#blank()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#next()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#index()
	CALLEE: org.la4j.vector.sparse.CompressedVector#set(int,double)
	CALLEE: org.la4j.vector.dense.BasicVector#set(int,double)
CALLER: org.la4j.factory.Basic1DFactory#createIdentityMatrix(int)
	CALLEE: static org.la4j.matrix.dense.Basic1DMatrix#identity(int)
CALLER: org.la4j.matrix.AbstractMatrix#sum()
	CALLEE: static org.la4j.matrix.Matrices#asSumAccumulator(double)
	CALLEE: org.la4j.matrix.AbstractMatrix#fold(org.la4j.matrix.functor.MatrixAccumulator)
CALLER: static org.la4j.vector.Vectors#asArraySource(double[])
CALLER: org.la4j.matrix.AbstractMatrix#non(org.la4j.matrix.functor.AdvancedMatrixPredicate)
	CALLEE: org.la4j.matrix.AbstractMatrix#is(org.la4j.matrix.functor.AdvancedMatrixPredicate)
CALLER: org.la4j.matrix.AbstractMatrix#ensureFactoryIsNotNull(org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#ensureArgumentIsNotNull(java.lang.Object,java.lang.String)
CALLER: org.la4j.matrix.dense.Basic2DMatrix#getRow(int)
CALLER: org.la4j.matrix.sparse.CRSMatrix#iteratorOfNonZeroRows()
CALLER: org.la4j.matrix.AbstractMatrix#rotate()
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#blankOfShape(int,int)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#blankOfShape(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#blankOfShape(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#blankOfShape(int,int)
	CALLEE: org.la4j.matrix.sparse.ColumnMajorSparseMatrix#iterator()
	CALLEE: org.la4j.matrix.AbstractMatrix#iterator()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#rowIndex()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#rowIndex()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#columnIndex()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#columnIndex()
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#set(double)
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#set(double)
CALLER: org.la4j.matrix.sparse.RowMajorSparseMatrix#rotate()
	CALLEE: static org.la4j.matrix.sparse.ColumnMajorSparseMatrix#zero(int,int)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#nonZeroRowMajorIterator()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#rowIndex()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#rowIndex()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#columnIndex()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#columnIndex()
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#set(int,int,double)
CALLER: org.la4j.decomposition.EigenDecompositor#decomposeNonSymmetricMatrix(org.la4j.matrix.Matrix,org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#copy()
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
	CALLEE: org.la4j.factory.Basic1DFactory#createIdentityMatrix(int)
	CALLEE: org.la4j.factory.Basic2DFactory#createIdentityMatrix(int)
	CALLEE: org.la4j.factory.CRSFactory#createIdentityMatrix(int)
	CALLEE: org.la4j.factory.CCSFactory#createIdentityMatrix(int)
	CALLEE: org.la4j.factory.BasicFactory#createVector(int)
	CALLEE: org.la4j.factory.CompressedFactory#createVector(int)
	CALLEE: org.la4j.decomposition.EigenDecompositor#orthes(org.la4j.matrix.Matrix,org.la4j.matrix.Matrix,org.la4j.vector.Vector)
	CALLEE: org.la4j.decomposition.EigenDecompositor#hqr2(org.la4j.matrix.Matrix,org.la4j.matrix.Matrix,org.la4j.vector.Vector,org.la4j.vector.Vector)
	CALLEE: org.la4j.factory.Basic1DFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.Basic2DFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.CRSFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.CCSFactory#createMatrix(int,int)
	CALLEE: org.la4j.vector.sparse.SparseVector#get(int)
	CALLEE: org.la4j.vector.dense.BasicVector#get(int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#set(int,int,double)
CALLER: org.la4j.matrix.operation.SymmetricMatrixOperation#apply(org.la4j.matrix.dense.DenseMatrix,org.la4j.matrix.sparse.RowMajorSparseMatrix)
	CALLEE: org.la4j.matrix.operation.ooplace.OoPlaceMatricesAddition#applySymmetric(org.la4j.matrix.dense.DenseMatrix,org.la4j.matrix.sparse.SparseMatrix)
CALLER: org.la4j.vector.operation.ooplace.OoPlaceInnerProduct#apply(org.la4j.vector.dense.DenseVector,org.la4j.vector.sparse.SparseVector)
	CALLEE: org.la4j.vector.operation.ooplace.OoPlaceInnerProduct#apply(org.la4j.vector.dense.DenseVector,org.la4j.vector.sparse.SparseVector)
CALLER: org.la4j.matrix.AbstractMatrix#non(org.la4j.matrix.functor.MatrixPredicate)
	CALLEE: org.la4j.matrix.AbstractMatrix#is(org.la4j.matrix.functor.MatrixPredicate)
CALLER: static org.la4j.vector.dense.DenseVector#zero(int)
	CALLEE: static org.la4j.vector.dense.BasicVector#zero(int)
CALLER: org.la4j.matrix.AbstractMatrix#transpose()
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#blankOfShape(int,int)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#blankOfShape(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#blankOfShape(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#blankOfShape(int,int)
	CALLEE: org.la4j.matrix.sparse.ColumnMajorSparseMatrix#iterator()
	CALLEE: org.la4j.matrix.AbstractMatrix#iterator()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#rowIndex()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#rowIndex()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#columnIndex()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#columnIndex()
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#set(double)
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#set(double)
CALLER: org.la4j.matrix.sparse.ColumnMajorSparseMatrix#transpose()
	CALLEE: static org.la4j.matrix.sparse.RowMajorSparseMatrix#zero(int,int)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#nonZeroColumnMajorIterator()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#rowIndex()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#rowIndex()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#columnIndex()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#columnIndex()
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#set(int,int,double)
CALLER: org.la4j.matrix.sparse.RowMajorSparseMatrix#transpose()
	CALLEE: static org.la4j.matrix.sparse.ColumnMajorSparseMatrix#zero(int,int)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#nonZeroRowMajorIterator()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#rowIndex()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#rowIndex()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#columnIndex()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#columnIndex()
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#set(int,int,double)
CALLER: org.la4j.matrix.sparse.CRSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.AbstractMatrix#ensureIndexesAreInBounds(int,int)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#searchForColumnIndex(int,int,int)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#remove(int,int)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#insert(int,int,int,double)
CALLER: org.la4j.matrix.AbstractMatrix#power(int,org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#power(int)
	CALLEE: static org.la4j.factory.Factory#asMatrixFactory(org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#to(org.la4j.matrix.MatrixFactory)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#to(org.la4j.matrix.MatrixFactory)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#to(org.la4j.matrix.MatrixFactory)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#to(org.la4j.matrix.MatrixFactory)
CALLER: org.la4j.iterator.RowMajorMatrixIterator#<init>(int,int)
	CALLEE: org.la4j.iterator.MatrixIterator#<init>(int,int)
CALLER: static org.la4j.matrix.Matrices#mkMinAccumulator()
CALLER: static org.la4j.matrix.dense.Basic2DMatrix#unit(int,int)
	CALLEE: static org.la4j.matrix.dense.Basic2DMatrix#constant(int,int,double)
CALLER: org.la4j.matrix.AbstractMatrix#insert(org.la4j.matrix.Matrix,int,int,int,int,int,int)
	CALLEE: org.la4j.matrix.AbstractMatrix#ensureArgumentIsNotNull(java.lang.Object,java.lang.String)
	CALLEE: org.la4j.matrix.AbstractMatrix#fail(java.lang.String)
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
	CALLEE: org.la4j.matrix.AbstractMatrix#copy()
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#set(int,int,double)
CALLER: org.la4j.matrix.sparse.CRSMatrix#<init>(int,int)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#<init>(int,int,int)
CALLER: org.la4j.decomposition.RawLUDecompositor#applicableTo(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
CALLER: org.la4j.vector.sparse.CompressedVector#getOrElse(int,double)
	CALLEE: org.la4j.vector.sparse.SparseVector#ensureIndexIsInBounds(int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#searchForIndex(int)
CALLER: org.la4j.matrix.operation.inplace.InPlaceCopyMatrixToMatrix#apply(org.la4j.matrix.dense.DenseMatrix,org.la4j.matrix.dense.DenseMatrix)
	CALLEE: org.la4j.matrix.operation.inplace.InPlaceCopyMatrixToMatrix#apply(org.la4j.matrix.dense.DenseMatrix,org.la4j.matrix.dense.DenseMatrix)
CALLER: org.la4j.io.MatrixMarketStream#parseSparseVector(org.la4j.factory.Factory)
	CALLEE: org.la4j.io.MatrixMarketStream#nextToken()
	CALLEE: org.la4j.factory.BasicFactory#createVector(int)
	CALLEE: org.la4j.factory.CompressedFactory#createVector(int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#set(int,double)
	CALLEE: org.la4j.vector.dense.BasicVector#set(int,double)
CALLER: static org.la4j.matrix.Matrices#asConstFunction(double)
CALLER: org.la4j.linear.GaussianSolver#triangularizeWithPivoting(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.AbstractMatrix#swapRows(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#swapRows(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#swapRows(int,int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
	CALLEE: static org.la4j.matrix.Matrices#asMinusFunction(double)
	CALLEE: org.la4j.matrix.AbstractMatrix#update(int,int,org.la4j.matrix.functor.MatrixFunction)
CALLER: static org.la4j.matrix.dense.DenseMatrix#constant(int,int,double)
	CALLEE: static org.la4j.matrix.dense.Basic2DMatrix#constant(int,int,double)
CALLER: org.la4j.matrix.sparse.CCSMatrix#<init>(org.la4j.matrix.Matrix)
	CALLEE: static org.la4j.matrix.Matrices#asMatrixSource(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#<init>(org.la4j.matrix.source.MatrixSource)
CALLER: org.la4j.matrix.dense.Basic1DMatrix#<init>(org.la4j.matrix.Matrix)
	CALLEE: static org.la4j.matrix.Matrices#asMatrixSource(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#<init>(org.la4j.matrix.source.MatrixSource)
CALLER: org.la4j.vector.operation.ooplace.OoPlaceVectorByMatrixMultiplication#apply(org.la4j.vector.dense.DenseVector,org.la4j.matrix.sparse.RowMajorSparseMatrix)
	CALLEE: org.la4j.vector.operation.ooplace.OoPlaceVectorByMatrixMultiplication#apply(org.la4j.vector.dense.DenseVector,org.la4j.matrix.sparse.RowMajorSparseMatrix)
CALLER: org.la4j.decomposition.SingularValueDecompositor#<init>(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.decomposition.AbstractDecompositor#<init>(org.la4j.matrix.Matrix)
CALLER: static org.la4j.matrix.sparse.CRSMatrix#identity(int)
	CALLEE: static org.la4j.matrix.sparse.CRSMatrix#diagonal(int,double)
CALLER: static org.la4j.vector.Vectors#asRandomSource(int,java.util.Random)
	CALLEE: org.la4j.vector.source.RandomVectorSource#<init>(int,java.util.Random)
CALLER: org.la4j.factory.Basic1DFactory#createSquareMatrix(int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#<init>(int,int)
CALLER: org.la4j.matrix.dense.DenseMatrix#apply(org.la4j.matrix.operation.MatrixMatrixOperation,org.la4j.matrix.Matrix)
	CALLEE: org.la4j.matrix.operation.MatrixMatrixOperation#partiallyApply(org.la4j.matrix.dense.DenseMatrix)
	CALLEE: org.la4j.matrix.sparse.ColumnMajorSparseMatrix#apply(org.la4j.matrix.operation.MatrixOperation)
	CALLEE: org.la4j.matrix.sparse.RowMajorSparseMatrix#apply(org.la4j.matrix.operation.MatrixOperation)
	CALLEE: org.la4j.matrix.dense.DenseMatrix#apply(org.la4j.matrix.operation.MatrixOperation)
CALLER: org.la4j.matrix.sparse.SparseMatrix#foldNonZero(org.la4j.matrix.functor.MatrixAccumulator)
	CALLEE: static org.la4j.matrix.Matrices#asAccumulatorProcedure(org.la4j.matrix.functor.MatrixAccumulator)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#eachNonZero(org.la4j.matrix.functor.MatrixProcedure)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#eachNonZero(org.la4j.matrix.functor.MatrixProcedure)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#eachNonZero(org.la4j.matrix.functor.MatrixProcedure)
CALLER: org.la4j.vector.AbstractVector#ensureArgumentIsNotNull(java.lang.Object,java.lang.String)
	CALLEE: org.la4j.vector.AbstractVector#fail(java.lang.String)
CALLER: org.la4j.matrix.sparse.CCSMatrix#to(org.la4j.matrix.MatrixFactory)
	CALLEE: org.la4j.matrix.AbstractMatrix#to(org.la4j.matrix.MatrixFactory)
CALLER: org.la4j.matrix.dense.DenseMatrix#getRow(int)
	CALLEE: static org.la4j.vector.dense.DenseVector#zero(int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#set(int,double)
	CALLEE: org.la4j.vector.dense.BasicVector#set(int,double)
CALLER: org.la4j.iterator.RowMajorMatrixIterator#orElseSubtract(org.la4j.iterator.RowMajorMatrixIterator)
	CALLEE: org.la4j.iterator.CursorIterator#orElse(org.la4j.iterator.CursorIterator,org.la4j.iterator.JoinFunction)
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#<init>(org.la4j.iterator.CursorIterator,int,int)
CALLER: org.la4j.matrix.AbstractMatrix#update(int,int,org.la4j.matrix.functor.MatrixFunction)
	CALLEE: org.la4j.matrix.AbstractMatrix#updateAt(int,int,org.la4j.matrix.functor.MatrixFunction)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#updateAt(int,int,org.la4j.matrix.functor.MatrixFunction)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#updateAt(int,int,org.la4j.matrix.functor.MatrixFunction)
CALLER: org.la4j.matrix.operation.MatrixMatrixOperation#partiallyApply(org.la4j.matrix.sparse.RowMajorSparseMatrix)
CALLER: org.la4j.vector.sparse.SparseVector#toDiagonalMatrix()
	CALLEE: org.la4j.vector.sparse.CompressedVector#nonZeroIterator()
	CALLEE: static org.la4j.matrix.sparse.RowMajorSparseMatrix#zero(int,int)
	CALLEE: org.la4j.iterator.CursorToVectorIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#next()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#index()
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#set(int,int,double)
CALLER: org.la4j.factory.CRSFactory#createMatrix()
	CALLEE: static org.la4j.matrix.sparse.CRSMatrix#zero(int,int)
CALLER: org.la4j.vector.operation.ooplace.OoPlaceVectorsSubtraction#apply(org.la4j.vector.sparse.SparseVector,org.la4j.vector.sparse.SparseVector)
	CALLEE: org.la4j.vector.sparse.CompressedVector#nonZeroIterator()
	CALLEE: org.la4j.iterator.VectorIterator#orElseSubtract(org.la4j.iterator.VectorIterator)
	CALLEE: org.la4j.vector.AbstractVector#blank()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#next()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#index()
	CALLEE: org.la4j.vector.sparse.CompressedVector#set(int,double)
	CALLEE: org.la4j.vector.dense.BasicVector#set(int,double)
CALLER: org.la4j.iterator.CursorToVectorIterator#index()
	CALLEE: org.la4j.iterator.VectorIterator#cursor()
	CALLEE: org.la4j.iterator.RowMajorMatrixIterator#cursor()
	CALLEE: org.la4j.iterator.ColumnMajorMatrixIterator#cursor()
CALLER: org.la4j.iterator.ColumnMajorMatrixIterator#cursor()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#columnIndex()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#rowIndex()
CALLER: org.la4j.iterator.CursorToColumnMajorMatrixIterator#<init>(org.la4j.iterator.CursorIterator,int,int)
	CALLEE: org.la4j.iterator.ColumnMajorMatrixIterator#<init>(int,int)
CALLER: org.la4j.factory.CCSFactory#createMatrix(org.la4j.matrix.source.MatrixSource)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#<init>(org.la4j.matrix.source.MatrixSource)
CALLER: org.la4j.factory.CompressedFactory#createVector(org.la4j.vector.source.VectorSource)
	CALLEE: org.la4j.vector.sparse.CompressedVector#<init>(org.la4j.vector.source.VectorSource)
CALLER: org.la4j.matrix.dense.Basic2DMatrix#<init>()
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#<init>(int,int)
CALLER: static org.la4j.matrix.Matrices#asSumFunctionAccumulator(double,org.la4j.matrix.functor.MatrixFunction)
CALLER: org.la4j.decomposition.EigenDecompositor#decompose(org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#is(org.la4j.matrix.functor.AdvancedMatrixPredicate)
	CALLEE: org.la4j.decomposition.EigenDecompositor#decomposeSymmetricMatrix(org.la4j.matrix.Matrix,org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
	CALLEE: org.la4j.decomposition.EigenDecompositor#decomposeNonSymmetricMatrix(org.la4j.matrix.Matrix,org.la4j.factory.Factory)
CALLER: org.la4j.vector.operation.ooplace.OoPlaceVectorByMatrixMultiplication#apply(org.la4j.vector.dense.DenseVector,org.la4j.matrix.dense.DenseMatrix)
	CALLEE: org.la4j.vector.operation.ooplace.OoPlaceVectorByMatrixMultiplication#apply(org.la4j.vector.dense.DenseVector,org.la4j.matrix.dense.DenseMatrix)
CALLER: org.la4j.io.MatrixMarketStream#readMatrix()
	CALLEE: org.la4j.io.MatrixMarketStream#readMatrix(org.la4j.factory.Factory)
CALLER: org.la4j.io.MatrixMarketStream#readMatrix(org.la4j.factory.Factory)
	CALLEE: org.la4j.io.AbstractStream#ensureReaderInitialized()
	CALLEE: org.la4j.io.MatrixMarketStream#parseMatrix(org.la4j.factory.Factory)
	CALLEE: org.la4j.io.AbstractStream#closeReader()
CALLER: static org.la4j.matrix.sparse.SparseMatrix#diagonal(int,double)
	CALLEE: static org.la4j.matrix.sparse.CRSMatrix#diagonal(int,double)
CALLER: static org.la4j.vector.Vectors#asSymbolSeparatedSource(java.io.InputStream,java.lang.String)
	CALLEE: org.la4j.io.SymbolSeparatedStream#<init>(java.io.InputStream,java.lang.String)
	CALLEE: org.la4j.vector.source.StreamVectorSource#<init>(org.la4j.io.VectorStream)
CALLER: org.la4j.vector.sparse.CompressedVector#align(int,int)
	CALLEE: org.la4j.vector.AbstractVector#fail(java.lang.String)
CALLER: org.la4j.vector.AbstractVector#outerProduct(org.la4j.vector.Vector)
	CALLEE: org.la4j.vector.sparse.SparseVector#apply(org.la4j.vector.operation.VectorVectorOperation,org.la4j.vector.Vector)
	CALLEE: org.la4j.vector.dense.DenseVector#apply(org.la4j.vector.operation.VectorVectorOperation,org.la4j.vector.Vector)
CALLER: static org.la4j.matrix.dense.Basic1DMatrix#identity(int)
	CALLEE: static org.la4j.matrix.dense.Basic1DMatrix#diagonal(int,double)
CALLER: static org.la4j.matrix.dense.Basic2DMatrix#diagonal(int,double)
CALLER: org.la4j.vector.AbstractVector#outerProduct(org.la4j.vector.Vector,org.la4j.factory.Factory)
	CALLEE: org.la4j.vector.AbstractVector#outerProduct(org.la4j.vector.Vector)
	CALLEE: static org.la4j.factory.Factory#asMatrixFactory(org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#to(org.la4j.matrix.MatrixFactory)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#to(org.la4j.matrix.MatrixFactory)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#to(org.la4j.matrix.MatrixFactory)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#to(org.la4j.matrix.MatrixFactory)
CALLER: org.la4j.io.MatrixMarketStream#<init>(java.io.OutputStream)
	CALLEE: org.la4j.io.AbstractStream#<init>(java.io.OutputStream)
CALLER: org.la4j.iterator.RowMajorMatrixIterator#cursor()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#rowIndex()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#columnIndex()
CALLER: org.la4j.matrix.sparse.CCSMatrix#copyOfShape(int,int)
	CALLEE: org.la4j.matrix.AbstractMatrix#ensureDimensionsAreCorrect(int,int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#align(int)
CALLER: org.la4j.vector.operation.ooplace.OoPlaceVectorsAddition#apply(org.la4j.vector.sparse.SparseVector,org.la4j.vector.dense.DenseVector)
	CALLEE: org.la4j.vector.operation.ooplace.OoPlaceVectorsAddition#apply(org.la4j.vector.dense.DenseVector,org.la4j.vector.sparse.SparseVector)
CALLER: org.la4j.vector.operation.ooplace.OoPlaceHadamardProduct#apply(org.la4j.vector.sparse.SparseVector,org.la4j.vector.dense.DenseVector)
	CALLEE: org.la4j.vector.operation.ooplace.OoPlaceHadamardProduct#apply(org.la4j.vector.sparse.SparseVector,org.la4j.vector.dense.DenseVector)
CALLER: org.la4j.io.SymbolSeparatedStream#<init>(java.io.OutputStream)
	CALLEE: org.la4j.io.SymbolSeparatedStream#<init>(java.io.OutputStream,java.lang.String)
CALLER: org.la4j.matrix.source.LoopbackMatrixSource#rows()
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
CALLER: org.la4j.matrix.source.LoopbackMatrixSource#columns()
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
CALLER: org.la4j.matrix.sparse.CCSMatrix#getOrElse(int,int,double)
	CALLEE: org.la4j.matrix.AbstractMatrix#ensureIndexesAreInBounds(int,int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#searchForRowIndex(int,int,int)
CALLER: org.la4j.factory.CRSFactory#createBlockMatrix(org.la4j.matrix.Matrix,org.la4j.matrix.Matrix,org.la4j.matrix.Matrix,org.la4j.matrix.Matrix)
	CALLEE: static org.la4j.matrix.sparse.CRSMatrix#block(org.la4j.matrix.Matrix,org.la4j.matrix.Matrix,org.la4j.matrix.Matrix,org.la4j.matrix.Matrix)
CALLER: org.la4j.factory.CRSFactory#createDiagonalMatrix(double[])
CALLER: org.la4j.matrix.source.StreamMatrixSource#get(int,int)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
CALLER: org.la4j.vector.AbstractVector#<init>(org.la4j.factory.Factory,int)
	CALLEE: org.la4j.vector.AbstractVector#ensureLengthIsCorrect(int)
CALLER: org.la4j.vector.AbstractVector#subtract(org.la4j.vector.Vector,org.la4j.factory.Factory)
	CALLEE: org.la4j.vector.AbstractVector#ensureFactoryIsNotNull(org.la4j.factory.Factory)
	CALLEE: org.la4j.vector.AbstractVector#subtract(org.la4j.vector.Vector)
	CALLEE: static org.la4j.factory.Factory#asVectorFactory(org.la4j.factory.Factory)
	CALLEE: org.la4j.vector.sparse.CompressedVector#to(org.la4j.vector.VectorFactory)
	CALLEE: org.la4j.vector.dense.BasicVector#to(org.la4j.vector.VectorFactory)
CALLER: org.la4j.factory.Basic1DFactory#createMatrix(int,int,double[])
	CALLEE: static org.la4j.matrix.dense.Basic1DMatrix#from1DArray(int,int,double[])
CALLER: org.la4j.matrix.operation.ooplace.OoPlaceMatrixByVectorMultiplication#apply(org.la4j.matrix.sparse.ColumnMajorSparseMatrix,org.la4j.vector.sparse.SparseVector)
	CALLEE: org.la4j.matrix.operation.ooplace.OoPlaceMatrixByVectorMultiplication#apply(org.la4j.matrix.sparse.ColumnMajorSparseMatrix,org.la4j.vector.sparse.SparseVector)
CALLER: static org.la4j.matrix.sparse.CCSMatrix#zero(int,int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#<init>(int,int)
CALLER: org.la4j.matrix.AbstractMatrix#foldRow(int,org.la4j.matrix.functor.MatrixAccumulator)
	CALLEE: static org.la4j.matrix.Matrices#asAccumulatorProcedure(org.la4j.matrix.functor.MatrixAccumulator)
	CALLEE: org.la4j.matrix.AbstractMatrix#eachInRow(int,org.la4j.matrix.functor.MatrixProcedure)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#eachInRow(int,org.la4j.matrix.functor.MatrixProcedure)
CALLER: org.la4j.io.SymbolSeparatedStream#<init>(java.io.InputStream,java.lang.String)
	CALLEE: org.la4j.io.AbstractStream#<init>(java.io.InputStream)
CALLER: org.la4j.iterator.CursorIterator#andAlso(org.la4j.iterator.CursorIterator,org.la4j.iterator.JoinFunction)
CALLER: org.la4j.decomposition.QRDecompositor#<init>(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.decomposition.RawQRDecompositor#<init>(org.la4j.matrix.Matrix)
CALLER: org.la4j.matrix.sparse.SparseMatrix#getRow(int)
	CALLEE: static org.la4j.vector.sparse.SparseVector#zero(int)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#nonZeroIteratorOfRow(int)
	CALLEE: org.la4j.iterator.CursorToVectorIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#next()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#index()
	CALLEE: org.la4j.vector.sparse.CompressedVector#set(int,double)
	CALLEE: org.la4j.vector.dense.BasicVector#set(int,double)
CALLER: org.la4j.matrix.sparse.CRSMatrix#getRow(int)
CALLER: org.la4j.io.MatrixMarketStream#parseSparseMatrix(org.la4j.factory.Factory)
	CALLEE: org.la4j.io.MatrixMarketStream#nextToken()
	CALLEE: org.la4j.factory.Basic1DFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.Basic2DFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.CRSFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.CCSFactory#createMatrix(int,int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#set(int,int,double)
CALLER: static org.la4j.matrix.sparse.CCSMatrix#from1DArray(int,int,double[])
	CALLEE: static org.la4j.matrix.sparse.CCSMatrix#zero(int,int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#set(int,int,double)
CALLER: org.la4j.matrix.sparse.ColumnMajorSparseMatrix#nonZeroIterator()
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#nonZeroColumnMajorIterator()
CALLER: org.la4j.vector.AbstractVector#subtract(org.la4j.vector.Vector)
	CALLEE: org.la4j.vector.AbstractVector#ensureArgumentIsNotNull(java.lang.Object,java.lang.String)
	CALLEE: org.la4j.vector.AbstractVector#ensureVectorIsSimilar(org.la4j.vector.Vector)
	CALLEE: org.la4j.vector.sparse.SparseVector#apply(org.la4j.vector.operation.VectorVectorOperation,org.la4j.vector.Vector)
	CALLEE: org.la4j.vector.dense.DenseVector#apply(org.la4j.vector.operation.VectorVectorOperation,org.la4j.vector.Vector)
CALLER: static org.la4j.matrix.dense.DenseMatrix#identity(int)
	CALLEE: static org.la4j.matrix.dense.Basic2DMatrix#identity(int)
CALLER: org.la4j.matrix.AbstractMatrix#sliceBottomRight(int,int)
	CALLEE: org.la4j.matrix.AbstractMatrix#slice(int,int,int,int,org.la4j.factory.Factory)
CALLER: org.la4j.matrix.sparse.CCSMatrix#eachInColumn(int,org.la4j.matrix.functor.MatrixProcedure)
	CALLEE: org.la4j.io.MatrixMarketStream.SparseMatrixWriteProcedure#apply(int,int,double)
CALLER: org.la4j.io.SymbolSeparatedStream#readMatrix()
	CALLEE: org.la4j.io.SymbolSeparatedStream#readMatrix(org.la4j.factory.Factory)
CALLER: static org.la4j.matrix.dense.Basic2DMatrix#identity(int)
	CALLEE: static org.la4j.matrix.dense.Basic2DMatrix#diagonal(int,double)
CALLER: org.la4j.matrix.AbstractMatrix#trace()
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
CALLER: org.la4j.vector.AbstractVector#copy()
	CALLEE: org.la4j.vector.sparse.CompressedVector#copyOfLength(int)
	CALLEE: org.la4j.vector.dense.BasicVector#copyOfLength(int)
CALLER: org.la4j.vector.AbstractVector#assign(double)
	CALLEE: org.la4j.vector.AbstractVector#setAll(double)
	CALLEE: org.la4j.vector.sparse.CompressedVector#setAll(double)
CALLER: org.la4j.matrix.operation.inplace.InPlaceCopyMatrixToMatrix#apply(org.la4j.matrix.sparse.RowMajorSparseMatrix,org.la4j.matrix.sparse.RowMajorSparseMatrix)
	CALLEE: org.la4j.matrix.operation.inplace.InPlaceCopyMatrixToMatrix#fromSparseToMatrix(org.la4j.matrix.sparse.SparseMatrix,org.la4j.matrix.Matrix)
CALLER: static org.la4j.vector.sparse.CompressedVector#fromArray(double[])
	CALLEE: static org.la4j.vector.sparse.CompressedVector#zero(int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#set(int,double)
CALLER: org.la4j.iterator.CursorToColumnMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#next()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#next()
CALLER: org.la4j.iterator.CursorToColumnMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#next()
CALLER: org.la4j.vector.AbstractVector#toRowMatrix(org.la4j.factory.Factory)
	CALLEE: org.la4j.factory.Basic1DFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.Basic2DFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.CRSFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.CCSFactory#createMatrix(int,int)
	CALLEE: org.la4j.matrix.AbstractMatrix#setRow(int,org.la4j.vector.Vector)
CALLER: org.la4j.matrix.operation.ooplace.OoPlaceMatricesAddition#applySymmetric(org.la4j.matrix.sparse.RowMajorSparseMatrix,org.la4j.matrix.sparse.ColumnMajorSparseMatrix)
	CALLEE: org.la4j.matrix.AbstractMatrix#blank()
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#nonZeroRowMajorIterator()
	CALLEE: org.la4j.iterator.RowMajorMatrixIterator#orElseAdd(org.la4j.iterator.RowMajorMatrixIterator)
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#rowIndex()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#rowIndex()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#columnIndex()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#columnIndex()
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#set(int,int,double)
CALLER: org.la4j.vector.sparse.CompressedVector#<init>(int,int)
	CALLEE: org.la4j.vector.sparse.SparseVector#<init>(int,int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#align(int,int)
CALLER: org.la4j.matrix.sparse.CCSMatrix#insert(int,int,int,double)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#growUp()
CALLER: org.la4j.vector.AbstractVector#infinityNorm()
	CALLEE: static org.la4j.vector.Vectors#mkInfinityNormAccumulator()
	CALLEE: org.la4j.vector.AbstractVector#fold(org.la4j.vector.functor.VectorAccumulator)
CALLER: org.la4j.matrix.AbstractMatrix#update(org.la4j.matrix.functor.MatrixFunction)
	CALLEE: org.la4j.matrix.AbstractMatrix#iterator()
	CALLEE: org.la4j.matrix.sparse.ColumnMajorSparseMatrix#iterator()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#rowIndex()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#rowIndex()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#columnIndex()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#columnIndex()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#set(double)
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#set(double)
CALLER: org.la4j.vector.operation.ooplace.OoPlaceVectorsAddition#apply(org.la4j.vector.sparse.SparseVector,org.la4j.vector.sparse.SparseVector)
	CALLEE: org.la4j.vector.sparse.CompressedVector#nonZeroIterator()
	CALLEE: org.la4j.iterator.VectorIterator#orElseAdd(org.la4j.iterator.VectorIterator)
	CALLEE: org.la4j.vector.AbstractVector#blank()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#next()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#index()
	CALLEE: org.la4j.vector.sparse.CompressedVector#set(int,double)
	CALLEE: org.la4j.vector.dense.BasicVector#set(int,double)
CALLER: static org.la4j.matrix.Matrices#asAccumulatorProcedure(org.la4j.matrix.functor.MatrixAccumulator)
CALLER: org.la4j.decomposition.CholeskyDecompositor#applicableTo(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
	CALLEE: org.la4j.matrix.AbstractMatrix#is(org.la4j.matrix.functor.AdvancedMatrixPredicate)
CALLER: org.la4j.decomposition.LUDecompositor#<init>(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.decomposition.RawLUDecompositor#<init>(org.la4j.matrix.Matrix)
CALLER: org.la4j.vector.AbstractVector#swap(int,int)
	CALLEE: org.la4j.vector.AbstractVector#swapElements(int,int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#swapElements(int,int)
	CALLEE: org.la4j.vector.dense.BasicVector#swapElements(int,int)
CALLER: org.la4j.matrix.operation.inplace.InPlaceCopyMatrixToMatrix#applySimple(org.la4j.matrix.sparse.SparseMatrix,org.la4j.matrix.dense.DenseMatrix)
	CALLEE: org.la4j.matrix.operation.inplace.InPlaceCopyMatrixToMatrix#applySimple(org.la4j.matrix.sparse.SparseMatrix,org.la4j.matrix.dense.DenseMatrix)
CALLER: org.la4j.iterator.CursorToRowMajorMatrixIterator#set(double)
	CALLEE: org.la4j.iterator.CursorToVectorIterator#set(double)
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#set(double)
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#set(double)
CALLER: org.la4j.matrix.AbstractMatrix#resize(int,int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#copyOfShape(int,int)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#copyOfShape(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#copyOfShape(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#copyOfShape(int,int)
CALLER: org.la4j.vector.operation.ooplace.OoPlaceOuterProduct#apply(org.la4j.vector.dense.DenseVector,org.la4j.vector.sparse.SparseVector)
	CALLEE: org.la4j.vector.AbstractVector#length()
	CALLEE: static org.la4j.matrix.sparse.CRSMatrix#zero(int,int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#nonZeroIterator()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#next()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#index()
	CALLEE: org.la4j.vector.dense.BasicVector#get(int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#set(int,int,double)
CALLER: org.la4j.vector.dense.DenseVector#toDiagonalMatrix()
	CALLEE: static org.la4j.matrix.dense.Basic2DMatrix#zero(int,int)
	CALLEE: org.la4j.vector.dense.BasicVector#get(int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#set(int,int,double)
CALLER: org.la4j.vector.AbstractVector#iterator()
	CALLEE: org.la4j.vector.AbstractVector#iterator()
	CALLEE: org.la4j.vector.sparse.CompressedVector#iterator()
CALLER: org.la4j.vector.sparse.CompressedVector#iterator()
	CALLEE: org.la4j.vector.sparse.CompressedVector#iterator()
CALLER: static org.la4j.matrix.Matrices#asMatrix4x4(double[])
CALLER: org.la4j.iterator.CursorToRowMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#hasNext()
CALLER: org.la4j.linear.GaussianSolver#applicableTo(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
CALLER: org.la4j.vector.sparse.SparseVector#euclideanNorm()
	CALLEE: static org.la4j.vector.Vectors#mkEuclideanNormAccumulator()
	CALLEE: org.la4j.vector.sparse.SparseVector#foldNonZero(org.la4j.vector.functor.VectorAccumulator)
CALLER: org.la4j.matrix.AbstractMatrix#eachInRow(int,org.la4j.vector.functor.VectorProcedure)
	CALLEE: org.la4j.matrix.AbstractMatrix#iteratorOfRow(int)
	CALLEE: org.la4j.iterator.CursorToVectorIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#next()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#index()
	CALLEE: org.la4j.io.MatrixMarketStream.SparseVectorWriteProcedure#apply(int,double)
CALLER: org.la4j.matrix.sparse.SparseMatrix#getColumn(int)
	CALLEE: static org.la4j.vector.sparse.SparseVector#zero(int)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#nonZeroIteratorOfColumn(int)
	CALLEE: org.la4j.iterator.CursorToVectorIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#next()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#index()
	CALLEE: org.la4j.vector.sparse.CompressedVector#set(int,double)
	CALLEE: org.la4j.vector.dense.BasicVector#set(int,double)
CALLER: org.la4j.matrix.AbstractMatrix#setColumn(int,org.la4j.vector.Vector)
	CALLEE: org.la4j.matrix.AbstractMatrix#ensureArgumentIsNotNull(java.lang.Object,java.lang.String)
	CALLEE: org.la4j.vector.AbstractVector#length()
	CALLEE: org.la4j.matrix.AbstractMatrix#fail(java.lang.String)
	CALLEE: org.la4j.vector.sparse.SparseVector#get(int)
	CALLEE: org.la4j.vector.dense.BasicVector#get(int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#set(int,int,double)
CALLER: static org.la4j.vector.dense.DenseVector#unit(int)
	CALLEE: static org.la4j.vector.dense.DenseVector#constant(int,double)
CALLER: org.la4j.matrix.sparse.ColumnMajorSparseMatrix#iterator()
	CALLEE: org.la4j.matrix.AbstractMatrix#columnMajorIterator()
CALLER: org.la4j.vector.AbstractVector#clear()
	CALLEE: org.la4j.vector.AbstractVector#setAll(double)
	CALLEE: org.la4j.vector.sparse.CompressedVector#setAll(double)
CALLER: org.la4j.linear.AbstractSolver#ensureRHSIsCorrect(org.la4j.vector.Vector)
	CALLEE: org.la4j.vector.AbstractVector#length()
	CALLEE: org.la4j.linear.AbstractSolver#fail(java.lang.String)
CALLER: org.la4j.vector.AbstractVector#min()
	CALLEE: static org.la4j.vector.Vectors#mkMinAccumulator()
	CALLEE: org.la4j.vector.AbstractVector#fold(org.la4j.vector.functor.VectorAccumulator)
CALLER: org.la4j.factory.BasicFactory#createVector(org.la4j.vector.Vector)
	CALLEE: org.la4j.vector.dense.BasicVector#<init>(org.la4j.vector.Vector)
CALLER: org.la4j.matrix.AbstractMatrix#sliceBottomRight(int,int,org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#slice(int,int,int,int,org.la4j.factory.Factory)
CALLER: org.la4j.matrix.AbstractMatrix#foldRows(org.la4j.vector.functor.VectorAccumulator)
	CALLEE: org.la4j.matrix.AbstractMatrix#foldRow(int,org.la4j.vector.functor.VectorAccumulator)
CALLER: org.la4j.matrix.dense.DenseMatrix#getColumn(int)
	CALLEE: static org.la4j.vector.dense.DenseVector#zero(int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#set(int,double)
	CALLEE: org.la4j.vector.dense.BasicVector#set(int,double)
CALLER: static org.la4j.matrix.Matrices#asSymbolSeparatedSource(java.io.InputStream)
	CALLEE: org.la4j.io.SymbolSeparatedStream#<init>(java.io.InputStream)
	CALLEE: org.la4j.matrix.source.StreamMatrixSource#<init>(org.la4j.io.MatrixStream)
CALLER: org.la4j.factory.BasicFactory#createVector(org.la4j.vector.source.VectorSource)
	CALLEE: org.la4j.vector.dense.BasicVector#<init>(org.la4j.vector.source.VectorSource)
CALLER: org.la4j.matrix.AbstractMatrix#transform(org.la4j.matrix.functor.MatrixFunction,org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#iterator()
	CALLEE: org.la4j.matrix.sparse.ColumnMajorSparseMatrix#iterator()
	CALLEE: org.la4j.matrix.AbstractMatrix#blank(org.la4j.factory.Factory)
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#rowIndex()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#rowIndex()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#columnIndex()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#columnIndex()
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#set(int,int,double)
CALLER: org.la4j.iterator.CursorToColumnMajorMatrixIterator#columnIndex()
	CALLEE: org.la4j.iterator.VectorIterator#cursor()
	CALLEE: org.la4j.iterator.RowMajorMatrixIterator#cursor()
	CALLEE: org.la4j.iterator.ColumnMajorMatrixIterator#cursor()
CALLER: org.la4j.vector.operation.ooplace.OoPlaceHadamardProduct#apply(org.la4j.vector.sparse.SparseVector,org.la4j.vector.sparse.SparseVector)
	CALLEE: org.la4j.vector.operation.ooplace.OoPlaceHadamardProduct#apply(org.la4j.vector.sparse.SparseVector,org.la4j.vector.sparse.SparseVector)
CALLER: org.la4j.vector.AbstractVector#hadamardProduct(org.la4j.vector.Vector)
	CALLEE: org.la4j.vector.AbstractVector#ensureArgumentIsNotNull(java.lang.Object,java.lang.String)
	CALLEE: org.la4j.vector.AbstractVector#ensureVectorIsSimilar(org.la4j.vector.Vector)
	CALLEE: org.la4j.vector.sparse.SparseVector#apply(org.la4j.vector.operation.VectorVectorOperation,org.la4j.vector.Vector)
	CALLEE: org.la4j.vector.dense.DenseVector#apply(org.la4j.vector.operation.VectorVectorOperation,org.la4j.vector.Vector)
CALLER: org.la4j.vector.AbstractVector#to(org.la4j.vector.VectorFactory)
	CALLEE: org.la4j.vector.AbstractVector#iterator()
	CALLEE: org.la4j.vector.sparse.CompressedVector#iterator()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#next()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#index()
	CALLEE: org.la4j.vector.sparse.CompressedVector#set(int,double)
	CALLEE: org.la4j.vector.dense.BasicVector#set(int,double)
CALLER: org.la4j.vector.dense.BasicVector#to(org.la4j.vector.VectorFactory)
	CALLEE: org.la4j.vector.AbstractVector#to(org.la4j.vector.VectorFactory)
CALLER: static org.la4j.vector.dense.DenseVector#random(int,java.util.Random)
	CALLEE: static org.la4j.vector.dense.BasicVector#random(int,java.util.Random)
CALLER: org.la4j.vector.operation.ooplace.OoPlaceHadamardProduct#apply(org.la4j.vector.dense.DenseVector,org.la4j.vector.dense.DenseVector)
	CALLEE: org.la4j.vector.operation.ooplace.OoPlaceHadamardProduct#apply(org.la4j.vector.dense.DenseVector,org.la4j.vector.dense.DenseVector)
CALLER: org.la4j.io.SymbolSeparatedStream#readMatrix(org.la4j.factory.Factory)
	CALLEE: org.la4j.io.AbstractStream#ensureReaderInitialized()
	CALLEE: org.la4j.factory.Basic1DFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.Basic2DFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.CRSFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.CCSFactory#createMatrix(int,int)
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
	CALLEE: org.la4j.matrix.AbstractMatrix#resizeRows(int)
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
	CALLEE: org.la4j.matrix.AbstractMatrix#resizeColumns(int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.AbstractMatrix#resize(int,int)
	CALLEE: org.la4j.io.AbstractStream#closeReader()
CALLER: org.la4j.vector.AbstractVector#ensureVectorIsSimilar(org.la4j.vector.Vector)
	CALLEE: org.la4j.vector.AbstractVector#length()
	CALLEE: org.la4j.vector.AbstractVector#fail(java.lang.String)
CALLER: org.la4j.matrix.AbstractMatrix#multiply(org.la4j.vector.Vector)
	CALLEE: org.la4j.matrix.AbstractMatrix#ensureArgumentIsNotNull(java.lang.Object,java.lang.String)
	CALLEE: org.la4j.vector.AbstractVector#length()
	CALLEE: org.la4j.matrix.AbstractMatrix#fail(java.lang.String)
	CALLEE: org.la4j.matrix.sparse.ColumnMajorSparseMatrix#apply(org.la4j.matrix.operation.MatrixVectorOperation,org.la4j.vector.Vector)
	CALLEE: org.la4j.matrix.sparse.RowMajorSparseMatrix#apply(org.la4j.matrix.operation.MatrixVectorOperation,org.la4j.vector.Vector)
	CALLEE: org.la4j.matrix.dense.DenseMatrix#apply(org.la4j.matrix.operation.MatrixVectorOperation,org.la4j.vector.Vector)
CALLER: org.la4j.decomposition.RawQRDecompositor#decompose(org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#copy()
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
	CALLEE: org.la4j.factory.Basic1DFactory#createSquareMatrix(int)
	CALLEE: org.la4j.factory.Basic2DFactory#createSquareMatrix(int)
	CALLEE: org.la4j.factory.CRSFactory#createSquareMatrix(int)
	CALLEE: org.la4j.factory.CCSFactory#createSquareMatrix(int)
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
	CALLEE: static org.la4j.matrix.Matrices#asDivFunction(double)
	CALLEE: org.la4j.matrix.AbstractMatrix#update(int,int,org.la4j.matrix.functor.MatrixFunction)
	CALLEE: static org.la4j.matrix.Matrices#asPlusFunction(double)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#set(int,int,double)
CALLER: org.la4j.matrix.operation.ooplace.OoPlaceMatrixByVectorMultiplication#apply(org.la4j.matrix.dense.DenseMatrix,org.la4j.vector.sparse.SparseVector)
	CALLEE: org.la4j.matrix.operation.ooplace.OoPlaceMatrixByVectorMultiplication#apply(org.la4j.matrix.dense.DenseMatrix,org.la4j.vector.sparse.SparseVector)
CALLER: org.la4j.matrix.operation.ooplace.OoPlaceMatricesAddition#apply(org.la4j.matrix.sparse.ColumnMajorSparseMatrix,org.la4j.matrix.sparse.ColumnMajorSparseMatrix)
	CALLEE: org.la4j.matrix.operation.ooplace.OoPlaceMatricesAddition#apply(org.la4j.matrix.sparse.ColumnMajorSparseMatrix,org.la4j.matrix.sparse.ColumnMajorSparseMatrix)
CALLER: org.la4j.matrix.sparse.ColumnMajorSparseMatrix#apply(org.la4j.matrix.operation.MatrixOperation)
CALLER: org.la4j.vector.operation.ooplace.OoPlaceVectorsSubtraction#apply(org.la4j.vector.sparse.SparseVector,org.la4j.vector.dense.DenseVector)
	CALLEE: org.la4j.vector.AbstractVector#multiply(double)
	CALLEE: org.la4j.vector.sparse.CompressedVector#nonZeroIterator()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#next()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#index()
	CALLEE: org.la4j.vector.sparse.SparseVector#get(int)
	CALLEE: org.la4j.vector.dense.BasicVector#get(int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#set(int,double)
	CALLEE: org.la4j.vector.dense.BasicVector#set(int,double)
CALLER: org.la4j.linear.SeidelSolver#applicableTo(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.matrix.AbstractMatrix#is(org.la4j.matrix.functor.AdvancedMatrixPredicate)
CALLER: org.la4j.matrix.AbstractMatrix#fold(org.la4j.matrix.functor.MatrixAccumulator)
	CALLEE: static org.la4j.matrix.Matrices#asAccumulatorProcedure(org.la4j.matrix.functor.MatrixAccumulator)
	CALLEE: org.la4j.matrix.AbstractMatrix#each(org.la4j.matrix.functor.MatrixProcedure)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#each(org.la4j.matrix.functor.MatrixProcedure)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#each(org.la4j.matrix.functor.MatrixProcedure)
CALLER: static org.la4j.matrix.dense.Basic2DMatrix#from1DArray(int,int,double[])
CALLER: org.la4j.matrix.sparse.SparseMatrix#ensureCardinalityIsCorrect(long,long,long)
	CALLEE: org.la4j.matrix.AbstractMatrix#fail(java.lang.String)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#capacity()
CALLER: org.la4j.decomposition.EigenDecompositor#generateRi(org.la4j.matrix.Matrix,int)
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
CALLER: org.la4j.factory.Basic2DFactory#createIdentityMatrix(int)
	CALLEE: static org.la4j.matrix.dense.Basic2DMatrix#identity(int)
CALLER: static org.la4j.vector.Vectors#asMinusFunction(double)
CALLER: org.la4j.factory.Basic2DFactory#createMatrix(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#<init>(org.la4j.matrix.Matrix)
CALLER: static org.la4j.matrix.sparse.SparseMatrix#zero(int,int)
	CALLEE: static org.la4j.matrix.sparse.CRSMatrix#zero(int,int)
CALLER: org.la4j.matrix.AbstractMatrix#minInColumn(int)
	CALLEE: static org.la4j.matrix.Matrices#mkMinAccumulator()
	CALLEE: org.la4j.matrix.AbstractMatrix#foldColumn(int,org.la4j.matrix.functor.MatrixAccumulator)
CALLER: org.la4j.matrix.AbstractMatrix#assign(double)
	CALLEE: org.la4j.matrix.AbstractMatrix#setAll(double)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#setAll(double)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#setAll(double)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#setAll(double)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#setAll(double)
CALLER: static org.la4j.vector.Vectors#asModFunction(double)
CALLER: org.la4j.matrix.AbstractMatrix#eachInColumn(int,org.la4j.matrix.functor.MatrixProcedure)
	CALLEE: org.la4j.matrix.AbstractMatrix#eachInColumn(int,org.la4j.vector.functor.VectorProcedure)
CALLER: org.la4j.vector.operation.ooplace.OoPlaceVectorsAddition#apply(org.la4j.vector.dense.DenseVector,org.la4j.vector.sparse.SparseVector)
	CALLEE: org.la4j.vector.AbstractVector#copy()
	CALLEE: org.la4j.vector.sparse.CompressedVector#nonZeroIterator()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#next()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#index()
	CALLEE: org.la4j.vector.sparse.SparseVector#get(int)
	CALLEE: org.la4j.vector.dense.BasicVector#get(int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#set(int,double)
	CALLEE: org.la4j.vector.dense.BasicVector#set(int,double)
CALLER: static org.la4j.matrix.dense.DenseMatrix#diagonal(int,double)
	CALLEE: static org.la4j.matrix.dense.Basic2DMatrix#diagonal(int,double)
CALLER: org.la4j.matrix.dense.DenseMatrix#apply(org.la4j.matrix.operation.MatrixOperation)
CALLER: static org.la4j.vector.Vectors#asVectorSource(org.la4j.vector.Vector)
	CALLEE: org.la4j.vector.source.LoopbackVectorSource#<init>(org.la4j.vector.Vector)
CALLER: org.la4j.matrix.source.StreamMatrixSource#rows()
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
CALLER: org.la4j.matrix.AbstractMatrix#diagonalProduct()
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
CALLER: org.la4j.matrix.AbstractMatrix#copy()
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#copyOfShape(int,int)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#copyOfShape(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#copyOfShape(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#copyOfShape(int,int)
CALLER: org.la4j.matrix.source.LoopbackMatrixSource#get(int,int)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
CALLER: org.la4j.matrix.sparse.SparseMatrix#nonZeroColumnMajorIterator()
CALLER: org.la4j.matrix.sparse.SparseMatrix#nonZeroIterator()
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#nonZeroRowMajorIterator()
CALLER: org.la4j.matrix.AbstractMatrix#removeLastColumn()
	CALLEE: org.la4j.matrix.AbstractMatrix#removeColumn(int)
CALLER: static org.la4j.vector.sparse.SparseVector#random(int,double,java.util.Random)
	CALLEE: static org.la4j.vector.sparse.CompressedVector#random(int,double,java.util.Random)
CALLER: org.la4j.matrix.source.StreamMatrixSource#<init>(org.la4j.io.MatrixStream)
	CALLEE: org.la4j.io.SymbolSeparatedStream#readMatrix()
	CALLEE: org.la4j.io.MatrixMarketStream#readMatrix()
CALLER: org.la4j.matrix.sparse.CRSMatrix#getRow(int,org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#ensureFactoryIsNotNull(org.la4j.factory.Factory)
	CALLEE: org.la4j.factory.BasicFactory#createVector(int)
	CALLEE: org.la4j.factory.CompressedFactory#createVector(int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#set(int,double)
	CALLEE: org.la4j.vector.dense.BasicVector#set(int,double)
CALLER: static org.la4j.matrix.dense.Basic1DMatrix#zero(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#<init>(int,int)
CALLER: org.la4j.matrix.AbstractMatrix#transformColumn(int,org.la4j.vector.functor.VectorFunction)
	CALLEE: org.la4j.matrix.AbstractMatrix#copy()
	CALLEE: org.la4j.matrix.AbstractMatrix#iteratorOfColumn(int)
	CALLEE: org.la4j.iterator.CursorToVectorIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#next()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#index()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#set(double)
CALLER: static org.la4j.matrix.sparse.RowMajorSparseMatrix#diagonal(int,double)
	CALLEE: static org.la4j.matrix.sparse.CRSMatrix#diagonal(int,double)
CALLER: org.la4j.vector.AbstractVector#update(int,org.la4j.vector.functor.VectorFunction)
	CALLEE: org.la4j.vector.AbstractVector#updateAt(int,org.la4j.vector.functor.VectorFunction)
	CALLEE: org.la4j.vector.sparse.CompressedVector#updateAt(int,org.la4j.vector.functor.VectorFunction)
CALLER: org.la4j.io.MatrixMarketStream#writeMatrix(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.io.AbstractStream#ensureWriterInitialized()
	CALLEE: org.la4j.io.MatrixMarketStream#writeSparseMatrix(org.la4j.matrix.sparse.SparseMatrix)
	CALLEE: org.la4j.io.MatrixMarketStream#writeDenseMatrix(org.la4j.matrix.dense.DenseMatrix)
	CALLEE: org.la4j.io.AbstractStream#closeWriter()
CALLER: org.la4j.vector.AbstractVector#ensureFactoryIsNotNull(org.la4j.factory.Factory)
	CALLEE: org.la4j.vector.AbstractVector#ensureArgumentIsNotNull(java.lang.Object,java.lang.String)
CALLER: org.la4j.matrix.AbstractMatrix#mkString(java.text.NumberFormat)
	CALLEE: org.la4j.matrix.AbstractMatrix#mkString(java.text.NumberFormat,java.lang.String,java.lang.String)
CALLER: org.la4j.io.MatrixMarketStream#writeSparseVector(org.la4j.vector.sparse.SparseVector)
	CALLEE: org.la4j.vector.AbstractVector#length()
	CALLEE: org.la4j.vector.sparse.SparseVector#cardinality()
	CALLEE: org.la4j.io.MatrixMarketStream.SparseVectorWriteProcedure#<init>(java.io.BufferedWriter)
	CALLEE: org.la4j.vector.sparse.SparseVector#eachNonZero(org.la4j.vector.functor.VectorProcedure)
	CALLEE: org.la4j.vector.sparse.CompressedVector#eachNonZero(org.la4j.vector.functor.VectorProcedure)
CALLER: static org.la4j.vector.Vectors#mkMinAccumulator()
CALLER: org.la4j.vector.dense.DenseVector#apply(org.la4j.vector.operation.VectorVectorOperation,org.la4j.vector.Vector)
	CALLEE: org.la4j.vector.operation.VectorVectorOperation#partiallyApply(org.la4j.vector.dense.DenseVector)
	CALLEE: org.la4j.vector.sparse.SparseVector#apply(org.la4j.vector.operation.VectorOperation)
	CALLEE: org.la4j.vector.dense.DenseVector#apply(org.la4j.vector.operation.VectorOperation)
CALLER: static org.la4j.matrix.sparse.CCSMatrix#diagonal(int,double)
CALLER: org.la4j.factory.Basic1DFactory#createMatrix(org.la4j.matrix.source.MatrixSource)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#<init>(org.la4j.matrix.source.MatrixSource)
CALLER: org.la4j.matrix.AbstractMatrix#subtract(double,org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#subtract(double)
	CALLEE: static org.la4j.factory.Factory#asMatrixFactory(org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#to(org.la4j.matrix.MatrixFactory)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#to(org.la4j.matrix.MatrixFactory)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#to(org.la4j.matrix.MatrixFactory)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#to(org.la4j.matrix.MatrixFactory)
CALLER: org.la4j.matrix.AbstractMatrix#rotate(org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#ensureFactoryIsNotNull(org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#rotate()
	CALLEE: org.la4j.matrix.sparse.ColumnMajorSparseMatrix#rotate()
	CALLEE: org.la4j.matrix.sparse.RowMajorSparseMatrix#rotate()
	CALLEE: static org.la4j.factory.Factory#asMatrixFactory(org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#to(org.la4j.matrix.MatrixFactory)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#to(org.la4j.matrix.MatrixFactory)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#to(org.la4j.matrix.MatrixFactory)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#to(org.la4j.matrix.MatrixFactory)
CALLER: org.la4j.linear.LeastSquaresSolver#<init>(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.linear.AbstractSolver#<init>(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.decomposition.AbstractDecompositor#decompose()
CALLER: org.la4j.iterator.VectorIterator#andAlsoDivide(org.la4j.iterator.VectorIterator)
	CALLEE: org.la4j.iterator.CursorIterator#andAlso(org.la4j.iterator.CursorIterator,org.la4j.iterator.JoinFunction)
	CALLEE: org.la4j.iterator.CursorToVectorIterator#<init>(org.la4j.iterator.CursorIterator,int)
CALLER: org.la4j.iterator.CursorToColumnMajorMatrixIterator#set(double)
	CALLEE: org.la4j.iterator.CursorToVectorIterator#set(double)
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#set(double)
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#set(double)
CALLER: org.la4j.linear.SquareRootSolver#applicableTo(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.matrix.AbstractMatrix#is(org.la4j.matrix.functor.AdvancedMatrixPredicate)
CALLER: org.la4j.matrix.AbstractMatrix#foldColumn(int,org.la4j.vector.functor.VectorAccumulator)
	CALLEE: static org.la4j.vector.Vectors#asAccumulatorProcedure(org.la4j.vector.functor.VectorAccumulator)
	CALLEE: org.la4j.matrix.AbstractMatrix#eachInColumn(int,org.la4j.vector.functor.VectorProcedure)
CALLER: org.la4j.vector.operation.VectorVectorOperation#partiallyApply(org.la4j.vector.dense.DenseVector)
CALLER: org.la4j.matrix.operation.ooplace.OoPlaceMatrixByVectorMultiplication#apply(org.la4j.matrix.sparse.ColumnMajorSparseMatrix,org.la4j.vector.dense.DenseVector)
	CALLEE: org.la4j.matrix.operation.ooplace.OoPlaceMatrixByVectorMultiplication#apply(org.la4j.matrix.sparse.ColumnMajorSparseMatrix,org.la4j.vector.dense.DenseVector)
CALLER: org.la4j.vector.AbstractVector#iterator()
CALLER: org.la4j.linear.SquareRootSolver#<init>(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.linear.AbstractSolver#<init>(org.la4j.matrix.Matrix)
CALLER: org.la4j.factory.CCSFactory#createIdentityMatrix(int)
	CALLEE: static org.la4j.matrix.sparse.CCSMatrix#identity(int)
CALLER: org.la4j.matrix.AbstractMatrix#maxInColumn(int)
	CALLEE: static org.la4j.matrix.Matrices#mkMaxAccumulator()
	CALLEE: org.la4j.matrix.AbstractMatrix#foldColumn(int,org.la4j.matrix.functor.MatrixAccumulator)
CALLER: org.la4j.matrix.sparse.SparseMatrix#foldNonZeroInRow(int,org.la4j.vector.functor.VectorAccumulator)
	CALLEE: static org.la4j.vector.Vectors#asAccumulatorProcedure(org.la4j.vector.functor.VectorAccumulator)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#eachNonZeroInRow(int,org.la4j.vector.functor.VectorProcedure)
CALLER: org.la4j.matrix.operation.ooplace.OoPlaceMatricesAddition#applySymmetric(org.la4j.matrix.dense.DenseMatrix,org.la4j.matrix.sparse.SparseMatrix)
	CALLEE: org.la4j.matrix.operation.ooplace.OoPlaceMatricesAddition#applySymmetric(org.la4j.matrix.dense.DenseMatrix,org.la4j.matrix.sparse.SparseMatrix)
CALLER: org.la4j.vector.AbstractVector#transform(org.la4j.vector.functor.VectorFunction,org.la4j.factory.Factory)
	CALLEE: org.la4j.vector.AbstractVector#transform(org.la4j.vector.functor.VectorFunction)
	CALLEE: static org.la4j.factory.Factory#asVectorFactory(org.la4j.factory.Factory)
	CALLEE: org.la4j.vector.sparse.CompressedVector#to(org.la4j.vector.VectorFactory)
	CALLEE: org.la4j.vector.dense.BasicVector#to(org.la4j.vector.VectorFactory)
CALLER: org.la4j.vector.AbstractVector#innerProduct(org.la4j.vector.Vector)
	CALLEE: org.la4j.vector.AbstractVector#ensureArgumentIsNotNull(java.lang.Object,java.lang.String)
	CALLEE: org.la4j.vector.AbstractVector#ensureVectorIsSimilar(org.la4j.vector.Vector)
	CALLEE: org.la4j.vector.sparse.SparseVector#apply(org.la4j.vector.operation.VectorVectorOperation,org.la4j.vector.Vector)
	CALLEE: org.la4j.vector.dense.DenseVector#apply(org.la4j.vector.operation.VectorVectorOperation,org.la4j.vector.Vector)
CALLER: org.la4j.matrix.AbstractMatrix#blank()
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#blankOfShape(int,int)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#blankOfShape(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#blankOfShape(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#blankOfShape(int,int)
CALLER: org.la4j.linear.LeastSquaresSolver#solve(org.la4j.vector.Vector,org.la4j.factory.Factory)
	CALLEE: org.la4j.linear.AbstractSolver#ensureRHSIsCorrect(org.la4j.vector.Vector)
	CALLEE: org.la4j.linear.AbstractSolver#unknowns()
	CALLEE: org.la4j.linear.AbstractSolver#equations()
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
	CALLEE: org.la4j.linear.AbstractSolver#fail(java.lang.String)
	CALLEE: org.la4j.vector.AbstractVector#copy(org.la4j.factory.Factory)
	CALLEE: org.la4j.vector.sparse.SparseVector#get(int)
	CALLEE: org.la4j.vector.dense.BasicVector#get(int)
	CALLEE: static org.la4j.vector.Vectors#asPlusFunction(double)
	CALLEE: org.la4j.vector.AbstractVector#update(int,org.la4j.vector.functor.VectorFunction)
	CALLEE: static org.la4j.vector.Vectors#asDivFunction(double)
	CALLEE: static org.la4j.vector.Vectors#asMinusFunction(double)
	CALLEE: org.la4j.vector.AbstractVector#slice(int,int)
CALLER: org.la4j.vector.operation.ooplace.OoPlaceVectorsAddition#apply(org.la4j.vector.dense.DenseVector,org.la4j.vector.dense.DenseVector)
	CALLEE: org.la4j.vector.AbstractVector#blank()
	CALLEE: org.la4j.vector.AbstractVector#length()
	CALLEE: org.la4j.vector.dense.BasicVector#get(int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#set(int,double)
	CALLEE: org.la4j.vector.dense.BasicVector#set(int,double)
CALLER: static org.la4j.matrix.sparse.SparseMatrix#identity(int)
	CALLEE: static org.la4j.matrix.sparse.CRSMatrix#identity(int)
CALLER: org.la4j.vector.sparse.SparseVector#toColumnMatrix()
	CALLEE: org.la4j.vector.sparse.CompressedVector#nonZeroIterator()
	CALLEE: static org.la4j.matrix.sparse.ColumnMajorSparseMatrix#zero(int,int)
	CALLEE: org.la4j.iterator.CursorToVectorIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#next()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#index()
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#set(int,int,double)
CALLER: org.la4j.matrix.operation.SymmetricMatrixOperation#apply(org.la4j.matrix.sparse.ColumnMajorSparseMatrix,org.la4j.matrix.sparse.RowMajorSparseMatrix)
	CALLEE: org.la4j.matrix.operation.ooplace.OoPlaceMatricesAddition#applySymmetric(org.la4j.matrix.sparse.RowMajorSparseMatrix,org.la4j.matrix.sparse.ColumnMajorSparseMatrix)
CALLER: org.la4j.factory.Basic1DFactory#createConstantMatrix(int,int,double)
	CALLEE: static org.la4j.matrix.dense.Basic1DMatrix#constant(int,int,double)
CALLER: org.la4j.vector.dense.DenseVector#<init>(int)
	CALLEE: org.la4j.vector.AbstractVector#<init>(org.la4j.factory.Factory,int)
CALLER: org.la4j.matrix.operation.inplace.InPlaceCopyMatrixToMatrix#apply(org.la4j.matrix.sparse.RowMajorSparseMatrix,org.la4j.matrix.sparse.ColumnMajorSparseMatrix)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#nonZeroColumnMajorIterator()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#rowIndex()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#rowIndex()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#columnIndex()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#columnIndex()
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#set(int,int,double)
CALLER: static org.la4j.vector.Vectors#asSumAccumulator(double)
CALLER: org.la4j.matrix.AbstractMatrix#<init>(org.la4j.factory.Factory,int,int)
	CALLEE: org.la4j.matrix.AbstractMatrix#ensureDimensionsAreCorrect(int,int)
CALLER: org.la4j.vector.operation.ooplace.OoPlaceHadamardProduct#apply(org.la4j.vector.dense.DenseVector,org.la4j.vector.sparse.SparseVector)
	CALLEE: org.la4j.vector.operation.ooplace.OoPlaceHadamardProduct#apply(org.la4j.vector.dense.DenseVector,org.la4j.vector.sparse.SparseVector)
CALLER: org.la4j.matrix.dense.Basic1DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.AbstractMatrix#ensureIndexesAreInBounds(int,int)
CALLER: org.la4j.vector.sparse.SparseVector#eachNonZero(org.la4j.vector.functor.VectorProcedure)
	CALLEE: org.la4j.vector.sparse.CompressedVector#nonZeroIterator()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#next()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#index()
	CALLEE: org.la4j.io.MatrixMarketStream.SparseVectorWriteProcedure#apply(int,double)
CALLER: org.la4j.matrix.AbstractMatrix#removeFirstRow()
	CALLEE: org.la4j.matrix.AbstractMatrix#removeRow(int)
CALLER: org.la4j.factory.BasicFactory#createRandomVector(int,java.util.Random)
	CALLEE: static org.la4j.vector.dense.BasicVector#random(int,java.util.Random)
CALLER: org.la4j.vector.AbstractVector#norm()
	CALLEE: org.la4j.vector.AbstractVector#euclideanNorm()
	CALLEE: org.la4j.vector.sparse.SparseVector#euclideanNorm()
CALLER: org.la4j.matrix.operation.SymmetricMatrixOperation#apply(org.la4j.matrix.sparse.RowMajorSparseMatrix,org.la4j.matrix.sparse.ColumnMajorSparseMatrix)
	CALLEE: org.la4j.matrix.operation.ooplace.OoPlaceMatricesAddition#applySymmetric(org.la4j.matrix.sparse.RowMajorSparseMatrix,org.la4j.matrix.sparse.ColumnMajorSparseMatrix)
CALLER: static org.la4j.matrix.sparse.CRSMatrix#randomSymmetric(int,double,java.util.Random)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#<init>(int,int,int)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#set(int,int,double)
CALLER: org.la4j.matrix.sparse.CRSMatrix#readExternal(java.io.ObjectInput)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#align(int)
CALLER: static org.la4j.matrix.sparse.ColumnMajorSparseMatrix#randomSymmetric(int,double,java.util.Random)
	CALLEE: static org.la4j.matrix.sparse.CCSMatrix#randomSymmetric(int,double,java.util.Random)
CALLER: org.la4j.vector.AbstractVector#shuffle(org.la4j.factory.Factory)
	CALLEE: org.la4j.vector.AbstractVector#ensureFactoryIsNotNull(org.la4j.factory.Factory)
	CALLEE: org.la4j.vector.AbstractVector#shuffle()
	CALLEE: static org.la4j.factory.Factory#asVectorFactory(org.la4j.factory.Factory)
	CALLEE: org.la4j.vector.sparse.CompressedVector#to(org.la4j.vector.VectorFactory)
	CALLEE: org.la4j.vector.dense.BasicVector#to(org.la4j.vector.VectorFactory)
CALLER: org.la4j.matrix.AbstractMatrix#transform(org.la4j.matrix.functor.MatrixFunction)
	CALLEE: org.la4j.matrix.AbstractMatrix#transform(org.la4j.matrix.functor.MatrixFunction,org.la4j.factory.Factory)
CALLER: org.la4j.factory.Basic2DFactory#createSquareMatrix(int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#<init>(int,int)
CALLER: org.la4j.io.MatrixMarketStream#writeSparseMatrix(org.la4j.matrix.sparse.SparseMatrix)
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#cardinality()
	CALLEE: org.la4j.io.MatrixMarketStream.SparseMatrixWriteProcedure#<init>(java.io.BufferedWriter)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#eachNonZero(org.la4j.matrix.functor.MatrixProcedure)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#eachNonZero(org.la4j.matrix.functor.MatrixProcedure)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#eachNonZero(org.la4j.matrix.functor.MatrixProcedure)
CALLER: org.la4j.vector.sparse.CompressedVector#copyOfLength(int)
	CALLEE: org.la4j.vector.AbstractVector#ensureLengthIsCorrect(int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#searchForIndex(int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#align(int,int)
CALLER: org.la4j.decomposition.LUDecompositor#decompose(org.la4j.factory.Factory)
	CALLEE: org.la4j.decomposition.RawLUDecompositor#decompose(org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
	CALLEE: org.la4j.factory.Basic1DFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.Basic2DFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.CRSFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.CCSFactory#createMatrix(int,int)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#set(int,int,double)
CALLER: org.la4j.matrix.dense.Basic1DMatrix#<init>(int,int)
CALLER: org.la4j.matrix.AbstractMatrix#transformRow(int,org.la4j.vector.functor.VectorFunction)
	CALLEE: org.la4j.matrix.AbstractMatrix#copy()
	CALLEE: org.la4j.matrix.AbstractMatrix#iteratorOfRow(int)
	CALLEE: org.la4j.iterator.CursorToVectorIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#next()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#index()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#set(double)
CALLER: static org.la4j.vector.sparse.SparseVector#zero(int)
	CALLEE: static org.la4j.vector.sparse.CompressedVector#zero(int)
CALLER: org.la4j.matrix.AbstractMatrix#toRowVector()
	CALLEE: org.la4j.matrix.AbstractMatrix#toRowVector(org.la4j.factory.Factory)
CALLER: static org.la4j.matrix.Matrices#asIdentitySource(int)
	CALLEE: org.la4j.matrix.source.IdentityMatrixSource#<init>(int)
CALLER: org.la4j.iterator.CursorToRowMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#next()
CALLER: org.la4j.matrix.operation.MatrixVectorOperation#partiallyApply(org.la4j.matrix.sparse.ColumnMajorSparseMatrix)
CALLER: org.la4j.matrix.operation.ooplace.OoPlaceMatricesAddition#apply(org.la4j.matrix.sparse.RowMajorSparseMatrix,org.la4j.matrix.sparse.RowMajorSparseMatrix)
	CALLEE: org.la4j.matrix.AbstractMatrix#blank()
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#nonZeroRowMajorIterator()
	CALLEE: org.la4j.iterator.RowMajorMatrixIterator#orElseAdd(org.la4j.iterator.RowMajorMatrixIterator)
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#rowIndex()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#rowIndex()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#columnIndex()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#columnIndex()
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#set(int,int,double)
CALLER: static org.la4j.vector.Vectors#asAccumulatorProcedure(org.la4j.vector.functor.VectorAccumulator)
CALLER: org.la4j.factory.CCSFactory#createMatrix()
	CALLEE: static org.la4j.matrix.sparse.CCSMatrix#zero(int,int)
CALLER: org.la4j.decomposition.EigenDecompositor#orthes(org.la4j.matrix.Matrix,org.la4j.matrix.Matrix,org.la4j.vector.Vector)
	CALLEE: org.la4j.vector.AbstractVector#length()
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#set(int,double)
	CALLEE: org.la4j.vector.dense.BasicVector#set(int,double)
	CALLEE: org.la4j.vector.sparse.SparseVector#get(int)
	CALLEE: org.la4j.vector.dense.BasicVector#get(int)
	CALLEE: static org.la4j.vector.Vectors#asMinusFunction(double)
	CALLEE: org.la4j.vector.AbstractVector#update(int,org.la4j.vector.functor.VectorFunction)
	CALLEE: static org.la4j.matrix.Matrices#asMinusFunction(double)
	CALLEE: org.la4j.matrix.AbstractMatrix#update(int,int,org.la4j.matrix.functor.MatrixFunction)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#set(int,int,double)
	CALLEE: static org.la4j.matrix.Matrices#asPlusFunction(double)
CALLER: org.la4j.vector.AbstractVector#copy(org.la4j.factory.Factory)
	CALLEE: org.la4j.vector.AbstractVector#ensureFactoryIsNotNull(org.la4j.factory.Factory)
	CALLEE: org.la4j.vector.AbstractVector#copy()
	CALLEE: org.la4j.factory.BasicFactory#createVector(org.la4j.vector.Vector)
	CALLEE: org.la4j.factory.CompressedFactory#createVector(org.la4j.vector.Vector)
CALLER: org.la4j.iterator.VectorIterator#<init>(int)
CALLER: org.la4j.matrix.AbstractMatrix#transpose(org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#ensureFactoryIsNotNull(org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#transpose()
	CALLEE: org.la4j.matrix.sparse.ColumnMajorSparseMatrix#transpose()
	CALLEE: org.la4j.matrix.sparse.RowMajorSparseMatrix#transpose()
	CALLEE: static org.la4j.factory.Factory#asMatrixFactory(org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#to(org.la4j.matrix.MatrixFactory)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#to(org.la4j.matrix.MatrixFactory)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#to(org.la4j.matrix.MatrixFactory)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#to(org.la4j.matrix.MatrixFactory)
CALLER: org.la4j.matrix.sparse.CRSMatrix#transpose(org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#ensureFactoryIsNotNull(org.la4j.factory.Factory)
	CALLEE: org.la4j.factory.Basic1DFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.Basic2DFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.CRSFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.CCSFactory#createMatrix(int,int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#set(int,int,double)
CALLER: org.la4j.vector.AbstractVector#equals(java.lang.Object)
	CALLEE: org.la4j.vector.AbstractVector#equals(org.la4j.vector.Vector,double)
CALLER: org.la4j.vector.operation.ooplace.OoPlaceOuterProduct#apply(org.la4j.vector.sparse.SparseVector,org.la4j.vector.dense.DenseVector)
	CALLEE: org.la4j.vector.operation.ooplace.OoPlaceOuterProduct#apply(org.la4j.vector.sparse.SparseVector,org.la4j.vector.dense.DenseVector)
CALLER: org.la4j.matrix.AbstractMatrix#insert(org.la4j.matrix.Matrix,int,int)
	CALLEE: org.la4j.matrix.AbstractMatrix#insert(org.la4j.matrix.Matrix,int,int,int,int,int,int)
CALLER: org.la4j.iterator.CursorToColumnMajorMatrixIterator#get()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#get()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#get()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#get()
CALLER: org.la4j.factory.Basic2DFactory#createConstantMatrix(int,int,double)
	CALLEE: static org.la4j.matrix.dense.Basic2DMatrix#constant(int,int,double)
CALLER: org.la4j.vector.AbstractVector#mkString(java.text.NumberFormat,java.lang.String)
	CALLEE: org.la4j.vector.AbstractVector#iterator()
	CALLEE: org.la4j.vector.sparse.CompressedVector#iterator()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#next()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#index()
CALLER: static org.la4j.matrix.dense.DenseMatrix#randomSymmetric(int,java.util.Random)
	CALLEE: static org.la4j.matrix.dense.Basic2DMatrix#randomSymmetric(int,java.util.Random)
CALLER: org.la4j.vector.sparse.CompressedVector#<init>(org.la4j.vector.source.VectorSource)
	CALLEE: org.la4j.vector.source.RandomVectorSource#length()
	CALLEE: org.la4j.vector.source.LoopbackVectorSource#length()
	CALLEE: org.la4j.vector.source.ArrayVectorSource#length()
	CALLEE: org.la4j.vector.source.StreamVectorSource#length()
	CALLEE: org.la4j.vector.sparse.CompressedVector#<init>(int,int)
	CALLEE: org.la4j.vector.source.RandomVectorSource#get(int)
	CALLEE: org.la4j.vector.source.LoopbackVectorSource#get(int)
	CALLEE: org.la4j.vector.source.ArrayVectorSource#get(int)
	CALLEE: org.la4j.vector.source.StreamVectorSource#get(int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#growUp()
CALLER: org.la4j.matrix.operation.SymmetricMatrixOperation#apply(org.la4j.matrix.dense.DenseMatrix,org.la4j.matrix.sparse.ColumnMajorSparseMatrix)
	CALLEE: org.la4j.matrix.operation.ooplace.OoPlaceMatricesAddition#applySymmetric(org.la4j.matrix.dense.DenseMatrix,org.la4j.matrix.sparse.SparseMatrix)
CALLER: org.la4j.matrix.sparse.RowMajorSparseMatrix#apply(org.la4j.matrix.operation.MatrixOperation)
CALLER: org.la4j.matrix.sparse.SparseMatrix#nonZeroIteratorOfRow(int)
CALLER: org.la4j.decomposition.EigenDecompositor#regenerateU(org.la4j.matrix.Matrix,org.la4j.matrix.Matrix,int,int,int,int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
CALLER: org.la4j.matrix.AbstractMatrix#subtract(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.matrix.AbstractMatrix#ensureArgumentIsNotNull(java.lang.Object,java.lang.String)
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
	CALLEE: org.la4j.matrix.AbstractMatrix#fail(java.lang.String)
	CALLEE: org.la4j.matrix.AbstractMatrix#blank(org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#set(int,int,double)
CALLER: org.la4j.vector.operation.ooplace.OoPlaceHadamardProduct#apply(org.la4j.vector.dense.DenseVector,org.la4j.vector.sparse.SparseVector)
	CALLEE: org.la4j.vector.AbstractVector#blank()
	CALLEE: org.la4j.vector.sparse.CompressedVector#nonZeroIterator()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#next()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#index()
	CALLEE: org.la4j.vector.dense.BasicVector#get(int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#set(int,double)
	CALLEE: org.la4j.vector.dense.BasicVector#set(int,double)
CALLER: org.la4j.factory.Basic2DFactory#createMatrix(int,int)
	CALLEE: static org.la4j.matrix.dense.Basic2DMatrix#zero(int,int)
CALLER: org.la4j.factory.BasicFactory#createVector()
	CALLEE: org.la4j.vector.dense.BasicVector#<init>()
CALLER: org.la4j.decomposition.CholeskyDecompositor#<init>(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.decomposition.AbstractDecompositor#<init>(org.la4j.matrix.Matrix)
CALLER: org.la4j.vector.operation.ooplace.OoPlaceVectorByMatrixMultiplication#apply(org.la4j.vector.sparse.SparseVector,org.la4j.matrix.sparse.ColumnMajorSparseMatrix)
	CALLEE: org.la4j.vector.operation.ooplace.OoPlaceVectorByMatrixMultiplication#apply(org.la4j.vector.sparse.SparseVector,org.la4j.matrix.sparse.ColumnMajorSparseMatrix)
CALLER: org.la4j.vector.operation.ooplace.OoPlaceOuterProduct#apply(org.la4j.vector.sparse.SparseVector,org.la4j.vector.dense.DenseVector)
	CALLEE: org.la4j.vector.operation.ooplace.OoPlaceOuterProduct#apply(org.la4j.vector.dense.DenseVector,org.la4j.vector.sparse.SparseVector)
CALLER: static org.la4j.vector.sparse.SparseVector#fromArray(double[])
	CALLEE: static org.la4j.vector.sparse.CompressedVector#fromArray(double[])
CALLER: org.la4j.matrix.operation.inplace.InPlaceCopyMatrixToMatrix#apply(org.la4j.matrix.sparse.ColumnMajorSparseMatrix,org.la4j.matrix.sparse.RowMajorSparseMatrix)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#nonZeroRowMajorIterator()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#rowIndex()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#rowIndex()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#columnIndex()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#columnIndex()
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#set(int,int,double)
CALLER: org.la4j.factory.CCSFactory#createSquareMatrix(int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#<init>(int,int)
CALLER: org.la4j.factory.BasicFactory#createVector(int)
	CALLEE: static org.la4j.vector.dense.BasicVector#zero(int)
CALLER: org.la4j.matrix.operation.ooplace.OoPlaceMatrixByVectorMultiplication#apply(org.la4j.matrix.sparse.RowMajorSparseMatrix,org.la4j.vector.dense.DenseVector)
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
	CALLEE: static org.la4j.vector.dense.DenseVector#zero(int)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#nonZeroIterator()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#rowIndex()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#rowIndex()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#columnIndex()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#columnIndex()
	CALLEE: org.la4j.vector.sparse.SparseVector#get(int)
	CALLEE: org.la4j.vector.dense.BasicVector#get(int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#set(int,double)
	CALLEE: org.la4j.vector.dense.BasicVector#set(int,double)
CALLER: org.la4j.matrix.AbstractMatrix#setRow(int,double)
	CALLEE: org.la4j.matrix.AbstractMatrix#iteratorOfRow(int)
	CALLEE: org.la4j.iterator.CursorToVectorIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#next()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#set(double)
CALLER: org.la4j.vector.operation.ooplace.OoPlaceVectorsSubtraction#apply(org.la4j.vector.dense.DenseVector,org.la4j.vector.sparse.SparseVector)
	CALLEE: org.la4j.vector.AbstractVector#copy()
	CALLEE: org.la4j.vector.sparse.CompressedVector#nonZeroIterator()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#next()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#index()
	CALLEE: org.la4j.vector.sparse.SparseVector#get(int)
	CALLEE: org.la4j.vector.dense.BasicVector#get(int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#set(int,double)
	CALLEE: org.la4j.vector.dense.BasicVector#set(int,double)
CALLER: org.la4j.matrix.sparse.CCSMatrix#growUp()
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#capacity()
CALLER: org.la4j.factory.CRSFactory#createMatrix(int,int)
	CALLEE: static org.la4j.matrix.sparse.CRSMatrix#zero(int,int)
CALLER: static org.la4j.vector.dense.DenseVector#constant(int,double)
	CALLEE: static org.la4j.vector.dense.BasicVector#constant(int,double)
CALLER: org.la4j.vector.source.LoopbackVectorSource#length()
	CALLEE: org.la4j.vector.AbstractVector#length()
CALLER: org.la4j.vector.AbstractVector#equals(org.la4j.vector.Vector,double)
	CALLEE: org.la4j.vector.AbstractVector#length()
	CALLEE: org.la4j.vector.sparse.SparseVector#get(int)
	CALLEE: org.la4j.vector.dense.BasicVector#get(int)
CALLER: org.la4j.iterator.ColumnMajorMatrixIterator#orElseSubtract(org.la4j.iterator.ColumnMajorMatrixIterator)
	CALLEE: org.la4j.iterator.CursorIterator#orElse(org.la4j.iterator.CursorIterator,org.la4j.iterator.JoinFunction)
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#<init>(org.la4j.iterator.CursorIterator,int,int)
CALLER: static org.la4j.matrix.sparse.RowMajorSparseMatrix#from1DArray(int,int,double[])
	CALLEE: static org.la4j.matrix.sparse.CRSMatrix#from1DArray(int,int,double[])
CALLER: org.la4j.matrix.AbstractMatrix#to(org.la4j.matrix.MatrixFactory)
	CALLEE: org.la4j.matrix.sparse.ColumnMajorSparseMatrix#apply(org.la4j.matrix.operation.MatrixMatrixOperation,org.la4j.matrix.Matrix)
	CALLEE: org.la4j.matrix.sparse.RowMajorSparseMatrix#apply(org.la4j.matrix.operation.MatrixMatrixOperation,org.la4j.matrix.Matrix)
	CALLEE: org.la4j.matrix.dense.DenseMatrix#apply(org.la4j.matrix.operation.MatrixMatrixOperation,org.la4j.matrix.Matrix)
CALLER: org.la4j.matrix.sparse.CRSMatrix#<init>(int,int,int)
	CALLEE: org.la4j.matrix.sparse.RowMajorSparseMatrix#<init>(org.la4j.factory.Factory,int,int)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#ensureCardinalityIsCorrect(long,long,long)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#align(int)
CALLER: org.la4j.iterator.CursorToRowMajorMatrixIterator#columnIndex()
	CALLEE: org.la4j.iterator.VectorIterator#cursor()
	CALLEE: org.la4j.iterator.RowMajorMatrixIterator#cursor()
	CALLEE: org.la4j.iterator.ColumnMajorMatrixIterator#cursor()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#rowIndex()
CALLER: org.la4j.matrix.AbstractMatrix#minInRow(int)
	CALLEE: static org.la4j.matrix.Matrices#mkMinAccumulator()
	CALLEE: org.la4j.matrix.AbstractMatrix#foldRow(int,org.la4j.matrix.functor.MatrixAccumulator)
CALLER: org.la4j.matrix.dense.Basic2DMatrix#<init>(int,int)
CALLER: static org.la4j.matrix.sparse.RowMajorSparseMatrix#zero(int,int)
	CALLEE: static org.la4j.matrix.sparse.CRSMatrix#zero(int,int)
CALLER: static org.la4j.matrix.dense.DenseMatrix#random(int,int,java.util.Random)
	CALLEE: static org.la4j.matrix.dense.Basic2DMatrix#random(int,int,java.util.Random)
CALLER: org.la4j.matrix.AbstractMatrix#rowMajorIterator()
CALLER: org.la4j.factory.Basic2DFactory#createRandomSymmetricMatrix(int,java.util.Random)
	CALLEE: static org.la4j.matrix.dense.Basic2DMatrix#randomSymmetric(int,java.util.Random)
CALLER: org.la4j.factory.CompressedFactory#createVector(int)
	CALLEE: static org.la4j.vector.sparse.CompressedVector#zero(int)
CALLER: org.la4j.matrix.operation.ooplace.OoPlaceMatrixByVectorMultiplication#apply(org.la4j.matrix.sparse.RowMajorSparseMatrix,org.la4j.vector.sparse.SparseVector)
	CALLEE: org.la4j.matrix.operation.ooplace.OoPlaceMatrixByVectorMultiplication#apply(org.la4j.matrix.sparse.RowMajorSparseMatrix,org.la4j.vector.sparse.SparseVector)
CALLER: org.la4j.iterator.CursorToColumnMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#hasNext()
CALLER: org.la4j.matrix.AbstractMatrix#iterator()
	CALLEE: org.la4j.matrix.AbstractMatrix#iterator()
	CALLEE: org.la4j.matrix.sparse.ColumnMajorSparseMatrix#iterator()
CALLER: org.la4j.decomposition.RawLUDecompositor#decompose(org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#copy()
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
	CALLEE: org.la4j.factory.Basic1DFactory#createIdentityMatrix(int)
	CALLEE: org.la4j.factory.Basic2DFactory#createIdentityMatrix(int)
	CALLEE: org.la4j.factory.CRSFactory#createIdentityMatrix(int)
	CALLEE: org.la4j.factory.CCSFactory#createIdentityMatrix(int)
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
	CALLEE: static org.la4j.matrix.Matrices#asMinusFunction(double)
	CALLEE: org.la4j.matrix.AbstractMatrix#update(int,int,org.la4j.matrix.functor.MatrixFunction)
	CALLEE: org.la4j.matrix.AbstractMatrix#swapRows(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#swapRows(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#swapRows(int,int)
	CALLEE: static org.la4j.matrix.Matrices#asDivFunction(double)
CALLER: org.la4j.vector.AbstractVector#multiply(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.vector.sparse.SparseVector#apply(org.la4j.vector.operation.VectorMatrixOperation,org.la4j.matrix.Matrix)
	CALLEE: org.la4j.vector.dense.DenseVector#apply(org.la4j.vector.operation.VectorMatrixOperation,org.la4j.matrix.Matrix)
CALLER: org.la4j.matrix.AbstractMatrix#resizeColumns(int,org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#resize(int,int,org.la4j.factory.Factory)
CALLER: static org.la4j.matrix.sparse.RowMajorSparseMatrix#block(org.la4j.matrix.Matrix,org.la4j.matrix.Matrix,org.la4j.matrix.Matrix,org.la4j.matrix.Matrix)
	CALLEE: static org.la4j.matrix.sparse.CRSMatrix#block(org.la4j.matrix.Matrix,org.la4j.matrix.Matrix,org.la4j.matrix.Matrix,org.la4j.matrix.Matrix)
CALLER: org.la4j.matrix.operation.SimpleMatrixMatrixOperation#apply(org.la4j.matrix.dense.DenseMatrix,org.la4j.matrix.sparse.RowMajorSparseMatrix)
	CALLEE: org.la4j.matrix.operation.inplace.InPlaceCopyMatrixToMatrix#applySimple(org.la4j.matrix.dense.DenseMatrix,org.la4j.matrix.sparse.SparseMatrix)
CALLER: org.la4j.vector.AbstractVector#toColumnMatrix(org.la4j.factory.Factory)
	CALLEE: org.la4j.factory.Basic1DFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.Basic2DFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.CRSFactory#createMatrix(int,int)
	CALLEE: org.la4j.factory.CCSFactory#createMatrix(int,int)
	CALLEE: org.la4j.matrix.AbstractMatrix#setColumn(int,org.la4j.vector.Vector)
CALLER: org.la4j.linear.GaussianSolver#solve(org.la4j.vector.Vector,org.la4j.factory.Factory)
	CALLEE: org.la4j.linear.AbstractSolver#ensureRHSIsCorrect(org.la4j.vector.Vector)
	CALLEE: org.la4j.linear.AbstractSolver#unknowns()
	CALLEE: org.la4j.matrix.AbstractMatrix#setColumn(int,org.la4j.vector.Vector)
	CALLEE: org.la4j.linear.GaussianSolver#triangularizeWithPivoting(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.matrix.AbstractMatrix#diagonalProduct()
	CALLEE: org.la4j.linear.AbstractSolver#fail(java.lang.String)
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
	CALLEE: org.la4j.factory.BasicFactory#createVector(int)
	CALLEE: org.la4j.factory.CompressedFactory#createVector(int)
	CALLEE: org.la4j.linear.GaussianSolver#backSubstitution(org.la4j.matrix.Matrix,org.la4j.vector.Vector)
CALLER: org.la4j.matrix.dense.DenseMatrix#<init>(org.la4j.factory.Factory,int,int)
	CALLEE: org.la4j.matrix.AbstractMatrix#<init>(org.la4j.factory.Factory,int,int)
CALLER: org.la4j.matrix.sparse.SparseMatrix#foldNonZeroInRows(org.la4j.vector.functor.VectorAccumulator)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#foldNonZeroInRow(int,org.la4j.vector.functor.VectorAccumulator)
CALLER: org.la4j.matrix.operation.inplace.InPlaceCopyMatrixToMatrix#fromSparseToMatrix(org.la4j.matrix.sparse.SparseMatrix,org.la4j.matrix.Matrix)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#nonZeroIterator()
	CALLEE: org.la4j.matrix.sparse.ColumnMajorSparseMatrix#nonZeroIterator()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#rowIndex()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#rowIndex()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#columnIndex()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#columnIndex()
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#set(int,int,double)
CALLER: org.la4j.iterator.VectorIterator#orElse(org.la4j.iterator.VectorIterator,org.la4j.iterator.JoinFunction)
	CALLEE: org.la4j.iterator.CursorIterator#orElse(org.la4j.iterator.CursorIterator,org.la4j.iterator.JoinFunction)
	CALLEE: org.la4j.iterator.CursorToVectorIterator#<init>(org.la4j.iterator.CursorIterator,int)
CALLER: org.la4j.matrix.AbstractMatrix#swapRows(int,int)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#getRow(int)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#getRow(int)
	CALLEE: org.la4j.matrix.dense.DenseMatrix#getRow(int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#getRow(int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#getRow(int)
	CALLEE: org.la4j.matrix.AbstractMatrix#setRow(int,org.la4j.vector.Vector)
CALLER: org.la4j.matrix.sparse.CRSMatrix#growUp()
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#capacity()
CALLER: static org.la4j.matrix.Matrices#asPlusFunction(double)
CALLER: org.la4j.matrix.operation.ooplace.OoPlaceMatricesAddition#apply(org.la4j.matrix.dense.DenseMatrix,org.la4j.matrix.dense.DenseMatrix)
	CALLEE: org.la4j.matrix.operation.ooplace.OoPlaceMatricesAddition#apply(org.la4j.matrix.dense.DenseMatrix,org.la4j.matrix.dense.DenseMatrix)
CALLER: org.la4j.vector.AbstractVector#euclideanNorm()
	CALLEE: static org.la4j.vector.Vectors#mkEuclideanNormAccumulator()
	CALLEE: org.la4j.vector.AbstractVector#fold(org.la4j.vector.functor.VectorAccumulator)
CALLER: org.la4j.decomposition.EigenDecompositor#applicableTo(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
CALLER: org.la4j.vector.AbstractVector#select(int[],org.la4j.factory.Factory)
	CALLEE: org.la4j.vector.AbstractVector#select(int[])
	CALLEE: static org.la4j.factory.Factory#asVectorFactory(org.la4j.factory.Factory)
	CALLEE: org.la4j.vector.sparse.CompressedVector#to(org.la4j.vector.VectorFactory)
	CALLEE: org.la4j.vector.dense.BasicVector#to(org.la4j.vector.VectorFactory)
CALLER: org.la4j.vector.dense.DenseVector#toColumnMatrix()
	CALLEE: static org.la4j.matrix.dense.Basic2DMatrix#zero(int,int)
	CALLEE: org.la4j.vector.dense.BasicVector#get(int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#set(int,int,double)
CALLER: org.la4j.matrix.AbstractMatrix#updateColumn(int,org.la4j.vector.functor.VectorFunction)
	CALLEE: org.la4j.matrix.AbstractMatrix#iteratorOfColumn(int)
	CALLEE: org.la4j.iterator.CursorToVectorIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#next()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#index()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#set(double)
CALLER: org.la4j.iterator.CursorIterator#orElse(org.la4j.iterator.CursorIterator,org.la4j.iterator.JoinFunction)
CALLER: org.la4j.matrix.AbstractMatrix#iterator()
	CALLEE: org.la4j.matrix.AbstractMatrix#rowMajorIterator()
CALLER: org.la4j.vector.operation.ooplace.OoPlaceVectorByMatrixMultiplication#apply(org.la4j.vector.dense.DenseVector,org.la4j.matrix.sparse.ColumnMajorSparseMatrix)
	CALLEE: org.la4j.vector.operation.ooplace.OoPlaceVectorByMatrixMultiplication#apply(org.la4j.vector.dense.DenseVector,org.la4j.matrix.sparse.ColumnMajorSparseMatrix)
CALLER: org.la4j.factory.CCSFactory#createConstantMatrix(int,int,double)
CALLER: org.la4j.vector.dense.BasicVector#<init>(org.la4j.vector.source.VectorSource)
	CALLEE: org.la4j.vector.source.RandomVectorSource#length()
	CALLEE: org.la4j.vector.source.LoopbackVectorSource#length()
	CALLEE: org.la4j.vector.source.ArrayVectorSource#length()
	CALLEE: org.la4j.vector.source.StreamVectorSource#length()
	CALLEE: org.la4j.vector.dense.BasicVector#<init>(int)
	CALLEE: org.la4j.vector.source.RandomVectorSource#get(int)
	CALLEE: org.la4j.vector.source.LoopbackVectorSource#get(int)
	CALLEE: org.la4j.vector.source.ArrayVectorSource#get(int)
	CALLEE: org.la4j.vector.source.StreamVectorSource#get(int)
CALLER: org.la4j.factory.Basic1DFactory#createRandomSymmetricMatrix(int,java.util.Random)
	CALLEE: static org.la4j.matrix.dense.Basic1DMatrix#randomSymmetric(int,java.util.Random)
CALLER: org.la4j.io.SymbolSeparatedStream#writeVector(org.la4j.vector.Vector)
	CALLEE: org.la4j.io.AbstractStream#ensureWriterInitialized()
	CALLEE: org.la4j.vector.AbstractVector#length()
	CALLEE: org.la4j.vector.sparse.SparseVector#get(int)
	CALLEE: org.la4j.vector.dense.BasicVector#get(int)
	CALLEE: org.la4j.io.AbstractStream#closeWriter()
CALLER: org.la4j.matrix.sparse.SparseMatrix#eachNonZeroInColumn(int,org.la4j.vector.functor.VectorProcedure)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#nonZeroIteratorOfColumn(int)
	CALLEE: org.la4j.iterator.CursorToVectorIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#next()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#index()
	CALLEE: org.la4j.io.MatrixMarketStream.SparseVectorWriteProcedure#apply(int,double)
CALLER: org.la4j.matrix.sparse.RowMajorSparseMatrix#apply(org.la4j.matrix.operation.MatrixVectorOperation,org.la4j.vector.Vector)
	CALLEE: org.la4j.matrix.operation.MatrixVectorOperation#partiallyApply(org.la4j.matrix.sparse.RowMajorSparseMatrix)
	CALLEE: org.la4j.vector.sparse.SparseVector#apply(org.la4j.vector.operation.VectorOperation)
	CALLEE: org.la4j.vector.dense.DenseVector#apply(org.la4j.vector.operation.VectorOperation)
CALLER: org.la4j.iterator.CursorToRowMajorMatrixIterator#rowIndex()
	CALLEE: org.la4j.iterator.VectorIterator#cursor()
	CALLEE: org.la4j.iterator.RowMajorMatrixIterator#cursor()
	CALLEE: org.la4j.iterator.ColumnMajorMatrixIterator#cursor()
CALLER: org.la4j.vector.AbstractVector#sliceLeft(int)
	CALLEE: org.la4j.vector.AbstractVector#slice(int,int)
CALLER: org.la4j.factory.CompressedFactory#createVector(double[])
	CALLEE: static org.la4j.vector.sparse.CompressedVector#fromArray(double[])
CALLER: org.la4j.matrix.AbstractMatrix#swapColumns(int,int)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#getColumn(int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#getColumn(int)
	CALLEE: org.la4j.matrix.dense.DenseMatrix#getColumn(int)
	CALLEE: org.la4j.matrix.AbstractMatrix#setColumn(int,org.la4j.vector.Vector)
CALLER: org.la4j.matrix.AbstractMatrix#assignRow(int,double)
	CALLEE: org.la4j.matrix.AbstractMatrix#setRow(int,double)
CALLER: org.la4j.matrix.AbstractMatrix#removeLastRow()
	CALLEE: org.la4j.matrix.AbstractMatrix#removeRow(int)
CALLER: org.la4j.matrix.AbstractMatrix#transformColumn(int,org.la4j.matrix.functor.MatrixFunction)
	CALLEE: org.la4j.matrix.AbstractMatrix#transformColumn(int,org.la4j.matrix.functor.MatrixFunction,org.la4j.factory.Factory)
CALLER: org.la4j.matrix.Matrices.PositiveDefiniteMatrixPredicate#test(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
	CALLEE: org.la4j.matrix.AbstractMatrix#sliceTopLeft(int,int)
	CALLEE: org.la4j.matrix.AbstractMatrix#determinant()
CALLER: org.la4j.factory.CRSFactory#createConstantMatrix(int,int,double)
CALLER: static org.la4j.vector.Vectors#mkEuclideanNormAccumulator()
CALLER: org.la4j.vector.sparse.CompressedVector#blankOfLength(int)
	CALLEE: static org.la4j.vector.sparse.CompressedVector#zero(int)
CALLER: org.la4j.factory.CompressedFactory#createVector()
	CALLEE: static org.la4j.vector.sparse.CompressedVector#zero(int)
CALLER: static org.la4j.vector.Vectors#asSingletonVector(double)
	CALLEE: org.la4j.factory.BasicFactory#createVector(double[])
	CALLEE: org.la4j.factory.CompressedFactory#createVector(double[])
CALLER: org.la4j.factory.Basic1DFactory#createMatrix(int,int)
	CALLEE: static org.la4j.matrix.dense.Basic1DMatrix#zero(int,int)
CALLER: org.la4j.vector.AbstractVector#add(double,org.la4j.factory.Factory)
	CALLEE: org.la4j.vector.AbstractVector#ensureFactoryIsNotNull(org.la4j.factory.Factory)
	CALLEE: org.la4j.vector.AbstractVector#add(double)
	CALLEE: org.la4j.vector.sparse.SparseVector#add(double)
	CALLEE: static org.la4j.factory.Factory#asVectorFactory(org.la4j.factory.Factory)
	CALLEE: org.la4j.vector.sparse.CompressedVector#to(org.la4j.vector.VectorFactory)
	CALLEE: org.la4j.vector.dense.BasicVector#to(org.la4j.vector.VectorFactory)
CALLER: org.la4j.linear.SweepSolver#solve(org.la4j.vector.Vector,org.la4j.factory.Factory)
	CALLEE: org.la4j.linear.AbstractSolver#ensureRHSIsCorrect(org.la4j.vector.Vector)
	CALLEE: org.la4j.matrix.AbstractMatrix#copy()
	CALLEE: org.la4j.vector.AbstractVector#copy()
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
	CALLEE: org.la4j.factory.BasicFactory#createVector(int)
	CALLEE: org.la4j.factory.CompressedFactory#createVector(int)
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.AbstractMatrix#swapRows(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#swapRows(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#swapRows(int,int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#swapElements(int,int)
	CALLEE: org.la4j.vector.dense.BasicVector#swapElements(int,int)
	CALLEE: static org.la4j.matrix.Matrices#asMinusFunction(double)
	CALLEE: org.la4j.matrix.AbstractMatrix#update(int,int,org.la4j.matrix.functor.MatrixFunction)
	CALLEE: org.la4j.vector.sparse.SparseVector#get(int)
	CALLEE: org.la4j.vector.dense.BasicVector#get(int)
	CALLEE: static org.la4j.vector.Vectors#asMinusFunction(double)
	CALLEE: org.la4j.vector.AbstractVector#update(int,org.la4j.vector.functor.VectorFunction)
	CALLEE: org.la4j.vector.sparse.CompressedVector#set(int,double)
	CALLEE: org.la4j.vector.dense.BasicVector#set(int,double)
CALLER: org.la4j.matrix.operation.inplace.InPlaceCopyMatrixToMatrix#applySimple(org.la4j.matrix.dense.DenseMatrix,org.la4j.matrix.sparse.SparseMatrix)
	CALLEE: org.la4j.matrix.AbstractMatrix#iterator()
	CALLEE: org.la4j.matrix.sparse.ColumnMajorSparseMatrix#iterator()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#rowIndex()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#rowIndex()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#columnIndex()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#columnIndex()
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#set(double)
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#set(double)
CALLER: org.la4j.factory.CRSFactory#createRandomMatrix(int,int,java.util.Random)
	CALLEE: static org.la4j.matrix.sparse.CRSMatrix#random(int,int,double,java.util.Random)
CALLER: org.la4j.matrix.AbstractMatrix#divide(double,org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#divide(double)
	CALLEE: static org.la4j.factory.Factory#asMatrixFactory(org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#to(org.la4j.matrix.MatrixFactory)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#to(org.la4j.matrix.MatrixFactory)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#to(org.la4j.matrix.MatrixFactory)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#to(org.la4j.matrix.MatrixFactory)
CALLER: static org.la4j.vector.Vectors#asSumFunctionAccumulator(double,org.la4j.vector.functor.VectorFunction)
CALLER: org.la4j.vector.sparse.CompressedVector#each(org.la4j.vector.functor.VectorProcedure)
	CALLEE: org.la4j.io.MatrixMarketStream.SparseVectorWriteProcedure#apply(int,double)
CALLER: org.la4j.vector.sparse.CompressedVector#readExternal(java.io.ObjectInput)
	CALLEE: org.la4j.vector.sparse.CompressedVector#align(int,int)
CALLER: org.la4j.matrix.AbstractMatrix#divide(double)
	CALLEE: org.la4j.matrix.AbstractMatrix#multiply(double)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#multiply(double)
CALLER: org.la4j.decomposition.RawQRDecompositor#applicableTo(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
CALLER: org.la4j.matrix.AbstractMatrix#determinant()
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
	CALLEE: org.la4j.decomposition.RawQRDecompositor#decompose(org.la4j.factory.Factory)
	CALLEE: org.la4j.decomposition.QRDecompositor#decompose(org.la4j.factory.Factory)
	CALLEE: org.la4j.decomposition.CholeskyDecompositor#decompose(org.la4j.factory.Factory)
	CALLEE: org.la4j.decomposition.RawLUDecompositor#decompose(org.la4j.factory.Factory)
	CALLEE: org.la4j.decomposition.LUDecompositor#decompose(org.la4j.factory.Factory)
	CALLEE: org.la4j.decomposition.EigenDecompositor#decompose(org.la4j.factory.Factory)
	CALLEE: org.la4j.decomposition.SingularValueDecompositor#decompose(org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#diagonalProduct()
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
CALLER: org.la4j.matrix.AbstractMatrix#add(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
	CALLEE: org.la4j.matrix.AbstractMatrix#fail(java.lang.String)
	CALLEE: org.la4j.matrix.sparse.ColumnMajorSparseMatrix#apply(org.la4j.matrix.operation.MatrixMatrixOperation,org.la4j.matrix.Matrix)
	CALLEE: org.la4j.matrix.sparse.RowMajorSparseMatrix#apply(org.la4j.matrix.operation.MatrixMatrixOperation,org.la4j.matrix.Matrix)
	CALLEE: org.la4j.matrix.dense.DenseMatrix#apply(org.la4j.matrix.operation.MatrixMatrixOperation,org.la4j.matrix.Matrix)
CALLER: org.la4j.vector.AbstractVector#is(org.la4j.vector.functor.VectorPredicate)
	CALLEE: org.la4j.vector.AbstractVector#iterator()
	CALLEE: org.la4j.vector.sparse.CompressedVector#iterator()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#next()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#index()
CALLER: org.la4j.matrix.AbstractMatrix#insert(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
	CALLEE: org.la4j.matrix.AbstractMatrix#insert(org.la4j.matrix.Matrix,int,int,int,int,int,int)
CALLER: static org.la4j.vector.dense.BasicVector#fromArray(double[])
CALLER: org.la4j.matrix.AbstractMatrix#updateRow(int,org.la4j.matrix.functor.MatrixFunction)
	CALLEE: org.la4j.matrix.AbstractMatrix#updateRow(int,org.la4j.vector.functor.VectorFunction)
CALLER: org.la4j.matrix.source.StreamMatrixSource#columns()
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
CALLER: org.la4j.matrix.sparse.CCSMatrix#iteratorOrNonZeroColumns()
CALLER: org.la4j.vector.AbstractVector#each(org.la4j.vector.functor.VectorProcedure)
	CALLEE: org.la4j.vector.AbstractVector#iterator()
	CALLEE: org.la4j.vector.sparse.CompressedVector#iterator()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#next()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#index()
	CALLEE: org.la4j.io.MatrixMarketStream.SparseVectorWriteProcedure#apply(int,double)
CALLER: org.la4j.vector.sparse.CompressedVector#set(int,double)
	CALLEE: org.la4j.vector.sparse.SparseVector#ensureIndexIsInBounds(int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#searchForIndex(int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#remove(int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#insert(int,int,double)
CALLER: org.la4j.matrix.AbstractMatrix#maxInRow(int)
	CALLEE: static org.la4j.matrix.Matrices#mkMaxAccumulator()
	CALLEE: org.la4j.matrix.AbstractMatrix#foldRow(int,org.la4j.matrix.functor.MatrixAccumulator)
CALLER: org.la4j.matrix.sparse.SparseMatrix#<init>(org.la4j.factory.Factory,int,int)
	CALLEE: org.la4j.matrix.AbstractMatrix#<init>(org.la4j.factory.Factory,int,int)
CALLER: org.la4j.vector.AbstractVector#non(org.la4j.vector.functor.VectorPredicate)
	CALLEE: org.la4j.vector.AbstractVector#is(org.la4j.vector.functor.VectorPredicate)
CALLER: org.la4j.matrix.AbstractMatrix#add(org.la4j.matrix.Matrix,org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#ensureFactoryIsNotNull(org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#add(org.la4j.matrix.Matrix)
	CALLEE: static org.la4j.factory.Factory#asMatrixFactory(org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#to(org.la4j.matrix.MatrixFactory)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#to(org.la4j.matrix.MatrixFactory)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#to(org.la4j.matrix.MatrixFactory)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#to(org.la4j.matrix.MatrixFactory)
CALLER: org.la4j.matrix.dense.Basic1DMatrix#<init>(org.la4j.matrix.source.MatrixSource)
	CALLEE: org.la4j.matrix.source.IdentityMatrixSource#rows()
	CALLEE: org.la4j.matrix.source.RandomSymmetricMatrixSource#rows()
	CALLEE: org.la4j.matrix.source.StreamMatrixSource#rows()
	CALLEE: org.la4j.matrix.source.LoopbackMatrixSource#rows()
	CALLEE: org.la4j.matrix.source.RandomMatrixSource#rows()
	CALLEE: org.la4j.matrix.source.Array1DMatrixSource#rows()
	CALLEE: org.la4j.matrix.source.Array2DMatrixSource#rows()
	CALLEE: org.la4j.matrix.source.IdentityMatrixSource#columns()
	CALLEE: org.la4j.matrix.source.RandomSymmetricMatrixSource#columns()
	CALLEE: org.la4j.matrix.source.StreamMatrixSource#columns()
	CALLEE: org.la4j.matrix.source.LoopbackMatrixSource#columns()
	CALLEE: org.la4j.matrix.source.RandomMatrixSource#columns()
	CALLEE: org.la4j.matrix.source.Array1DMatrixSource#columns()
	CALLEE: org.la4j.matrix.source.Array2DMatrixSource#columns()
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#<init>(int,int)
	CALLEE: org.la4j.matrix.source.IdentityMatrixSource#get(int,int)
	CALLEE: org.la4j.matrix.source.RandomSymmetricMatrixSource#get(int,int)
	CALLEE: org.la4j.matrix.source.StreamMatrixSource#get(int,int)
	CALLEE: org.la4j.matrix.source.LoopbackMatrixSource#get(int,int)
	CALLEE: org.la4j.matrix.source.RandomMatrixSource#get(int,int)
	CALLEE: org.la4j.matrix.source.Array1DMatrixSource#get(int,int)
	CALLEE: org.la4j.matrix.source.Array2DMatrixSource#get(int,int)
CALLER: org.la4j.io.MatrixMarketStream#parseMatrix(org.la4j.factory.Factory)
	CALLEE: org.la4j.io.MatrixMarketStream#ensureNext(java.lang.String)
	CALLEE: org.la4j.io.MatrixMarketStream#nextToken()
	CALLEE: org.la4j.io.MatrixMarketStream#chooseNotNull(org.la4j.factory.Factory,org.la4j.factory.Factory)
	CALLEE: org.la4j.io.MatrixMarketStream#parseDenseMatrix(org.la4j.factory.Factory)
	CALLEE: org.la4j.io.MatrixMarketStream#parseSparseMatrix(org.la4j.factory.Factory)
CALLER: static org.la4j.matrix.Matrices#asMatrix1x1(double)
CALLER: org.la4j.matrix.AbstractMatrix#setRow(int,org.la4j.vector.Vector)
	CALLEE: org.la4j.matrix.AbstractMatrix#ensureArgumentIsNotNull(java.lang.Object,java.lang.String)
	CALLEE: org.la4j.vector.AbstractVector#length()
	CALLEE: org.la4j.matrix.AbstractMatrix#fail(java.lang.String)
	CALLEE: org.la4j.vector.sparse.SparseVector#get(int)
	CALLEE: org.la4j.vector.dense.BasicVector#get(int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#set(int,int,double)
CALLER: org.la4j.linear.JacobiSolver#<init>(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.linear.AbstractSolver#<init>(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.matrix.AbstractMatrix#copy()
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
	CALLEE: static org.la4j.matrix.Matrices#asDivFunction(double)
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
	CALLEE: org.la4j.matrix.AbstractMatrix#update(int,int,org.la4j.matrix.functor.MatrixFunction)
CALLER: org.la4j.matrix.AbstractMatrix#eachInColumn(int,org.la4j.vector.functor.VectorProcedure)
	CALLEE: org.la4j.matrix.AbstractMatrix#iteratorOfColumn(int)
	CALLEE: org.la4j.iterator.CursorToVectorIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#next()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#index()
	CALLEE: org.la4j.io.MatrixMarketStream.SparseVectorWriteProcedure#apply(int,double)
CALLER: static org.la4j.matrix.Matrices#asRandomSymmetricSource(int)
	CALLEE: org.la4j.matrix.source.RandomSymmetricMatrixSource#<init>(int)
CALLER: org.la4j.matrix.AbstractMatrix#resize(int,int,org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#copyOfShape(int,int)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#copyOfShape(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#copyOfShape(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#copyOfShape(int,int)
	CALLEE: static org.la4j.factory.Factory#asMatrixFactory(org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#to(org.la4j.matrix.MatrixFactory)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#to(org.la4j.matrix.MatrixFactory)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#to(org.la4j.matrix.MatrixFactory)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#to(org.la4j.matrix.MatrixFactory)
CALLER: static org.la4j.matrix.dense.Basic1DMatrix#from1DArray(int,int,double[])
CALLER: org.la4j.matrix.operation.inplace.InPlaceCopyMatrixToMatrix#apply(org.la4j.matrix.sparse.ColumnMajorSparseMatrix,org.la4j.matrix.sparse.ColumnMajorSparseMatrix)
	CALLEE: org.la4j.matrix.operation.inplace.InPlaceCopyMatrixToMatrix#apply(org.la4j.matrix.sparse.ColumnMajorSparseMatrix,org.la4j.matrix.sparse.ColumnMajorSparseMatrix)
CALLER: org.la4j.matrix.AbstractMatrix#mkString(java.lang.String,java.lang.String)
	CALLEE: org.la4j.matrix.AbstractMatrix#mkString(java.text.NumberFormat,java.lang.String,java.lang.String)
CALLER: static org.la4j.vector.Vectors#asVector(double[])
	CALLEE: org.la4j.factory.BasicFactory#createVector(double[])
	CALLEE: org.la4j.factory.CompressedFactory#createVector(double[])
CALLER: org.la4j.vector.dense.BasicVector#copyOfLength(int)
	CALLEE: org.la4j.vector.AbstractVector#ensureLengthIsCorrect(int)
CALLER: org.la4j.decomposition.EigenDecompositor#hqr2(org.la4j.matrix.Matrix,org.la4j.matrix.Matrix,org.la4j.vector.Vector,org.la4j.vector.Vector)
	CALLEE: org.la4j.vector.AbstractVector#length()
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#set(int,double)
	CALLEE: org.la4j.vector.dense.BasicVector#set(int,double)
	CALLEE: static org.la4j.matrix.Matrices#asPlusFunction(double)
	CALLEE: org.la4j.matrix.AbstractMatrix#update(int,int,org.la4j.matrix.functor.MatrixFunction)
	CALLEE: org.la4j.vector.sparse.SparseVector#get(int)
	CALLEE: org.la4j.vector.dense.BasicVector#get(int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#set(int,int,double)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#set(int,int,double)
	CALLEE: static org.la4j.matrix.Matrices#asMinusFunction(double)
	CALLEE: static org.la4j.matrix.Matrices#asDivFunction(double)
	CALLEE: org.la4j.decomposition.EigenDecompositor#cdiv(double,double,double,double)
CALLER: org.la4j.matrix.operation.ooplace.OoPlaceMatricesAddition#apply(org.la4j.matrix.sparse.RowMajorSparseMatrix,org.la4j.matrix.sparse.RowMajorSparseMatrix)
	CALLEE: org.la4j.matrix.operation.ooplace.OoPlaceMatricesAddition#apply(org.la4j.matrix.sparse.RowMajorSparseMatrix,org.la4j.matrix.sparse.RowMajorSparseMatrix)
CALLER: org.la4j.vector.sparse.CompressedVector#nonZeroAt(int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#searchForIndex(int)
CALLER: org.la4j.vector.operation.ooplace.OoPlaceVectorByMatrixMultiplication#apply(org.la4j.vector.dense.DenseVector,org.la4j.matrix.dense.DenseMatrix)
	CALLEE: org.la4j.vector.AbstractVector#length()
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
	CALLEE: org.la4j.vector.dense.BasicVector#blankOfLength(int)
	CALLEE: org.la4j.vector.dense.BasicVector#get(int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#set(int,double)
	CALLEE: org.la4j.vector.dense.BasicVector#set(int,double)
CALLER: org.la4j.vector.AbstractVector#transform(org.la4j.vector.functor.VectorFunction)
	CALLEE: org.la4j.vector.AbstractVector#iterator()
	CALLEE: org.la4j.vector.sparse.CompressedVector#iterator()
	CALLEE: org.la4j.vector.AbstractVector#blank()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#next()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#index()
	CALLEE: org.la4j.vector.sparse.CompressedVector#set(int,double)
	CALLEE: org.la4j.vector.dense.BasicVector#set(int,double)
CALLER: org.la4j.linear.ForwardBackSubstitutionSolver#<init>(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.linear.AbstractSolver#<init>(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.decomposition.AbstractDecompositor#decompose()
CALLER: org.la4j.factory.CRSFactory#createRandomSymmetricMatrix(int,java.util.Random)
	CALLEE: static org.la4j.matrix.sparse.CRSMatrix#randomSymmetric(int,double,java.util.Random)
CALLER: org.la4j.linear.LeastNormSolver#solve(org.la4j.vector.Vector,org.la4j.factory.Factory)
	CALLEE: org.la4j.linear.AbstractSolver#ensureRHSIsCorrect(org.la4j.vector.Vector)
	CALLEE: org.la4j.linear.AbstractSolver#self()
	CALLEE: org.la4j.matrix.AbstractMatrix#rotate(org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#multiply(org.la4j.matrix.Matrix,org.la4j.factory.Factory)
	CALLEE: org.la4j.inversion.GaussJordanInverter#inverse(org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#multiply(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.matrix.AbstractMatrix#multiply(org.la4j.vector.Vector)
CALLER: org.la4j.matrix.AbstractMatrix#resizeColumns(int)
	CALLEE: org.la4j.matrix.AbstractMatrix#copyOfColumns(int)
CALLER: org.la4j.factory.CompressedFactory#createVector(org.la4j.vector.Vector)
	CALLEE: org.la4j.vector.sparse.CompressedVector#<init>(org.la4j.vector.Vector)
CALLER: org.la4j.decomposition.EigenDecompositor#decomposeSymmetricMatrix(org.la4j.matrix.Matrix,org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#copy()
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
	CALLEE: org.la4j.factory.Basic1DFactory#createIdentityMatrix(int)
	CALLEE: org.la4j.factory.Basic2DFactory#createIdentityMatrix(int)
	CALLEE: org.la4j.factory.CRSFactory#createIdentityMatrix(int)
	CALLEE: org.la4j.factory.CCSFactory#createIdentityMatrix(int)
	CALLEE: org.la4j.decomposition.EigenDecompositor#generateR(org.la4j.matrix.Matrix,org.la4j.factory.Factory)
	CALLEE: static org.la4j.vector.Vectors#mkEuclideanNormAccumulator()
	CALLEE: org.la4j.vector.AbstractVector#fold(org.la4j.vector.functor.VectorAccumulator)
	CALLEE: org.la4j.decomposition.EigenDecompositor#findMax(org.la4j.vector.Vector)
	CALLEE: org.la4j.decomposition.EigenDecompositor#findMax(org.la4j.matrix.Matrix,int)
	CALLEE: org.la4j.decomposition.EigenDecompositor#regenerateU(org.la4j.matrix.Matrix,org.la4j.matrix.Matrix,int,int,int,int)
	CALLEE: org.la4j.matrix.AbstractMatrix#multiply(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.matrix.sparse.ColumnMajorSparseMatrix#transpose()
	CALLEE: org.la4j.matrix.sparse.RowMajorSparseMatrix#transpose()
	CALLEE: org.la4j.matrix.AbstractMatrix#transpose()
	CALLEE: org.la4j.decomposition.EigenDecompositor#generateRi(org.la4j.matrix.Matrix,int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#set(int,double)
	CALLEE: org.la4j.vector.dense.BasicVector#set(int,double)
CALLER: static org.la4j.matrix.sparse.CRSMatrix#zero(int,int)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#<init>(int,int)
CALLER: org.la4j.io.MatrixMarketStream#<init>(java.io.InputStream)
	CALLEE: org.la4j.io.AbstractStream#<init>(java.io.InputStream)
CALLER: org.la4j.factory.CCSFactory#createMatrix(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#<init>(org.la4j.matrix.Matrix)
CALLER: org.la4j.matrix.operation.SymmetricMatrixOperation#apply(org.la4j.matrix.sparse.RowMajorSparseMatrix,org.la4j.matrix.dense.DenseMatrix)
	CALLEE: org.la4j.matrix.operation.ooplace.OoPlaceMatricesAddition#applySymmetric(org.la4j.matrix.dense.DenseMatrix,org.la4j.matrix.sparse.SparseMatrix)
CALLER: org.la4j.linear.AbstractSolver#<init>(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.linear.SquareRootSolver#applicableTo(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.linear.SeidelSolver#applicableTo(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.linear.GaussianSolver#applicableTo(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.linear.SweepSolver#applicableTo(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.linear.LeastSquaresSolver#applicableTo(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.linear.ForwardBackSubstitutionSolver#applicableTo(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.linear.LeastNormSolver#applicableTo(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.linear.JacobiSolver#applicableTo(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.linear.AbstractSolver#fail(java.lang.String)
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
CALLER: static org.la4j.matrix.dense.Basic1DMatrix#diagonal(int,double)
CALLER: static org.la4j.vector.Vectors#asMulFunction(double)
CALLER: org.la4j.matrix.operation.inplace.InPlaceCopyMatrixToMatrix#apply(org.la4j.matrix.sparse.RowMajorSparseMatrix,org.la4j.matrix.sparse.ColumnMajorSparseMatrix)
	CALLEE: org.la4j.matrix.operation.inplace.InPlaceCopyMatrixToMatrix#apply(org.la4j.matrix.sparse.RowMajorSparseMatrix,org.la4j.matrix.sparse.ColumnMajorSparseMatrix)
CALLER: static org.la4j.matrix.sparse.ColumnMajorSparseMatrix#block(org.la4j.matrix.Matrix,org.la4j.matrix.Matrix,org.la4j.matrix.Matrix,org.la4j.matrix.Matrix)
	CALLEE: static org.la4j.matrix.sparse.CCSMatrix#block(org.la4j.matrix.Matrix,org.la4j.matrix.Matrix,org.la4j.matrix.Matrix,org.la4j.matrix.Matrix)
CALLER: org.la4j.io.MatrixMarketStream#parseDenseVector(org.la4j.factory.Factory)
	CALLEE: org.la4j.io.MatrixMarketStream#nextToken()
	CALLEE: org.la4j.factory.BasicFactory#createVector(int)
	CALLEE: org.la4j.factory.CompressedFactory#createVector(int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#set(int,double)
	CALLEE: org.la4j.vector.dense.BasicVector#set(int,double)
CALLER: org.la4j.matrix.sparse.SparseMatrix#nonZeroIteratorOfColumn(int)
CALLER: org.la4j.matrix.operation.MatrixVectorOperation#partiallyApply(org.la4j.matrix.dense.DenseMatrix)
CALLER: org.la4j.decomposition.RawQRDecompositor#<init>(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.decomposition.AbstractDecompositor#<init>(org.la4j.matrix.Matrix)
CALLER: org.la4j.decomposition.AbstractDecompositor#<init>(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.decomposition.RawQRDecompositor#applicableTo(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.decomposition.CholeskyDecompositor#applicableTo(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.decomposition.RawLUDecompositor#applicableTo(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.decomposition.EigenDecompositor#applicableTo(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.decomposition.SingularValueDecompositor#applicableTo(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.decomposition.AbstractDecompositor#fail(java.lang.String)
CALLER: org.la4j.matrix.sparse.CCSMatrix#blankOfShape(int,int)
	CALLEE: static org.la4j.matrix.sparse.CCSMatrix#zero(int,int)
CALLER: static org.la4j.matrix.Matrices#asMatrixSource(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.matrix.source.LoopbackMatrixSource#<init>(org.la4j.matrix.Matrix)
CALLER: org.la4j.matrix.sparse.CRSMatrix#<init>()
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#<init>(int,int)
CALLER: org.la4j.decomposition.EigenDecompositor#findMax(org.la4j.matrix.Matrix,int)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
CALLER: org.la4j.vector.AbstractVector#mkString(java.text.NumberFormat)
	CALLEE: org.la4j.vector.AbstractVector#mkString(java.text.NumberFormat,java.lang.String)
CALLER: org.la4j.matrix.AbstractMatrix#min()
	CALLEE: static org.la4j.matrix.Matrices#mkMinAccumulator()
	CALLEE: org.la4j.matrix.AbstractMatrix#fold(org.la4j.matrix.functor.MatrixAccumulator)
CALLER: org.la4j.iterator.CursorToColumnMajorMatrixIterator#rowIndex()
	CALLEE: org.la4j.iterator.VectorIterator#cursor()
	CALLEE: org.la4j.iterator.RowMajorMatrixIterator#cursor()
	CALLEE: org.la4j.iterator.ColumnMajorMatrixIterator#cursor()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#columnIndex()
CALLER: org.la4j.iterator.CursorToVectorIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#hasNext()
CALLER: org.la4j.matrix.sparse.SparseMatrix#eachNonZeroInColumn(int,org.la4j.matrix.functor.MatrixProcedure)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#eachNonZeroInColumn(int,org.la4j.vector.functor.VectorProcedure)
CALLER: org.la4j.factory.Basic1DFactory#createRandomMatrix(int,int,java.util.Random)
	CALLEE: static org.la4j.matrix.dense.Basic1DMatrix#random(int,int,java.util.Random)
CALLER: static org.la4j.matrix.Matrices#asRandomSource(int,int,java.util.Random)
	CALLEE: org.la4j.matrix.source.RandomMatrixSource#<init>(int,int,java.util.Random)
CALLER: org.la4j.vector.AbstractVector#shuffle()
	CALLEE: org.la4j.vector.AbstractVector#copy()
	CALLEE: org.la4j.vector.AbstractVector#swapElements(int,int)
	CALLEE: org.la4j.vector.sparse.CompressedVector#swapElements(int,int)
	CALLEE: org.la4j.vector.dense.BasicVector#swapElements(int,int)
CALLER: org.la4j.vector.AbstractVector#hadamardProduct(org.la4j.vector.Vector,org.la4j.factory.Factory)
	CALLEE: org.la4j.vector.AbstractVector#ensureFactoryIsNotNull(org.la4j.factory.Factory)
	CALLEE: org.la4j.vector.AbstractVector#hadamardProduct(org.la4j.vector.Vector)
	CALLEE: static org.la4j.factory.Factory#asVectorFactory(org.la4j.factory.Factory)
	CALLEE: org.la4j.vector.sparse.CompressedVector#to(org.la4j.vector.VectorFactory)
	CALLEE: org.la4j.vector.dense.BasicVector#to(org.la4j.vector.VectorFactory)
CALLER: org.la4j.iterator.CursorToRowMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#next()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#next()
CALLER: org.la4j.vector.AbstractVector#add(double)
	CALLEE: org.la4j.vector.AbstractVector#iterator()
	CALLEE: org.la4j.vector.sparse.CompressedVector#iterator()
	CALLEE: org.la4j.vector.AbstractVector#blank()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#next()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#index()
	CALLEE: org.la4j.vector.sparse.CompressedVector#set(int,double)
	CALLEE: org.la4j.vector.dense.BasicVector#set(int,double)
CALLER: org.la4j.linear.ForwardBackSubstitutionSolver#applicableTo(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
CALLER: org.la4j.matrix.AbstractMatrix#blankOfColumns(int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#blankOfShape(int,int)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#blankOfShape(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#blankOfShape(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#blankOfShape(int,int)
CALLER: org.la4j.vector.operation.VectorVectorOperation#partiallyApply(org.la4j.vector.sparse.SparseVector)
CALLER: org.la4j.matrix.sparse.CCSMatrix#<init>(org.la4j.matrix.source.MatrixSource)
	CALLEE: org.la4j.matrix.source.IdentityMatrixSource#rows()
	CALLEE: org.la4j.matrix.source.RandomSymmetricMatrixSource#rows()
	CALLEE: org.la4j.matrix.source.StreamMatrixSource#rows()
	CALLEE: org.la4j.matrix.source.LoopbackMatrixSource#rows()
	CALLEE: org.la4j.matrix.source.RandomMatrixSource#rows()
	CALLEE: org.la4j.matrix.source.Array1DMatrixSource#rows()
	CALLEE: org.la4j.matrix.source.Array2DMatrixSource#rows()
	CALLEE: org.la4j.matrix.source.IdentityMatrixSource#columns()
	CALLEE: org.la4j.matrix.source.RandomSymmetricMatrixSource#columns()
	CALLEE: org.la4j.matrix.source.StreamMatrixSource#columns()
	CALLEE: org.la4j.matrix.source.LoopbackMatrixSource#columns()
	CALLEE: org.la4j.matrix.source.RandomMatrixSource#columns()
	CALLEE: org.la4j.matrix.source.Array1DMatrixSource#columns()
	CALLEE: org.la4j.matrix.source.Array2DMatrixSource#columns()
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#<init>(int,int,int)
	CALLEE: org.la4j.matrix.source.IdentityMatrixSource#get(int,int)
	CALLEE: org.la4j.matrix.source.RandomSymmetricMatrixSource#get(int,int)
	CALLEE: org.la4j.matrix.source.StreamMatrixSource#get(int,int)
	CALLEE: org.la4j.matrix.source.LoopbackMatrixSource#get(int,int)
	CALLEE: org.la4j.matrix.source.RandomMatrixSource#get(int,int)
	CALLEE: org.la4j.matrix.source.Array1DMatrixSource#get(int,int)
	CALLEE: org.la4j.matrix.source.Array2DMatrixSource#get(int,int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#growUp()
CALLER: org.la4j.vector.operation.ooplace.OoPlaceVectorByMatrixMultiplication#apply(org.la4j.vector.sparse.SparseVector,org.la4j.matrix.sparse.ColumnMajorSparseMatrix)
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
	CALLEE: org.la4j.vector.sparse.CompressedVector#blankOfLength(int)
	CALLEE: org.la4j.matrix.AbstractMatrix#columnMajorIterator()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#next()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#columnIndex()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#columnIndex()
	CALLEE: org.la4j.vector.sparse.CompressedVector#nonZeroIterator()
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#nonZeroIteratorOfColumn(int)
	CALLEE: org.la4j.iterator.VectorIterator#andAlsoMultiply(org.la4j.iterator.VectorIterator)
	CALLEE: org.la4j.iterator.CursorToVectorIterator#hasNext()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#next()
	CALLEE: org.la4j.vector.sparse.CompressedVector#set(int,double)
	CALLEE: org.la4j.vector.dense.BasicVector#set(int,double)
CALLER: org.la4j.matrix.AbstractMatrix#getRow(int,org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#ensureFactoryIsNotNull(org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#getRow(int)
	CALLEE: org.la4j.matrix.sparse.CRSMatrix#getRow(int)
	CALLEE: org.la4j.matrix.dense.DenseMatrix#getRow(int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#getRow(int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#getRow(int)
	CALLEE: static org.la4j.factory.Factory#asVectorFactory(org.la4j.factory.Factory)
	CALLEE: org.la4j.vector.sparse.CompressedVector#to(org.la4j.vector.VectorFactory)
	CALLEE: org.la4j.vector.dense.BasicVector#to(org.la4j.vector.VectorFactory)
CALLER: org.la4j.factory.Basic2DFactory#createMatrix(int,int,double[])
	CALLEE: static org.la4j.matrix.dense.Basic2DMatrix#from1DArray(int,int,double[])
CALLER: org.la4j.vector.AbstractVector#sliceLeft(int,org.la4j.factory.Factory)
	CALLEE: org.la4j.vector.AbstractVector#slice(int,int,org.la4j.factory.Factory)
CALLER: org.la4j.matrix.AbstractMatrix#copy(org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#ensureFactoryIsNotNull(org.la4j.factory.Factory)
	CALLEE: org.la4j.factory.Basic1DFactory#createMatrix(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.factory.Basic2DFactory#createMatrix(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.factory.CRSFactory#createMatrix(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.factory.CCSFactory#createMatrix(org.la4j.matrix.Matrix)
CALLER: org.la4j.linear.JacobiSolver#applicableTo(org.la4j.matrix.Matrix)
	CALLEE: org.la4j.matrix.AbstractMatrix#is(org.la4j.matrix.functor.AdvancedMatrixPredicate)
CALLER: org.la4j.matrix.AbstractMatrix#multiply(org.la4j.vector.Vector,org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#ensureFactoryIsNotNull(org.la4j.factory.Factory)
	CALLEE: org.la4j.matrix.AbstractMatrix#multiply(org.la4j.vector.Vector)
	CALLEE: static org.la4j.factory.Factory#asVectorFactory(org.la4j.factory.Factory)
	CALLEE: org.la4j.vector.sparse.CompressedVector#to(org.la4j.vector.VectorFactory)
	CALLEE: org.la4j.vector.dense.BasicVector#to(org.la4j.vector.VectorFactory)
CALLER: org.la4j.matrix.dense.Basic1DMatrix#blankOfShape(int,int)
	CALLEE: static org.la4j.matrix.dense.Basic1DMatrix#zero(int,int)
CALLER: org.la4j.vector.AbstractVector#blank()
	CALLEE: org.la4j.vector.sparse.CompressedVector#blankOfLength(int)
	CALLEE: org.la4j.vector.dense.BasicVector#blankOfLength(int)
CALLER: static org.la4j.matrix.sparse.CRSMatrix#block(org.la4j.matrix.Matrix,org.la4j.matrix.Matrix,org.la4j.matrix.Matrix,org.la4j.matrix.Matrix)
	CALLEE: org.la4j.matrix.AbstractMatrix#rows()
	CALLEE: org.la4j.matrix.AbstractMatrix#columns()
	CALLEE: org.la4j.matrix.sparse.SparseMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic2DMatrix#get(int,int)
	CALLEE: org.la4j.matrix.dense.Basic1DMatrix#get(int,int)
CALLER: org.la4j.io.MatrixMarketStream#writeVector(org.la4j.vector.Vector)
	CALLEE: org.la4j.io.AbstractStream#ensureWriterInitialized()
	CALLEE: org.la4j.io.MatrixMarketStream#writeSparseVector(org.la4j.vector.sparse.SparseVector)
	CALLEE: org.la4j.io.MatrixMarketStream#writeDenseVector(org.la4j.vector.dense.DenseVector)
	CALLEE: org.la4j.io.AbstractStream#closeWriter()
CALLER: org.la4j.matrix.sparse.CCSMatrix#nonZeroAt(int,int)
	CALLEE: org.la4j.matrix.sparse.CCSMatrix#searchForRowIndex(int,int,int)
CALLER: org.la4j.iterator.CursorToRowMajorMatrixIterator#get()
	CALLEE: org.la4j.iterator.CursorToVectorIterator#get()
	CALLEE: org.la4j.iterator.CursorToRowMajorMatrixIterator#get()
	CALLEE: org.la4j.iterator.CursorToColumnMajorMatrixIterator#get()
CALLER: static org.la4j.matrix.sparse.SparseMatrix#randomSymmetric(int,double,java.util.Random)
	CALLEE: static org.la4j.matrix.sparse.CRSMatrix#randomSymmetric(int,double,java.util.Random)
CALLER: org.la4j.matrix.AbstractMatrix#insert(org.la4j.matrix.Matrix,int,int,int,int)
	CALLEE: org.la4j.matrix.AbstractMatrix#insert(org.la4j.matrix.Matrix,int,int,int,int,int,int)
