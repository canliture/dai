CALLER: static org.traccar.Main#main(java.lang.String[])
	CALLEE: static org.traccar.Context#init(java.lang.String[])
	CALLEE: static org.traccar.helper.Log#info(java.lang.String)
	CALLEE: static org.traccar.Context#getServerManager()
	CALLEE: static org.traccar.Context#getWebServer()
	CALLEE: org.traccar.Main.1#<init>()
	CALLEE: org.traccar.Main.2#<init>()
	CALLEE: org.traccar.web.WebServer#start()
	CALLEE: org.traccar.ServerManager#start()
CALLER: static org.traccar.Context#init(java.lang.String[])
	CALLEE: org.traccar.Config#getInteger(java.lang.String,int)
	CALLEE: static org.eclipse.jetty.util.URIUtil#newURI(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)
	CALLEE: org.apache.velocity.app.VelocityEngine#<init>()
	CALLEE: org.apache.velocity.app.VelocityEngine#init(java.util.Properties)
	CALLEE: org.traccar.ServerManager#<init>()
	CALLEE: org.traccar.notification.EventForwarder#<init>()
	CALLEE: org.traccar.database.AliasesManager#<init>(org.traccar.database.DataManager)
	CALLEE: org.traccar.database.StatisticsManager#<init>()
	CALLEE: com.fasterxml.jackson.databind.SerializationConfig#without(com.fasterxml.jackson.databind.SerializationFeature)
	CALLEE: org.traccar.Config#<init>()
	CALLEE: org.traccar.Config#load(java.lang.String)
	CALLEE: org.traccar.Config#getBoolean(java.lang.String)
	CALLEE: static org.traccar.helper.Log#setupLogger(org.traccar.Config)
	CALLEE: com.fasterxml.jackson.databind.ObjectMapper#<init>()
	CALLEE: com.fasterxml.jackson.databind.ObjectMapper#getSerializationConfig()
	CALLEE: com.fasterxml.jackson.databind.ObjectMapper#setConfig(com.fasterxml.jackson.databind.SerializationConfig)
	CALLEE: org.traccar.Config#hasKey(java.lang.String)
	CALLEE: org.traccar.database.DataManager#<init>(org.traccar.Config)
	CALLEE: org.traccar.database.DeviceManager#<init>(org.traccar.database.DataManager)
	CALLEE: org.traccar.Config#getString(java.lang.String,java.lang.String)
	CALLEE: org.traccar.Config#getString(java.lang.String)
	CALLEE: org.traccar.Config#getInteger(java.lang.String)
	CALLEE: org.traccar.geocoder.NominatimGeocoder#<init>(java.lang.String,java.lang.String,int)
	CALLEE: org.traccar.geocoder.NominatimGeocoder#<init>(java.lang.String,int)
	CALLEE: org.traccar.geocoder.GisgraphyGeocoder#<init>(java.lang.String,int)
	CALLEE: org.traccar.geocoder.MapQuestGeocoder#<init>(java.lang.String,java.lang.String,int)
	CALLEE: org.traccar.geocoder.OpenCageGeocoder#<init>(java.lang.String,java.lang.String,int)
	CALLEE: org.traccar.geocoder.BingMapsGeocoder#<init>(java.lang.String,java.lang.String,int)
	CALLEE: org.traccar.geocoder.FactualGeocoder#<init>(java.lang.String,java.lang.String,int)
	CALLEE: org.traccar.geocoder.GeocodeFarmGeocoder#<init>(java.lang.String,int)
	CALLEE: org.traccar.geocoder.GeocodeFarmGeocoder#<init>(int)
	CALLEE: org.traccar.geocoder.GoogleGeocoder#<init>(java.lang.String,int)
	CALLEE: org.traccar.geocoder.GoogleGeocoder#<init>(int)
	CALLEE: org.traccar.geolocation.GoogleGeolocationProvider#<init>(java.lang.String)
	CALLEE: org.traccar.geolocation.OpenCellIdGeolocationProvider#<init>(java.lang.String)
	CALLEE: org.traccar.geolocation.MozillaGeolocationProvider#<init>(java.lang.String)
	CALLEE: org.traccar.geolocation.MozillaGeolocationProvider#<init>()
	CALLEE: org.traccar.database.DataManager#getDataSource()
	CALLEE: org.traccar.web.WebServer#<init>(org.traccar.Config,javax.sql.DataSource)
	CALLEE: org.traccar.database.PermissionsManager#<init>(org.traccar.database.DataManager)
	CALLEE: org.traccar.database.ConnectionManager#<init>()
	CALLEE: org.traccar.database.GeofenceManager#<init>(org.traccar.database.DataManager)
	CALLEE: org.traccar.database.CalendarManager#<init>(org.traccar.database.DataManager)
	CALLEE: org.traccar.database.NotificationManager#<init>(org.traccar.database.DataManager)
	CALLEE: static org.traccar.Context#getConfig()
CALLER: static org.traccar.Context#<clinit>()
	CALLEE: com.ning.http.client.AsyncHttpClient#<init>()
CALLER: static org.traccar.helper.Log#info(java.lang.String)
	CALLEE: static org.traccar.helper.Log#getLogger()
	CALLEE: org.apache.log4j.spi.NOPLogger#info(java.lang.Object)
	CALLEE: org.apache.log4j.Category#info(java.lang.Object)
CALLER: org.traccar.Config#getBoolean(java.lang.String)
	CALLEE: org.traccar.Config#getString(java.lang.String)
CALLER: static org.traccar.helper.Log#setupLogger(org.traccar.Config)
	CALLEE: static org.traccar.helper.Log#info(java.lang.String)
	CALLEE: org.traccar.Config#getString(java.lang.String)
	CALLEE: org.apache.log4j.PatternLayout#<init>(java.lang.String)
	CALLEE: org.apache.log4j.DailyRollingFileAppender#<init>(org.apache.log4j.Layout,java.lang.String,java.lang.String)
	CALLEE: static org.apache.log4j.LogManager#resetConfiguration()
	CALLEE: static org.apache.log4j.LogManager#getRootLogger()
	CALLEE: org.apache.log4j.varia.NullAppender#<init>()
	CALLEE: static org.apache.log4j.Logger#getLogger(java.lang.String)
	CALLEE: static org.apache.log4j.Level#toLevel(java.lang.String,org.apache.log4j.Level)
	CALLEE: org.traccar.helper.Log.1#<init>()
	CALLEE: static org.jboss.netty.logging.InternalLoggerFactory#setDefaultFactory(org.jboss.netty.logging.InternalLoggerFactory)
	CALLEE: static org.traccar.helper.Log#logSystemInfo()
	CALLEE: static org.traccar.helper.Log#getAppVersion()
	CALLEE: org.apache.log4j.Category#addAppender(org.apache.log4j.Appender)
	CALLEE: org.apache.log4j.spi.NOPLogger#addAppender(org.apache.log4j.Appender)
	CALLEE: org.apache.log4j.spi.NOPLogger#setLevel(org.apache.log4j.Level)
	CALLEE: org.apache.log4j.Category#setLevel(org.apache.log4j.Level)
CALLER: static com.fasterxml.jackson.databind.ObjectMapper#<clinit>()
	CALLEE: static com.fasterxml.jackson.databind.type.SimpleType#constructUnsafe(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#<init>()
	CALLEE: static com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#defaultInstance()
	CALLEE: com.fasterxml.jackson.core.util.DefaultPrettyPrinter#<init>()
	CALLEE: static com.fasterxml.jackson.databind.type.TypeFactory#defaultInstance()
	CALLEE: static com.fasterxml.jackson.core.Base64Variants#getDefaultVariant()
	CALLEE: com.fasterxml.jackson.databind.cfg.BaseSettings#<init>(com.fasterxml.jackson.databind.introspect.ClassIntrospector,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.VisibilityChecker,com.fasterxml.jackson.databind.PropertyNamingStrategy,com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder,java.text.DateFormat,com.fasterxml.jackson.databind.cfg.HandlerInstantiator,java.util.Locale,java.util.TimeZone,com.fasterxml.jackson.core.Base64Variant)
CALLER: com.fasterxml.jackson.databind.ObjectMapper#<init>()
	CALLEE: com.fasterxml.jackson.databind.ObjectMapper#<init>(com.fasterxml.jackson.core.JsonFactory,com.fasterxml.jackson.databind.ser.DefaultSerializerProvider,com.fasterxml.jackson.databind.deser.DefaultDeserializationContext)
CALLER: static com.fasterxml.jackson.databind.SerializationFeature#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.SerializationFeature#<init>(java.lang.String,int,boolean)
CALLER: org.traccar.database.DataManager#<init>(org.traccar.Config)
	CALLEE: org.traccar.database.DataManager#initDatabase()
	CALLEE: org.traccar.database.DataManager#initDatabaseSchema()
CALLER: org.traccar.database.DeviceManager#<init>(org.traccar.database.DataManager)
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: org.traccar.Config#getBoolean(java.lang.String)
	CALLEE: static org.traccar.Context#getConfig()
	CALLEE: org.traccar.database.DeviceManager#updateGroupCache(boolean)
	CALLEE: org.traccar.database.DeviceManager#updateDeviceCache(boolean)
	CALLEE: org.traccar.database.DataManager#getLatestPositions()
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
	CALLEE: org.traccar.Config#getLong(java.lang.String,long)
CALLER: org.traccar.Config#getString(java.lang.String,java.lang.String)
	CALLEE: org.traccar.Config#hasKey(java.lang.String)
	CALLEE: org.traccar.Config#getString(java.lang.String)
CALLER: org.traccar.Config#getInteger(java.lang.String)
	CALLEE: org.traccar.Config#getInteger(java.lang.String,int)
CALLER: org.traccar.geocoder.NominatimGeocoder#<init>(java.lang.String,java.lang.String,int)
	CALLEE: org.traccar.geocoder.JsonGeocoder#<init>(java.lang.String,int)
CALLER: org.traccar.geocoder.NominatimGeocoder#<init>(java.lang.String,int)
	CALLEE: org.traccar.geocoder.JsonGeocoder#<init>(java.lang.String,int)
CALLER: org.traccar.geocoder.GisgraphyGeocoder#<init>(java.lang.String,int)
	CALLEE: org.traccar.geocoder.JsonGeocoder#<init>(java.lang.String,int)
CALLER: org.traccar.geocoder.MapQuestGeocoder#<init>(java.lang.String,java.lang.String,int)
	CALLEE: org.traccar.geocoder.JsonGeocoder#<init>(java.lang.String,int)
CALLER: org.traccar.geocoder.OpenCageGeocoder#<init>(java.lang.String,java.lang.String,int)
	CALLEE: org.traccar.geocoder.JsonGeocoder#<init>(java.lang.String,int)
CALLER: org.traccar.geocoder.BingMapsGeocoder#<init>(java.lang.String,java.lang.String,int)
	CALLEE: org.traccar.geocoder.JsonGeocoder#<init>(java.lang.String,int)
CALLER: org.traccar.geocoder.FactualGeocoder#<init>(java.lang.String,java.lang.String,int)
	CALLEE: org.traccar.geocoder.JsonGeocoder#<init>(java.lang.String,int)
CALLER: org.traccar.geocoder.GeocodeFarmGeocoder#<init>(java.lang.String,int)
	CALLEE: org.traccar.geocoder.JsonGeocoder#<init>(java.lang.String,int)
CALLER: org.traccar.geocoder.GeocodeFarmGeocoder#<init>(int)
	CALLEE: org.traccar.geocoder.JsonGeocoder#<init>(java.lang.String,int)
CALLER: org.traccar.geocoder.GoogleGeocoder#<init>(java.lang.String,int)
	CALLEE: org.traccar.geocoder.JsonGeocoder#<init>(java.lang.String,int)
CALLER: org.traccar.geocoder.GoogleGeocoder#<init>(int)
	CALLEE: org.traccar.geocoder.JsonGeocoder#<init>(java.lang.String,int)
CALLER: org.traccar.geolocation.GoogleGeolocationProvider#<init>(java.lang.String)
	CALLEE: org.traccar.geolocation.UniversalGeolocationProvider#<init>(java.lang.String,java.lang.String)
CALLER: org.traccar.geolocation.OpenCellIdGeolocationProvider#<init>(java.lang.String)
	CALLEE: org.traccar.geolocation.OpenCellIdGeolocationProvider#<init>(java.lang.String,java.lang.String)
CALLER: org.traccar.geolocation.MozillaGeolocationProvider#<init>(java.lang.String)
	CALLEE: org.traccar.geolocation.UniversalGeolocationProvider#<init>(java.lang.String,java.lang.String)
CALLER: org.traccar.geolocation.MozillaGeolocationProvider#<init>()
	CALLEE: org.traccar.geolocation.MozillaGeolocationProvider#<init>(java.lang.String)
CALLER: org.traccar.web.WebServer#<init>(org.traccar.Config,javax.sql.DataSource)
	CALLEE: org.traccar.Config#getBoolean(java.lang.String)
	CALLEE: org.traccar.Config#getString(java.lang.String,java.lang.String)
	CALLEE: org.traccar.Config#getInteger(java.lang.String)
	CALLEE: org.eclipse.jetty.server.handler.HandlerList#<init>()
	CALLEE: org.eclipse.jetty.server.session.HashSessionManager#<init>()
	CALLEE: org.eclipse.jetty.server.session.HashSessionManager#setMaxInactiveInterval(int)
	CALLEE: org.traccar.web.WebServer#initServer()
	CALLEE: org.traccar.web.WebServer#initApi()
	CALLEE: org.traccar.web.WebServer#initConsole()
	CALLEE: org.traccar.web.WebServer#initOldWebApp()
	CALLEE: org.traccar.web.WebServer#initWebApp()
	CALLEE: org.traccar.web.WebServer.1#<init>(org.traccar.web.WebServer)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#addBean(java.lang.Object,boolean)
	CALLEE: org.eclipse.jetty.server.handler.HandlerWrapper#setHandler(org.eclipse.jetty.server.Handler)
CALLER: org.traccar.database.PermissionsManager#<init>(org.traccar.database.DataManager)
	CALLEE: org.traccar.database.PermissionsManager#refreshUsers()
	CALLEE: org.traccar.database.PermissionsManager#refreshPermissions()
CALLER: org.traccar.database.ConnectionManager#<init>()
	CALLEE: org.traccar.Config#getBoolean(java.lang.String)
	CALLEE: static org.traccar.Context#getConfig()
	CALLEE: org.traccar.Config#getLong(java.lang.String,long)
CALLER: org.traccar.database.GeofenceManager#<init>(org.traccar.database.DataManager)
	CALLEE: org.traccar.database.GeofenceManager#refreshGeofences()
CALLER: org.traccar.database.CalendarManager#<init>(org.traccar.database.DataManager)
	CALLEE: org.traccar.database.CalendarManager#refreshCalendars()
CALLER: org.traccar.database.NotificationManager#<init>(org.traccar.database.DataManager)
	CALLEE: org.traccar.database.NotificationManager#refresh()
CALLER: org.traccar.Config#getInteger(java.lang.String,int)
	CALLEE: org.traccar.Config#hasKey(java.lang.String)
	CALLEE: org.traccar.Config#getString(java.lang.String)
CALLER: static org.eclipse.jetty.util.URIUtil#newURI(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)
	CALLEE: static org.eclipse.jetty.util.URIUtil#newURIBuilder(java.lang.String,java.lang.String,int)
CALLER: org.apache.velocity.app.VelocityEngine#<init>()
	CALLEE: org.apache.velocity.runtime.RuntimeInstance#<init>()
CALLER: org.apache.velocity.app.VelocityEngine#init(java.util.Properties)
	CALLEE: org.apache.velocity.runtime.RuntimeInstance#init(java.util.Properties)
CALLER: org.traccar.ServerManager#<init>()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: org.traccar.ServerManager#initProtocolServer(org.traccar.Protocol)
CALLER: org.traccar.notification.EventForwarder#<init>()
	CALLEE: org.traccar.Config#getString(java.lang.String,java.lang.String)
	CALLEE: static org.traccar.Context#getConfig()
CALLER: org.traccar.database.AliasesManager#<init>(org.traccar.database.DataManager)
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
	CALLEE: org.traccar.database.DataManager#getAttributeAliases()
	CALLEE: org.traccar.database.AliasesManager#getAttributeAliases(long)
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
CALLER: static com.ning.http.client.AsyncHttpClient#<clinit>()
	CALLEE: static org.slf4j.LoggerFactory#getLogger(java.lang.Class)
CALLER: com.ning.http.client.AsyncHttpClient#<init>()
	CALLEE: com.ning.http.client.AsyncHttpClientConfig.Builder#<init>()
	CALLEE: com.ning.http.client.AsyncHttpClientConfig.Builder#build()
	CALLEE: com.ning.http.client.AsyncHttpClient#<init>(com.ning.http.client.AsyncHttpClientConfig)
CALLER: static org.traccar.helper.Log#getLogger()
	CALLEE: static org.apache.log4j.Logger#getLogger(java.lang.String)
	CALLEE: org.apache.log4j.spi.NOPLogger#setLevel(org.apache.log4j.Level)
	CALLEE: org.apache.log4j.Category#setLevel(org.apache.log4j.Level)
CALLER: org.apache.log4j.PatternLayout#<init>(java.lang.String)
	CALLEE: org.apache.log4j.Layout#<init>()
	CALLEE: org.apache.log4j.PatternLayout#createPatternParser(java.lang.String)
	CALLEE: org.apache.log4j.helpers.PatternParser#parse()
CALLER: org.apache.log4j.DailyRollingFileAppender#<init>(org.apache.log4j.Layout,java.lang.String,java.lang.String)
	CALLEE: org.apache.log4j.FileAppender#<init>(org.apache.log4j.Layout,java.lang.String,boolean)
	CALLEE: org.apache.log4j.RollingCalendar#<init>()
	CALLEE: org.apache.log4j.DailyRollingFileAppender#activateOptions()
CALLER: static org.apache.log4j.LogManager#resetConfiguration()
	CALLEE: static org.apache.log4j.LogManager#getLoggerRepository()
	CALLEE: org.apache.log4j.Hierarchy#resetConfiguration()
	CALLEE: org.apache.log4j.spi.NOPLoggerRepository#resetConfiguration()
CALLER: static org.apache.log4j.LogManager#<clinit>()
	CALLEE: static org.apache.log4j.LogManager#getLoggerRepository()
	CALLEE: org.apache.log4j.spi.RootLogger#<init>(org.apache.log4j.Level)
	CALLEE: org.apache.log4j.Hierarchy#<init>(org.apache.log4j.Logger)
	CALLEE: org.apache.log4j.spi.DefaultRepositorySelector#<init>(org.apache.log4j.spi.LoggerRepository)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#getSystemProperty(java.lang.String,java.lang.String)
	CALLEE: static org.apache.log4j.helpers.Loader#getResource(java.lang.String)
	CALLEE: static org.apache.log4j.helpers.LogLog#debug(java.lang.String)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#selectAndConfigure(java.net.URL,java.lang.String,org.apache.log4j.spi.LoggerRepository)
	CALLEE: static org.apache.log4j.helpers.LogLog#warn(java.lang.String,java.lang.Throwable)
CALLER: static org.apache.log4j.LogManager#getRootLogger()
	CALLEE: static org.apache.log4j.LogManager#getLoggerRepository()
	CALLEE: org.apache.log4j.Hierarchy#getRootLogger()
	CALLEE: org.apache.log4j.spi.NOPLoggerRepository#getRootLogger()
CALLER: static org.apache.log4j.varia.NullAppender#<clinit>()
	CALLEE: org.apache.log4j.varia.NullAppender#<init>()
CALLER: org.apache.log4j.varia.NullAppender#<init>()
	CALLEE: org.apache.log4j.AppenderSkeleton#<init>()
CALLER: static org.apache.log4j.Logger#getLogger(java.lang.String)
	CALLEE: static org.apache.log4j.LogManager#getLogger(java.lang.String)
CALLER: static org.apache.log4j.Logger#<clinit>()
	CALLEE: static org.apache.log4j.Logger#class$(java.lang.String)
CALLER: static org.apache.log4j.Category#<clinit>()
	CALLEE: static org.apache.log4j.Category#class$(java.lang.String)
CALLER: static org.apache.log4j.Level#<clinit>()
	CALLEE: org.apache.log4j.Level#<init>(int,java.lang.String,int)
CALLER: static org.apache.log4j.Priority#<clinit>()
	CALLEE: org.apache.log4j.Level#<init>(int,java.lang.String,int)
CALLER: static org.jboss.netty.logging.InternalLoggerFactory#<clinit>()
	CALLEE: org.jboss.netty.logging.JdkLoggerFactory#<init>()
CALLER: org.traccar.helper.Log.1#<init>()
	CALLEE: org.jboss.netty.logging.InternalLoggerFactory#<init>()
CALLER: static org.traccar.helper.Log#logSystemInfo()
	CALLEE: static org.traccar.helper.Log#info(java.lang.String)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.String)
CALLER: static com.fasterxml.jackson.databind.type.SimpleType#constructUnsafe(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#<init>(java.lang.Class,java.lang.String[],com.fasterxml.jackson.databind.JavaType[],java.lang.Object,java.lang.Object,boolean,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#<init>()
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#<init>()
CALLER: static com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#<init>(com.fasterxml.jackson.annotation.JsonAutoDetect)
CALLER: static com.fasterxml.jackson.core.util.DefaultPrettyPrinter#<clinit>()
	CALLEE: com.fasterxml.jackson.core.io.SerializedString#<init>(java.lang.String)
CALLER: com.fasterxml.jackson.core.util.DefaultPrettyPrinter#<init>()
	CALLEE: com.fasterxml.jackson.core.util.DefaultPrettyPrinter#<init>(com.fasterxml.jackson.core.SerializableString)
CALLER: static com.fasterxml.jackson.databind.type.TypeFactory#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#<init>()
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#<init>(java.lang.Class)
CALLER: static com.fasterxml.jackson.databind.util.StdDateFormat#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.util.StdDateFormat#<init>()
CALLER: static com.fasterxml.jackson.core.Base64Variants#<clinit>()
	CALLEE: com.fasterxml.jackson.core.Base64Variant#<init>(java.lang.String,java.lang.String,boolean,char,int)
	CALLEE: com.fasterxml.jackson.core.Base64Variant#<init>(com.fasterxml.jackson.core.Base64Variant,java.lang.String,int)
	CALLEE: com.fasterxml.jackson.core.Base64Variant#<init>(com.fasterxml.jackson.core.Base64Variant,java.lang.String,boolean,char,int)
CALLER: com.fasterxml.jackson.databind.ObjectMapper#<init>(com.fasterxml.jackson.core.JsonFactory,com.fasterxml.jackson.databind.ser.DefaultSerializerProvider,com.fasterxml.jackson.databind.deser.DefaultDeserializationContext)
	CALLEE: static com.fasterxml.jackson.databind.type.TypeFactory#defaultInstance()
	CALLEE: com.fasterxml.jackson.core.ObjectCodec#<init>()
	CALLEE: com.fasterxml.jackson.databind.MappingJsonFactory#<init>(com.fasterxml.jackson.databind.ObjectMapper)
	CALLEE: com.fasterxml.jackson.core.JsonFactory#setCodec(com.fasterxml.jackson.core.ObjectCodec)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver#<init>()
	CALLEE: com.fasterxml.jackson.databind.util.RootNameLookup#<init>()
	CALLEE: com.fasterxml.jackson.databind.ObjectMapper#defaultClassIntrospector()
	CALLEE: com.fasterxml.jackson.databind.cfg.BaseSettings#withClassIntrospector(com.fasterxml.jackson.databind.introspect.ClassIntrospector)
	CALLEE: com.fasterxml.jackson.databind.SerializationConfig#<init>(com.fasterxml.jackson.databind.cfg.BaseSettings,com.fasterxml.jackson.databind.jsontype.SubtypeResolver,java.util.Map)
	CALLEE: com.fasterxml.jackson.databind.DeserializationConfig#<init>(com.fasterxml.jackson.databind.cfg.BaseSettings,com.fasterxml.jackson.databind.jsontype.SubtypeResolver,java.util.Map)
	CALLEE: com.fasterxml.jackson.core.JsonFactory#requiresPropertyOrdering()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#isEnabled(com.fasterxml.jackson.databind.MapperFeature)
	CALLEE: com.fasterxml.jackson.databind.ObjectMapper#configure(com.fasterxml.jackson.databind.MapperFeature,boolean)
	CALLEE: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.Impl#<init>()
	CALLEE: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl#<init>(com.fasterxml.jackson.databind.deser.DeserializerFactory)
	CALLEE: com.fasterxml.jackson.databind.MappingJsonFactory#getCodec()
CALLER: org.traccar.database.DataManager#initDatabase()
	CALLEE: org.traccar.Config#getString(java.lang.String,java.lang.String)
	CALLEE: org.traccar.Config#getString(java.lang.String)
	CALLEE: org.traccar.Config#getInteger(java.lang.String)
	CALLEE: com.zaxxer.hikari.HikariConfig#<init>()
	CALLEE: com.zaxxer.hikari.HikariConfig#setDriverClassName(java.lang.String)
	CALLEE: com.zaxxer.hikari.HikariConfig#setJdbcUrl(java.lang.String)
	CALLEE: com.zaxxer.hikari.HikariConfig#setUsername(java.lang.String)
	CALLEE: com.zaxxer.hikari.HikariConfig#setPassword(java.lang.String)
	CALLEE: com.zaxxer.hikari.HikariConfig#setConnectionInitSql(java.lang.String)
	CALLEE: com.zaxxer.hikari.HikariConfig#setIdleTimeout(long)
	CALLEE: com.zaxxer.hikari.HikariConfig#setMaximumPoolSize(int)
	CALLEE: com.zaxxer.hikari.HikariDataSource#<init>(com.zaxxer.hikari.HikariConfig)
CALLER: org.traccar.database.DataManager#initDatabaseSchema()
	CALLEE: org.traccar.Config#hasKey(java.lang.String)
	CALLEE: org.traccar.Config#getString(java.lang.String)
	CALLEE: liquibase.resource.FileSystemResourceAccessor#<init>()
	CALLEE: static liquibase.database.DatabaseFactory#getInstance()
	CALLEE: liquibase.Liquibase#<init>(java.lang.String,liquibase.resource.ResourceAccessor,liquibase.database.Database)
	CALLEE: liquibase.Liquibase#clearCheckSums()
	CALLEE: liquibase.Contexts#<init>()
	CALLEE: liquibase.Liquibase#update(liquibase.Contexts)
	CALLEE: liquibase.database.DatabaseFactory#openDatabase(java.lang.String,java.lang.String,java.lang.String,java.lang.String,liquibase.resource.ResourceAccessor)
CALLER: org.traccar.database.DeviceManager#updateGroupCache(boolean)
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: org.traccar.database.DataManager#getAllGroups()
CALLER: org.traccar.database.DeviceManager#updateDeviceCache(boolean)
	CALLEE: org.traccar.database.GeofenceManager#getCurrentDeviceGeofences(org.traccar.model.Position)
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: static org.traccar.Context#getGeofenceManager()
	CALLEE: org.traccar.database.DataManager#getAllDevices()
	CALLEE: org.traccar.database.DeviceManager#getLastPosition(long)
CALLER: org.traccar.database.DataManager#getLatestPositions()
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#executeQuery(java.lang.Class)
CALLER: static org.traccar.helper.Log#warning(java.lang.Throwable)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.String,java.lang.Throwable)
CALLER: org.traccar.geocoder.JsonGeocoder#<init>(java.lang.String,int)
	CALLEE: org.traccar.geocoder.JsonGeocoder.1#<init>(org.traccar.geocoder.JsonGeocoder,int)
CALLER: static org.eclipse.jetty.server.handler.AbstractHandler#<clinit>()
	CALLEE: static org.eclipse.jetty.util.log.Log#getLogger(java.lang.Class)
CALLER: static org.eclipse.jetty.util.component.ContainerLifeCycle#<clinit>()
	CALLEE: static org.eclipse.jetty.util.log.Log#getLogger(java.lang.Class)
CALLER: static org.eclipse.jetty.util.component.AbstractLifeCycle#<clinit>()
	CALLEE: static org.eclipse.jetty.util.log.Log#getLogger(java.lang.Class)
CALLER: org.eclipse.jetty.server.handler.HandlerList#<init>()
	CALLEE: org.eclipse.jetty.server.handler.HandlerCollection#<init>()
CALLER: static org.eclipse.jetty.server.session.AbstractSessionManager#<clinit>()
	CALLEE: org.eclipse.jetty.server.session.AbstractSessionManager.1#<init>()
CALLER: org.eclipse.jetty.server.session.HashSessionManager#<init>()
	CALLEE: org.eclipse.jetty.server.session.AbstractSessionManager#<init>()
CALLER: org.eclipse.jetty.server.session.HashSessionManager#setMaxInactiveInterval(int)
	CALLEE: org.eclipse.jetty.server.session.AbstractSessionManager#setMaxInactiveInterval(int)
	CALLEE: org.eclipse.jetty.server.session.HashSessionManager#setScavengePeriod(int)
CALLER: org.traccar.web.WebServer#initServer()
	CALLEE: org.traccar.Config#getString(java.lang.String)
	CALLEE: org.traccar.Config#getInteger(java.lang.String,int)
	CALLEE: org.eclipse.jetty.server.Server#<init>(int)
	CALLEE: org.eclipse.jetty.server.Server#<init>(java.net.InetSocketAddress)
CALLER: org.traccar.web.WebServer#initApi()
	CALLEE: org.eclipse.jetty.servlet.ServletContextHandler#<init>(int)
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#setContextPath(java.lang.String)
	CALLEE: org.eclipse.jetty.servlet.ServletContextHandler#getSessionHandler()
	CALLEE: org.traccar.api.AsyncSocketServlet#<init>()
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#<init>(javax.servlet.Servlet)
	CALLEE: org.eclipse.jetty.servlet.ServletContextHandler#addServlet(org.eclipse.jetty.servlet.ServletHolder,java.lang.String)
	CALLEE: org.glassfish.jersey.server.ResourceConfig#<init>()
	CALLEE: org.glassfish.jersey.server.ResourceConfig#registerClasses(java.lang.Class[])
	CALLEE: org.glassfish.jersey.server.ResourceConfig#packages(java.lang.String[])
	CALLEE: org.glassfish.jersey.servlet.ServletContainer#<init>(org.glassfish.jersey.server.ResourceConfig)
	CALLEE: org.eclipse.jetty.server.handler.HandlerCollection#addHandler(org.eclipse.jetty.server.Handler)
	CALLEE: org.eclipse.jetty.server.session.SessionHandler#setSessionManager(org.eclipse.jetty.server.SessionManager)
CALLER: org.traccar.web.WebServer#initConsole()
	CALLEE: org.eclipse.jetty.servlet.ServletContextHandler#<init>(int)
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#setContextPath(java.lang.String)
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#<init>(javax.servlet.Servlet)
	CALLEE: org.eclipse.jetty.servlet.ServletContextHandler#addServlet(org.eclipse.jetty.servlet.ServletHolder,java.lang.String)
	CALLEE: org.eclipse.jetty.server.handler.HandlerCollection#addHandler(org.eclipse.jetty.server.Handler)
	CALLEE: org.traccar.web.ConsoleServlet#<init>()
CALLER: org.traccar.web.WebServer#initOldWebApp()
	CALLEE: org.traccar.Config#getString(java.lang.String)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#setContextPath(java.lang.String)
	CALLEE: org.eclipse.jetty.servlet.ServletContextHandler#getSessionHandler()
	CALLEE: org.eclipse.jetty.server.handler.HandlerCollection#addHandler(org.eclipse.jetty.server.Handler)
	CALLEE: org.eclipse.jetty.webapp.WebAppContext#<init>()
	CALLEE: org.eclipse.jetty.webapp.WebAppContext#setWar(java.lang.String)
	CALLEE: org.eclipse.jetty.server.session.SessionHandler#setSessionManager(org.eclipse.jetty.server.SessionManager)
CALLER: org.traccar.web.WebServer#initWebApp()
	CALLEE: org.traccar.Config#getBoolean(java.lang.String)
	CALLEE: org.traccar.Config#getString(java.lang.String)
	CALLEE: org.eclipse.jetty.server.handler.HandlerCollection#addHandler(org.eclipse.jetty.server.Handler)
	CALLEE: org.eclipse.jetty.server.handler.ResourceHandler#<init>()
	CALLEE: org.eclipse.jetty.server.handler.ResourceHandler#setResourceBase(java.lang.String)
	CALLEE: org.eclipse.jetty.server.handler.ResourceHandler#setWelcomeFiles(java.lang.String[])
	CALLEE: org.eclipse.jetty.server.handler.ResourceHandler#setMinMemoryMappedContentLength(int)
CALLER: static org.eclipse.jetty.server.handler.ErrorHandler#<clinit>()
	CALLEE: static org.eclipse.jetty.util.log.Log#getLogger(java.lang.Class)
CALLER: org.traccar.web.WebServer.1#<init>(org.traccar.web.WebServer)
	CALLEE: org.eclipse.jetty.server.handler.ErrorHandler#<init>()
CALLER: org.traccar.database.PermissionsManager#refreshUsers()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
	CALLEE: org.traccar.database.DataManager#getServer()
	CALLEE: org.traccar.database.DataManager#getUsers()
CALLER: org.traccar.database.PermissionsManager#refreshPermissions()
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
	CALLEE: static org.traccar.Context#getDeviceManager()
	CALLEE: org.traccar.database.GroupTree#<init>(java.util.Collection,java.util.Collection)
	CALLEE: org.traccar.database.DataManager#getGroupPermissions()
	CALLEE: org.traccar.database.PermissionsManager#getGroupPermissions(long)
	CALLEE: org.traccar.database.PermissionsManager#getDevicePermissions(long)
	CALLEE: org.traccar.database.GroupTree#getGroups(long)
	CALLEE: org.traccar.database.GroupTree#getDevices(long)
	CALLEE: org.traccar.database.DataManager#getDevicePermissions()
	CALLEE: org.traccar.database.PermissionsManager#getGroupDevices(long)
	CALLEE: org.traccar.database.PermissionsManager#getDeviceUsers(long)
	CALLEE: org.traccar.database.DeviceManager#getAllDevices()
	CALLEE: org.traccar.database.DeviceManager#getAllGroups()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
CALLER: org.traccar.database.GeofenceManager#refreshGeofences()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
	CALLEE: org.traccar.database.DataManager#getGeofences()
	CALLEE: org.traccar.database.GeofenceManager#refreshUserGeofences()
	CALLEE: org.traccar.database.GeofenceManager#refresh()
CALLER: org.traccar.database.CalendarManager#refreshCalendars()
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
	CALLEE: org.traccar.database.DataManager#getCalendars()
	CALLEE: org.traccar.database.CalendarManager#refreshUserCalendars()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
CALLER: org.traccar.database.NotificationManager#refresh()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
	CALLEE: org.traccar.database.DataManager#getNotifications()
	CALLEE: org.traccar.database.NotificationManager#getUserNotificationsUnsafe(long)
CALLER: static org.eclipse.jetty.util.URIUtil#newURIBuilder(java.lang.String,java.lang.String,int)
	CALLEE: static org.eclipse.jetty.util.URIUtil#appendSchemeHostPort(java.lang.StringBuilder,java.lang.String,java.lang.String,int)
CALLER: org.apache.velocity.runtime.RuntimeInstance#<init>()
	CALLEE: org.apache.velocity.runtime.log.Log#<init>()
	CALLEE: org.apache.commons.collections.ExtendedProperties#<init>()
	CALLEE: org.apache.velocity.runtime.VelocimacroFactory#<init>(org.apache.velocity.runtime.RuntimeServices)
	CALLEE: org.apache.velocity.runtime.RuntimeInstance#getLog()
	CALLEE: org.apache.velocity.util.introspection.Introspector#<init>(org.apache.velocity.runtime.log.Log)
CALLER: org.apache.velocity.runtime.RuntimeInstance#init(java.util.Properties)
	CALLEE: static org.apache.commons.collections.ExtendedProperties#convertProperties(java.util.Properties)
	CALLEE: org.apache.velocity.runtime.RuntimeInstance#setProperties(org.apache.commons.collections.ExtendedProperties)
	CALLEE: org.apache.velocity.runtime.RuntimeInstance#init()
CALLER: org.traccar.ServerManager#initProtocolServer(org.traccar.Protocol)
	CALLEE: org.traccar.Config#hasKey(java.lang.String)
	CALLEE: static org.traccar.Context#getConfig()
CALLER: org.traccar.database.DataManager#getAttributeAliases()
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#executeQuery(java.lang.Class)
CALLER: static org.slf4j.LoggerFactory#getLogger(java.lang.Class)
	CALLEE: static org.slf4j.LoggerFactory#getLogger(java.lang.String)
	CALLEE: static org.slf4j.helpers.Util#getCallingClass()
	CALLEE: static org.slf4j.LoggerFactory#nonMatchingClasses(java.lang.Class,java.lang.Class)
	CALLEE: static org.slf4j.helpers.Util#report(java.lang.String)
	CALLEE: org.slf4j.helpers.NOPLogger#getName()
	CALLEE: org.slf4j.helpers.SubstituteLogger#getName()
	CALLEE: org.slf4j.helpers.MarkerIgnoringBase#getName()
CALLER: static org.slf4j.LoggerFactory#<clinit>()
	CALLEE: org.slf4j.helpers.SubstituteLoggerFactory#<init>()
	CALLEE: org.slf4j.helpers.NOPLoggerFactory#<init>()
	CALLEE: static org.slf4j.helpers.Util#safeGetBooleanSystemProperty(java.lang.String)
CALLER: com.ning.http.client.AsyncHttpClient#finalize()
	CALLEE: org.slf4j.helpers.NOPLogger#debug(java.lang.String)
	CALLEE: org.slf4j.helpers.SubstituteLogger#debug(java.lang.String)
	CALLEE: org.slf4j.impl.SimpleLogger#debug(java.lang.String)
CALLER: org.apache.log4j.DailyRollingFileAppender#<init>()
	CALLEE: org.apache.log4j.RollingCalendar#<init>()
	CALLEE: org.apache.log4j.FileAppender#<init>()
CALLER: org.apache.log4j.AppenderSkeleton#finalize()
	CALLEE: static org.apache.log4j.helpers.LogLog#debug(java.lang.String)
	CALLEE: org.apache.log4j.WriterAppender#close()
	CALLEE: org.apache.log4j.varia.NullAppender#close()
CALLER: com.ning.http.client.AsyncHttpClientConfig.Builder#<init>()
	CALLEE: static com.ning.http.client.AsyncHttpClientConfigDefaults#defaultMaxRequestRetry()
	CALLEE: static com.ning.http.client.AsyncHttpClientConfigDefaults#defaultDisableUrlEncodingForBoundRequests()
	CALLEE: static com.ning.http.client.AsyncHttpClientConfigDefaults#defaultIoThreadMultiplier()
	CALLEE: static com.ning.http.client.AsyncHttpClientConfigDefaults#defaultEnabledProtocols()
	CALLEE: static com.ning.http.client.AsyncHttpClientConfigDefaults#defaultSslSessionCacheSize()
	CALLEE: static com.ning.http.client.AsyncHttpClientConfigDefaults#defaultSslSessionTimeout()
	CALLEE: static com.ning.http.client.AsyncHttpClientConfigDefaults#defaultConnectTimeout()
	CALLEE: static com.ning.http.client.AsyncHttpClientConfigDefaults#defaultMaxConnections()
	CALLEE: static com.ning.http.client.AsyncHttpClientConfigDefaults#defaultMaxConnectionsPerHost()
	CALLEE: static com.ning.http.client.AsyncHttpClientConfigDefaults#defaultRequestTimeout()
	CALLEE: static com.ning.http.client.AsyncHttpClientConfigDefaults#defaultReadTimeout()
	CALLEE: static com.ning.http.client.AsyncHttpClientConfigDefaults#defaultWebSocketTimeout()
	CALLEE: static com.ning.http.client.AsyncHttpClientConfigDefaults#defaultAllowPoolingConnections()
	CALLEE: static com.ning.http.client.AsyncHttpClientConfigDefaults#defaultAllowPoolingSslConnections()
	CALLEE: static com.ning.http.client.AsyncHttpClientConfigDefaults#defaultPooledConnectionIdleTimeout()
	CALLEE: static com.ning.http.client.AsyncHttpClientConfigDefaults#defaultConnectionTTL()
	CALLEE: static com.ning.http.client.AsyncHttpClientConfigDefaults#defaultAcceptAnyCertificate()
	CALLEE: static com.ning.http.client.AsyncHttpClientConfigDefaults#defaultFollowRedirect()
	CALLEE: static com.ning.http.client.AsyncHttpClientConfigDefaults#defaultMaxRedirects()
	CALLEE: static com.ning.http.client.AsyncHttpClientConfigDefaults#defaultStrict302Handling()
	CALLEE: static com.ning.http.client.AsyncHttpClientConfigDefaults#defaultUseProxySelector()
	CALLEE: static com.ning.http.client.AsyncHttpClientConfigDefaults#defaultUseProxyProperties()
	CALLEE: static com.ning.http.client.AsyncHttpClientConfigDefaults#defaultUseRelativeURIsWithConnectProxies()
	CALLEE: static com.ning.http.client.AsyncHttpClientConfigDefaults#defaultCompressionEnforced()
	CALLEE: static com.ning.http.client.AsyncHttpClientConfigDefaults#defaultUserAgent()
CALLER: com.ning.http.client.AsyncHttpClientConfig.Builder#build()
	CALLEE: com.ning.http.client.AsyncHttpClientConfig.Builder.1#<init>(com.ning.http.client.AsyncHttpClientConfig.Builder)
	CALLEE: static com.ning.http.util.ProxyUtils#getJdkDefaultProxyServerSelector()
	CALLEE: static com.ning.http.util.ProxyUtils#createProxyServerSelector(java.util.Properties)
	CALLEE: com.ning.http.client.AsyncHttpClientConfig#<init>(int,int,int,int,int,int,boolean,boolean,int,int,javax.net.ssl.SSLContext,javax.net.ssl.HostnameVerifier,boolean,boolean,int,boolean,java.util.concurrent.ExecutorService,com.ning.http.client.ProxyServerSelector,boolean,boolean,java.lang.String,com.ning.http.client.Realm,java.util.List,java.util.List,java.util.List,int,boolean,int,java.lang.String[],java.lang.String[],java.lang.Integer,java.lang.Integer,com.ning.http.client.AsyncHttpProviderConfig,com.ning.http.client.AsyncHttpClientConfig.1)
CALLER: com.ning.http.client.AsyncHttpClient#<init>(com.ning.http.client.AsyncHttpClientConfig)
	CALLEE: static com.ning.http.client.AsyncHttpClient#loadDefaultProvider(java.lang.String,com.ning.http.client.AsyncHttpClientConfig)
	CALLEE: com.ning.http.client.AsyncHttpClient#<init>(com.ning.http.client.AsyncHttpProvider,com.ning.http.client.AsyncHttpClientConfig)
CALLER: org.apache.log4j.PatternLayout#createPatternParser(java.lang.String)
	CALLEE: org.apache.log4j.helpers.PatternParser#<init>(java.lang.String)
CALLER: org.apache.log4j.FileAppender#<init>(org.apache.log4j.Layout,java.lang.String,boolean)
	CALLEE: org.apache.log4j.WriterAppender#<init>()
	CALLEE: org.apache.log4j.FileAppender#setFile(java.lang.String,boolean,boolean,int)
CALLER: org.apache.log4j.DailyRollingFileAppender#activateOptions()
	CALLEE: org.apache.log4j.FileAppender#activateOptions()
	CALLEE: org.apache.log4j.DailyRollingFileAppender#computeCheckPeriod()
	CALLEE: org.apache.log4j.DailyRollingFileAppender#printPeriodicity(int)
	CALLEE: org.apache.log4j.RollingCalendar#setType(int)
	CALLEE: static org.apache.log4j.helpers.LogLog#error(java.lang.String)
CALLER: static org.apache.log4j.LogManager#getLoggerRepository()
	CALLEE: org.apache.log4j.spi.DefaultRepositorySelector#<init>(org.apache.log4j.spi.LoggerRepository)
	CALLEE: org.apache.log4j.spi.NOPLoggerRepository#<init>()
	CALLEE: static org.apache.log4j.LogManager#isLikelySafeScenario(java.lang.Exception)
	CALLEE: static org.apache.log4j.helpers.LogLog#debug(java.lang.String,java.lang.Throwable)
	CALLEE: static org.apache.log4j.helpers.LogLog#error(java.lang.String,java.lang.Throwable)
	CALLEE: org.apache.log4j.spi.DefaultRepositorySelector#getLoggerRepository()
CALLER: org.apache.log4j.spi.RootLogger#<init>(org.apache.log4j.Level)
	CALLEE: org.apache.log4j.Logger#<init>(java.lang.String)
	CALLEE: org.apache.log4j.spi.RootLogger#setLevel(org.apache.log4j.Level)
CALLER: org.apache.log4j.Hierarchy#<init>(org.apache.log4j.Logger)
	CALLEE: org.apache.log4j.Hierarchy#setThreshold(org.apache.log4j.Level)
	CALLEE: org.apache.log4j.Category#setHierarchy(org.apache.log4j.spi.LoggerRepository)
	CALLEE: org.apache.log4j.or.RendererMap#<init>()
	CALLEE: org.apache.log4j.DefaultCategoryFactory#<init>()
CALLER: static org.apache.log4j.helpers.OptionConverter#getSystemProperty(java.lang.String,java.lang.String)
	CALLEE: static org.apache.log4j.helpers.LogLog#debug(java.lang.String)
CALLER: static org.apache.log4j.helpers.Loader#getResource(java.lang.String)
	CALLEE: static org.apache.log4j.helpers.LogLog#debug(java.lang.String)
	CALLEE: static org.apache.log4j.helpers.LogLog#warn(java.lang.String,java.lang.Throwable)
	CALLEE: static org.apache.log4j.helpers.Loader#getTCL()
	CALLEE: static org.apache.log4j.helpers.Loader#class$(java.lang.String)
CALLER: static org.apache.log4j.helpers.Loader#<clinit>()
	CALLEE: static org.apache.log4j.helpers.OptionConverter#getSystemProperty(java.lang.String,java.lang.String)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#toBoolean(java.lang.String,boolean)
CALLER: static org.apache.log4j.helpers.LogLog#<clinit>()
	CALLEE: static org.apache.log4j.helpers.OptionConverter#getSystemProperty(java.lang.String,java.lang.String)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#toBoolean(java.lang.String,boolean)
CALLER: static org.apache.log4j.helpers.OptionConverter#selectAndConfigure(java.net.URL,java.lang.String,org.apache.log4j.spi.LoggerRepository)
	CALLEE: static org.apache.log4j.helpers.LogLog#debug(java.lang.String)
	CALLEE: static org.apache.log4j.helpers.LogLog#error(java.lang.String)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#class$(java.lang.String)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#instantiateByClassName(java.lang.String,java.lang.Class,java.lang.Object)
	CALLEE: org.apache.log4j.PropertyConfigurator#<init>()
	CALLEE: org.apache.log4j.PropertyConfigurator#doConfigure(java.net.URL,org.apache.log4j.spi.LoggerRepository)
CALLER: static org.apache.log4j.helpers.LogLog#warn(java.lang.String,java.lang.Throwable)
	CALLEE: org.h2.jdbc.JdbcSQLException#printStackTrace()
CALLER: org.apache.log4j.AppenderSkeleton#<init>()
	CALLEE: org.apache.log4j.helpers.OnlyOnceErrorHandler#<init>()
CALLER: static org.apache.log4j.LogManager#getLogger(java.lang.String)
	CALLEE: static org.apache.log4j.LogManager#getLoggerRepository()
	CALLEE: org.apache.log4j.Hierarchy#getLogger(java.lang.String)
	CALLEE: org.apache.log4j.spi.NOPLoggerRepository#getLogger(java.lang.String)
CALLER: org.apache.log4j.Level#<init>(int,java.lang.String,int)
	CALLEE: org.apache.log4j.Priority#<init>(int,java.lang.String,int)
CALLER: org.jboss.netty.logging.JdkLoggerFactory#<init>()
	CALLEE: org.jboss.netty.logging.InternalLoggerFactory#<init>()
CALLER: static org.traccar.helper.Log#warning(java.lang.String)
	CALLEE: static org.traccar.helper.Log#getLogger()
	CALLEE: org.apache.log4j.spi.NOPLogger#warn(java.lang.Object)
	CALLEE: org.apache.log4j.Category#warn(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.type.SimpleType#<init>(java.lang.Class,java.lang.String[],com.fasterxml.jackson.databind.JavaType[],java.lang.Object,java.lang.Object,boolean,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.TypeBase#<init>(java.lang.Class,int,java.lang.Object,java.lang.Object,boolean)
CALLER: com.fasterxml.jackson.databind.type.TypeFactory#<init>()
	CALLEE: com.fasterxml.jackson.databind.util.LRUMap#<init>(int,int)
	CALLEE: com.fasterxml.jackson.databind.type.TypeParser#<init>(com.fasterxml.jackson.databind.type.TypeFactory)
CALLER: com.fasterxml.jackson.databind.type.SimpleType#<init>(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#<init>(java.lang.Class,java.lang.String[],com.fasterxml.jackson.databind.JavaType[],java.lang.Object,java.lang.Object,boolean,java.lang.Class)
CALLER: com.fasterxml.jackson.core.Base64Variant#<init>(com.fasterxml.jackson.core.Base64Variant,java.lang.String,int)
	CALLEE: com.fasterxml.jackson.core.Base64Variant#<init>(com.fasterxml.jackson.core.Base64Variant,java.lang.String,boolean,char,int)
CALLER: com.fasterxml.jackson.core.ObjectCodec#<init>()
	CALLEE: com.fasterxml.jackson.core.TreeCodec#<init>()
CALLER: static com.fasterxml.jackson.core.JsonFactory#<clinit>()
	CALLEE: static com.fasterxml.jackson.core.JsonFactory.Feature#collectDefaults()
	CALLEE: static com.fasterxml.jackson.core.JsonParser.Feature#collectDefaults()
	CALLEE: static com.fasterxml.jackson.core.JsonGenerator.Feature#collectDefaults()
CALLER: com.fasterxml.jackson.databind.MappingJsonFactory#<init>(com.fasterxml.jackson.databind.ObjectMapper)
	CALLEE: com.fasterxml.jackson.core.JsonFactory#setCodec(com.fasterxml.jackson.core.ObjectCodec)
	CALLEE: com.fasterxml.jackson.core.JsonFactory#<init>(com.fasterxml.jackson.core.ObjectCodec)
	CALLEE: com.fasterxml.jackson.databind.ObjectMapper#<init>(com.fasterxml.jackson.core.JsonFactory)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver#<init>()
	CALLEE: com.fasterxml.jackson.databind.jsontype.SubtypeResolver#<init>()
CALLER: com.fasterxml.jackson.databind.util.RootNameLookup#<init>()
	CALLEE: com.fasterxml.jackson.databind.util.LRUMap#<init>(int,int)
CALLER: com.fasterxml.jackson.databind.ObjectMapper#defaultClassIntrospector()
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicClassIntrospector#<init>()
CALLER: com.fasterxml.jackson.databind.cfg.BaseSettings#withClassIntrospector(com.fasterxml.jackson.databind.introspect.ClassIntrospector)
	CALLEE: com.fasterxml.jackson.databind.cfg.BaseSettings#<init>(com.fasterxml.jackson.databind.introspect.ClassIntrospector,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.VisibilityChecker,com.fasterxml.jackson.databind.PropertyNamingStrategy,com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder,java.text.DateFormat,com.fasterxml.jackson.databind.cfg.HandlerInstantiator,java.util.Locale,java.util.TimeZone,com.fasterxml.jackson.core.Base64Variant)
CALLER: static com.fasterxml.jackson.databind.cfg.MapperConfigBase#<clinit>()
	CALLEE: static com.fasterxml.jackson.databind.cfg.MapperConfig#collectFeatureDefaults(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.SerializationConfig#<init>(com.fasterxml.jackson.databind.cfg.BaseSettings,com.fasterxml.jackson.databind.jsontype.SubtypeResolver,java.util.Map)
	CALLEE: static com.fasterxml.jackson.databind.cfg.MapperConfig#collectFeatureDefaults(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfigBase#<init>(com.fasterxml.jackson.databind.cfg.BaseSettings,com.fasterxml.jackson.databind.jsontype.SubtypeResolver,java.util.Map)
CALLER: com.fasterxml.jackson.databind.DeserializationConfig#<init>(com.fasterxml.jackson.databind.cfg.BaseSettings,com.fasterxml.jackson.databind.jsontype.SubtypeResolver,java.util.Map)
	CALLEE: static com.fasterxml.jackson.databind.cfg.MapperConfig#collectFeatureDefaults(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfigBase#<init>(com.fasterxml.jackson.databind.cfg.BaseSettings,com.fasterxml.jackson.databind.jsontype.SubtypeResolver,java.util.Map)
CALLER: static com.fasterxml.jackson.databind.MapperFeature#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.MapperFeature#<init>(java.lang.String,int,boolean)
CALLER: com.fasterxml.jackson.databind.cfg.MapperConfig#isEnabled(com.fasterxml.jackson.databind.MapperFeature)
	CALLEE: com.fasterxml.jackson.databind.MapperFeature#getMask()
CALLER: com.fasterxml.jackson.databind.ObjectMapper#configure(com.fasterxml.jackson.databind.MapperFeature,boolean)
	CALLEE: com.fasterxml.jackson.databind.SerializationConfig#with(com.fasterxml.jackson.databind.MapperFeature[])
	CALLEE: com.fasterxml.jackson.databind.SerializationConfig#without(com.fasterxml.jackson.databind.MapperFeature[])
	CALLEE: com.fasterxml.jackson.databind.DeserializationConfig#with(com.fasterxml.jackson.databind.MapperFeature[])
	CALLEE: com.fasterxml.jackson.databind.DeserializationConfig#without(com.fasterxml.jackson.databind.MapperFeature[])
CALLER: static com.fasterxml.jackson.databind.SerializerProvider#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.ser.impl.FailingSerializer#<init>(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#<init>()
CALLER: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.Impl#<init>()
	CALLEE: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider#<init>()
CALLER: static com.fasterxml.jackson.databind.deser.BeanDeserializerFactory#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig#<init>()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerFactory#<init>(com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig)
CALLER: static com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.PropertyName#<init>(java.lang.String)
CALLER: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl#<init>(com.fasterxml.jackson.databind.deser.DeserializerFactory)
	CALLEE: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext#<init>(com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.deser.DeserializerCache)
CALLER: static com.fasterxml.jackson.databind.ser.BeanSerializerFactory#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializerFactory#<init>(com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig)
CALLER: static com.fasterxml.jackson.databind.ser.BasicSerializerFactory#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.StringSerializer#<init>()
	CALLEE: static com.fasterxml.jackson.databind.ser.std.NumberSerializers#addAll(java.util.Map)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BooleanSerializer#<init>(boolean)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializer#<init>(java.lang.Class)
	CALLEE: static com.fasterxml.jackson.databind.ser.std.StdJdkSerializers#all()
CALLER: static com.zaxxer.hikari.HikariConfig#<clinit>()
	CALLEE: static org.slf4j.LoggerFactory#getLogger(java.lang.Class)
CALLER: com.zaxxer.hikari.HikariConfig#<init>()
	CALLEE: com.zaxxer.hikari.HikariConfig#loadProperties(java.lang.String)
CALLER: static com.zaxxer.hikari.HikariDataSource#<clinit>()
	CALLEE: static org.slf4j.LoggerFactory#getLogger(java.lang.Class)
CALLER: com.zaxxer.hikari.HikariDataSource#<init>(com.zaxxer.hikari.HikariConfig)
	CALLEE: com.zaxxer.hikari.HikariConfig#<init>()
	CALLEE: com.zaxxer.hikari.HikariConfig#validate()
	CALLEE: com.zaxxer.hikari.HikariConfig#copyState(com.zaxxer.hikari.HikariConfig)
	CALLEE: com.zaxxer.hikari.HikariConfig#getPoolName()
	CALLEE: com.zaxxer.hikari.pool.HikariPool#<init>(com.zaxxer.hikari.HikariConfig)
	CALLEE: org.slf4j.helpers.NOPLogger#info(java.lang.String,java.lang.Object)
	CALLEE: org.slf4j.helpers.SubstituteLogger#info(java.lang.String,java.lang.Object)
	CALLEE: org.slf4j.impl.SimpleLogger#info(java.lang.String,java.lang.Object)
CALLER: liquibase.resource.FileSystemResourceAccessor#<init>()
	CALLEE: liquibase.resource.AbstractResourceAccessor#<init>()
	CALLEE: liquibase.resource.FileSystemResourceAccessor#init()
CALLER: static liquibase.database.DatabaseFactory#getInstance()
	CALLEE: liquibase.database.DatabaseFactory#<init>()
CALLER: liquibase.Liquibase#<init>(java.lang.String,liquibase.resource.ResourceAccessor,liquibase.database.Database)
	CALLEE: static liquibase.logging.LogFactory#getLogger()
	CALLEE: liquibase.changelog.ChangeLogParameters#<init>(liquibase.database.Database)
CALLER: liquibase.Liquibase#clearCheckSums()
	CALLEE: liquibase.Contexts#<init>()
	CALLEE: static liquibase.lockservice.LockServiceFactory#getInstance()
	CALLEE: liquibase.LabelExpression#<init>()
	CALLEE: liquibase.Liquibase#checkLiquibaseTables(boolean,liquibase.changelog.DatabaseChangeLog,liquibase.Contexts,liquibase.LabelExpression)
	CALLEE: liquibase.Liquibase#getDatabase()
	CALLEE: liquibase.statement.core.UpdateStatement#<init>(java.lang.String,java.lang.String,java.lang.String)
	CALLEE: liquibase.statement.core.UpdateStatement#addNewColumnValue(java.lang.String,java.lang.Object)
	CALLEE: static liquibase.executor.ExecutorService#getInstance()
	CALLEE: liquibase.Liquibase#resetServices()
	CALLEE: liquibase.lockservice.LockServiceFactory#getLockService(liquibase.database.Database)
	CALLEE: liquibase.logging.core.DefaultLogger#severe(java.lang.String,java.lang.Throwable)
	CALLEE: liquibase.executor.ExecutorService#getExecutor(liquibase.database.Database)
	CALLEE: liquibase.logging.core.DefaultLogger#info(java.lang.String)
	CALLEE: liquibase.database.AbstractJdbcDatabase#commit()
	CALLEE: liquibase.database.AbstractJdbcDatabase#getDatabaseChangeLogTableName()
	CALLEE: liquibase.database.AbstractJdbcDatabase#getLiquibaseSchemaName()
	CALLEE: liquibase.database.AbstractJdbcDatabase#getLiquibaseCatalogName()
CALLER: liquibase.Liquibase#update(liquibase.Contexts)
	CALLEE: liquibase.LabelExpression#<init>()
	CALLEE: liquibase.Liquibase#update(liquibase.Contexts,liquibase.LabelExpression)
CALLER: org.traccar.database.DataManager#getAllGroups()
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#executeQuery(java.lang.Class)
CALLER: org.traccar.database.DataManager#getAllDevices()
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#executeQuery(java.lang.Class)
CALLER: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.helper.Log#info(java.lang.String)
	CALLEE: org.traccar.Config#getString(java.lang.String)
CALLER: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#<init>(javax.sql.DataSource,java.lang.String,boolean)
CALLER: static org.traccar.helper.Log#warning(java.lang.String,java.lang.Throwable)
	CALLEE: static org.traccar.helper.Log#getLogger()
	CALLEE: static org.traccar.helper.Log#exceptionStack(java.lang.Throwable)
	CALLEE: org.apache.log4j.spi.NOPLogger#warn(java.lang.Object)
	CALLEE: org.apache.log4j.Category#warn(java.lang.Object)
CALLER: static org.eclipse.jetty.util.log.Log#getLogger(java.lang.Class)
	CALLEE: static org.eclipse.jetty.util.log.Log#getLogger(java.lang.String)
CALLER: static org.eclipse.jetty.util.log.Log#<clinit>()
	CALLEE: org.eclipse.jetty.util.log.Log.1#<init>()
CALLER: org.eclipse.jetty.server.handler.HandlerCollection#<init>()
	CALLEE: org.eclipse.jetty.server.handler.AbstractHandlerContainer#<init>()
CALLER: static org.eclipse.jetty.server.session.SessionHandler#<clinit>()
	CALLEE: static org.eclipse.jetty.util.log.Log#getLogger(java.lang.String)
CALLER: org.eclipse.jetty.server.session.AbstractSessionManager#<init>()
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#<init>()
	CALLEE: org.eclipse.jetty.util.statistic.CounterStatistic#<init>()
	CALLEE: org.eclipse.jetty.util.statistic.SampleStatistic#<init>()
	CALLEE: org.eclipse.jetty.server.session.AbstractSessionManager.CookieConfig#<init>(org.eclipse.jetty.server.session.AbstractSessionManager)
	CALLEE: org.eclipse.jetty.server.session.AbstractSessionManager#setSessionTrackingModes(java.util.Set)
CALLER: org.eclipse.jetty.server.session.HashSessionManager#setScavengePeriod(int)
	CALLEE: org.eclipse.jetty.server.session.HashSessionManager.Scavenger#<init>(org.eclipse.jetty.server.session.HashSessionManager)
	CALLEE: org.eclipse.jetty.util.thread.ScheduledExecutorScheduler#schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)
	CALLEE: org.eclipse.jetty.util.thread.ScheduledExecutorScheduler.2#cancel()
	CALLEE: org.eclipse.jetty.util.thread.ScheduledExecutorScheduler.ScheduledFutureTask#cancel()
CALLER: static org.eclipse.jetty.server.Server#<clinit>()
	CALLEE: static org.eclipse.jetty.util.log.Log#getLogger(java.lang.Class)
CALLER: org.eclipse.jetty.server.Server#<init>(int)
	CALLEE: org.eclipse.jetty.server.Server#<init>(org.eclipse.jetty.util.thread.ThreadPool)
	CALLEE: org.eclipse.jetty.server.ServerConnector#<init>(org.eclipse.jetty.server.Server)
	CALLEE: org.eclipse.jetty.server.AbstractNetworkConnector#setPort(int)
	CALLEE: org.eclipse.jetty.server.Server#setConnectors(org.eclipse.jetty.server.Connector[])
CALLER: org.eclipse.jetty.server.Server#<init>(java.net.InetSocketAddress)
	CALLEE: org.eclipse.jetty.server.Server#<init>(org.eclipse.jetty.util.thread.ThreadPool)
	CALLEE: org.eclipse.jetty.server.ServerConnector#<init>(org.eclipse.jetty.server.Server)
	CALLEE: org.eclipse.jetty.server.AbstractNetworkConnector#setPort(int)
	CALLEE: org.eclipse.jetty.server.Server#setConnectors(org.eclipse.jetty.server.Connector[])
	CALLEE: org.eclipse.jetty.server.AbstractNetworkConnector#setHost(java.lang.String)
CALLER: static org.eclipse.jetty.server.handler.ContextHandler#<clinit>()
	CALLEE: static org.eclipse.jetty.util.log.Log#getLogger(java.lang.Class)
CALLER: org.eclipse.jetty.servlet.ServletContextHandler#<init>(int)
	CALLEE: org.eclipse.jetty.servlet.ServletContextHandler#<init>(org.eclipse.jetty.server.HandlerContainer,java.lang.String,int)
CALLER: org.eclipse.jetty.server.handler.ContextHandler#setContextPath(java.lang.String)
	CALLEE: org.eclipse.jetty.server.handler.AbstractHandler#getServer()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#isStarted()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#isStarting()
	CALLEE: org.eclipse.jetty.server.handler.AbstractHandlerContainer#getChildHandlersByClass(java.lang.Class)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#warn(java.lang.String,java.lang.Object[])
CALLER: org.eclipse.jetty.servlet.ServletContextHandler#getSessionHandler()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#isStarted()
	CALLEE: org.eclipse.jetty.servlet.ServletContextHandler#newSessionHandler()
CALLER: static org.eclipse.jetty.servlet.ServletHolder#<clinit>()
	CALLEE: static org.eclipse.jetty.util.log.Log#getLogger(java.lang.Class)
CALLER: static org.eclipse.jetty.servlet.Holder#<clinit>()
	CALLEE: static org.eclipse.jetty.util.log.Log#getLogger(java.lang.Class)
CALLER: static org.eclipse.jetty.servlet.BaseHolder#<clinit>()
	CALLEE: static org.eclipse.jetty.util.log.Log#getLogger(java.lang.Class)
CALLER: org.traccar.api.AsyncSocketServlet#<init>()
	CALLEE: org.eclipse.jetty.websocket.servlet.WebSocketServlet#<init>()
CALLER: org.eclipse.jetty.servlet.ServletHolder#<init>(javax.servlet.Servlet)
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#<init>(org.eclipse.jetty.servlet.BaseHolder.Source)
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#setServlet(javax.servlet.Servlet)
CALLER: org.eclipse.jetty.servlet.ServletContextHandler#addServlet(org.eclipse.jetty.servlet.ServletHolder,java.lang.String)
	CALLEE: org.eclipse.jetty.servlet.ServletContextHandler#getServletHandler()
	CALLEE: org.eclipse.jetty.servlet.ServletHandler#addServletWithMapping(org.eclipse.jetty.servlet.ServletHolder,java.lang.String)
CALLER: org.glassfish.jersey.server.ResourceConfig#<init>()
	CALLEE: javax.ws.rs.core.Application#<init>()
	CALLEE: org.glassfish.jersey.server.ResourceConfig.State#<init>()
CALLER: org.glassfish.jersey.server.ResourceConfig#registerClasses(java.lang.Class[])
	CALLEE: static jersey.repackaged.com.google.common.collect.Sets#newHashSet(java.lang.Object[])
	CALLEE: org.glassfish.jersey.server.ResourceConfig#registerClasses(java.util.Set)
CALLER: org.glassfish.jersey.server.ResourceConfig#packages(java.lang.String[])
	CALLEE: org.glassfish.jersey.server.ResourceConfig#packages(boolean,java.lang.String[])
CALLER: static org.glassfish.jersey.servlet.ServletContainer#<clinit>()
	CALLEE: org.glassfish.jersey.internal.util.ExtendedLogger#<init>(java.util.logging.Logger,java.util.logging.Level)
CALLER: org.glassfish.jersey.servlet.ServletContainer#<init>(org.glassfish.jersey.server.ResourceConfig)
	CALLEE: javax.servlet.http.HttpServlet#<init>()
CALLER: org.eclipse.jetty.server.handler.HandlerCollection#addHandler(org.eclipse.jetty.server.Handler)
	CALLEE: org.eclipse.jetty.server.handler.HandlerCollection#getHandlers()
	CALLEE: static org.eclipse.jetty.util.ArrayUtil#addToArray(java.lang.Object[],java.lang.Object,java.lang.Class)
	CALLEE: org.eclipse.jetty.server.handler.HandlerCollection#setHandlers(org.eclipse.jetty.server.Handler[])
CALLER: org.traccar.web.ConsoleServlet#<init>()
	CALLEE: org.h2.server.web.WebServlet#<init>()
CALLER: static org.eclipse.jetty.webapp.WebAppContext#<clinit>()
	CALLEE: static org.eclipse.jetty.util.log.Log#getLogger(java.lang.Class)
CALLER: org.eclipse.jetty.webapp.WebAppContext#<init>()
	CALLEE: org.eclipse.jetty.servlet.ErrorPageErrorHandler#<init>()
	CALLEE: org.eclipse.jetty.webapp.WebAppContext#<init>(org.eclipse.jetty.server.HandlerContainer,java.lang.String,org.eclipse.jetty.server.session.SessionHandler,org.eclipse.jetty.security.SecurityHandler,org.eclipse.jetty.servlet.ServletHandler,org.eclipse.jetty.server.handler.ErrorHandler,int)
CALLER: static org.eclipse.jetty.server.handler.ResourceHandler#<clinit>()
	CALLEE: static org.eclipse.jetty.util.log.Log#getLogger(java.lang.Class)
CALLER: org.eclipse.jetty.server.handler.ResourceHandler#<init>()
	CALLEE: org.eclipse.jetty.server.handler.HandlerWrapper#<init>()
	CALLEE: org.eclipse.jetty.http.MimeTypes#<init>()
CALLER: org.eclipse.jetty.server.handler.ResourceHandler#setResourceBase(java.lang.String)
	CALLEE: static org.eclipse.jetty.util.resource.Resource#newResource(java.lang.String)
	CALLEE: org.eclipse.jetty.server.handler.ResourceHandler#setBaseResource(org.eclipse.jetty.util.resource.Resource)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#warn(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.Throwable)
	CALLEE: org.eclipse.jetty.util.MultiException#toString()
	CALLEE: org.h2.jdbc.JdbcSQLException#toString()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#toString()
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#toString()
CALLER: org.eclipse.jetty.server.handler.ErrorHandler#<init>()
	CALLEE: org.eclipse.jetty.server.handler.AbstractHandler#<init>()
CALLER: org.traccar.database.DataManager#getServer()
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#executeQuerySingle(java.lang.Class)
CALLER: org.traccar.database.DataManager#getUsers()
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#executeQuery(java.lang.Class)
CALLER: org.traccar.database.GroupTree#<init>(java.util.Collection,java.util.Collection)
	CALLEE: org.traccar.database.GroupTree.TreeNode#<init>(org.traccar.model.Group)
	CALLEE: org.traccar.database.GroupTree.TreeNode#<init>(org.traccar.model.Device)
	CALLEE: org.traccar.database.GroupTree.TreeNode#setParent(org.traccar.database.GroupTree.TreeNode)
	CALLEE: org.traccar.database.GroupTree.TreeNode#getDevice()
	CALLEE: org.traccar.database.GroupTree.TreeNode#getGroup()
CALLER: org.traccar.database.DataManager#getGroupPermissions()
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#executeQuery(java.lang.Class)
CALLER: org.traccar.database.GroupTree#getGroups(long)
	CALLEE: org.traccar.database.GroupTree#getNodes(java.util.Set,org.traccar.database.GroupTree.TreeNode)
	CALLEE: org.traccar.database.GroupTree.TreeNode#getGroup()
CALLER: org.traccar.database.GroupTree#getDevices(long)
	CALLEE: org.traccar.database.GroupTree#getNodes(java.util.Set,org.traccar.database.GroupTree.TreeNode)
	CALLEE: org.traccar.database.GroupTree.TreeNode#getDevice()
CALLER: org.traccar.database.DataManager#getDevicePermissions()
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#executeQuery(java.lang.Class)
CALLER: org.traccar.database.DataManager#getGeofences()
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#executeQuery(java.lang.Class)
CALLER: org.traccar.database.GeofenceManager#refreshUserGeofences()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
	CALLEE: org.traccar.database.DataManager#getGeofencePermissions()
	CALLEE: org.traccar.database.GeofenceManager#getUserGeofences(long)
CALLER: org.traccar.database.GeofenceManager#refresh()
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
	CALLEE: org.traccar.database.DeviceManager#getLastPosition(long)
	CALLEE: static org.traccar.Context#getDeviceManager()
	CALLEE: org.traccar.database.DataManager#getGroupGeofences()
	CALLEE: org.traccar.database.GeofenceManager#getGroupGeofences(long)
	CALLEE: org.traccar.database.DataManager#getDeviceGeofences()
	CALLEE: org.traccar.database.DeviceManager#getAllDevices()
	CALLEE: org.traccar.database.GeofenceManager#getDeviceGeofences(java.util.Map,long)
	CALLEE: org.traccar.database.DeviceManager#getGroupById(long)
	CALLEE: static org.traccar.Context#getIdentityManager()
	CALLEE: org.traccar.database.GeofenceManager#getGeofence(long)
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
CALLER: org.traccar.database.DataManager#getCalendars()
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#executeQuery(java.lang.Class)
CALLER: org.traccar.database.CalendarManager#refreshUserCalendars()
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
	CALLEE: org.traccar.database.DataManager#getCalendarPermissions()
	CALLEE: org.traccar.database.CalendarManager#getUserCalendarIds(long)
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
CALLER: org.traccar.database.DataManager#getNotifications()
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#executeQuery(java.lang.Class)
CALLER: static org.eclipse.jetty.util.URIUtil#appendSchemeHostPort(java.lang.StringBuilder,java.lang.String,java.lang.String,int)
	CALLEE: static org.eclipse.jetty.util.HostPort#normalizeHost(java.lang.String)
CALLER: org.apache.velocity.runtime.log.Log#<init>()
	CALLEE: org.apache.velocity.runtime.log.HoldingLogChute#<init>()
	CALLEE: org.apache.velocity.runtime.log.Log#setLogChute(org.apache.velocity.runtime.log.LogChute)
CALLER: org.apache.velocity.runtime.VelocimacroFactory#<init>(org.apache.velocity.runtime.RuntimeServices)
	CALLEE: org.apache.velocity.runtime.RuntimeInstance#getLog()
	CALLEE: org.apache.velocity.runtime.RuntimeInstance#getBoolean(java.lang.String,boolean)
	CALLEE: org.apache.velocity.runtime.log.LogDisplayWrapper#<init>(org.apache.velocity.runtime.log.Log,java.lang.String,boolean)
	CALLEE: org.apache.velocity.runtime.VelocimacroManager#<init>(org.apache.velocity.runtime.RuntimeServices)
CALLER: org.apache.velocity.util.introspection.Introspector#<init>(org.apache.velocity.runtime.log.Log)
	CALLEE: org.apache.velocity.util.introspection.IntrospectorBase#<init>(org.apache.velocity.runtime.log.Log)
CALLER: static org.apache.commons.collections.ExtendedProperties#convertProperties(java.util.Properties)
	CALLEE: org.apache.commons.collections.ExtendedProperties#<init>()
	CALLEE: org.apache.commons.collections.ExtendedProperties#setProperty(java.lang.String,java.lang.Object)
CALLER: org.apache.velocity.runtime.RuntimeInstance#setProperties(org.apache.commons.collections.ExtendedProperties)
	CALLEE: org.apache.commons.collections.ExtendedProperties#combine(org.apache.commons.collections.ExtendedProperties)
CALLER: org.apache.velocity.runtime.RuntimeInstance#init()
	CALLEE: org.apache.velocity.runtime.log.Log#debug(java.lang.Object)
	CALLEE: org.apache.velocity.runtime.log.Log#trace(java.lang.Object)
	CALLEE: org.apache.velocity.runtime.RuntimeInstance#initializeProperties()
	CALLEE: org.apache.velocity.runtime.RuntimeInstance#initializeLog()
	CALLEE: org.apache.velocity.runtime.RuntimeInstance#initializeResourceManager()
	CALLEE: org.apache.velocity.runtime.RuntimeInstance#initializeDirectives()
	CALLEE: org.apache.velocity.runtime.RuntimeInstance#initializeEventHandlers()
	CALLEE: org.apache.velocity.runtime.RuntimeInstance#initializeParserPool()
	CALLEE: org.apache.velocity.runtime.RuntimeInstance#initializeIntrospection()
	CALLEE: org.apache.velocity.runtime.RuntimeInstance#initializeEvaluateScopeSettings()
	CALLEE: org.apache.velocity.runtime.VelocimacroFactory#initVelocimacro()
CALLER: static org.slf4j.LoggerFactory#getLogger(java.lang.String)
	CALLEE: static org.slf4j.LoggerFactory#getILoggerFactory()
	CALLEE: org.slf4j.helpers.SubstituteLoggerFactory#getLogger(java.lang.String)
	CALLEE: org.slf4j.helpers.NOPLoggerFactory#getLogger(java.lang.String)
	CALLEE: org.slf4j.impl.SimpleLoggerFactory#getLogger(java.lang.String)
CALLER: static org.slf4j.helpers.Util#getCallingClass()
	CALLEE: static org.slf4j.helpers.Util#getSecurityManager()
	CALLEE: org.slf4j.helpers.Util.ClassContextSecurityManager#getClassContext()
CALLER: static org.slf4j.helpers.Util#safeGetBooleanSystemProperty(java.lang.String)
	CALLEE: static org.slf4j.helpers.Util#safeGetSystemProperty(java.lang.String)
CALLER: org.apache.log4j.FileAppender#<init>()
	CALLEE: org.apache.log4j.WriterAppender#<init>()
CALLER: org.apache.log4j.WriterAppender#close()
	CALLEE: org.apache.log4j.WriterAppender#writeFooter()
	CALLEE: org.apache.log4j.FileAppender#reset()
CALLER: static com.ning.http.client.AsyncHttpClientConfigDefaults#defaultAllowPoolingConnections()
	CALLEE: static com.ning.http.util.MiscUtils#getBoolean(java.lang.String,boolean)
CALLER: static com.ning.http.client.AsyncHttpClientConfigDefaults#defaultAllowPoolingSslConnections()
	CALLEE: static com.ning.http.util.MiscUtils#getBoolean(java.lang.String,boolean)
CALLER: static com.ning.http.client.AsyncHttpClientConfigDefaults#defaultAcceptAnyCertificate()
	CALLEE: static com.ning.http.util.MiscUtils#getBoolean(java.lang.String,boolean)
CALLER: static com.ning.http.client.AsyncHttpClientConfigDefaults#defaultUseRelativeURIsWithConnectProxies()
	CALLEE: static com.ning.http.util.MiscUtils#getBoolean(java.lang.String,boolean)
CALLER: static com.ning.http.client.AsyncHttpClientConfigDefaults#defaultCompressionEnforced()
	CALLEE: static com.ning.http.util.MiscUtils#getBoolean(java.lang.String,boolean)
CALLER: static com.ning.http.util.ProxyUtils#getJdkDefaultProxyServerSelector()
	CALLEE: static com.ning.http.util.ProxyUtils#createProxyServerSelector(java.net.ProxySelector)
CALLER: static com.ning.http.util.ProxyUtils#<clinit>()
	CALLEE: static org.slf4j.LoggerFactory#getLogger(java.lang.Class)
CALLER: static com.ning.http.util.ProxyUtils#createProxyServerSelector(java.util.Properties)
	CALLEE: static com.ning.http.client.ProxyServer.Protocol#valueOf(java.lang.String)
	CALLEE: com.ning.http.client.ProxyServer#<init>(com.ning.http.client.ProxyServer.Protocol,java.lang.String,int,java.lang.String,java.lang.String)
	CALLEE: com.ning.http.client.ProxyServer#addNonProxyHost(java.lang.String)
	CALLEE: static com.ning.http.util.ProxyUtils#createProxyServerSelector(com.ning.http.client.ProxyServer)
CALLER: static com.ning.http.client.ProxyServerSelector#<clinit>()
	CALLEE: com.ning.http.client.ProxyServerSelector.1#<init>()
CALLER: com.ning.http.client.AsyncHttpClientConfig#<init>(int,int,int,int,int,int,boolean,boolean,int,int,javax.net.ssl.SSLContext,javax.net.ssl.HostnameVerifier,boolean,boolean,int,boolean,java.util.concurrent.ExecutorService,com.ning.http.client.ProxyServerSelector,boolean,boolean,java.lang.String,com.ning.http.client.Realm,java.util.List,java.util.List,java.util.List,int,boolean,int,java.lang.String[],java.lang.String[],java.lang.Integer,java.lang.Integer,com.ning.http.client.AsyncHttpProviderConfig,com.ning.http.client.AsyncHttpClientConfig.1)
	CALLEE: com.ning.http.client.AsyncHttpClientConfig#<init>(int,int,int,int,int,int,boolean,boolean,int,int,javax.net.ssl.SSLContext,javax.net.ssl.HostnameVerifier,boolean,boolean,int,boolean,java.util.concurrent.ExecutorService,com.ning.http.client.ProxyServerSelector,boolean,boolean,java.lang.String,com.ning.http.client.Realm,java.util.List,java.util.List,java.util.List,int,boolean,int,java.lang.String[],java.lang.String[],java.lang.Integer,java.lang.Integer,com.ning.http.client.AsyncHttpProviderConfig)
CALLER: static com.ning.http.client.AsyncHttpClient#loadDefaultProvider(java.lang.String,com.ning.http.client.AsyncHttpClientConfig)
	CALLEE: org.slf4j.impl.SimpleLogger#isErrorEnabled()
	CALLEE: com.ning.http.client.providers.jdk.JDKAsyncHttpProvider#<init>(com.ning.http.client.AsyncHttpClientConfig)
	CALLEE: org.slf4j.helpers.NOPLogger#isDebugEnabled()
	CALLEE: org.slf4j.helpers.NOPLogger#error(java.lang.String,java.lang.Throwable)
	CALLEE: org.slf4j.helpers.NOPLogger#error(java.lang.String,java.lang.Object)
	CALLEE: org.slf4j.helpers.NOPLogger#debug(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.helpers.NOPLogger#isErrorEnabled()
	CALLEE: org.slf4j.helpers.SubstituteLogger#isDebugEnabled()
	CALLEE: org.slf4j.helpers.SubstituteLogger#error(java.lang.String,java.lang.Throwable)
	CALLEE: org.slf4j.helpers.SubstituteLogger#error(java.lang.String,java.lang.Object)
	CALLEE: org.slf4j.helpers.SubstituteLogger#debug(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.helpers.SubstituteLogger#isErrorEnabled()
	CALLEE: org.slf4j.impl.SimpleLogger#isDebugEnabled()
	CALLEE: org.slf4j.impl.SimpleLogger#error(java.lang.String,java.lang.Throwable)
	CALLEE: org.slf4j.impl.SimpleLogger#error(java.lang.String,java.lang.Object)
	CALLEE: org.slf4j.impl.SimpleLogger#debug(java.lang.String,java.lang.Object,java.lang.Object)
CALLER: org.apache.log4j.helpers.PatternParser#<init>(java.lang.String)
	CALLEE: org.apache.log4j.helpers.FormattingInfo#<init>()
CALLER: org.apache.log4j.WriterAppender#<init>()
	CALLEE: org.apache.log4j.AppenderSkeleton#<init>()
CALLER: org.apache.log4j.FileAppender#setFile(java.lang.String,boolean,boolean,int)
	CALLEE: static org.apache.log4j.helpers.LogLog#debug(java.lang.String)
	CALLEE: org.apache.log4j.FileAppender#reset()
	CALLEE: org.apache.log4j.WriterAppender#setImmediateFlush(boolean)
	CALLEE: org.apache.log4j.WriterAppender#createWriter(java.io.OutputStream)
	CALLEE: org.apache.log4j.FileAppender#setQWForFiles(java.io.Writer)
	CALLEE: org.apache.log4j.WriterAppender#writeHeader()
CALLER: org.apache.log4j.FileAppender#activateOptions()
	CALLEE: org.apache.log4j.FileAppender#setFile(java.lang.String,boolean,boolean,int)
	CALLEE: static org.apache.log4j.helpers.LogLog#warn(java.lang.String)
	CALLEE: org.apache.log4j.helpers.OnlyOnceErrorHandler#error(java.lang.String,java.lang.Exception,int)
CALLER: org.apache.log4j.DailyRollingFileAppender#computeCheckPeriod()
	CALLEE: org.apache.log4j.RollingCalendar#setType(int)
	CALLEE: org.apache.log4j.RollingCalendar#<init>(java.util.TimeZone,java.util.Locale)
	CALLEE: org.apache.log4j.RollingCalendar#getNextCheckMillis(java.util.Date)
CALLER: org.apache.log4j.DailyRollingFileAppender#printPeriodicity(int)
	CALLEE: static org.apache.log4j.helpers.LogLog#debug(java.lang.String)
	CALLEE: static org.apache.log4j.helpers.LogLog#warn(java.lang.String)
CALLER: static org.apache.log4j.helpers.LogLog#error(java.lang.String,java.lang.Throwable)
	CALLEE: org.h2.jdbc.JdbcSQLException#printStackTrace()
CALLER: org.apache.log4j.Logger#<init>(java.lang.String)
	CALLEE: org.apache.log4j.Category#<init>(java.lang.String)
CALLER: org.apache.log4j.spi.RootLogger#setLevel(org.apache.log4j.Level)
	CALLEE: static org.apache.log4j.helpers.LogLog#error(java.lang.String,java.lang.Throwable)
CALLER: static org.apache.log4j.or.RendererMap#<clinit>()
	CALLEE: org.apache.log4j.or.DefaultRenderer#<init>()
CALLER: static org.apache.log4j.helpers.Loader#getTCL()
	CALLEE: static org.apache.log4j.helpers.Loader#class$(java.lang.String)
CALLER: static org.apache.log4j.helpers.OptionConverter#instantiateByClassName(java.lang.String,java.lang.Class,java.lang.Object)
	CALLEE: static org.apache.log4j.helpers.LogLog#error(java.lang.String)
	CALLEE: static org.apache.log4j.helpers.LogLog#error(java.lang.String,java.lang.Throwable)
	CALLEE: static org.apache.log4j.helpers.Loader#loadClass(java.lang.String)
CALLER: org.apache.log4j.PropertyConfigurator#<init>()
	CALLEE: org.apache.log4j.DefaultCategoryFactory#<init>()
CALLER: org.apache.log4j.PropertyConfigurator#doConfigure(java.net.URL,org.apache.log4j.spi.LoggerRepository)
	CALLEE: static org.apache.log4j.helpers.LogLog#debug(java.lang.String)
	CALLEE: static org.apache.log4j.helpers.LogLog#error(java.lang.String)
	CALLEE: static org.apache.log4j.helpers.LogLog#error(java.lang.String,java.lang.Throwable)
	CALLEE: org.apache.log4j.PropertyConfigurator#doConfigure(java.util.Properties,org.apache.log4j.spi.LoggerRepository)
CALLER: com.fasterxml.jackson.databind.type.TypeBase#<init>(java.lang.Class,int,java.lang.Object,java.lang.Object,boolean)
	CALLEE: com.fasterxml.jackson.databind.JavaType#<init>(java.lang.Class,int,java.lang.Object,java.lang.Object,boolean)
CALLER: static com.fasterxml.jackson.core.util.DefaultPrettyPrinter.FixedSpaceIndenter#<clinit>()
	CALLEE: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.FixedSpaceIndenter#<init>()
CALLER: static com.fasterxml.jackson.core.util.DefaultPrettyPrinter.NopIndenter#<clinit>()
	CALLEE: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.NopIndenter#<init>()
CALLER: static com.fasterxml.jackson.core.util.DefaultIndenter#<clinit>()
	CALLEE: com.fasterxml.jackson.core.util.DefaultIndenter#<init>(java.lang.String,java.lang.String)
CALLER: static com.fasterxml.jackson.core.JsonFactory.Feature#collectDefaults()
	CALLEE: static com.fasterxml.jackson.core.JsonFactory.Feature#values()
CALLER: static com.fasterxml.jackson.core.JsonFactory.Feature#<clinit>()
	CALLEE: com.fasterxml.jackson.core.JsonFactory.Feature#<init>(java.lang.String,int,boolean)
CALLER: static com.fasterxml.jackson.core.JsonParser.Feature#collectDefaults()
	CALLEE: static com.fasterxml.jackson.core.JsonParser.Feature#values()
CALLER: static com.fasterxml.jackson.core.JsonParser.Feature#<clinit>()
	CALLEE: com.fasterxml.jackson.core.JsonParser.Feature#<init>(java.lang.String,int,boolean)
CALLER: static com.fasterxml.jackson.core.JsonGenerator.Feature#collectDefaults()
	CALLEE: static com.fasterxml.jackson.core.JsonGenerator.Feature#values()
CALLER: static com.fasterxml.jackson.core.JsonGenerator.Feature#<clinit>()
	CALLEE: com.fasterxml.jackson.core.JsonGenerator.Feature#<init>(java.lang.String,int,boolean)
CALLER: com.fasterxml.jackson.core.JsonFactory#<init>(com.fasterxml.jackson.core.ObjectCodec)
	CALLEE: static com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer#createRoot()
	CALLEE: static com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer#createRoot()
CALLER: com.fasterxml.jackson.databind.ObjectMapper#<init>(com.fasterxml.jackson.core.JsonFactory)
	CALLEE: com.fasterxml.jackson.databind.ObjectMapper#<init>(com.fasterxml.jackson.core.JsonFactory,com.fasterxml.jackson.databind.ser.DefaultSerializerProvider,com.fasterxml.jackson.databind.deser.DefaultDeserializationContext)
CALLER: static com.fasterxml.jackson.databind.introspect.BasicClassIntrospector#<clinit>()
	CALLEE: static com.fasterxml.jackson.databind.type.SimpleType#constructUnsafe(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicClassIntrospector#<init>()
	CALLEE: static com.fasterxml.jackson.databind.introspect.AnnotatedClass#constructWithoutSuperTypes(java.lang.Class,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver)
	CALLEE: static com.fasterxml.jackson.databind.introspect.BasicBeanDescription#forOtherUse(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedClass)
CALLER: com.fasterxml.jackson.databind.introspect.BasicClassIntrospector#<init>()
	CALLEE: com.fasterxml.jackson.databind.util.LRUMap#<init>(int,int)
	CALLEE: com.fasterxml.jackson.databind.introspect.ClassIntrospector#<init>()
CALLER: com.fasterxml.jackson.databind.cfg.MapperConfigBase#<init>(com.fasterxml.jackson.databind.cfg.BaseSettings,com.fasterxml.jackson.databind.jsontype.SubtypeResolver,java.util.Map)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#<init>(com.fasterxml.jackson.databind.cfg.BaseSettings,int)
	CALLEE: static com.fasterxml.jackson.databind.cfg.ContextAttributes#getEmpty()
CALLER: static com.fasterxml.jackson.databind.DeserializationFeature#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.DeserializationFeature#<init>(java.lang.String,int,boolean)
CALLER: static com.fasterxml.jackson.databind.node.JsonNodeFactory#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.node.JsonNodeFactory#<init>(boolean)
CALLER: com.fasterxml.jackson.databind.SerializationConfig#with(com.fasterxml.jackson.databind.MapperFeature[])
	CALLEE: com.fasterxml.jackson.databind.SerializationConfig#<init>(com.fasterxml.jackson.databind.SerializationConfig,int,int,int,int)
	CALLEE: com.fasterxml.jackson.databind.MapperFeature#getMask()
CALLER: com.fasterxml.jackson.databind.SerializationConfig#without(com.fasterxml.jackson.databind.MapperFeature[])
	CALLEE: com.fasterxml.jackson.databind.SerializationConfig#<init>(com.fasterxml.jackson.databind.SerializationConfig,int,int,int,int)
	CALLEE: com.fasterxml.jackson.databind.MapperFeature#getMask()
CALLER: com.fasterxml.jackson.databind.DeserializationConfig#with(com.fasterxml.jackson.databind.MapperFeature[])
	CALLEE: com.fasterxml.jackson.databind.DeserializationConfig#<init>(com.fasterxml.jackson.databind.DeserializationConfig,int,int,int,int)
	CALLEE: com.fasterxml.jackson.databind.MapperFeature#getMask()
CALLER: com.fasterxml.jackson.databind.DeserializationConfig#without(com.fasterxml.jackson.databind.MapperFeature[])
	CALLEE: com.fasterxml.jackson.databind.DeserializationConfig#<init>(com.fasterxml.jackson.databind.DeserializationConfig,int,int,int,int)
	CALLEE: com.fasterxml.jackson.databind.MapperFeature#getMask()
CALLER: com.fasterxml.jackson.databind.ser.impl.FailingSerializer#<init>(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider#<init>()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#<init>()
CALLER: static com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers#<init>()
CALLER: com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig#<init>()
	CALLEE: com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig#<init>(com.fasterxml.jackson.databind.deser.Deserializers[],com.fasterxml.jackson.databind.deser.KeyDeserializers[],com.fasterxml.jackson.databind.deser.BeanDeserializerModifier[],com.fasterxml.jackson.databind.AbstractTypeResolver[],com.fasterxml.jackson.databind.deser.ValueInstantiators[])
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerFactory#<init>(com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig)
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#<init>(com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig)
CALLER: static com.fasterxml.jackson.databind.PropertyName#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.PropertyName#<init>(java.lang.String,java.lang.String)
CALLER: com.fasterxml.jackson.databind.PropertyName#<init>(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.PropertyName#<init>(java.lang.String,java.lang.String)
CALLER: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext#<init>(com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.deser.DeserializerCache)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#<init>(com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.deser.DeserializerCache)
CALLER: com.fasterxml.jackson.databind.ser.BeanSerializerFactory#<init>(com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig)
	CALLEE: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#<init>(com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig)
CALLER: com.fasterxml.jackson.databind.ser.std.StringSerializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.NonTypedScalarSerializerBase#<init>(java.lang.Class)
CALLER: static com.fasterxml.jackson.databind.ser.std.ToStringSerializer#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#<init>()
CALLER: static com.fasterxml.jackson.databind.ser.std.NumberSerializers#addAll(java.util.Map)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#<init>()
CALLER: com.fasterxml.jackson.databind.ser.std.BooleanSerializer#<init>(boolean)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NonTypedScalarSerializerBase#<init>(java.lang.Class)
CALLER: static com.fasterxml.jackson.databind.ser.std.NumberSerializer#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializer#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.ser.std.NumberSerializer#<init>(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdScalarSerializer#<init>(java.lang.Class,boolean)
CALLER: static com.fasterxml.jackson.databind.ser.std.CalendarSerializer#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.CalendarSerializer#<init>()
CALLER: static com.fasterxml.jackson.databind.ser.std.DateSerializer#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.DateSerializer#<init>()
CALLER: static com.fasterxml.jackson.databind.ser.std.StdJdkSerializers#all()
	CALLEE: com.fasterxml.jackson.databind.ser.std.UUIDSerializer#<init>()
CALLER: static com.fasterxml.jackson.databind.util.TokenBuffer#<clinit>()
	CALLEE: static com.fasterxml.jackson.core.JsonGenerator.Feature#collectDefaults()
CALLER: com.zaxxer.hikari.HikariConfig#loadProperties(java.lang.String)
	CALLEE: static com.zaxxer.hikari.util.PropertyElf#setTargetFromProperties(java.lang.Object,java.util.Properties)
CALLER: com.zaxxer.hikari.HikariConfig#validate()
	CALLEE: com.zaxxer.hikari.HikariConfig#generatePoolNumber()
	CALLEE: static com.zaxxer.hikari.util.UtilityElf#getNullIfEmpty(java.lang.String)
	CALLEE: com.zaxxer.hikari.HikariConfig#validateNumerics()
	CALLEE: com.zaxxer.hikari.HikariConfig#logConfiguration()
	CALLEE: org.slf4j.helpers.NOPLogger#warn(java.lang.String,java.lang.Object)
	CALLEE: org.slf4j.helpers.NOPLogger#isDebugEnabled()
	CALLEE: org.slf4j.helpers.NOPLogger#error(java.lang.String,java.lang.Object)
	CALLEE: org.slf4j.helpers.SubstituteLogger#warn(java.lang.String,java.lang.Object)
	CALLEE: org.slf4j.helpers.SubstituteLogger#isDebugEnabled()
	CALLEE: org.slf4j.helpers.SubstituteLogger#error(java.lang.String,java.lang.Object)
	CALLEE: org.slf4j.impl.SimpleLogger#warn(java.lang.String,java.lang.Object)
	CALLEE: org.slf4j.impl.SimpleLogger#isDebugEnabled()
	CALLEE: org.slf4j.impl.SimpleLogger#error(java.lang.String,java.lang.Object)
CALLER: com.zaxxer.hikari.pool.HikariPool#<init>(com.zaxxer.hikari.HikariConfig)
	CALLEE: static com.zaxxer.hikari.util.UtilityElf#createThreadPoolExecutor(int,java.lang.String,java.util.concurrent.ThreadFactory,java.util.concurrent.RejectedExecutionHandler)
	CALLEE: com.zaxxer.hikari.HikariConfig#getScheduledExecutorService()
	CALLEE: com.zaxxer.hikari.util.UtilityElf.DefaultThreadFactory#<init>(java.lang.String,boolean)
	CALLEE: com.zaxxer.hikari.HikariConfig#getLeakDetectionThreshold()
	CALLEE: com.zaxxer.hikari.pool.ProxyLeakTask#<init>(long,java.util.concurrent.ScheduledExecutorService)
	CALLEE: com.zaxxer.hikari.pool.HikariPool.HouseKeeper#<init>(com.zaxxer.hikari.pool.HikariPool,com.zaxxer.hikari.pool.HikariPool.1)
	CALLEE: static org.slf4j.LoggerFactory#getLogger(java.lang.Class)
	CALLEE: com.zaxxer.hikari.pool.PoolBase#<init>(com.zaxxer.hikari.HikariConfig)
	CALLEE: com.zaxxer.hikari.pool.HikariPool.PoolEntryCreator#<init>(com.zaxxer.hikari.pool.HikariPool,com.zaxxer.hikari.pool.HikariPool.1)
	CALLEE: com.zaxxer.hikari.util.ConcurrentBag#<init>(com.zaxxer.hikari.util.ConcurrentBag.IBagStateListener)
	CALLEE: com.zaxxer.hikari.HikariConfig#isAllowPoolSuspension()
	CALLEE: com.zaxxer.hikari.util.SuspendResumeLock#<init>()
	CALLEE: com.zaxxer.hikari.pool.HikariPool#checkFailFast()
	CALLEE: com.zaxxer.hikari.HikariConfig#getMetricsTrackerFactory()
	CALLEE: com.zaxxer.hikari.pool.HikariPool#setMetricsTrackerFactory(com.zaxxer.hikari.metrics.MetricsTrackerFactory)
	CALLEE: com.zaxxer.hikari.HikariConfig#getMetricRegistry()
	CALLEE: com.zaxxer.hikari.pool.HikariPool#setMetricRegistry(java.lang.Object)
	CALLEE: com.zaxxer.hikari.HikariConfig#getHealthCheckRegistry()
	CALLEE: com.zaxxer.hikari.pool.HikariPool#setHealthCheckRegistry(java.lang.Object)
	CALLEE: com.zaxxer.hikari.pool.PoolBase#registerMBeans(com.zaxxer.hikari.pool.HikariPool)
	CALLEE: com.zaxxer.hikari.HikariConfig#getThreadFactory()
	CALLEE: com.zaxxer.hikari.HikariConfig#getMaximumPoolSize()
CALLER: liquibase.resource.AbstractResourceAccessor#<init>()
	CALLEE: liquibase.resource.FileSystemResourceAccessor#init()
	CALLEE: liquibase.resource.AbstractResourceAccessor#init()
CALLER: liquibase.resource.FileSystemResourceAccessor#init()
	CALLEE: liquibase.resource.AbstractResourceAccessor#init()
CALLER: liquibase.database.DatabaseFactory#<init>()
	CALLEE: liquibase.logging.LogFactory#<init>()
	CALLEE: liquibase.logging.LogFactory#getLog()
	CALLEE: static liquibase.servicelocator.ServiceLocator#getInstance()
	CALLEE: liquibase.database.DatabaseFactory#register(liquibase.database.Database)
	CALLEE: liquibase.exception.UnexpectedLiquibaseException#<init>(java.lang.String,java.lang.Throwable)
	CALLEE: liquibase.servicelocator.ServiceLocator#findClasses(java.lang.Class)
CALLER: static liquibase.logging.LogFactory#getLogger()
	CALLEE: liquibase.logging.LogFactory#getLog()
	CALLEE: static liquibase.logging.LogFactory#getInstance()
CALLER: static liquibase.logging.LogFactory#<clinit>()
	CALLEE: liquibase.logging.core.DefaultLogger#<init>()
CALLER: liquibase.changelog.ChangeLogParameters#<init>(liquibase.database.Database)
	CALLEE: liquibase.database.AbstractJdbcDatabase#getDatabaseChangeLogTableName()
	CALLEE: liquibase.database.AbstractJdbcDatabase#getLiquibaseSchemaName()
	CALLEE: liquibase.database.AbstractJdbcDatabase#requiresUsername()
	CALLEE: liquibase.database.AbstractJdbcDatabase#requiresPassword()
	CALLEE: liquibase.database.AbstractJdbcDatabase#isSafeToRunUpdate()
	CALLEE: liquibase.database.core.UnsupportedDatabase#getShortName()
	CALLEE: liquibase.database.AbstractJdbcDatabase#getLineComment()
	CALLEE: liquibase.database.AbstractJdbcDatabase#getDefaultSchemaName()
	CALLEE: liquibase.database.core.UnsupportedDatabase#getDefaultCatalogName()
	CALLEE: liquibase.database.AbstractJdbcDatabase#getDatabaseProductVersion()
	CALLEE: liquibase.database.AbstractJdbcDatabase#getDatabaseProductName()
	CALLEE: liquibase.database.AbstractJdbcDatabase#getDatabaseMinorVersion()
	CALLEE: liquibase.database.AbstractJdbcDatabase#getDatabaseMajorVersion()
	CALLEE: liquibase.database.AbstractJdbcDatabase#getDatabaseChangeLogLockTableName()
	CALLEE: liquibase.database.core.UnsupportedDatabase#getCurrentDateTimeFunction()
	CALLEE: liquibase.database.AbstractJdbcDatabase#getAutoIncrementClause(java.math.BigInteger,java.math.BigInteger)
	CALLEE: liquibase.Contexts#<init>()
	CALLEE: liquibase.LabelExpression#<init>()
	CALLEE: liquibase.changelog.ChangeLogParameters.ChangeLogParameter#<init>(liquibase.changelog.ChangeLogParameters,java.lang.String,java.lang.Object)
	CALLEE: liquibase.changelog.ChangeLogParameters#set(java.lang.String,java.lang.Object)
	CALLEE: static liquibase.util.StringUtils#trimToNull(java.lang.String)
	CALLEE: liquibase.changelog.ChangeLogParameters.ExpressionExpander#<init>(liquibase.changelog.ChangeLogParameters)
	CALLEE: liquibase.database.core.UnsupportedDatabase#supportsTablespaces()
	CALLEE: liquibase.database.core.UnsupportedDatabase#supportsSequences()
	CALLEE: liquibase.database.AbstractJdbcDatabase#supportsSchemas()
	CALLEE: liquibase.database.AbstractJdbcDatabase#supportsRestrictForeignKeys()
	CALLEE: liquibase.database.core.UnsupportedDatabase#supportsInitiallyDeferrableColumns()
	CALLEE: liquibase.database.AbstractJdbcDatabase#supportsForeignKeyDisable()
CALLER: static liquibase.lockservice.LockServiceFactory#getInstance()
	CALLEE: liquibase.lockservice.LockServiceFactory#<init>()
CALLER: liquibase.Liquibase#checkLiquibaseTables(boolean,liquibase.changelog.DatabaseChangeLog,liquibase.Contexts,liquibase.LabelExpression)
	CALLEE: static liquibase.lockservice.LockServiceFactory#getInstance()
	CALLEE: liquibase.Liquibase#getDatabase()
	CALLEE: static liquibase.changelog.ChangeLogHistoryServiceFactory#getInstance()
	CALLEE: liquibase.lockservice.LockServiceFactory#getLockService(liquibase.database.Database)
	CALLEE: liquibase.changelog.ChangeLogHistoryServiceFactory#getChangeLogService(liquibase.database.Database)
	CALLEE: liquibase.changelog.AbstractChangeLogHistoryService#upgradeChecksums(liquibase.changelog.DatabaseChangeLog,liquibase.Contexts,liquibase.LabelExpression)
	CALLEE: liquibase.changelog.OfflineChangeLogHistoryService#init()
CALLER: liquibase.statement.core.UpdateStatement#<init>(java.lang.String,java.lang.String,java.lang.String)
	CALLEE: liquibase.statement.AbstractSqlStatement#<init>()
CALLER: static liquibase.executor.ExecutorService#<clinit>()
	CALLEE: liquibase.executor.ExecutorService#<init>()
CALLER: liquibase.Liquibase#resetServices()
	CALLEE: static liquibase.lockservice.LockServiceFactory#getInstance()
	CALLEE: static liquibase.executor.ExecutorService#getInstance()
	CALLEE: static liquibase.changelog.ChangeLogHistoryServiceFactory#getInstance()
	CALLEE: liquibase.lockservice.LockServiceFactory#resetAll()
	CALLEE: liquibase.executor.ExecutorService#reset()
	CALLEE: liquibase.changelog.ChangeLogHistoryServiceFactory#resetAll()
CALLER: liquibase.Liquibase#update(liquibase.Contexts,liquibase.LabelExpression)
	CALLEE: liquibase.Liquibase#update(liquibase.Contexts,liquibase.LabelExpression,boolean)
CALLER: org.traccar.database.QueryBuilder#<init>(javax.sql.DataSource,java.lang.String,boolean)
	CALLEE: com.zaxxer.hikari.HikariDataSource#getConnection()
	CALLEE: static org.traccar.database.QueryBuilder#parse(java.lang.String,java.util.Map)
	CALLEE: com.zaxxer.hikari.pool.ProxyConnection#close()
	CALLEE: com.zaxxer.hikari.pool.HikariProxyConnection#prepareStatement(java.lang.String)
	CALLEE: com.zaxxer.hikari.pool.HikariProxyConnection#prepareStatement(java.lang.String,int)
CALLER: static org.traccar.helper.Log#exceptionStack(java.lang.Throwable)
	CALLEE: org.apache.log4j.config.PropertySetterException#getMessage()
	CALLEE: org.h2.jdbc.JdbcSQLException#getMessage()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#getMessage()
	CALLEE: org.glassfish.hk2.api.MultiException#getMessage()
	CALLEE: org.glassfish.jersey.server.model.ModelValidationException#getMessage()
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#getMessage()
	CALLEE: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference#getMessage()
CALLER: static org.eclipse.jetty.util.log.Log#getLogger(java.lang.String)
	CALLEE: static org.eclipse.jetty.util.log.Log#initialized()
	CALLEE: org.eclipse.jetty.util.log.AbstractLogger#getLogger(java.lang.String)
CALLER: org.eclipse.jetty.server.handler.AbstractHandlerContainer#<init>()
	CALLEE: org.eclipse.jetty.server.handler.AbstractHandler#<init>()
CALLER: static javax.servlet.SessionTrackingMode#<clinit>()
	CALLEE: javax.servlet.SessionTrackingMode#<init>(java.lang.String,int)
CALLER: org.eclipse.jetty.util.component.ContainerLifeCycle#<init>()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#<init>()
CALLER: org.eclipse.jetty.server.Server#<init>(org.eclipse.jetty.util.thread.ThreadPool)
	CALLEE: org.eclipse.jetty.server.handler.HandlerWrapper#<init>()
	CALLEE: org.eclipse.jetty.util.AttributesMap#<init>()
	CALLEE: org.eclipse.jetty.util.thread.QueuedThreadPool#<init>()
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#addBean(java.lang.Object)
	CALLEE: org.eclipse.jetty.server.handler.HandlerWrapper#setServer(org.eclipse.jetty.server.Server)
CALLER: org.eclipse.jetty.server.ServerConnector#<init>(org.eclipse.jetty.server.Server)
	CALLEE: org.eclipse.jetty.server.HttpConnectionFactory#<init>()
	CALLEE: org.eclipse.jetty.server.ServerConnector#<init>(org.eclipse.jetty.server.Server,java.util.concurrent.Executor,org.eclipse.jetty.util.thread.Scheduler,org.eclipse.jetty.io.ByteBufferPool,int,int,org.eclipse.jetty.server.ConnectionFactory[])
CALLER: org.eclipse.jetty.server.Server#setConnectors(org.eclipse.jetty.server.Connector[])
	CALLEE: org.eclipse.jetty.server.AbstractConnector#getServer()
	CALLEE: org.eclipse.jetty.server.Server#getConnectors()
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#updateBeans(java.lang.Object[],java.lang.Object[])
CALLER: org.eclipse.jetty.servlet.ServletContextHandler#<init>(org.eclipse.jetty.server.HandlerContainer,java.lang.String,int)
	CALLEE: org.eclipse.jetty.servlet.ServletContextHandler#<init>(org.eclipse.jetty.server.HandlerContainer,java.lang.String,org.eclipse.jetty.server.session.SessionHandler,org.eclipse.jetty.security.SecurityHandler,org.eclipse.jetty.servlet.ServletHandler,org.eclipse.jetty.server.handler.ErrorHandler,int)
CALLER: static org.eclipse.jetty.server.handler.ContextHandlerCollection#<clinit>()
	CALLEE: static org.eclipse.jetty.util.log.Log#getLogger(java.lang.Class)
CALLER: org.eclipse.jetty.servlet.ServletContextHandler#newSessionHandler()
	CALLEE: org.eclipse.jetty.server.session.SessionHandler#<init>()
CALLER: org.eclipse.jetty.websocket.servlet.WebSocketServlet#<init>()
	CALLEE: javax.servlet.http.HttpServlet#<init>()
CALLER: static org.eclipse.jetty.servlet.BaseHolder.Source#<clinit>()
	CALLEE: org.eclipse.jetty.servlet.BaseHolder.Source#<init>(java.lang.String,int)
CALLER: org.eclipse.jetty.servlet.ServletHolder#<init>(org.eclipse.jetty.servlet.BaseHolder.Source)
	CALLEE: org.eclipse.jetty.servlet.Holder#<init>(org.eclipse.jetty.servlet.BaseHolder.Source)
CALLER: org.eclipse.jetty.servlet.ServletHolder#setServlet(javax.servlet.Servlet)
	CALLEE: org.eclipse.jetty.servlet.Holder#setHeldClass(java.lang.Class)
	CALLEE: org.eclipse.jetty.servlet.Holder#getName()
	CALLEE: org.eclipse.jetty.servlet.Holder#setName(java.lang.String)
CALLER: org.eclipse.jetty.servlet.ServletContextHandler#getServletHandler()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#isStarted()
	CALLEE: org.eclipse.jetty.servlet.ServletContextHandler#newServletHandler()
CALLER: static org.glassfish.jersey.model.internal.CommonConfig#<clinit>()
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig.1#<init>()
CALLER: org.glassfish.jersey.server.ResourceConfig.State#<init>()
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig#<init>(javax.ws.rs.RuntimeType,jersey.repackaged.com.google.common.base.Predicate)
	CALLEE: static org.glassfish.jersey.internal.util.ReflectionHelper#getContextClassLoaderPA()
	CALLEE: static jersey.repackaged.com.google.common.collect.Sets#newHashSet()
CALLER: static jersey.repackaged.com.google.common.collect.Sets#newHashSet(java.lang.Object[])
	CALLEE: static jersey.repackaged.com.google.common.collect.Sets#newHashSetWithExpectedSize(int)
CALLER: org.glassfish.jersey.server.ResourceConfig#registerClasses(java.util.Set)
	CALLEE: org.glassfish.jersey.server.ResourceConfig#register(java.lang.Class)
	CALLEE: jersey.repackaged.com.google.common.collect.Collections2.FilteredCollection#iterator()
	CALLEE: jersey.repackaged.com.google.common.collect.AbstractIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.AbstractIterator#hasNext()
CALLER: org.glassfish.jersey.server.ResourceConfig#packages(boolean,java.lang.String[])
	CALLEE: org.glassfish.jersey.server.internal.scanning.PackageNamesScanner#<init>(java.lang.String[],boolean)
	CALLEE: org.glassfish.jersey.server.ResourceConfig#registerFinder(org.glassfish.jersey.server.ResourceFinder)
CALLER: javax.servlet.http.HttpServlet#<init>()
	CALLEE: javax.servlet.GenericServlet#<init>()
CALLER: org.eclipse.jetty.server.handler.HandlerCollection#setHandlers(org.eclipse.jetty.server.Handler[])
	CALLEE: org.eclipse.jetty.server.handler.AbstractHandler#getServer()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#isStarted()
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#updateBeans(java.lang.Object[],java.lang.Object[])
CALLER: org.h2.server.web.WebServlet#<init>()
	CALLEE: javax.servlet.http.HttpServlet#<init>()
CALLER: org.eclipse.jetty.servlet.ErrorPageErrorHandler#<init>()
	CALLEE: org.eclipse.jetty.server.handler.ErrorHandler#<init>()
CALLER: org.eclipse.jetty.webapp.WebAppContext#<init>(org.eclipse.jetty.server.HandlerContainer,java.lang.String,org.eclipse.jetty.server.session.SessionHandler,org.eclipse.jetty.security.SecurityHandler,org.eclipse.jetty.servlet.ServletHandler,org.eclipse.jetty.server.handler.ErrorHandler,int)
	CALLEE: org.eclipse.jetty.servlet.ErrorPageErrorHandler#<init>()
	CALLEE: org.eclipse.jetty.servlet.ServletContextHandler#<init>(org.eclipse.jetty.server.HandlerContainer,java.lang.String,org.eclipse.jetty.server.session.SessionHandler,org.eclipse.jetty.security.SecurityHandler,org.eclipse.jetty.servlet.ServletHandler,org.eclipse.jetty.server.handler.ErrorHandler,int)
	CALLEE: org.eclipse.jetty.webapp.MetaData#<init>()
	CALLEE: org.eclipse.jetty.webapp.WebAppContext.Context#<init>(org.eclipse.jetty.webapp.WebAppContext)
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#setErrorHandler(org.eclipse.jetty.server.handler.ErrorHandler)
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#setProtectedTargets(java.lang.String[])
CALLER: org.eclipse.jetty.server.handler.HandlerWrapper#<init>()
	CALLEE: org.eclipse.jetty.server.handler.AbstractHandlerContainer#<init>()
CALLER: static org.eclipse.jetty.http.MimeTypes#<clinit>()
	CALLEE: static org.eclipse.jetty.util.log.Log#getLogger(java.lang.Class)
	CALLEE: org.eclipse.jetty.util.ArrayTrie#<init>(int)
	CALLEE: static org.eclipse.jetty.http.MimeTypes.Type#values()
	CALLEE: org.eclipse.jetty.util.ArrayTrie#put(java.lang.String,java.lang.Object)
	CALLEE: static org.eclipse.jetty.util.StringUtil#asciiToLowerCase(java.lang.String)
	CALLEE: static org.eclipse.jetty.http.MimeTypes#normalizeMimeType(java.lang.String)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#warn(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.Throwable)
CALLER: static org.eclipse.jetty.util.resource.Resource#newResource(java.lang.String)
	CALLEE: static org.eclipse.jetty.util.resource.Resource#newResource(java.lang.String,boolean)
CALLER: static org.eclipse.jetty.util.resource.Resource#<clinit>()
	CALLEE: static org.eclipse.jetty.util.log.Log#getLogger(java.lang.Class)
CALLER: org.eclipse.jetty.server.handler.AbstractHandler#<init>()
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#<init>()
CALLER: org.traccar.database.QueryBuilder#executeQuerySingle(java.lang.Class)
	CALLEE: org.traccar.database.QueryBuilder#executeQuery(java.lang.Class)
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
CALLER: org.traccar.database.QueryBuilder#executeQuery(java.lang.Class)
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: com.zaxxer.hikari.pool.ProxyConnection#close()
	CALLEE: com.zaxxer.hikari.pool.ProxyStatement#close()
	CALLEE: com.zaxxer.hikari.pool.HikariProxyPreparedStatement#executeQuery()
	CALLEE: com.zaxxer.hikari.pool.HikariProxyResultSet#close()
	CALLEE: com.zaxxer.hikari.pool.HikariProxyResultSet#next()
	CALLEE: com.zaxxer.hikari.pool.HikariProxyResultSet#getMetaData()
	CALLEE: org.traccar.database.QueryBuilder#addProcessors(java.util.List,java.lang.Class,java.lang.reflect.Method,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder.1#process(java.lang.Object,java.sql.ResultSet)
	CALLEE: org.traccar.database.QueryBuilder.2#process(java.lang.Object,java.sql.ResultSet)
	CALLEE: org.traccar.database.QueryBuilder.3#process(java.lang.Object,java.sql.ResultSet)
	CALLEE: org.traccar.database.QueryBuilder.4#process(java.lang.Object,java.sql.ResultSet)
	CALLEE: org.traccar.database.QueryBuilder.5#process(java.lang.Object,java.sql.ResultSet)
	CALLEE: org.traccar.database.QueryBuilder.6#process(java.lang.Object,java.sql.ResultSet)
	CALLEE: org.traccar.database.QueryBuilder.7#process(java.lang.Object,java.sql.ResultSet)
	CALLEE: org.traccar.database.QueryBuilder.8#process(java.lang.Object,java.sql.ResultSet)
CALLER: org.traccar.database.GroupTree#getNodes(java.util.Set,org.traccar.database.GroupTree.TreeNode)
	CALLEE: org.traccar.database.GroupTree#getNodes(java.util.Set,org.traccar.database.GroupTree.TreeNode)
	CALLEE: org.traccar.database.GroupTree.TreeNode#getChildren()
CALLER: org.traccar.database.DataManager#getGeofencePermissions()
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#executeQuery(java.lang.Class)
CALLER: org.traccar.database.DataManager#getGroupGeofences()
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#executeQuery(java.lang.Class)
CALLER: org.traccar.database.DataManager#getDeviceGeofences()
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#executeQuery(java.lang.Class)
CALLER: org.traccar.database.DeviceManager#getAllDevices()
	CALLEE: org.traccar.database.DeviceManager#updateDeviceCache(boolean)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: org.traccar.database.DataManager#getCalendarPermissions()
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#executeQuery(java.lang.Class)
CALLER: org.apache.velocity.runtime.RuntimeInstance#getBoolean(java.lang.String,boolean)
	CALLEE: org.apache.commons.collections.ExtendedProperties#getBoolean(java.lang.String,boolean)
CALLER: org.apache.velocity.runtime.log.LogDisplayWrapper#<init>(org.apache.velocity.runtime.log.Log,java.lang.String,boolean)
	CALLEE: org.apache.velocity.runtime.log.Log#<init>(org.apache.velocity.runtime.log.LogChute)
	CALLEE: org.apache.velocity.runtime.log.Log#getLogChute()
CALLER: org.apache.velocity.runtime.VelocimacroManager#<init>(org.apache.velocity.runtime.RuntimeServices)
	CALLEE: static org.apache.velocity.util.MapFactory#create(int,float,int,boolean)
	CALLEE: org.apache.velocity.runtime.VelocimacroManager#addNamespace(java.lang.String)
CALLER: org.apache.velocity.util.introspection.IntrospectorBase#<init>(org.apache.velocity.runtime.log.Log)
	CALLEE: org.apache.velocity.util.introspection.IntrospectorCacheImpl#<init>(org.apache.velocity.runtime.log.Log)
CALLER: org.apache.commons.collections.ExtendedProperties#setProperty(java.lang.String,java.lang.Object)
	CALLEE: org.apache.commons.collections.ExtendedProperties#clearProperty(java.lang.String)
	CALLEE: org.apache.commons.collections.ExtendedProperties#addProperty(java.lang.String,java.lang.Object)
CALLER: org.apache.velocity.runtime.log.Log#debug(java.lang.Object)
	CALLEE: org.apache.velocity.runtime.log.Log#log(int,java.lang.Object)
	CALLEE: org.apache.velocity.runtime.log.LogDisplayWrapper#log(int,java.lang.Object)
CALLER: org.apache.velocity.runtime.log.Log#trace(java.lang.Object)
	CALLEE: org.apache.velocity.runtime.log.Log#log(int,java.lang.Object)
	CALLEE: org.apache.velocity.runtime.log.LogDisplayWrapper#log(int,java.lang.Object)
CALLER: org.apache.velocity.runtime.RuntimeInstance#initializeProperties()
	CALLEE: org.apache.commons.collections.ExtendedProperties#isInitialized()
	CALLEE: org.apache.velocity.runtime.RuntimeInstance#setDefaultProperties()
	CALLEE: org.apache.commons.collections.ExtendedProperties#combine(org.apache.commons.collections.ExtendedProperties)
CALLER: org.apache.velocity.runtime.RuntimeInstance#initializeLog()
	CALLEE: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference#getMessage()
	CALLEE: static org.apache.velocity.runtime.log.LogManager#updateLog(org.apache.velocity.runtime.log.Log,org.apache.velocity.runtime.RuntimeServices)
	CALLEE: org.apache.velocity.exception.VelocityException#<init>(java.lang.String,java.lang.Throwable)
	CALLEE: org.h2.jdbc.JdbcSQLException#getMessage()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#getMessage()
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#getMessage()
CALLER: org.apache.velocity.runtime.RuntimeInstance#initializeResourceManager()
	CALLEE: org.apache.velocity.exception.VelocityException#<init>(java.lang.String,java.lang.Throwable)
	CALLEE: org.apache.velocity.runtime.RuntimeInstance#getString(java.lang.String)
	CALLEE: static org.apache.velocity.util.ClassUtils#getNewInstance(java.lang.String)
	CALLEE: org.apache.velocity.runtime.log.Log#error(java.lang.Object)
	CALLEE: static org.apache.velocity.runtime.RuntimeInstance#class$(java.lang.String)
	CALLEE: org.apache.velocity.exception.VelocityException#<init>(java.lang.String)
CALLER: org.apache.velocity.runtime.RuntimeInstance#initializeDirectives()
	CALLEE: org.apache.velocity.runtime.log.Log#debug(java.lang.Object)
	CALLEE: org.apache.velocity.exception.VelocityException#<init>(java.lang.String)
	CALLEE: org.apache.velocity.runtime.log.Log#error(java.lang.Object,java.lang.Throwable)
	CALLEE: org.apache.velocity.runtime.RuntimeInstance#loadDirective(java.lang.String)
	CALLEE: org.apache.commons.collections.ExtendedProperties#getStringArray(java.lang.String)
	CALLEE: org.apache.velocity.runtime.log.Log#isDebugEnabled()
CALLER: org.apache.velocity.runtime.RuntimeInstance#initializeEventHandlers()
	CALLEE: static org.apache.velocity.runtime.RuntimeInstance#class$(java.lang.String)
	CALLEE: org.apache.commons.collections.ExtendedProperties#getStringArray(java.lang.String)
	CALLEE: org.apache.velocity.app.event.EventCartridge#<init>()
	CALLEE: org.apache.velocity.runtime.RuntimeInstance#initializeSpecificEventHandler(java.lang.String,java.lang.String,java.lang.Class)
	CALLEE: org.apache.velocity.app.event.EventCartridge#addReferenceInsertionEventHandler(org.apache.velocity.app.event.ReferenceInsertionEventHandler)
	CALLEE: org.apache.velocity.app.event.EventCartridge#addNullSetEventHandler(org.apache.velocity.app.event.NullSetEventHandler)
	CALLEE: org.apache.velocity.app.event.EventCartridge#addMethodExceptionHandler(org.apache.velocity.app.event.MethodExceptionEventHandler)
	CALLEE: org.apache.velocity.app.event.EventCartridge#addIncludeEventHandler(org.apache.velocity.app.event.IncludeEventHandler)
	CALLEE: org.apache.velocity.app.event.EventCartridge#addInvalidReferenceEventHandler(org.apache.velocity.app.event.InvalidReferenceEventHandler)
CALLER: org.apache.velocity.runtime.RuntimeInstance#initializeParserPool()
	CALLEE: org.apache.velocity.exception.VelocityException#<init>(java.lang.String,java.lang.Throwable)
	CALLEE: org.apache.velocity.runtime.RuntimeInstance#getString(java.lang.String)
	CALLEE: static org.apache.velocity.util.ClassUtils#getNewInstance(java.lang.String)
	CALLEE: org.apache.velocity.runtime.log.Log#error(java.lang.Object)
	CALLEE: static org.apache.velocity.runtime.RuntimeInstance#class$(java.lang.String)
	CALLEE: org.apache.velocity.exception.VelocityException#<init>(java.lang.String)
CALLER: org.apache.velocity.runtime.RuntimeInstance#initializeIntrospection()
	CALLEE: org.apache.velocity.runtime.RuntimeInstance#getLog()
	CALLEE: org.apache.velocity.exception.VelocityException#<init>(java.lang.String,java.lang.Throwable)
	CALLEE: static org.apache.velocity.util.ClassUtils#getNewInstance(java.lang.String)
	CALLEE: org.apache.velocity.runtime.log.Log#error(java.lang.Object)
	CALLEE: static org.apache.velocity.runtime.RuntimeInstance#class$(java.lang.String)
	CALLEE: org.apache.velocity.exception.VelocityException#<init>(java.lang.String)
	CALLEE: org.apache.commons.collections.ExtendedProperties#getStringArray(java.lang.String)
	CALLEE: org.apache.velocity.util.introspection.LinkingUberspector#<init>(org.apache.velocity.util.introspection.Uberspect,org.apache.velocity.util.introspection.Uberspect)
	CALLEE: org.apache.velocity.util.introspection.LinkingUberspector#init()
CALLER: org.apache.velocity.runtime.RuntimeInstance#initializeEvaluateScopeSettings()
	CALLEE: org.apache.velocity.runtime.RuntimeInstance#getBoolean(java.lang.String,boolean)
CALLER: org.apache.velocity.runtime.VelocimacroFactory#initVelocimacro()
	CALLEE: org.apache.velocity.runtime.RuntimeInstance#getBoolean(java.lang.String,boolean)
	CALLEE: org.apache.velocity.runtime.VelocimacroFactory#setAddMacroPermission(boolean)
	CALLEE: org.apache.velocity.runtime.VelocimacroFactory#setTemplateLocalInline(boolean)
	CALLEE: org.apache.velocity.runtime.VelocimacroFactory#getTemplateLocalInline()
	CALLEE: org.apache.velocity.runtime.VelocimacroManager#setTemplateLocalInlineVM(boolean)
	CALLEE: org.apache.velocity.runtime.VelocimacroFactory#setAutoload(boolean)
	CALLEE: org.apache.velocity.runtime.VelocimacroFactory#getAutoload()
	CALLEE: org.apache.velocity.runtime.log.Log#debug(java.lang.Object)
	CALLEE: org.apache.velocity.runtime.log.Log#trace(java.lang.Object)
	CALLEE: org.apache.velocity.exception.VelocityException#<init>(java.lang.String,java.lang.Throwable)
	CALLEE: org.apache.velocity.runtime.VelocimacroFactory#setReplacementPermission(boolean)
	CALLEE: org.apache.velocity.runtime.VelocimacroManager#setNamespaceUsage(boolean)
	CALLEE: org.apache.velocity.runtime.RuntimeInstance#getProperty(java.lang.String)
	CALLEE: org.apache.velocity.runtime.RuntimeInstance#getLoaderNameForResource(java.lang.String)
	CALLEE: static org.apache.commons.lang.StringUtils#isNotEmpty(java.lang.String)
	CALLEE: org.apache.velocity.runtime.VelocimacroManager#setRegisterFromLib(boolean)
	CALLEE: org.apache.velocity.runtime.RuntimeInstance#getTemplate(java.lang.String)
	CALLEE: org.apache.velocity.runtime.VelocimacroFactory.Twonk#<init>(org.apache.velocity.runtime.VelocimacroFactory.1)
	CALLEE: org.apache.velocity.runtime.log.LogDisplayWrapper#error(boolean,java.lang.Object,java.lang.Throwable)
CALLER: static org.slf4j.LoggerFactory#getILoggerFactory()
	CALLEE: static org.slf4j.LoggerFactory#performInitialization()
	CALLEE: static org.slf4j.impl.StaticLoggerBinder#getSingleton()
	CALLEE: org.slf4j.impl.StaticLoggerBinder#getLoggerFactory()
CALLER: static org.slf4j.helpers.Util#getSecurityManager()
	CALLEE: static org.slf4j.helpers.Util#safeCreateSecurityManager()
CALLER: org.apache.log4j.WriterAppender#writeFooter()
	CALLEE: org.apache.log4j.helpers.QuietWriter#write(java.lang.String)
	CALLEE: org.apache.log4j.helpers.QuietWriter#flush()
	CALLEE: org.apache.log4j.Layout#getFooter()
CALLER: org.apache.log4j.FileAppender#reset()
	CALLEE: org.apache.log4j.FileAppender#closeFile()
	CALLEE: org.apache.log4j.WriterAppender#reset()
CALLER: static com.ning.http.util.ProxyUtils#createProxyServerSelector(java.net.ProxySelector)
	CALLEE: com.ning.http.util.ProxyUtils.1#<init>(java.net.ProxySelector)
CALLER: static com.ning.http.client.ProxyServer.Protocol#<clinit>()
	CALLEE: com.ning.http.client.ProxyServer.Protocol#<init>(java.lang.String,int,java.lang.String)
CALLER: static com.ning.http.util.ProxyUtils#createProxyServerSelector(com.ning.http.client.ProxyServer)
	CALLEE: com.ning.http.util.ProxyUtils.2#<init>(com.ning.http.client.ProxyServer)
CALLER: static com.ning.http.client.providers.jdk.JDKAsyncHttpProvider#<clinit>()
	CALLEE: static org.slf4j.LoggerFactory#getLogger(java.lang.Class)
CALLER: com.ning.http.client.providers.jdk.JDKAsyncHttpProvider#<init>(com.ning.http.client.AsyncHttpClientConfig)
	CALLEE: com.ning.http.client.providers.jdk.JDKAsyncHttpProvider#configure(com.ning.http.client.providers.jdk.JDKAsyncHttpProviderConfig)
	CALLEE: com.ning.http.client.AsyncHttpClientConfig#getAsyncHttpProviderConfig()
CALLER: org.apache.log4j.WriterAppender#createWriter(java.io.OutputStream)
	CALLEE: static org.apache.log4j.helpers.LogLog#warn(java.lang.String)
	CALLEE: org.apache.log4j.WriterAppender#getEncoding()
CALLER: org.apache.log4j.FileAppender#setQWForFiles(java.io.Writer)
	CALLEE: org.apache.log4j.helpers.QuietWriter#<init>(java.io.Writer,org.apache.log4j.spi.ErrorHandler)
CALLER: org.apache.log4j.WriterAppender#writeHeader()
	CALLEE: org.apache.log4j.Layout#getHeader()
	CALLEE: org.apache.log4j.helpers.QuietWriter#write(java.lang.String)
CALLER: org.apache.log4j.RollingCalendar#getNextCheckMillis(java.util.Date)
	CALLEE: org.apache.log4j.RollingCalendar#getNextCheckDate(java.util.Date)
CALLER: static org.apache.log4j.helpers.Loader#loadClass(java.lang.String)
	CALLEE: static org.apache.log4j.helpers.Loader#getTCL()
CALLER: org.apache.log4j.PropertyConfigurator#doConfigure(java.util.Properties,org.apache.log4j.spi.LoggerRepository)
	CALLEE: static org.apache.log4j.helpers.LogLog#debug(java.lang.String)
	CALLEE: org.apache.log4j.Hierarchy#setThreshold(org.apache.log4j.Level)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#toBoolean(java.lang.String,boolean)
	CALLEE: static org.apache.log4j.helpers.LogLog#warn(java.lang.String)
	CALLEE: static org.apache.log4j.helpers.LogLog#setInternalDebugging(boolean)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#findAndSubst(java.lang.String,java.util.Properties)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#toLevel(java.lang.String,org.apache.log4j.Level)
	CALLEE: org.apache.log4j.PropertyConfigurator#configureRootCategory(java.util.Properties,org.apache.log4j.spi.LoggerRepository)
	CALLEE: org.apache.log4j.PropertyConfigurator#configureLoggerFactory(java.util.Properties)
	CALLEE: org.apache.log4j.PropertyConfigurator#parseCatsAndRenderers(java.util.Properties,org.apache.log4j.spi.LoggerRepository)
	CALLEE: org.apache.log4j.Hierarchy#getThreshold()
	CALLEE: org.apache.log4j.spi.NOPLoggerRepository#getThreshold()
	CALLEE: org.apache.log4j.spi.NOPLoggerRepository#setThreshold(org.apache.log4j.Level)
	CALLEE: org.apache.log4j.Hierarchy#resetConfiguration()
	CALLEE: org.apache.log4j.spi.NOPLoggerRepository#resetConfiguration()
CALLER: com.fasterxml.jackson.databind.JavaType#<init>(java.lang.Class,int,java.lang.Object,java.lang.Object,boolean)
	CALLEE: com.fasterxml.jackson.core.type.ResolvedType#<init>()
CALLER: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.FixedSpaceIndenter#<init>()
	CALLEE: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.NopIndenter#<init>()
CALLER: com.fasterxml.jackson.core.util.DefaultIndenter#<init>(java.lang.String,java.lang.String)
	CALLEE: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.NopIndenter#<init>()
CALLER: static com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer#createRoot()
	CALLEE: static com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer#createRoot(int)
CALLER: static com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer#<clinit>()
	CALLEE: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer#<init>()
CALLER: static com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer#createRoot()
	CALLEE: static com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer#createRoot(int)
CALLER: static com.fasterxml.jackson.databind.introspect.AnnotatedClass#constructWithoutSuperTypes(java.lang.Class,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#<init>(java.lang.Class,java.util.List,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver,com.fasterxml.jackson.databind.introspect.AnnotationMap)
CALLER: static com.fasterxml.jackson.databind.introspect.BasicBeanDescription#forOtherUse(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedClass)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#<init>(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.util.List)
CALLER: static com.fasterxml.jackson.databind.cfg.ContextAttributes#getEmpty()
	CALLEE: static com.fasterxml.jackson.databind.cfg.ContextAttributes.Impl#getEmpty()
CALLER: com.fasterxml.jackson.databind.SerializationConfig#<init>(com.fasterxml.jackson.databind.SerializationConfig,int,int,int,int)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfigBase#<init>(com.fasterxml.jackson.databind.cfg.MapperConfigBase,int)
CALLER: com.fasterxml.jackson.databind.DeserializationConfig#<init>(com.fasterxml.jackson.databind.DeserializationConfig,int,int,int,int)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfigBase#<init>(com.fasterxml.jackson.databind.cfg.MapperConfigBase,int)
CALLER: com.fasterxml.jackson.databind.ser.std.StdSerializer#<init>(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.JsonSerializer#<init>()
CALLER: com.fasterxml.jackson.databind.SerializerProvider#<init>()
	CALLEE: com.fasterxml.jackson.databind.util.RootNameLookup#<init>()
	CALLEE: com.fasterxml.jackson.databind.DatabindContext#<init>()
	CALLEE: com.fasterxml.jackson.databind.ser.SerializerCache#<init>()
CALLER: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#<init>(com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig)
	CALLEE: com.fasterxml.jackson.databind.deser.DeserializerFactory#<init>()
CALLER: com.fasterxml.jackson.databind.DeserializationContext#<init>(com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.deser.DeserializerCache)
	CALLEE: com.fasterxml.jackson.databind.DatabindContext#<init>()
	CALLEE: com.fasterxml.jackson.databind.deser.DeserializerCache#<init>()
CALLER: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#<init>(com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig)
	CALLEE: com.fasterxml.jackson.databind.ser.SerializerFactory#<init>()
	CALLEE: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig#<init>()
CALLER: com.fasterxml.jackson.databind.ser.std.NonTypedScalarSerializerBase#<init>(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdScalarSerializer#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.Base#<init>(java.lang.Class,com.fasterxml.jackson.core.JsonParser.NumberType,java.lang.String)
CALLER: static com.fasterxml.jackson.databind.ser.std.NumberSerializers.LongSerializer#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.LongSerializer#<init>()
CALLER: static com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntLikeSerializer#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntLikeSerializer#<init>()
CALLER: static com.fasterxml.jackson.databind.ser.std.NumberSerializers.ShortSerializer#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.ShortSerializer#<init>()
CALLER: static com.fasterxml.jackson.databind.ser.std.NumberSerializers.FloatSerializer#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.FloatSerializer#<init>()
CALLER: static com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#<init>()
CALLER: com.fasterxml.jackson.databind.ser.std.StdScalarSerializer#<init>(java.lang.Class,boolean)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.ser.std.CalendarSerializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.CalendarSerializer#<init>(java.lang.Boolean,java.text.DateFormat)
CALLER: com.fasterxml.jackson.databind.ser.std.DateSerializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.DateSerializer#<init>(java.lang.Boolean,java.text.DateFormat)
CALLER: com.fasterxml.jackson.databind.ser.std.UUIDSerializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdScalarSerializer#<init>(java.lang.Class)
CALLER: static com.fasterxml.jackson.databind.ser.std.NullSerializer#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.NullSerializer#<init>()
CALLER: static com.zaxxer.hikari.util.PropertyElf#setTargetFromProperties(java.lang.Object,java.util.Properties)
	CALLEE: com.fasterxml.jackson.core.JsonLocation#toString()
	CALLEE: org.glassfish.jersey.server.model.Invocable#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#toString()
	CALLEE: org.glassfish.jersey.server.model.MethodHandler.ClassBasedMethodHandler#toString()
	CALLEE: org.glassfish.jersey.server.model.MethodHandler.InstanceBasedMethodHandler#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#toString()
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodRouting#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#toString()
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.ConsumesProducesAcceptor#toString()
	CALLEE: com.zaxxer.hikari.HikariConfig#addDataSourceProperty(java.lang.String,java.lang.Object)
	CALLEE: static com.zaxxer.hikari.util.PropertyElf#setProperty(java.lang.Object,java.lang.String,java.lang.Object,java.util.List)
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#toString()
	CALLEE: org.eclipse.jetty.webapp.WebAppContext#toString()
	CALLEE: org.eclipse.jetty.server.handler.HandlerCollection#toString()
	CALLEE: org.eclipse.jetty.server.Server#toString()
	CALLEE: org.eclipse.jetty.server.AbstractNetworkConnector#toString()
	CALLEE: org.eclipse.jetty.util.thread.QueuedThreadPool#toString()
	CALLEE: org.eclipse.jetty.server.AbstractConnectionFactory#toString()
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle.Bean#toString()
	CALLEE: org.apache.log4j.NameValue#toString()
	CALLEE: liquibase.changelog.ChangeLogParameters.ChangeLogParameter#toString()
	CALLEE: org.eclipse.jetty.server.AbstractConnector.Acceptor#toString()
	CALLEE: org.eclipse.jetty.server.HttpConfiguration#toString()
	CALLEE: org.eclipse.jetty.util.MultiException#toString()
	CALLEE: org.eclipse.jetty.http.PathMap.MappedEntry#toString()
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector#toString()
	CALLEE: liquibase.servicelocator.AssignableToPackageScanFilter#toString()
	CALLEE: org.eclipse.jetty.http.HttpField#toString()
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#toString()
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#toString()
	CALLEE: org.eclipse.jetty.servlet.ServletMapping#toString()
	CALLEE: org.glassfish.jersey.internal.OsgiRegistry.BundleSpiProvidersLoader#toString()
	CALLEE: org.h2.jdbc.JdbcSQLException#toString()
	CALLEE: liquibase.changelog.filter.ChangeSetFilterResult#toString()
	CALLEE: com.zaxxer.hikari.pool.PoolEntry#toString()
	CALLEE: org.eclipse.jetty.io.SelectChannelEndPoint#toString()
	CALLEE: org.eclipse.jetty.util.FutureCallback#toString()
	CALLEE: org.eclipse.jetty.util.ConstantThrowable#toString()
	CALLEE: javax.ws.rs.core.MediaType#toString()
	CALLEE: org.glassfish.jersey.model.internal.RankedProvider#toString()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#toString()
	CALLEE: org.glassfish.hk2.api.MultiException#toString()
	CALLEE: org.glassfish.jersey.message.internal.QualitySourceMediaType#toString()
	CALLEE: jersey.repackaged.com.google.common.base.Predicates.AndPredicate#toString()
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.MapType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#toString()
	CALLEE: org.glassfish.hk2.utilities.NamedImpl#toString()
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#toString()
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#toString()
	CALLEE: com.fasterxml.jackson.databind.jsontype.NamedType#toString()
	CALLEE: liquibase.changelog.RanChangeSet#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.UnresolvedId#toString()
	CALLEE: org.glassfish.jersey.server.model.ResourceModelIssue#toString()
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#toString()
	CALLEE: org.glassfish.jersey.server.model.Parameter#toString()
	CALLEE: org.glassfish.hk2.utilities.reflection.ParameterizedTypeImpl#toString()
	CALLEE: com.fasterxml.jackson.databind.type.ClassKey#toString()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException.Reference#toString()
	CALLEE: org.glassfish.jersey.server.model.Resource.Data#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ValueNode#toString()
	CALLEE: org.glassfish.jersey.server.model.Resource#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#toString()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Data#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.MemberKey#toString()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ObjectNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ArrayNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.POJONode#toString()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#toString()
	CALLEE: com.fasterxml.jackson.databind.node.TextNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.BinaryNode#toString()
	CALLEE: com.fasterxml.jackson.databind.PropertyName#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#toString()
	CALLEE: com.fasterxml.jackson.core.io.SerializedString#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey#toString()
CALLER: static com.zaxxer.hikari.util.PropertyElf#<clinit>()
	CALLEE: static org.slf4j.LoggerFactory#getLogger(java.lang.Class)
CALLER: com.zaxxer.hikari.HikariConfig#validateNumerics()
	CALLEE: org.slf4j.helpers.NOPLogger#warn(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.helpers.NOPLogger#warn(java.lang.String,java.lang.Object)
	CALLEE: org.slf4j.helpers.SubstituteLogger#warn(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.helpers.SubstituteLogger#warn(java.lang.String,java.lang.Object)
	CALLEE: org.slf4j.impl.SimpleLogger#warn(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.impl.SimpleLogger#warn(java.lang.String,java.lang.Object)
CALLER: com.zaxxer.hikari.HikariConfig#logConfiguration()
	CALLEE: static com.zaxxer.hikari.util.PropertyElf#getPropertyNames(java.lang.Class)
	CALLEE: static com.zaxxer.hikari.util.PropertyElf#getProperty(java.lang.String,java.lang.Object)
	CALLEE: static com.zaxxer.hikari.util.PropertyElf#copyProperties(java.util.Properties)
	CALLEE: org.slf4j.helpers.NOPLogger#debug(java.lang.String)
	CALLEE: org.slf4j.helpers.NOPLogger#debug(java.lang.String,java.lang.Object)
	CALLEE: org.slf4j.helpers.SubstituteLogger#debug(java.lang.String)
	CALLEE: org.slf4j.helpers.SubstituteLogger#debug(java.lang.String,java.lang.Object)
	CALLEE: org.slf4j.impl.SimpleLogger#debug(java.lang.String)
	CALLEE: org.slf4j.impl.SimpleLogger#debug(java.lang.String,java.lang.Object)
CALLER: static com.zaxxer.hikari.util.ClockSource#<clinit>()
	CALLEE: static com.zaxxer.hikari.util.ClockSource.Factory#access$000()
CALLER: com.zaxxer.hikari.pool.PoolBase#<init>(com.zaxxer.hikari.HikariConfig)
	CALLEE: static org.slf4j.LoggerFactory#getLogger(java.lang.Class)
	CALLEE: com.zaxxer.hikari.HikariConfig#getPoolName()
	CALLEE: com.zaxxer.hikari.HikariConfig#getCatalog()
	CALLEE: com.zaxxer.hikari.HikariConfig#isReadOnly()
	CALLEE: com.zaxxer.hikari.HikariConfig#isAutoCommit()
	CALLEE: com.zaxxer.hikari.HikariConfig#getTransactionIsolation()
	CALLEE: static com.zaxxer.hikari.util.UtilityElf#getTransactionIsolation(java.lang.String)
	CALLEE: com.zaxxer.hikari.HikariConfig#getConnectionTestQuery()
	CALLEE: com.zaxxer.hikari.HikariConfig#isIsolateInternalQueries()
	CALLEE: com.zaxxer.hikari.HikariConfig#getConnectionTimeout()
	CALLEE: com.zaxxer.hikari.HikariConfig#getValidationTimeout()
	CALLEE: com.zaxxer.hikari.pool.PoolBase#initializeDataSource()
CALLER: com.zaxxer.hikari.pool.HikariPool.PoolEntryCreator#<init>(com.zaxxer.hikari.pool.HikariPool,com.zaxxer.hikari.pool.HikariPool.1)
	CALLEE: com.zaxxer.hikari.pool.HikariPool.PoolEntryCreator#<init>(com.zaxxer.hikari.pool.HikariPool)
CALLER: static com.zaxxer.hikari.util.ConcurrentBag#<clinit>()
	CALLEE: static org.slf4j.LoggerFactory#getLogger(java.lang.Class)
CALLER: com.zaxxer.hikari.util.ConcurrentBag#<init>(com.zaxxer.hikari.util.ConcurrentBag.IBagStateListener)
	CALLEE: com.zaxxer.hikari.util.ConcurrentBag#useWeakThreadLocals()
	CALLEE: com.zaxxer.hikari.util.QueuedSequenceSynchronizer#<init>()
	CALLEE: com.zaxxer.hikari.util.ConcurrentBag.1#<init>(com.zaxxer.hikari.util.ConcurrentBag)
CALLER: static com.zaxxer.hikari.util.SuspendResumeLock#<clinit>()
	CALLEE: com.zaxxer.hikari.util.SuspendResumeLock.1#<init>(boolean)
CALLER: com.zaxxer.hikari.util.SuspendResumeLock#<init>()
	CALLEE: com.zaxxer.hikari.util.SuspendResumeLock#<init>(boolean)
CALLER: com.zaxxer.hikari.pool.HikariPool#checkFailFast()
	CALLEE: com.zaxxer.hikari.HikariConfig#isInitializationFailFast()
	CALLEE: com.zaxxer.hikari.pool.PoolBase#newConnection()
	CALLEE: com.zaxxer.hikari.pool.HikariPool.PoolInitializationException#<init>(java.lang.Throwable)
CALLER: com.zaxxer.hikari.pool.HikariPool#setMetricsTrackerFactory(com.zaxxer.hikari.metrics.MetricsTrackerFactory)
	CALLEE: com.zaxxer.hikari.HikariConfig#getPoolName()
	CALLEE: com.zaxxer.hikari.pool.HikariPool#getPoolStats()
	CALLEE: com.zaxxer.hikari.pool.PoolBase.MetricsTrackerDelegate#<init>(com.zaxxer.hikari.metrics.MetricsTracker)
	CALLEE: com.zaxxer.hikari.pool.PoolBase.NopMetricsTrackerDelegate#<init>()
	CALLEE: com.zaxxer.hikari.metrics.dropwizard.CodahaleMetricsTrackerFactory#create(java.lang.String,com.zaxxer.hikari.metrics.PoolStats)
CALLER: com.zaxxer.hikari.pool.HikariPool#setMetricRegistry(java.lang.Object)
	CALLEE: com.zaxxer.hikari.pool.HikariPool#setMetricsTrackerFactory(com.zaxxer.hikari.metrics.MetricsTrackerFactory)
	CALLEE: com.zaxxer.hikari.metrics.dropwizard.CodahaleMetricsTrackerFactory#<init>(com.codahale.metrics.MetricRegistry)
CALLER: com.zaxxer.hikari.pool.HikariPool#setHealthCheckRegistry(java.lang.Object)
	CALLEE: static com.zaxxer.hikari.metrics.dropwizard.CodahaleHealthChecker#registerHealthChecks(com.zaxxer.hikari.pool.HikariPool,com.zaxxer.hikari.HikariConfig,com.codahale.metrics.health.HealthCheckRegistry)
CALLER: com.zaxxer.hikari.pool.PoolBase#registerMBeans(com.zaxxer.hikari.pool.HikariPool)
	CALLEE: com.zaxxer.hikari.HikariConfig#isRegisterMbeans()
	CALLEE: org.slf4j.helpers.NOPLogger#warn(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.helpers.NOPLogger#error(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.helpers.SubstituteLogger#warn(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.helpers.SubstituteLogger#error(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.impl.SimpleLogger#warn(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.impl.SimpleLogger#error(java.lang.String,java.lang.Object,java.lang.Object)
CALLER: static com.zaxxer.hikari.util.UtilityElf#createThreadPoolExecutor(int,java.lang.String,java.util.concurrent.ThreadFactory,java.util.concurrent.RejectedExecutionHandler)
	CALLEE: com.zaxxer.hikari.util.UtilityElf.DefaultThreadFactory#<init>(java.lang.String,boolean)
CALLER: static com.zaxxer.hikari.pool.ProxyLeakTask#<clinit>()
	CALLEE: static org.slf4j.LoggerFactory#getLogger(java.lang.Class)
	CALLEE: com.zaxxer.hikari.pool.ProxyLeakTask.1#<init>()
CALLER: com.zaxxer.hikari.pool.HikariPool.HouseKeeper#<init>(com.zaxxer.hikari.pool.HikariPool,com.zaxxer.hikari.pool.HikariPool.1)
	CALLEE: com.zaxxer.hikari.pool.HikariPool.HouseKeeper#<init>(com.zaxxer.hikari.pool.HikariPool)
CALLER: liquibase.resource.AbstractResourceAccessor#init()
	CALLEE: liquibase.resource.FileSystemResourceAccessor#toClassLoader()
	CALLEE: liquibase.resource.FileSystemResourceAccessor#addRootPath(java.net.URL)
	CALLEE: liquibase.exception.UnexpectedLiquibaseException#<init>(java.lang.Throwable)
	CALLEE: liquibase.resource.AbstractResourceAccessor#addRootPath(java.net.URL)
	CALLEE: liquibase.resource.ClassLoaderResourceAccessor#toClassLoader()
CALLER: liquibase.logging.LogFactory#getLog()
	CALLEE: liquibase.logging.LogFactory#getLog(java.lang.String)
CALLER: static liquibase.servicelocator.ServiceLocator#<clinit>()
	CALLEE: liquibase.logging.LogFactory#getLog()
	CALLEE: static liquibase.logging.LogFactory#getInstance()
	CALLEE: static liquibase.osgi.OSGiUtil#isLiquibaseLoadedAsOSGiBundle()
	CALLEE: static org.osgi.framework.FrameworkUtil#getBundle(java.lang.Class)
	CALLEE: liquibase.osgi.OSGiPackageScanClassResolver#<init>(org.osgi.framework.Bundle)
	CALLEE: liquibase.osgi.OSGiResourceAccessor#<init>(org.osgi.framework.Bundle)
	CALLEE: liquibase.servicelocator.ServiceLocator#<init>(liquibase.servicelocator.PackageScanClassResolver,liquibase.resource.ResourceAccessor)
	CALLEE: liquibase.servicelocator.ServiceLocator#<init>()
	CALLEE: liquibase.logging.core.DefaultLogger#severe(java.lang.String,java.lang.Throwable)
CALLER: liquibase.database.DatabaseFactory#register(liquibase.database.Database)
	CALLEE: liquibase.database.DatabaseFactory.DatabaseComparator#<init>(liquibase.database.DatabaseFactory.1)
CALLER: static liquibase.logging.LogFactory#getInstance()
	CALLEE: liquibase.logging.LogFactory#<init>()
CALLER: liquibase.logging.core.DefaultLogger#<init>()
	CALLEE: liquibase.logging.core.AbstractLogger#<init>()
CALLER: liquibase.changelog.ChangeLogParameters#set(java.lang.String,java.lang.Object)
	CALLEE: liquibase.changelog.ChangeLogParameters.ChangeLogParameter#<init>(liquibase.changelog.ChangeLogParameters,java.lang.String,java.lang.Object)
	CALLEE: liquibase.changelog.ChangeLogParameters#findParameter(java.lang.String,liquibase.changelog.DatabaseChangeLog)
CALLER: liquibase.changelog.ChangeLogParameters.ExpressionExpander#<init>(liquibase.changelog.ChangeLogParameters)
	CALLEE: static liquibase.configuration.LiquibaseConfiguration#getInstance()
	CALLEE: liquibase.configuration.LiquibaseConfiguration#getConfiguration(java.lang.Class)
CALLER: liquibase.lockservice.LockServiceFactory#<init>()
	CALLEE: static liquibase.servicelocator.ServiceLocator#getInstance()
	CALLEE: liquibase.lockservice.LockServiceFactory#register(liquibase.lockservice.LockService)
	CALLEE: liquibase.servicelocator.ServiceLocator#findClasses(java.lang.Class)
CALLER: static liquibase.changelog.ChangeLogHistoryServiceFactory#getInstance()
	CALLEE: liquibase.changelog.ChangeLogHistoryServiceFactory#<init>()
CALLER: liquibase.lockservice.LockServiceFactory#getLockService(liquibase.database.Database)
	CALLEE: liquibase.exception.UnexpectedLiquibaseException#<init>(java.lang.Throwable)
	CALLEE: liquibase.lockservice.LockServiceFactory.1#<init>(liquibase.lockservice.LockServiceFactory)
	CALLEE: liquibase.exception.UnexpectedLiquibaseException#<init>(java.lang.String)
	CALLEE: liquibase.database.core.UnsupportedDatabase#getShortName()
CALLER: liquibase.Liquibase#update(liquibase.Contexts,liquibase.LabelExpression,boolean)
	CALLEE: static liquibase.lockservice.LockServiceFactory#getInstance()
	CALLEE: liquibase.Liquibase#checkLiquibaseTables(boolean,liquibase.changelog.DatabaseChangeLog,liquibase.Contexts,liquibase.LabelExpression)
	CALLEE: liquibase.Liquibase#resetServices()
	CALLEE: static liquibase.changelog.ChangeLogHistoryServiceFactory#getInstance()
	CALLEE: liquibase.lockservice.LockServiceFactory#getLockService(liquibase.database.Database)
	CALLEE: liquibase.changelog.ChangeLogParameters#setContexts(liquibase.Contexts)
	CALLEE: liquibase.changelog.ChangeLogParameters#setLabels(liquibase.LabelExpression)
	CALLEE: liquibase.Liquibase#getDatabaseChangeLog()
	CALLEE: liquibase.changelog.ChangeLogHistoryServiceFactory#getChangeLogService(liquibase.database.Database)
	CALLEE: liquibase.Liquibase#getStandardChangelogIterator(liquibase.Contexts,liquibase.LabelExpression,liquibase.changelog.DatabaseChangeLog)
	CALLEE: liquibase.Liquibase#createUpdateVisitor()
	CALLEE: liquibase.RuntimeEnvironment#<init>(liquibase.database.Database,liquibase.Contexts,liquibase.LabelExpression)
	CALLEE: liquibase.changelog.ChangeLogIterator#run(liquibase.changelog.visitor.ChangeSetVisitor,liquibase.RuntimeEnvironment)
	CALLEE: liquibase.logging.core.DefaultLogger#severe(java.lang.String,java.lang.Throwable)
	CALLEE: liquibase.database.AbstractJdbcDatabase#setObjectQuotingStrategy(liquibase.database.ObjectQuotingStrategy)
	CALLEE: liquibase.changelog.AbstractChangeLogHistoryService#generateDeploymentId()
CALLER: com.zaxxer.hikari.HikariDataSource#getConnection()
	CALLEE: com.zaxxer.hikari.HikariConfig#validate()
	CALLEE: com.zaxxer.hikari.HikariConfig#getPoolName()
	CALLEE: com.zaxxer.hikari.pool.HikariPool#<init>(com.zaxxer.hikari.HikariConfig)
	CALLEE: com.zaxxer.hikari.HikariDataSource#isClosed()
	CALLEE: com.zaxxer.hikari.pool.HikariPool#getConnection()
	CALLEE: org.slf4j.helpers.NOPLogger#info(java.lang.String,java.lang.Object)
	CALLEE: org.slf4j.helpers.SubstituteLogger#info(java.lang.String,java.lang.Object)
	CALLEE: org.slf4j.impl.SimpleLogger#info(java.lang.String,java.lang.Object)
CALLER: static org.eclipse.jetty.util.log.Log#initialized()
	CALLEE: static org.eclipse.jetty.util.Loader#loadClass(java.lang.Class,java.lang.String)
	CALLEE: static org.eclipse.jetty.util.log.Log#initStandardLogging(java.lang.Throwable)
	CALLEE: static org.eclipse.jetty.util.Uptime#getUptime()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#info(java.lang.String,java.lang.Object[])
CALLER: static org.eclipse.jetty.util.thread.QueuedThreadPool#<clinit>()
	CALLEE: static org.eclipse.jetty.util.log.Log#getLogger(java.lang.Class)
CALLER: org.eclipse.jetty.util.thread.QueuedThreadPool#<init>()
	CALLEE: org.eclipse.jetty.util.thread.QueuedThreadPool#<init>(int)
CALLER: org.eclipse.jetty.util.component.ContainerLifeCycle#addBean(java.lang.Object)
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#isRunning()
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#addBean(java.lang.Object,org.eclipse.jetty.util.component.ContainerLifeCycle.Managed)
CALLER: org.eclipse.jetty.server.handler.HandlerWrapper#setServer(org.eclipse.jetty.server.Server)
	CALLEE: org.eclipse.jetty.server.handler.AbstractHandler#getServer()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#isStarted()
	CALLEE: org.eclipse.jetty.server.handler.HandlerWrapper#setServer(org.eclipse.jetty.server.Server)
	CALLEE: org.eclipse.jetty.server.handler.AbstractHandler#setServer(org.eclipse.jetty.server.Server)
	CALLEE: org.eclipse.jetty.server.handler.HandlerWrapper#getHandler()
	CALLEE: org.eclipse.jetty.server.handler.HandlerCollection#setServer(org.eclipse.jetty.server.Server)
CALLER: org.eclipse.jetty.server.HttpConnectionFactory#<init>()
	CALLEE: org.eclipse.jetty.server.HttpConfiguration#<init>()
	CALLEE: org.eclipse.jetty.server.HttpConnectionFactory#<init>(org.eclipse.jetty.server.HttpConfiguration)
	CALLEE: org.eclipse.jetty.server.AbstractConnectionFactory#setInputBufferSize(int)
CALLER: org.eclipse.jetty.server.ServerConnector#<init>(org.eclipse.jetty.server.Server,java.util.concurrent.Executor,org.eclipse.jetty.util.thread.Scheduler,org.eclipse.jetty.io.ByteBufferPool,int,int,org.eclipse.jetty.server.ConnectionFactory[])
	CALLEE: org.eclipse.jetty.server.AbstractNetworkConnector#<init>(org.eclipse.jetty.server.Server,java.util.concurrent.Executor,org.eclipse.jetty.util.thread.Scheduler,org.eclipse.jetty.io.ByteBufferPool,int,org.eclipse.jetty.server.ConnectionFactory[])
	CALLEE: org.eclipse.jetty.server.AbstractConnector#getExecutor()
	CALLEE: org.eclipse.jetty.server.AbstractConnector#getScheduler()
	CALLEE: org.eclipse.jetty.server.ServerConnector.ServerConnectorManager#<init>(org.eclipse.jetty.server.ServerConnector,java.util.concurrent.Executor,org.eclipse.jetty.util.thread.Scheduler,int,org.eclipse.jetty.server.ServerConnector.1)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#addBean(java.lang.Object,boolean)
CALLER: org.eclipse.jetty.util.component.ContainerLifeCycle#updateBeans(java.lang.Object[],java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#addBean(java.lang.Object)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#removeBean(java.lang.Object)
CALLER: org.eclipse.jetty.servlet.ServletContextHandler#<init>(org.eclipse.jetty.server.HandlerContainer,java.lang.String,org.eclipse.jetty.server.session.SessionHandler,org.eclipse.jetty.security.SecurityHandler,org.eclipse.jetty.servlet.ServletHandler,org.eclipse.jetty.server.handler.ErrorHandler,int)
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#setContextPath(java.lang.String)
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#setErrorHandler(org.eclipse.jetty.server.handler.ErrorHandler)
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#<init>(org.eclipse.jetty.server.handler.ContextHandler.Context)
	CALLEE: org.eclipse.jetty.servlet.ServletContextHandler.Context#<init>(org.eclipse.jetty.servlet.ServletContextHandler)
	CALLEE: org.eclipse.jetty.servlet.ServletContextHandler#relinkHandlers()
CALLER: org.eclipse.jetty.server.session.SessionHandler#<init>()
	CALLEE: org.eclipse.jetty.server.session.HashSessionManager#<init>()
	CALLEE: org.eclipse.jetty.server.session.SessionHandler#<init>(org.eclipse.jetty.server.SessionManager)
CALLER: org.eclipse.jetty.servlet.Holder#<init>(org.eclipse.jetty.servlet.BaseHolder.Source)
	CALLEE: org.eclipse.jetty.servlet.BaseHolder#<init>(org.eclipse.jetty.servlet.BaseHolder.Source)
CALLER: org.eclipse.jetty.servlet.Holder#setHeldClass(java.lang.Class)
	CALLEE: org.eclipse.jetty.servlet.BaseHolder#setHeldClass(java.lang.Class)
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#hashCode()
CALLER: org.eclipse.jetty.servlet.ServletContextHandler#newServletHandler()
	CALLEE: org.eclipse.jetty.servlet.ServletHandler#<init>()
CALLER: static javax.ws.rs.RuntimeType#<clinit>()
	CALLEE: javax.ws.rs.RuntimeType#<init>(java.lang.String,int)
CALLER: static org.glassfish.jersey.model.internal.ComponentBag#<clinit>()
	CALLEE: org.glassfish.jersey.model.internal.ComponentBag.1#<init>()
	CALLEE: org.glassfish.jersey.model.internal.ComponentBag.2#<init>()
	CALLEE: org.glassfish.jersey.model.internal.ComponentBag.3#<init>()
	CALLEE: static jersey.repackaged.com.google.common.base.Predicates#alwaysTrue()
	CALLEE: org.glassfish.jersey.model.internal.ComponentBag.4#<init>()
CALLER: org.glassfish.jersey.model.internal.CommonConfig#<init>(javax.ws.rs.RuntimeType,jersey.repackaged.com.google.common.base.Predicate)
	CALLEE: static jersey.repackaged.com.google.common.collect.Sets#newHashSet()
	CALLEE: static org.glassfish.jersey.model.internal.ComponentBag#newInstance(jersey.repackaged.com.google.common.base.Predicate)
	CALLEE: static jersey.repackaged.com.google.common.collect.Sets#newIdentityHashSet()
CALLER: static org.glassfish.jersey.internal.util.ReflectionHelper#getContextClassLoaderPA()
	CALLEE: org.glassfish.jersey.internal.util.ReflectionHelper.8#<init>()
CALLER: static org.glassfish.jersey.internal.util.ReflectionHelper#<clinit>()
	CALLEE: org.glassfish.jersey.internal.util.ReflectionHelper.1#<init>()
	CALLEE: org.glassfish.jersey.internal.util.ReflectionHelper.13#<init>()
	CALLEE: static org.glassfish.jersey.internal.util.ReflectionHelper#classForNamePA(java.lang.String,java.lang.ClassLoader)
CALLER: static jersey.repackaged.com.google.common.collect.Sets#newHashSetWithExpectedSize(int)
	CALLEE: static jersey.repackaged.com.google.common.collect.Maps#capacity(int)
CALLER: org.glassfish.jersey.server.ResourceConfig#register(java.lang.Class)
	CALLEE: org.glassfish.jersey.server.ResourceConfig#invalidateCache()
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig#register(java.lang.Class)
	CALLEE: org.glassfish.jersey.server.ResourceConfig.ImmutableState#register(java.lang.Class)
CALLER: org.glassfish.jersey.server.internal.scanning.PackageNamesScanner#<init>(java.lang.String[],boolean)
	CALLEE: static org.glassfish.jersey.internal.util.ReflectionHelper#getContextClassLoaderPA()
	CALLEE: static org.glassfish.jersey.internal.util.Tokenizer#tokenize(java.lang.String[],java.lang.String)
	CALLEE: org.glassfish.jersey.server.internal.scanning.PackageNamesScanner#<init>(java.lang.ClassLoader,java.lang.String[],boolean)
CALLER: org.glassfish.jersey.server.ResourceConfig#registerFinder(org.glassfish.jersey.server.ResourceFinder)
	CALLEE: org.glassfish.jersey.server.ResourceConfig#invalidateCache()
	CALLEE: org.glassfish.jersey.server.ResourceConfig.State#registerFinder(org.glassfish.jersey.server.ResourceFinder)
	CALLEE: org.glassfish.jersey.server.ResourceConfig.ImmutableState#registerFinder(org.glassfish.jersey.server.ResourceFinder)
CALLER: static org.eclipse.jetty.webapp.MetaData#<clinit>()
	CALLEE: static org.eclipse.jetty.util.log.Log#getLogger(java.lang.Class)
CALLER: org.eclipse.jetty.webapp.WebAppContext.Context#<init>(org.eclipse.jetty.webapp.WebAppContext)
	CALLEE: org.eclipse.jetty.servlet.ServletContextHandler.Context#<init>(org.eclipse.jetty.servlet.ServletContextHandler)
CALLER: org.eclipse.jetty.server.handler.ContextHandler#setErrorHandler(org.eclipse.jetty.server.handler.ErrorHandler)
	CALLEE: org.eclipse.jetty.server.handler.AbstractHandler#getServer()
	CALLEE: org.eclipse.jetty.server.handler.AbstractHandler#setServer(org.eclipse.jetty.server.Server)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#updateBean(java.lang.Object,java.lang.Object)
CALLER: org.eclipse.jetty.util.ArrayTrie#<init>(int)
	CALLEE: org.eclipse.jetty.util.AbstractTrie#<init>(boolean)
CALLER: static org.eclipse.jetty.http.MimeTypes.Type#<clinit>()
	CALLEE: org.eclipse.jetty.http.MimeTypes.Type#<init>(java.lang.String,int,java.lang.String)
	CALLEE: org.eclipse.jetty.http.MimeTypes.Type#<init>(java.lang.String,int,java.lang.String,java.nio.charset.Charset)
	CALLEE: org.eclipse.jetty.http.MimeTypes.Type#<init>(java.lang.String,int,java.lang.String,org.eclipse.jetty.http.MimeTypes.Type)
CALLER: static org.eclipse.jetty.util.StringUtil#<clinit>()
	CALLEE: static org.eclipse.jetty.util.log.Log#getLogger(java.lang.Class)
	CALLEE: org.eclipse.jetty.util.ArrayTrie#<init>(int)
	CALLEE: org.eclipse.jetty.util.ArrayTrie#put(java.lang.String,java.lang.Object)
CALLER: static org.eclipse.jetty.http.MimeTypes#normalizeMimeType(java.lang.String)
	CALLEE: static org.eclipse.jetty.util.StringUtil#asciiToLowerCase(java.lang.String)
	CALLEE: org.eclipse.jetty.util.AbstractTrie#get(java.lang.String)
CALLER: static org.eclipse.jetty.util.resource.Resource#newResource(java.lang.String,boolean)
	CALLEE: org.eclipse.jetty.util.resource.FileResource#<init>(java.io.File)
	CALLEE: static org.eclipse.jetty.util.resource.Resource#newResource(java.net.URL,boolean)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#warn(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Throwable)
CALLER: org.traccar.database.QueryBuilder#addProcessors(java.util.List,java.lang.Class,java.lang.reflect.Method,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder.1#<init>(org.traccar.database.QueryBuilder,java.lang.reflect.Method,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder.2#<init>(org.traccar.database.QueryBuilder,java.lang.reflect.Method,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder.3#<init>(org.traccar.database.QueryBuilder,java.lang.reflect.Method,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder.4#<init>(org.traccar.database.QueryBuilder,java.lang.reflect.Method,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder.5#<init>(org.traccar.database.QueryBuilder,java.lang.reflect.Method,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder.6#<init>(org.traccar.database.QueryBuilder,java.lang.String,java.lang.reflect.Method)
	CALLEE: org.traccar.database.QueryBuilder.7#<init>(org.traccar.database.QueryBuilder,java.lang.reflect.Method,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder.8#<init>(org.traccar.database.QueryBuilder,java.lang.String,java.lang.reflect.Method,java.lang.Class)
CALLER: org.apache.commons.collections.ExtendedProperties#getBoolean(java.lang.String,boolean)
	CALLEE: org.apache.commons.collections.ExtendedProperties#getBoolean(java.lang.String,java.lang.Boolean)
CALLER: org.apache.velocity.runtime.log.Log#<init>(org.apache.velocity.runtime.log.LogChute)
	CALLEE: org.apache.velocity.runtime.log.Log#setLogChute(org.apache.velocity.runtime.log.LogChute)
CALLER: org.apache.velocity.runtime.VelocimacroManager#addNamespace(java.lang.String)
	CALLEE: static org.apache.velocity.util.MapFactory#create(int,float,int,boolean)
CALLER: org.apache.commons.collections.ExtendedProperties#clearProperty(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.io.SerializedString#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.JsonLocation#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#equals(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.ConsumesProducesAcceptor#equals(java.lang.Object)
	CALLEE: org.traccar.database.GroupTree.TreeNode#equals(java.lang.Object)
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig.FeatureRegistration#equals(java.lang.Object)
	CALLEE: org.apache.log4j.CategoryKey#equals(java.lang.Object)
	CALLEE: org.slf4j.helpers.SubstituteLogger#equals(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.Errors.ErrorMessage#equals(java.lang.Object)
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#equals(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.OsgiRegistry.BundleSpiProvidersLoader#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.ClassKey#equals(java.lang.Object)
	CALLEE: javax.ws.rs.core.MediaType#equals(java.lang.Object)
	CALLEE: jersey.repackaged.com.google.common.base.Predicates.AndPredicate#equals(java.lang.Object)
	CALLEE: org.glassfish.hk2.api.AnnotationLiteral#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#equals(java.lang.Object)
	CALLEE: org.glassfish.hk2.utilities.reflection.ParameterizedTypeImpl#equals(java.lang.Object)
	CALLEE: liquibase.changelog.RanChangeSet#equals(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.model.ResourceModelIssue#equals(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.model.Parameter#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.jsontype.NamedType#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.NullNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.MemberKey#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.ObjectNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.ArrayNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.POJONode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.BooleanNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.TextNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.BinaryNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.IntNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.LongNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.BigIntegerNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.DoubleNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.DecimalNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.annotation.ObjectIdGenerator.IdKey#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.PropertyName#equals(java.lang.Object)
	CALLEE: org.glassfish.jersey.message.internal.AcceptableMediaType#equals(java.lang.Object)
	CALLEE: org.glassfish.jersey.message.internal.QualitySourceMediaType#equals(java.lang.Object)
CALLER: org.apache.commons.collections.ExtendedProperties#addProperty(java.lang.String,java.lang.Object)
	CALLEE: org.apache.commons.collections.ExtendedProperties.PropertiesTokenizer#<init>(java.lang.String)
	CALLEE: org.apache.commons.collections.ExtendedProperties.PropertiesTokenizer#hasMoreTokens()
	CALLEE: org.apache.commons.collections.ExtendedProperties.PropertiesTokenizer#nextToken()
	CALLEE: static org.apache.commons.collections.ExtendedProperties#unescape(java.lang.String)
	CALLEE: org.apache.commons.collections.ExtendedProperties#addPropertyInternal(java.lang.String,java.lang.Object)
CALLER: org.apache.velocity.runtime.log.Log#log(int,java.lang.Object)
	CALLEE: org.apache.velocity.runtime.log.Log#getLogChute()
	CALLEE: org.apache.velocity.runtime.log.LogDisplayWrapper#getLogChute()
	CALLEE: org.apache.velocity.runtime.log.HoldingLogChute#log(int,java.lang.String)
	CALLEE: org.apache.velocity.runtime.log.LogChuteSystem#log(int,java.lang.String)
	CALLEE: org.apache.velocity.runtime.log.SystemLogChute#log(int,java.lang.String)
CALLER: org.apache.velocity.runtime.RuntimeInstance#setDefaultProperties()
	CALLEE: org.apache.velocity.runtime.log.Log#debug(java.lang.Object)
	CALLEE: org.apache.velocity.runtime.log.Log#error(java.lang.Object,java.lang.Throwable)
	CALLEE: org.apache.velocity.runtime.log.Log#isDebugEnabled()
	CALLEE: org.apache.commons.collections.ExtendedProperties#load(java.io.InputStream)
CALLER: org.apache.commons.collections.ExtendedProperties#combine(org.apache.commons.collections.ExtendedProperties)
	CALLEE: org.apache.commons.collections.ExtendedProperties#setProperty(java.lang.String,java.lang.Object)
	CALLEE: org.apache.commons.collections.ExtendedProperties#getKeys()
CALLER: static org.apache.velocity.runtime.log.LogManager#updateLog(org.apache.velocity.runtime.log.Log,org.apache.velocity.runtime.RuntimeServices)
	CALLEE: org.apache.velocity.runtime.log.Log#setLogChute(org.apache.velocity.runtime.log.LogChute)
	CALLEE: org.apache.velocity.runtime.log.Log#getLogChute()
	CALLEE: static org.apache.velocity.runtime.log.LogManager#createLogChute(org.apache.velocity.runtime.RuntimeServices)
	CALLEE: org.apache.velocity.runtime.log.HoldingLogChute#transferTo(org.apache.velocity.runtime.log.LogChute)
CALLER: org.apache.velocity.exception.VelocityException#<init>(java.lang.String,java.lang.Throwable)
	CALLEE: static org.apache.velocity.util.ExceptionUtils#setCause(java.lang.Throwable,java.lang.Throwable)
CALLER: org.apache.velocity.runtime.RuntimeInstance#getString(java.lang.String)
	CALLEE: org.apache.commons.collections.ExtendedProperties#getString(java.lang.String)
	CALLEE: static org.apache.velocity.util.StringUtils#nullTrim(java.lang.String)
CALLER: static org.apache.velocity.util.ClassUtils#getNewInstance(java.lang.String)
	CALLEE: static org.apache.velocity.util.ClassUtils#getClass(java.lang.String)
CALLER: org.apache.velocity.runtime.log.Log#error(java.lang.Object)
	CALLEE: org.apache.velocity.runtime.log.Log#log(int,java.lang.Object)
CALLER: org.apache.velocity.runtime.log.Log#error(java.lang.Object,java.lang.Throwable)
	CALLEE: org.apache.velocity.runtime.log.Log#log(int,java.lang.Object,java.lang.Throwable)
CALLER: org.apache.velocity.runtime.RuntimeInstance#loadDirective(java.lang.String)
	CALLEE: org.apache.velocity.exception.VelocityException#<init>(java.lang.String,java.lang.Throwable)
	CALLEE: static org.apache.velocity.util.ClassUtils#getNewInstance(java.lang.String)
	CALLEE: org.apache.velocity.runtime.log.Log#error(java.lang.Object)
	CALLEE: static org.apache.velocity.runtime.RuntimeInstance#class$(java.lang.String)
	CALLEE: org.apache.velocity.exception.VelocityException#<init>(java.lang.String)
	CALLEE: org.apache.velocity.runtime.log.Log#error(java.lang.Object,java.lang.Throwable)
	CALLEE: org.apache.velocity.runtime.RuntimeInstance#addDirective(org.apache.velocity.runtime.directive.Directive)
CALLER: org.apache.velocity.runtime.log.Log#isDebugEnabled()
	CALLEE: org.apache.velocity.runtime.log.Log#getLogChute()
	CALLEE: org.apache.velocity.runtime.log.HoldingLogChute#isLevelEnabled(int)
	CALLEE: org.apache.velocity.runtime.log.LogChuteSystem#isLevelEnabled(int)
	CALLEE: org.apache.velocity.runtime.log.SystemLogChute#isLevelEnabled(int)
CALLER: org.apache.velocity.runtime.RuntimeInstance#initializeSpecificEventHandler(java.lang.String,java.lang.String,java.lang.Class)
	CALLEE: org.apache.velocity.exception.VelocityException#<init>(java.lang.String,java.lang.Throwable)
	CALLEE: static org.apache.velocity.util.ClassUtils#getNewInstance(java.lang.String)
	CALLEE: org.apache.velocity.runtime.log.Log#error(java.lang.Object)
	CALLEE: org.apache.velocity.exception.VelocityException#<init>(java.lang.String)
CALLER: org.apache.velocity.util.introspection.LinkingUberspector#<init>(org.apache.velocity.util.introspection.Uberspect,org.apache.velocity.util.introspection.Uberspect)
	CALLEE: org.apache.velocity.util.introspection.AbstractChainableUberspector#<init>()
CALLER: org.apache.velocity.util.introspection.LinkingUberspector#init()
	CALLEE: org.apache.velocity.util.introspection.LinkingUberspector#init()
CALLER: org.apache.velocity.runtime.VelocimacroFactory#setReplacementPermission(boolean)
	CALLEE: org.apache.velocity.runtime.VelocimacroManager#setInlineReplacesGlobal(boolean)
CALLER: org.apache.velocity.runtime.RuntimeInstance#getProperty(java.lang.String)
	CALLEE: static org.apache.velocity.util.StringUtils#nullTrim(java.lang.String)
	CALLEE: org.apache.commons.collections.ExtendedProperties#getProperty(java.lang.String)
CALLER: org.apache.velocity.runtime.RuntimeInstance#getLoaderNameForResource(java.lang.String)
	CALLEE: org.apache.velocity.runtime.RuntimeInstance#requireInitialization()
CALLER: static org.apache.commons.lang.StringUtils#isNotEmpty(java.lang.String)
	CALLEE: static org.apache.commons.lang.StringUtils#isEmpty(java.lang.String)
CALLER: org.apache.velocity.runtime.RuntimeInstance#getTemplate(java.lang.String)
	CALLEE: org.apache.velocity.runtime.RuntimeInstance#getDefaultEncoding()
	CALLEE: org.apache.velocity.runtime.RuntimeInstance#getTemplate(java.lang.String,java.lang.String)
CALLER: org.apache.velocity.runtime.VelocimacroFactory.Twonk#<init>(org.apache.velocity.runtime.VelocimacroFactory.1)
	CALLEE: org.apache.velocity.runtime.VelocimacroFactory.Twonk#<init>()
CALLER: org.apache.velocity.runtime.log.LogDisplayWrapper#error(boolean,java.lang.Object,java.lang.Throwable)
	CALLEE: org.apache.velocity.runtime.log.LogDisplayWrapper#log(boolean,int,java.lang.Object,java.lang.Throwable)
CALLER: static org.slf4j.LoggerFactory#performInitialization()
	CALLEE: static org.slf4j.LoggerFactory#bind()
	CALLEE: static org.slf4j.LoggerFactory#versionSanityCheck()
CALLER: static org.slf4j.impl.StaticLoggerBinder#<clinit>()
	CALLEE: org.slf4j.impl.StaticLoggerBinder#<init>()
CALLER: static org.slf4j.helpers.Util#safeCreateSecurityManager()
	CALLEE: org.slf4j.helpers.Util.ClassContextSecurityManager#<init>(org.slf4j.helpers.Util.1)
CALLER: org.apache.log4j.FileAppender#closeFile()
	CALLEE: static org.apache.log4j.helpers.LogLog#error(java.lang.String,java.lang.Throwable)
CALLER: org.apache.log4j.WriterAppender#reset()
	CALLEE: org.apache.log4j.WriterAppender#closeWriter()
CALLER: static com.ning.http.client.Realm.AuthScheme#<clinit>()
	CALLEE: com.ning.http.client.Realm.AuthScheme#<init>(java.lang.String,int)
CALLER: org.traccar.Main.1#run()
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
	CALLEE: static org.traccar.Context#getDataManager()
	CALLEE: org.traccar.database.DataManager#clearPositionsHistory()
CALLER: org.apache.log4j.helpers.QuietWriter#<init>(java.io.Writer,org.apache.log4j.spi.ErrorHandler)
	CALLEE: org.apache.log4j.helpers.QuietWriter#setErrorHandler(org.apache.log4j.spi.ErrorHandler)
CALLER: org.apache.log4j.helpers.QuietWriter#write(java.lang.String)
	CALLEE: org.apache.log4j.helpers.OnlyOnceErrorHandler#error(java.lang.String,java.lang.Exception,int)
CALLER: static org.apache.log4j.helpers.OptionConverter#findAndSubst(java.lang.String,java.util.Properties)
	CALLEE: static org.apache.log4j.helpers.LogLog#error(java.lang.String,java.lang.Throwable)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#substVars(java.lang.String,java.util.Properties)
CALLER: static org.apache.log4j.helpers.OptionConverter#toLevel(java.lang.String,org.apache.log4j.Level)
	CALLEE: static org.apache.log4j.Level#toLevel(java.lang.String,org.apache.log4j.Level)
	CALLEE: static org.apache.log4j.helpers.LogLog#debug(java.lang.String)
	CALLEE: static org.apache.log4j.helpers.LogLog#warn(java.lang.String,java.lang.Throwable)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#class$(java.lang.String)
	CALLEE: static org.apache.log4j.helpers.LogLog#warn(java.lang.String)
	CALLEE: static org.apache.log4j.helpers.Loader#loadClass(java.lang.String)
CALLER: org.apache.log4j.PropertyConfigurator#configureRootCategory(java.util.Properties,org.apache.log4j.spi.LoggerRepository)
	CALLEE: static org.apache.log4j.helpers.LogLog#debug(java.lang.String)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#findAndSubst(java.lang.String,java.util.Properties)
	CALLEE: org.apache.log4j.PropertyConfigurator#parseCategory(java.util.Properties,org.apache.log4j.Logger,java.lang.String,java.lang.String,java.lang.String)
	CALLEE: org.apache.log4j.Hierarchy#getRootLogger()
	CALLEE: org.apache.log4j.spi.NOPLoggerRepository#getRootLogger()
CALLER: org.apache.log4j.PropertyConfigurator#configureLoggerFactory(java.util.Properties)
	CALLEE: static org.apache.log4j.helpers.LogLog#debug(java.lang.String)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#instantiateByClassName(java.lang.String,java.lang.Class,java.lang.Object)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#findAndSubst(java.lang.String,java.util.Properties)
	CALLEE: static org.apache.log4j.PropertyConfigurator#class$(java.lang.String)
	CALLEE: static org.apache.log4j.config.PropertySetter#setProperties(java.lang.Object,java.util.Properties,java.lang.String)
CALLER: org.apache.log4j.PropertyConfigurator#parseCatsAndRenderers(java.util.Properties,org.apache.log4j.spi.LoggerRepository)
	CALLEE: static org.apache.log4j.helpers.LogLog#error(java.lang.String)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#findAndSubst(java.lang.String,java.util.Properties)
	CALLEE: org.apache.log4j.PropertyConfigurator#parseCategory(java.util.Properties,org.apache.log4j.Logger,java.lang.String,java.lang.String,java.lang.String)
	CALLEE: static org.apache.log4j.PropertyConfigurator#class$(java.lang.String)
	CALLEE: org.apache.log4j.PropertyConfigurator#parseAdditivityForLogger(java.util.Properties,org.apache.log4j.Logger,java.lang.String)
	CALLEE: static org.apache.log4j.or.RendererMap#addRenderer(org.apache.log4j.spi.RendererSupport,java.lang.String,java.lang.String)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#instantiateByKey(java.util.Properties,java.lang.String,java.lang.Class,java.lang.Object)
	CALLEE: org.apache.log4j.config.PropertySetter#<init>(java.lang.Object)
	CALLEE: org.apache.log4j.config.PropertySetter#setProperties(java.util.Properties,java.lang.String)
	CALLEE: org.apache.log4j.Hierarchy#getLogger(java.lang.String,org.apache.log4j.spi.LoggerFactory)
	CALLEE: org.apache.log4j.spi.NOPLoggerRepository#getLogger(java.lang.String,org.apache.log4j.spi.LoggerFactory)
	CALLEE: org.apache.log4j.Hierarchy#setThrowableRenderer(org.apache.log4j.spi.ThrowableRenderer)
CALLER: static com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer#createRoot(int)
	CALLEE: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer#makeOrphan(int)
CALLER: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer#<init>()
	CALLEE: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer#initTables(int)
CALLER: static com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer#createRoot(int)
	CALLEE: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer#<init>(int,boolean,int,boolean)
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedClass#<init>(java.lang.Class,java.util.List,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver,com.fasterxml.jackson.databind.introspect.AnnotationMap)
	CALLEE: com.fasterxml.jackson.databind.introspect.Annotated#<init>()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfigBase#findMixInClassFor(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#<init>(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.util.List)
	CALLEE: com.fasterxml.jackson.databind.BeanDescription#<init>(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.DeserializationConfig#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.SerializationConfig#getAnnotationIntrospector()
CALLER: static com.fasterxml.jackson.databind.cfg.ContextAttributes.Impl#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.cfg.ContextAttributes.Impl#<init>(java.util.Map)
CALLER: com.fasterxml.jackson.databind.cfg.MapperConfigBase#<init>(com.fasterxml.jackson.databind.cfg.MapperConfigBase,int)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#<init>(com.fasterxml.jackson.databind.cfg.BaseSettings,int)
CALLER: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig#<init>()
	CALLEE: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig#<init>(com.fasterxml.jackson.databind.ser.Serializers[],com.fasterxml.jackson.databind.ser.Serializers[],com.fasterxml.jackson.databind.ser.BeanSerializerModifier[])
CALLER: com.fasterxml.jackson.databind.ser.std.StdScalarSerializer#<init>(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#<init>(java.lang.Class)
CALLER: static com.fasterxml.jackson.core.JsonParser.NumberType#<clinit>()
	CALLEE: com.fasterxml.jackson.core.JsonParser.NumberType#<init>(java.lang.String,int)
CALLER: com.fasterxml.jackson.databind.ser.std.NumberSerializers.Base#<init>(java.lang.Class,com.fasterxml.jackson.core.JsonParser.NumberType,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdScalarSerializer#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.ser.std.NumberSerializers.LongSerializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.Base#<init>(java.lang.Class,com.fasterxml.jackson.core.JsonParser.NumberType,java.lang.String)
CALLER: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntLikeSerializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.Base#<init>(java.lang.Class,com.fasterxml.jackson.core.JsonParser.NumberType,java.lang.String)
CALLER: com.fasterxml.jackson.databind.ser.std.NumberSerializers.ShortSerializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.Base#<init>(java.lang.Class,com.fasterxml.jackson.core.JsonParser.NumberType,java.lang.String)
CALLER: com.fasterxml.jackson.databind.ser.std.NumberSerializers.FloatSerializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.Base#<init>(java.lang.Class,com.fasterxml.jackson.core.JsonParser.NumberType,java.lang.String)
CALLER: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.Base#<init>(java.lang.Class,com.fasterxml.jackson.core.JsonParser.NumberType,java.lang.String)
CALLER: com.fasterxml.jackson.databind.ser.std.CalendarSerializer#<init>(java.lang.Boolean,java.text.DateFormat)
	CALLEE: com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase#<init>(java.lang.Class,java.lang.Boolean,java.text.DateFormat)
CALLER: com.fasterxml.jackson.databind.ser.std.DateSerializer#<init>(java.lang.Boolean,java.text.DateFormat)
	CALLEE: com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase#<init>(java.lang.Class,java.lang.Boolean,java.text.DateFormat)
CALLER: com.fasterxml.jackson.databind.ser.std.NullSerializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#<init>(java.lang.Class)
CALLER: static com.zaxxer.hikari.util.PropertyElf#setProperty(java.lang.Object,java.lang.String,java.lang.Object,java.util.List)
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.ConsumesProducesAcceptor#toString()
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#toString()
	CALLEE: org.eclipse.jetty.webapp.WebAppContext#toString()
	CALLEE: org.eclipse.jetty.server.handler.HandlerCollection#toString()
	CALLEE: org.eclipse.jetty.server.Server#toString()
	CALLEE: org.eclipse.jetty.server.AbstractNetworkConnector#toString()
	CALLEE: org.eclipse.jetty.util.thread.QueuedThreadPool#toString()
	CALLEE: org.eclipse.jetty.server.AbstractConnectionFactory#toString()
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle.Bean#toString()
	CALLEE: org.apache.log4j.NameValue#toString()
	CALLEE: liquibase.changelog.ChangeLogParameters.ChangeLogParameter#toString()
	CALLEE: org.eclipse.jetty.server.AbstractConnector.Acceptor#toString()
	CALLEE: org.eclipse.jetty.server.HttpConfiguration#toString()
	CALLEE: org.eclipse.jetty.util.MultiException#toString()
	CALLEE: org.eclipse.jetty.http.PathMap.MappedEntry#toString()
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector#toString()
	CALLEE: liquibase.servicelocator.AssignableToPackageScanFilter#toString()
	CALLEE: org.eclipse.jetty.http.HttpField#toString()
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#toString()
	CALLEE: org.slf4j.helpers.NOPLogger#error(java.lang.String,java.lang.Object[])
	CALLEE: org.slf4j.helpers.NOPLogger#error(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.helpers.SubstituteLogger#error(java.lang.String,java.lang.Object[])
	CALLEE: org.slf4j.helpers.SubstituteLogger#error(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#toString()
	CALLEE: org.eclipse.jetty.servlet.ServletMapping#toString()
	CALLEE: org.glassfish.jersey.internal.OsgiRegistry.BundleSpiProvidersLoader#toString()
	CALLEE: org.slf4j.impl.SimpleLogger#error(java.lang.String,java.lang.Object[])
	CALLEE: org.slf4j.impl.SimpleLogger#error(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.h2.jdbc.JdbcSQLException#toString()
	CALLEE: liquibase.changelog.filter.ChangeSetFilterResult#toString()
	CALLEE: com.zaxxer.hikari.pool.PoolEntry#toString()
	CALLEE: org.eclipse.jetty.io.SelectChannelEndPoint#toString()
	CALLEE: org.eclipse.jetty.util.FutureCallback#toString()
	CALLEE: org.eclipse.jetty.util.ConstantThrowable#toString()
	CALLEE: javax.ws.rs.core.MediaType#toString()
	CALLEE: org.glassfish.jersey.model.internal.RankedProvider#toString()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#toString()
	CALLEE: org.glassfish.hk2.api.MultiException#toString()
	CALLEE: org.glassfish.jersey.message.internal.QualitySourceMediaType#toString()
	CALLEE: jersey.repackaged.com.google.common.base.Predicates.AndPredicate#toString()
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.MapType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#toString()
	CALLEE: org.glassfish.hk2.utilities.NamedImpl#toString()
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#toString()
	CALLEE: com.fasterxml.jackson.core.JsonLocation#toString()
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#toString()
	CALLEE: com.fasterxml.jackson.databind.jsontype.NamedType#toString()
	CALLEE: liquibase.changelog.RanChangeSet#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.UnresolvedId#toString()
	CALLEE: org.glassfish.jersey.server.model.ResourceModelIssue#toString()
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#toString()
	CALLEE: org.glassfish.jersey.server.model.Parameter#toString()
	CALLEE: org.glassfish.hk2.utilities.reflection.ParameterizedTypeImpl#toString()
	CALLEE: com.fasterxml.jackson.databind.type.ClassKey#toString()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException.Reference#toString()
	CALLEE: org.glassfish.jersey.server.model.Resource.Data#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ValueNode#toString()
	CALLEE: org.glassfish.jersey.server.model.Resource#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#toString()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Data#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.MemberKey#toString()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ObjectNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ArrayNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.POJONode#toString()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#toString()
	CALLEE: com.fasterxml.jackson.databind.node.TextNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.BinaryNode#toString()
	CALLEE: com.fasterxml.jackson.databind.PropertyName#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#toString()
	CALLEE: com.fasterxml.jackson.core.io.SerializedString#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey#toString()
	CALLEE: org.glassfish.jersey.server.model.Invocable#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#toString()
	CALLEE: org.glassfish.jersey.server.model.MethodHandler.ClassBasedMethodHandler#toString()
	CALLEE: org.glassfish.jersey.server.model.MethodHandler.InstanceBasedMethodHandler#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#toString()
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodRouting#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#toString()
CALLER: static com.zaxxer.hikari.util.PropertyElf#copyProperties(java.util.Properties)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#toString()
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.ConsumesProducesAcceptor#toString()
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#toString()
	CALLEE: org.eclipse.jetty.webapp.WebAppContext#toString()
	CALLEE: org.eclipse.jetty.server.handler.HandlerCollection#toString()
	CALLEE: org.eclipse.jetty.server.Server#toString()
	CALLEE: org.eclipse.jetty.server.AbstractNetworkConnector#toString()
	CALLEE: org.eclipse.jetty.util.thread.QueuedThreadPool#toString()
	CALLEE: org.eclipse.jetty.server.AbstractConnectionFactory#toString()
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle.Bean#toString()
	CALLEE: org.apache.log4j.NameValue#toString()
	CALLEE: liquibase.changelog.ChangeLogParameters.ChangeLogParameter#toString()
	CALLEE: org.eclipse.jetty.server.AbstractConnector.Acceptor#toString()
	CALLEE: org.eclipse.jetty.server.HttpConfiguration#toString()
	CALLEE: org.eclipse.jetty.util.MultiException#toString()
	CALLEE: org.eclipse.jetty.http.PathMap.MappedEntry#toString()
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector#toString()
	CALLEE: liquibase.servicelocator.AssignableToPackageScanFilter#toString()
	CALLEE: org.eclipse.jetty.http.HttpField#toString()
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#toString()
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#toString()
	CALLEE: org.eclipse.jetty.http.PathMap.MappedEntry#getValue()
	CALLEE: org.eclipse.jetty.http.PathMap.MappedEntry#getKey()
	CALLEE: org.eclipse.jetty.servlet.ServletMapping#toString()
	CALLEE: org.glassfish.jersey.internal.OsgiRegistry.BundleSpiProvidersLoader#toString()
	CALLEE: org.h2.jdbc.JdbcSQLException#toString()
	CALLEE: liquibase.changelog.filter.ChangeSetFilterResult#toString()
	CALLEE: com.zaxxer.hikari.pool.PoolEntry#toString()
	CALLEE: org.eclipse.jetty.io.SelectChannelEndPoint#toString()
	CALLEE: org.eclipse.jetty.util.FutureCallback#toString()
	CALLEE: org.eclipse.jetty.util.ConstantThrowable#toString()
	CALLEE: javax.ws.rs.core.MediaType#toString()
	CALLEE: org.glassfish.jersey.model.internal.RankedProvider#toString()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#toString()
	CALLEE: org.glassfish.hk2.api.MultiException#toString()
	CALLEE: org.glassfish.jersey.message.internal.QualitySourceMediaType#toString()
	CALLEE: jersey.repackaged.com.google.common.base.Predicates.AndPredicate#toString()
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.MapType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#toString()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: org.glassfish.hk2.utilities.NamedImpl#toString()
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#toString()
	CALLEE: com.fasterxml.jackson.core.JsonLocation#toString()
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#toString()
	CALLEE: com.fasterxml.jackson.databind.jsontype.NamedType#toString()
	CALLEE: liquibase.changelog.RanChangeSet#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.UnresolvedId#toString()
	CALLEE: org.glassfish.jersey.server.model.ResourceModelIssue#toString()
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#toString()
	CALLEE: org.glassfish.jersey.server.model.Parameter#toString()
	CALLEE: org.glassfish.hk2.utilities.reflection.ParameterizedTypeImpl#toString()
	CALLEE: com.fasterxml.jackson.databind.type.ClassKey#toString()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException.Reference#toString()
	CALLEE: org.glassfish.jersey.server.model.Resource.Data#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ValueNode#toString()
	CALLEE: org.glassfish.jersey.server.model.Resource#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#toString()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Data#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.MemberKey#toString()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ObjectNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ArrayNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.POJONode#toString()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#toString()
	CALLEE: com.fasterxml.jackson.databind.node.TextNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.BinaryNode#toString()
	CALLEE: com.fasterxml.jackson.databind.PropertyName#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#toString()
	CALLEE: com.fasterxml.jackson.core.io.SerializedString#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey#toString()
	CALLEE: org.glassfish.jersey.server.model.Invocable#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#toString()
	CALLEE: org.glassfish.jersey.server.model.MethodHandler.ClassBasedMethodHandler#toString()
	CALLEE: org.glassfish.jersey.server.model.MethodHandler.InstanceBasedMethodHandler#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#toString()
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodRouting#toString()
CALLER: static com.zaxxer.hikari.util.ClockSource.Factory#access$000()
	CALLEE: static com.zaxxer.hikari.util.ClockSource.Factory#create()
CALLER: com.zaxxer.hikari.pool.PoolBase#initializeDataSource()
	CALLEE: static com.zaxxer.hikari.util.PropertyElf#setTargetFromProperties(java.lang.Object,java.util.Properties)
	CALLEE: com.zaxxer.hikari.HikariConfig#getJdbcUrl()
	CALLEE: com.zaxxer.hikari.HikariConfig#getUsername()
	CALLEE: com.zaxxer.hikari.HikariConfig#getPassword()
	CALLEE: com.zaxxer.hikari.HikariConfig#getDataSourceClassName()
	CALLEE: com.zaxxer.hikari.HikariConfig#getDriverClassName()
	CALLEE: com.zaxxer.hikari.HikariConfig#getDataSourceProperties()
	CALLEE: com.zaxxer.hikari.HikariConfig#getDataSource()
	CALLEE: static com.zaxxer.hikari.util.UtilityElf#createInstance(java.lang.String,java.lang.Class,java.lang.Object[])
	CALLEE: com.zaxxer.hikari.util.DriverDataSource#<init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)
	CALLEE: com.zaxxer.hikari.pool.PoolBase#setLoginTimeout(javax.sql.DataSource)
	CALLEE: com.zaxxer.hikari.pool.PoolBase#createNetworkTimeoutExecutor(javax.sql.DataSource,java.lang.String,java.lang.String)
CALLER: com.zaxxer.hikari.util.QueuedSequenceSynchronizer#<init>()
	CALLEE: com.zaxxer.hikari.util.QueuedSequenceSynchronizer.Synchronizer#<init>(com.zaxxer.hikari.util.QueuedSequenceSynchronizer,com.zaxxer.hikari.util.QueuedSequenceSynchronizer.1)
	CALLEE: static com.zaxxer.hikari.util.Sequence.Factory#create()
CALLER: com.zaxxer.hikari.util.SuspendResumeLock.1#<init>(boolean)
	CALLEE: com.zaxxer.hikari.util.SuspendResumeLock#<init>(boolean,com.zaxxer.hikari.util.SuspendResumeLock.1)
CALLER: com.zaxxer.hikari.pool.PoolBase#newConnection()
	CALLEE: com.zaxxer.hikari.HikariConfig#getUsername()
	CALLEE: com.zaxxer.hikari.HikariConfig#getPassword()
	CALLEE: com.zaxxer.hikari.util.DriverDataSource#getConnection()
	CALLEE: com.zaxxer.hikari.util.DriverDataSource#getConnection(java.lang.String,java.lang.String)
	CALLEE: com.zaxxer.hikari.pool.PoolBase#setupConnection(java.sql.Connection)
	CALLEE: com.zaxxer.hikari.pool.PoolBase#quietlyCloseConnection(java.sql.Connection,java.lang.String)
CALLER: com.zaxxer.hikari.pool.HikariPool.PoolInitializationException#<init>(java.lang.Throwable)
	CALLEE: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference#getMessage()
	CALLEE: org.h2.jdbc.JdbcSQLException#getMessage()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#getMessage()
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#getMessage()
CALLER: com.zaxxer.hikari.pool.HikariPool#getPoolStats()
	CALLEE: com.zaxxer.hikari.pool.HikariPool.4#<init>(com.zaxxer.hikari.pool.HikariPool,long)
CALLER: com.zaxxer.hikari.pool.PoolBase.NopMetricsTrackerDelegate#<init>()
	CALLEE: com.zaxxer.hikari.pool.PoolBase.MetricsTrackerDelegate#<init>()
CALLER: static com.zaxxer.hikari.metrics.dropwizard.CodahaleHealthChecker#registerHealthChecks(com.zaxxer.hikari.pool.HikariPool,com.zaxxer.hikari.HikariConfig,com.codahale.metrics.health.HealthCheckRegistry)
	CALLEE: com.zaxxer.hikari.HikariConfig#getPoolName()
	CALLEE: com.zaxxer.hikari.HikariConfig#getMetricRegistry()
	CALLEE: com.zaxxer.hikari.HikariConfig#getConnectionTimeout()
	CALLEE: com.zaxxer.hikari.HikariConfig#getHealthCheckProperties()
	CALLEE: com.zaxxer.hikari.metrics.dropwizard.CodahaleHealthChecker.1#<init>(com.zaxxer.hikari.HikariConfig)
CALLER: com.zaxxer.hikari.pool.ProxyLeakTask.1#<init>()
	CALLEE: com.zaxxer.hikari.pool.ProxyLeakTask#<init>(com.zaxxer.hikari.pool.ProxyLeakTask.1)
CALLER: com.zaxxer.hikari.pool.HikariPool.HouseKeeper#<init>(com.zaxxer.hikari.pool.HikariPool)
	CALLEE: static com.zaxxer.hikari.pool.HikariPool#access$700()
	CALLEE: static com.zaxxer.hikari.pool.HikariPool#access$800(com.zaxxer.hikari.pool.HikariPool)
	CALLEE: com.zaxxer.hikari.util.ClockSource.MillisecondClockSource#currentTime()
	CALLEE: com.zaxxer.hikari.util.ClockSource.NanosecondClockSource#currentTime()
	CALLEE: com.zaxxer.hikari.util.ClockSource.MillisecondClockSource#plusMillis(long,long)
	CALLEE: com.zaxxer.hikari.util.ClockSource.NanosecondClockSource#plusMillis(long,long)
CALLER: liquibase.resource.FileSystemResourceAccessor#addRootPath(java.net.URL)
	CALLEE: liquibase.resource.AbstractResourceAccessor#addRootPath(java.net.URL)
CALLER: liquibase.logging.LogFactory#getLog(java.lang.String)
	CALLEE: static liquibase.servicelocator.ServiceLocator#getInstance()
	CALLEE: liquibase.servicelocator.ServiceLocator#newInstance(java.lang.Class)
CALLER: static org.osgi.framework.FrameworkUtil#getBundle(java.lang.Class)
	CALLEE: org.osgi.framework.FrameworkUtil.1#<init>(java.lang.Class)
CALLER: liquibase.osgi.OSGiPackageScanClassResolver#<init>(org.osgi.framework.Bundle)
	CALLEE: liquibase.servicelocator.DefaultPackageScanClassResolver#<init>()
CALLER: liquibase.osgi.OSGiResourceAccessor#<init>(org.osgi.framework.Bundle)
	CALLEE: liquibase.resource.ClassLoaderResourceAccessor#<init>(java.lang.ClassLoader)
CALLER: liquibase.servicelocator.ServiceLocator#<init>(liquibase.servicelocator.PackageScanClassResolver,liquibase.resource.ResourceAccessor)
	CALLEE: liquibase.logging.core.DefaultLogger#<init>()
	CALLEE: liquibase.servicelocator.ServiceLocator#setResourceAccessor(liquibase.resource.ResourceAccessor)
CALLER: liquibase.servicelocator.ServiceLocator#<init>()
	CALLEE: liquibase.logging.core.DefaultLogger#<init>()
	CALLEE: liquibase.servicelocator.ServiceLocator#setResourceAccessor(liquibase.resource.ResourceAccessor)
	CALLEE: liquibase.servicelocator.ServiceLocator#defaultClassLoader()
	CALLEE: liquibase.resource.ClassLoaderResourceAccessor#<init>()
CALLER: liquibase.database.DatabaseFactory.DatabaseComparator#<init>(liquibase.database.DatabaseFactory.1)
	CALLEE: liquibase.database.DatabaseFactory.DatabaseComparator#<init>()
CALLER: liquibase.changelog.ChangeLogParameters#findParameter(java.lang.String,liquibase.changelog.DatabaseChangeLog)
	CALLEE: liquibase.changelog.ChangeLogParameters.ChangeLogParameter#getChangeLog()
	CALLEE: liquibase.changelog.ChangeLogParameters.ChangeLogParameter#isValid()
	CALLEE: liquibase.changelog.ChangeLogParameters.ChangeLogParameter#getKey()
CALLER: static liquibase.configuration.LiquibaseConfiguration#getInstance()
	CALLEE: liquibase.configuration.LiquibaseConfiguration#<init>()
	CALLEE: liquibase.configuration.SystemPropertyProvider#<init>()
	CALLEE: liquibase.configuration.LiquibaseConfiguration#init(liquibase.configuration.ConfigurationValueProvider[])
CALLER: liquibase.changelog.ChangeLogHistoryServiceFactory#<init>()
	CALLEE: static liquibase.servicelocator.ServiceLocator#getInstance()
	CALLEE: liquibase.exception.UnexpectedLiquibaseException#<init>(java.lang.Throwable)
	CALLEE: liquibase.changelog.ChangeLogHistoryServiceFactory#register(liquibase.changelog.ChangeLogHistoryService)
	CALLEE: liquibase.servicelocator.ServiceLocator#findClasses(java.lang.Class)
CALLER: liquibase.Liquibase#getDatabaseChangeLog()
	CALLEE: static liquibase.parser.ChangeLogParserFactory#getInstance()
	CALLEE: liquibase.parser.ChangeLogParserFactory#getParser(java.lang.String,liquibase.resource.ResourceAccessor)
CALLER: liquibase.changelog.ChangeLogHistoryServiceFactory#getChangeLogService(liquibase.database.Database)
	CALLEE: liquibase.exception.UnexpectedLiquibaseException#<init>(java.lang.Throwable)
	CALLEE: liquibase.exception.UnexpectedLiquibaseException#<init>(java.lang.String)
	CALLEE: liquibase.changelog.ChangeLogHistoryServiceFactory.1#<init>(liquibase.changelog.ChangeLogHistoryServiceFactory)
	CALLEE: liquibase.database.core.UnsupportedDatabase#getShortName()
	CALLEE: liquibase.changelog.OfflineChangeLogHistoryService#supports(liquibase.database.Database)
CALLER: liquibase.Liquibase#getStandardChangelogIterator(liquibase.Contexts,liquibase.LabelExpression,liquibase.changelog.DatabaseChangeLog)
	CALLEE: liquibase.changelog.filter.ShouldRunChangeSetFilter#<init>(liquibase.database.Database,boolean)
	CALLEE: liquibase.changelog.filter.ContextChangeSetFilter#<init>(liquibase.Contexts)
	CALLEE: liquibase.changelog.filter.LabelChangeSetFilter#<init>(liquibase.LabelExpression)
	CALLEE: liquibase.changelog.filter.DbmsChangeSetFilter#<init>(liquibase.database.Database)
	CALLEE: liquibase.changelog.ChangeLogIterator#<init>(liquibase.changelog.DatabaseChangeLog,liquibase.changelog.filter.ChangeSetFilter[])
CALLER: liquibase.Liquibase#createUpdateVisitor()
	CALLEE: liquibase.changelog.visitor.UpdateVisitor#<init>(liquibase.database.Database,liquibase.changelog.visitor.ChangeExecListener)
CALLER: static liquibase.database.ObjectQuotingStrategy#<clinit>()
	CALLEE: liquibase.database.ObjectQuotingStrategy#<init>(java.lang.String,int)
CALLER: com.zaxxer.hikari.pool.HikariPool#getConnection()
	CALLEE: com.zaxxer.hikari.pool.HikariPool#getConnection(long)
CALLER: static org.eclipse.jetty.util.log.Log#initStandardLogging(java.lang.Throwable)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#<init>()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.h2.jdbc.JdbcSQLException#printStackTrace(java.io.PrintStream)
CALLER: static org.eclipse.jetty.util.Uptime#getUptime()
	CALLEE: static org.eclipse.jetty.util.Uptime#getInstance()
	CALLEE: org.eclipse.jetty.util.Uptime.DefaultImpl#getUptime()
CALLER: static org.eclipse.jetty.util.Uptime#<clinit>()
	CALLEE: org.eclipse.jetty.util.Uptime#<init>()
CALLER: org.eclipse.jetty.util.thread.QueuedThreadPool#<init>(int)
	CALLEE: org.eclipse.jetty.util.thread.QueuedThreadPool#<init>(int,int)
CALLER: static org.eclipse.jetty.util.component.ContainerLifeCycle.Managed#<clinit>()
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle.Managed#<init>(java.lang.String,int)
CALLER: org.eclipse.jetty.util.component.ContainerLifeCycle#addBean(java.lang.Object,org.eclipse.jetty.util.component.ContainerLifeCycle.Managed)
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#isStarted()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#isRunning()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#contains(java.lang.Object)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle.Bean#<init>(java.lang.Object,org.eclipse.jetty.util.component.ContainerLifeCycle.1)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#addEventListener(org.eclipse.jetty.util.component.Container.Listener)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#unmanage(org.eclipse.jetty.util.component.ContainerLifeCycle.Bean)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#manage(org.eclipse.jetty.util.component.ContainerLifeCycle.Bean)
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#isStarting()
	CALLEE: org.eclipse.jetty.server.Server#start(org.eclipse.jetty.util.component.LifeCycle)
	CALLEE: static org.eclipse.jetty.util.component.ContainerLifeCycle.Bean#access$102(org.eclipse.jetty.util.component.ContainerLifeCycle.Bean,org.eclipse.jetty.util.component.ContainerLifeCycle.Managed)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#start(org.eclipse.jetty.util.component.LifeCycle)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#isDebugEnabled()
	CALLEE: org.eclipse.jetty.servlet.ServletHandler#start(org.eclipse.jetty.util.component.LifeCycle)
CALLER: org.eclipse.jetty.server.handler.AbstractHandler#setServer(org.eclipse.jetty.server.Server)
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#isStarted()
CALLER: org.eclipse.jetty.server.HttpConfiguration#<init>()
	CALLEE: org.eclipse.jetty.http.HttpScheme#asString()
CALLER: org.eclipse.jetty.server.HttpConnectionFactory#<init>(org.eclipse.jetty.server.HttpConfiguration)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#addBean(java.lang.Object)
	CALLEE: org.eclipse.jetty.server.AbstractConnectionFactory#<init>(java.lang.String)
	CALLEE: org.eclipse.jetty.http.HttpVersion#toString()
CALLER: org.eclipse.jetty.server.AbstractNetworkConnector#<init>(org.eclipse.jetty.server.Server,java.util.concurrent.Executor,org.eclipse.jetty.util.thread.Scheduler,org.eclipse.jetty.io.ByteBufferPool,int,org.eclipse.jetty.server.ConnectionFactory[])
	CALLEE: org.eclipse.jetty.server.AbstractConnector#<init>(org.eclipse.jetty.server.Server,java.util.concurrent.Executor,org.eclipse.jetty.util.thread.Scheduler,org.eclipse.jetty.io.ByteBufferPool,int,org.eclipse.jetty.server.ConnectionFactory[])
CALLER: static org.eclipse.jetty.io.SelectorManager#<clinit>()
	CALLEE: static org.eclipse.jetty.util.log.Log#getLogger(java.lang.Class)
CALLER: org.eclipse.jetty.server.ServerConnector.ServerConnectorManager#<init>(org.eclipse.jetty.server.ServerConnector,java.util.concurrent.Executor,org.eclipse.jetty.util.thread.Scheduler,int,org.eclipse.jetty.server.ServerConnector.1)
	CALLEE: org.eclipse.jetty.server.ServerConnector.ServerConnectorManager#<init>(org.eclipse.jetty.server.ServerConnector,java.util.concurrent.Executor,org.eclipse.jetty.util.thread.Scheduler,int)
CALLER: org.eclipse.jetty.util.component.ContainerLifeCycle#addBean(java.lang.Object,boolean)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#addBean(java.lang.Object,org.eclipse.jetty.util.component.ContainerLifeCycle.Managed)
CALLER: org.eclipse.jetty.util.component.ContainerLifeCycle#removeBean(java.lang.Object)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#getBean(java.lang.Object)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#remove(org.eclipse.jetty.util.component.ContainerLifeCycle.Bean)
CALLER: org.eclipse.jetty.server.handler.ContextHandler#<init>(org.eclipse.jetty.server.handler.ContextHandler.Context)
	CALLEE: org.eclipse.jetty.util.AttributesMap#<init>()
	CALLEE: org.eclipse.jetty.server.handler.ScopedHandler#<init>()
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler.ApproveNonExistentDirectoryAliases#<init>()
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#addAliasCheck(org.eclipse.jetty.server.handler.ContextHandler.AliasCheck)
CALLER: static org.eclipse.jetty.security.ConstraintSecurityHandler#<clinit>()
	CALLEE: static org.eclipse.jetty.util.log.Log#getLogger(java.lang.Class)
CALLER: static org.eclipse.jetty.security.SecurityHandler#<clinit>()
	CALLEE: static org.eclipse.jetty.util.log.Log#getLogger(java.lang.Class)
	CALLEE: org.eclipse.jetty.security.SecurityHandler.2#<init>()
	CALLEE: org.eclipse.jetty.security.SecurityHandler.3#<init>()
CALLER: org.eclipse.jetty.servlet.ServletContextHandler.Context#<init>(org.eclipse.jetty.servlet.ServletContextHandler)
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler.Context#<init>(org.eclipse.jetty.server.handler.ContextHandler)
CALLER: org.eclipse.jetty.servlet.ServletContextHandler#relinkHandlers()
	CALLEE: org.eclipse.jetty.servlet.ServletContextHandler#getSessionHandler()
	CALLEE: org.eclipse.jetty.servlet.ServletContextHandler#getServletHandler()
	CALLEE: org.eclipse.jetty.server.handler.HandlerWrapper#getHandler()
	CALLEE: org.eclipse.jetty.server.handler.HandlerWrapper#setHandler(org.eclipse.jetty.server.Handler)
	CALLEE: org.eclipse.jetty.servlet.ServletContextHandler#setHandler(org.eclipse.jetty.server.Handler)
	CALLEE: org.eclipse.jetty.servlet.ServletContextHandler#getSecurityHandler()
CALLER: org.eclipse.jetty.server.session.SessionHandler#<init>(org.eclipse.jetty.server.SessionManager)
	CALLEE: org.eclipse.jetty.server.handler.ScopedHandler#<init>()
	CALLEE: org.eclipse.jetty.server.session.SessionHandler#setSessionManager(org.eclipse.jetty.server.SessionManager)
CALLER: org.eclipse.jetty.servlet.BaseHolder#<init>(org.eclipse.jetty.servlet.BaseHolder.Source)
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#<init>()
CALLER: static org.eclipse.jetty.servlet.Holder.1#<clinit>()
	CALLEE: static org.eclipse.jetty.servlet.BaseHolder.Source#values()
CALLER: static org.eclipse.jetty.servlet.ServletHandler#<clinit>()
	CALLEE: static org.eclipse.jetty.util.log.Log#getLogger(java.lang.Class)
CALLER: org.eclipse.jetty.servlet.ServletHandler#<init>()
	CALLEE: org.eclipse.jetty.server.handler.ScopedHandler#<init>()
CALLER: static jersey.repackaged.com.google.common.base.Predicates#alwaysTrue()
	CALLEE: jersey.repackaged.com.google.common.base.Predicates.ObjectPredicate#withNarrowedType()
CALLER: static jersey.repackaged.com.google.common.base.Predicates#<clinit>()
	CALLEE: static jersey.repackaged.com.google.common.base.Joiner#on(char)
CALLER: static org.glassfish.jersey.model.internal.ComponentBag#newInstance(jersey.repackaged.com.google.common.base.Predicate)
	CALLEE: org.glassfish.jersey.model.internal.ComponentBag#<init>(jersey.repackaged.com.google.common.base.Predicate)
CALLER: static jersey.repackaged.com.google.common.collect.Sets#newIdentityHashSet()
	CALLEE: static jersey.repackaged.com.google.common.collect.Maps#newIdentityHashMap()
	CALLEE: static jersey.repackaged.com.google.common.collect.Sets#newSetFromMap(java.util.Map)
CALLER: org.glassfish.jersey.internal.util.ReflectionHelper.13#<init>()
	CALLEE: org.glassfish.jersey.internal.util.TypeVisitor#<init>()
CALLER: static org.glassfish.jersey.internal.util.ReflectionHelper#classForNamePA(java.lang.String,java.lang.ClassLoader)
	CALLEE: org.glassfish.jersey.internal.util.ReflectionHelper.2#<init>(java.lang.ClassLoader,java.lang.String)
CALLER: static jersey.repackaged.com.google.common.collect.Maps#capacity(int)
	CALLEE: static jersey.repackaged.com.google.common.collect.CollectPreconditions#checkNonnegative(int,java.lang.String)
CALLER: static jersey.repackaged.com.google.common.collect.Maps#<clinit>()
	CALLEE: jersey.repackaged.com.google.common.base.Joiner#withKeyValueSeparator(java.lang.String)
CALLER: org.glassfish.jersey.server.ResourceConfig#invalidateCache()
	CALLEE: static org.glassfish.jersey.server.ResourceConfig.State#access$100(org.glassfish.jersey.server.ResourceConfig.State)
	CALLEE: org.glassfish.jersey.server.internal.scanning.PackageNamesScanner#reset()
	CALLEE: org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.VfsResourceFinder#reset()
	CALLEE: org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.JarZipSchemeScanner#reset()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeScanner#reset()
	CALLEE: org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory.BundleSchemeScanner#reset()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeScanner.1#reset()
	CALLEE: org.glassfish.jersey.server.internal.scanning.JarFileScanner#reset()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FilesScanner#reset()
	CALLEE: org.glassfish.jersey.servlet.WebAppResourcesScanner#reset()
	CALLEE: org.glassfish.jersey.servlet.WebAppResourcesScanner.1#reset()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FilesScanner.1#reset()
CALLER: org.glassfish.jersey.model.internal.CommonConfig#register(java.lang.Class)
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig#checkComponentClassNotNull(java.lang.Class)
	CALLEE: org.glassfish.jersey.server.ResourceConfig.State#getModelEnhancer(java.lang.Class)
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig#processFeatureRegistration(java.lang.Object,java.lang.Class)
	CALLEE: org.glassfish.jersey.model.internal.ComponentBag#register(java.lang.Class,org.glassfish.jersey.process.Inflector)
CALLER: static org.glassfish.jersey.internal.util.Tokenizer#tokenize(java.lang.String[],java.lang.String)
	CALLEE: static org.glassfish.jersey.internal.util.Tokenizer#tokenize(java.lang.String,java.lang.String,java.util.Collection)
CALLER: org.glassfish.jersey.server.internal.scanning.PackageNamesScanner#<init>(java.lang.ClassLoader,java.lang.String[],boolean)
	CALLEE: org.glassfish.jersey.server.internal.AbstractResourceFinderAdapter#<init>()
	CALLEE: org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory#<init>()
	CALLEE: org.glassfish.jersey.server.internal.scanning.PackageNamesScanner#add(org.glassfish.jersey.server.internal.scanning.UriSchemeResourceFinderFactory)
	CALLEE: org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory#<init>()
	CALLEE: org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory#<init>()
	CALLEE: org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory#<init>()
	CALLEE: static org.glassfish.jersey.internal.util.ReflectionHelper#getOsgiRegistryInstance()
	CALLEE: org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.1#<init>(org.glassfish.jersey.server.internal.scanning.PackageNamesScanner,org.glassfish.jersey.internal.OsgiRegistry,boolean)
	CALLEE: static org.glassfish.jersey.server.internal.scanning.PackageNamesScanner#setResourcesProvider(org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.ResourcesProvider)
	CALLEE: org.glassfish.jersey.server.internal.scanning.PackageNamesScanner#init()
CALLER: static org.eclipse.jetty.util.resource.EmptyResource#<clinit>()
	CALLEE: org.eclipse.jetty.util.resource.EmptyResource#<init>()
CALLER: org.eclipse.jetty.util.component.ContainerLifeCycle#updateBean(java.lang.Object,java.lang.Object)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#addBean(java.lang.Object)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#removeBean(java.lang.Object)
CALLER: org.eclipse.jetty.http.MimeTypes.Type#<init>(java.lang.String,int,java.lang.String)
	CALLEE: static org.eclipse.jetty.util.BufferUtil#toBuffer(java.lang.String)
	CALLEE: org.eclipse.jetty.http.HttpGenerator.CachedHttpField#<init>(org.eclipse.jetty.http.HttpHeader,java.lang.String)
CALLER: org.eclipse.jetty.http.MimeTypes.Type#<init>(java.lang.String,int,java.lang.String,java.nio.charset.Charset)
	CALLEE: static org.eclipse.jetty.util.BufferUtil#toBuffer(java.lang.String)
	CALLEE: org.eclipse.jetty.http.HttpGenerator.CachedHttpField#<init>(org.eclipse.jetty.http.HttpHeader,java.lang.String)
CALLER: org.eclipse.jetty.http.MimeTypes.Type#<init>(java.lang.String,int,java.lang.String,org.eclipse.jetty.http.MimeTypes.Type)
	CALLEE: static org.eclipse.jetty.util.BufferUtil#toBuffer(java.lang.String)
	CALLEE: org.eclipse.jetty.http.HttpGenerator.CachedHttpField#<init>(org.eclipse.jetty.http.HttpHeader,java.lang.String)
CALLER: org.eclipse.jetty.util.AbstractTrie#get(java.lang.String)
	CALLEE: org.eclipse.jetty.util.ArrayTrie#get(java.lang.String,int,int)
CALLER: static org.eclipse.jetty.util.resource.FileResource#<clinit>()
	CALLEE: static org.eclipse.jetty.util.log.Log#getLogger(java.lang.Class)
CALLER: org.eclipse.jetty.util.resource.FileResource#<init>(java.io.File)
	CALLEE: org.eclipse.jetty.util.resource.Resource#<init>()
	CALLEE: org.eclipse.jetty.util.resource.FileResource#assertValidPath(java.lang.String)
	CALLEE: static org.eclipse.jetty.util.resource.FileResource#normalizeURI(java.io.File,java.net.URI)
	CALLEE: static org.eclipse.jetty.util.resource.FileResource#checkFileAlias(java.io.File)
CALLER: static org.eclipse.jetty.util.resource.Resource#newResource(java.net.URL,boolean)
	CALLEE: org.eclipse.jetty.util.resource.FileResource#<init>(java.net.URL)
	CALLEE: org.eclipse.jetty.util.resource.BadResource#<init>(java.net.URL,java.lang.String)
	CALLEE: org.eclipse.jetty.util.resource.JarFileResource#<init>(java.net.URL,boolean)
	CALLEE: org.eclipse.jetty.util.resource.JarResource#<init>(java.net.URL,boolean)
	CALLEE: org.eclipse.jetty.util.resource.URLResource#<init>(java.net.URL,java.net.URLConnection,boolean)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#warn(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Throwable)
	CALLEE: org.eclipse.jetty.util.MultiException#toString()
	CALLEE: org.h2.jdbc.JdbcSQLException#toString()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#toString()
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#toString()
CALLER: org.apache.commons.collections.ExtendedProperties#getBoolean(java.lang.String,java.lang.Boolean)
	CALLEE: org.apache.commons.collections.ExtendedProperties#testBoolean(java.lang.String)
CALLER: org.apache.commons.collections.ExtendedProperties.PropertiesTokenizer#nextToken()
	CALLEE: org.apache.commons.collections.ExtendedProperties.PropertiesTokenizer#hasMoreTokens()
	CALLEE: static org.apache.commons.collections.ExtendedProperties#access$000(java.lang.String)
CALLER: org.apache.commons.collections.ExtendedProperties#load(java.io.InputStream)
	CALLEE: org.apache.commons.collections.ExtendedProperties#load(java.io.InputStream,java.lang.String)
CALLER: static org.apache.velocity.runtime.log.LogManager#createLogChute(org.apache.velocity.runtime.RuntimeServices)
	CALLEE: org.apache.velocity.runtime.RuntimeInstance#getLog()
	CALLEE: org.apache.velocity.runtime.log.Log#debug(java.lang.Object)
	CALLEE: org.apache.velocity.exception.VelocityException#<init>(java.lang.String,java.lang.Throwable)
	CALLEE: static org.apache.velocity.util.ClassUtils#getNewInstance(java.lang.String)
	CALLEE: org.apache.velocity.runtime.log.Log#error(java.lang.Object)
	CALLEE: org.apache.velocity.exception.VelocityException#<init>(java.lang.String)
	CALLEE: org.apache.velocity.runtime.log.Log#error(java.lang.Object,java.lang.Throwable)
	CALLEE: org.apache.velocity.runtime.RuntimeInstance#getProperty(java.lang.String)
	CALLEE: org.apache.velocity.runtime.log.LogChuteSystem#<init>(org.apache.velocity.runtime.log.LogSystem)
	CALLEE: org.apache.velocity.runtime.log.LogChuteSystem#init(org.apache.velocity.runtime.RuntimeServices)
	CALLEE: static org.apache.velocity.runtime.log.LogManager#class$(java.lang.String)
	CALLEE: static org.apache.velocity.runtime.log.LogManager#isProbablyProvidedLogChute(java.lang.String)
	CALLEE: org.apache.velocity.runtime.log.Log#debug(java.lang.Object,java.lang.Throwable)
	CALLEE: org.apache.velocity.runtime.log.SystemLogChute#<init>()
	CALLEE: org.apache.velocity.runtime.log.SystemLogChute#init(org.apache.velocity.runtime.RuntimeServices)
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
CALLER: static org.apache.velocity.util.ExceptionUtils#setCause(java.lang.Throwable,java.lang.Throwable)
	CALLEE: static org.apache.velocity.util.ExceptionUtils#class$(java.lang.String)
CALLER: org.apache.commons.collections.ExtendedProperties#getString(java.lang.String)
	CALLEE: org.apache.commons.collections.ExtendedProperties#getString(java.lang.String,java.lang.String)
CALLER: org.apache.velocity.runtime.log.Log#log(int,java.lang.Object,java.lang.Throwable)
	CALLEE: org.apache.velocity.runtime.log.Log#getLogChute()
	CALLEE: org.apache.velocity.runtime.log.HoldingLogChute#log(int,java.lang.String,java.lang.Throwable)
	CALLEE: org.apache.velocity.runtime.log.LogChuteSystem#log(int,java.lang.String,java.lang.Throwable)
	CALLEE: org.apache.velocity.runtime.log.SystemLogChute#log(int,java.lang.String,java.lang.Throwable)
CALLER: org.apache.velocity.runtime.RuntimeInstance#addDirective(org.apache.velocity.runtime.directive.Directive)
	CALLEE: org.apache.velocity.runtime.RuntimeInstance#updateSharedDirectivesMap()
CALLER: org.apache.velocity.util.introspection.AbstractChainableUberspector#<init>()
	CALLEE: org.apache.velocity.util.introspection.UberspectImpl#<init>()
CALLER: org.apache.velocity.runtime.RuntimeInstance#requireInitialization()
	CALLEE: org.apache.velocity.runtime.RuntimeInstance#getLog()
	CALLEE: org.apache.velocity.runtime.RuntimeInstance#init()
	CALLEE: org.apache.velocity.runtime.log.Log#error(java.lang.Object,java.lang.Throwable)
CALLER: org.apache.velocity.runtime.RuntimeInstance#getDefaultEncoding()
	CALLEE: org.apache.velocity.runtime.RuntimeInstance#getString(java.lang.String,java.lang.String)
CALLER: org.apache.velocity.runtime.RuntimeInstance#getTemplate(java.lang.String,java.lang.String)
	CALLEE: org.apache.velocity.runtime.RuntimeInstance#requireInitialization()
CALLER: org.apache.velocity.runtime.log.LogDisplayWrapper#log(boolean,int,java.lang.Object,java.lang.Throwable)
	CALLEE: org.apache.velocity.runtime.log.HoldingLogChute#log(int,java.lang.String,java.lang.Throwable)
	CALLEE: org.apache.velocity.runtime.log.LogDisplayWrapper#getLogChute()
	CALLEE: org.apache.velocity.runtime.log.LogChuteSystem#log(int,java.lang.String,java.lang.Throwable)
	CALLEE: org.apache.velocity.runtime.log.SystemLogChute#log(int,java.lang.String,java.lang.Throwable)
CALLER: static org.slf4j.LoggerFactory#bind()
	CALLEE: static org.slf4j.helpers.Util#report(java.lang.String)
	CALLEE: static org.slf4j.impl.StaticLoggerBinder#getSingleton()
	CALLEE: static org.slf4j.LoggerFactory#isAndroid()
	CALLEE: static org.slf4j.LoggerFactory#findPossibleStaticLoggerBinderPathSet()
	CALLEE: static org.slf4j.LoggerFactory#reportMultipleBindingAmbiguity(java.util.Set)
	CALLEE: static org.slf4j.LoggerFactory#reportActualBinding(java.util.Set)
	CALLEE: static org.slf4j.LoggerFactory#fixSubstituteLoggers()
	CALLEE: static org.slf4j.LoggerFactory#replayEvents()
	CALLEE: org.slf4j.helpers.SubstituteLoggerFactory#clear()
	CALLEE: static org.slf4j.LoggerFactory#messageContainsOrgSlf4jImplStaticLoggerBinder(java.lang.String)
	CALLEE: static org.slf4j.LoggerFactory#failedBinding(java.lang.Throwable)
CALLER: static org.slf4j.LoggerFactory#versionSanityCheck()
	CALLEE: static org.slf4j.helpers.Util#report(java.lang.String)
	CALLEE: static org.slf4j.helpers.Util#report(java.lang.String,java.lang.Throwable)
CALLER: org.slf4j.impl.StaticLoggerBinder#<init>()
	CALLEE: org.slf4j.impl.SimpleLoggerFactory#<init>()
CALLER: org.slf4j.helpers.Util.ClassContextSecurityManager#<init>(org.slf4j.helpers.Util.1)
	CALLEE: org.slf4j.helpers.Util.ClassContextSecurityManager#<init>()
CALLER: org.apache.log4j.WriterAppender#closeWriter()
	CALLEE: static org.apache.log4j.helpers.LogLog#error(java.lang.String,java.lang.Throwable)
CALLER: org.eclipse.jetty.util.resource.Resource#finalize()
	CALLEE: org.eclipse.jetty.util.resource.FileResource#close()
	CALLEE: org.eclipse.jetty.util.resource.EmptyResource#close()
	CALLEE: org.eclipse.jetty.util.resource.URLResource#close()
	CALLEE: org.eclipse.jetty.util.resource.JarFileResource#close()
	CALLEE: org.eclipse.jetty.util.resource.JarResource#close()
CALLER: static org.apache.log4j.helpers.OptionConverter#substVars(java.lang.String,java.util.Properties)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#getSystemProperty(java.lang.String,java.lang.String)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#substVars(java.lang.String,java.util.Properties)
CALLER: org.apache.log4j.PropertyConfigurator#parseCategory(java.util.Properties,org.apache.log4j.Logger,java.lang.String,java.lang.String,java.lang.String)
	CALLEE: org.apache.log4j.spi.RootLogger#setLevel(org.apache.log4j.Level)
	CALLEE: org.apache.log4j.Category#setLevel(org.apache.log4j.Level)
	CALLEE: static org.apache.log4j.helpers.LogLog#debug(java.lang.String)
	CALLEE: static org.apache.log4j.helpers.LogLog#warn(java.lang.String)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#toLevel(java.lang.String,org.apache.log4j.Level)
	CALLEE: org.apache.log4j.PropertyConfigurator#parseAppender(java.util.Properties,java.lang.String)
	CALLEE: org.apache.log4j.Category#removeAllAppenders()
	CALLEE: org.apache.log4j.Category#addAppender(org.apache.log4j.Appender)
	CALLEE: org.apache.log4j.spi.NOPLogger#addAppender(org.apache.log4j.Appender)
	CALLEE: org.apache.log4j.spi.NOPLogger#setLevel(org.apache.log4j.Level)
	CALLEE: org.apache.log4j.spi.NOPLogger#removeAllAppenders()
	CALLEE: org.apache.log4j.Category#getLevel()
CALLER: static org.apache.log4j.config.PropertySetter#setProperties(java.lang.Object,java.util.Properties,java.lang.String)
	CALLEE: org.apache.log4j.config.PropertySetter#<init>(java.lang.Object)
	CALLEE: org.apache.log4j.config.PropertySetter#setProperties(java.util.Properties,java.lang.String)
CALLER: org.apache.log4j.PropertyConfigurator#parseAdditivityForLogger(java.util.Properties,org.apache.log4j.Logger,java.lang.String)
	CALLEE: static org.apache.log4j.helpers.LogLog#debug(java.lang.String)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#toBoolean(java.lang.String,boolean)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#findAndSubst(java.lang.String,java.util.Properties)
	CALLEE: org.apache.log4j.Category#setAdditivity(boolean)
CALLER: static org.apache.log4j.or.RendererMap#addRenderer(org.apache.log4j.spi.RendererSupport,java.lang.String,java.lang.String)
	CALLEE: static org.apache.log4j.helpers.LogLog#debug(java.lang.String)
	CALLEE: static org.apache.log4j.helpers.LogLog#error(java.lang.String)
	CALLEE: static org.apache.log4j.helpers.LogLog#error(java.lang.String,java.lang.Throwable)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#instantiateByClassName(java.lang.String,java.lang.Class,java.lang.Object)
	CALLEE: static org.apache.log4j.helpers.Loader#loadClass(java.lang.String)
	CALLEE: static org.apache.log4j.or.RendererMap#class$(java.lang.String)
	CALLEE: org.apache.log4j.Hierarchy#setRenderer(java.lang.Class,org.apache.log4j.or.ObjectRenderer)
CALLER: static org.apache.log4j.helpers.OptionConverter#instantiateByKey(java.util.Properties,java.lang.String,java.lang.Class,java.lang.Object)
	CALLEE: static org.apache.log4j.helpers.LogLog#error(java.lang.String)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#instantiateByClassName(java.lang.String,java.lang.Class,java.lang.Object)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#findAndSubst(java.lang.String,java.util.Properties)
CALLER: org.apache.log4j.config.PropertySetter#setProperties(java.util.Properties,java.lang.String)
	CALLEE: static org.apache.log4j.helpers.LogLog#warn(java.lang.String,java.lang.Throwable)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#findAndSubst(java.lang.String,java.util.Properties)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#instantiateByKey(java.util.Properties,java.lang.String,java.lang.Class,java.lang.Object)
	CALLEE: org.apache.log4j.config.PropertySetter#<init>(java.lang.Object)
	CALLEE: org.apache.log4j.config.PropertySetter#setProperties(java.util.Properties,java.lang.String)
	CALLEE: org.apache.log4j.config.PropertySetter#getPropertyDescriptor(java.lang.String)
	CALLEE: static org.apache.log4j.config.PropertySetter#class$(java.lang.String)
	CALLEE: org.apache.log4j.config.PropertySetter#setProperty(java.lang.String,java.lang.String)
	CALLEE: org.apache.log4j.config.PropertySetter#activate()
CALLER: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer#makeOrphan(int)
	CALLEE: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer#<init>(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer,int,java.lang.String[],com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.Bucket[],int,int,int)
CALLER: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer#initTables(int)
	CALLEE: static com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer#_thresholdSize(int)
CALLER: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer#<init>(int,boolean,int,boolean)
	CALLEE: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer#initTableInfo(int)
CALLER: com.fasterxml.jackson.databind.cfg.ContextAttributes.Impl#<init>(java.util.Map)
	CALLEE: com.fasterxml.jackson.databind.cfg.ContextAttributes#<init>()
CALLER: com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase#<init>(java.lang.Class,java.lang.Boolean,java.text.DateFormat)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdScalarSerializer#<init>(java.lang.Class)
CALLER: static com.zaxxer.hikari.util.ClockSource.Factory#create()
	CALLEE: com.zaxxer.hikari.util.ClockSource.MillisecondClockSource#<init>()
	CALLEE: com.zaxxer.hikari.util.ClockSource.NanosecondClockSource#<init>()
CALLER: static com.zaxxer.hikari.util.DriverDataSource#<clinit>()
	CALLEE: static org.slf4j.LoggerFactory#getLogger(java.lang.Class)
CALLER: com.zaxxer.hikari.util.DriverDataSource#<init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodRouting#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#toString()
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.ConsumesProducesAcceptor#toString()
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#toString()
	CALLEE: org.eclipse.jetty.webapp.WebAppContext#toString()
	CALLEE: org.eclipse.jetty.server.handler.HandlerCollection#toString()
	CALLEE: org.eclipse.jetty.server.Server#toString()
	CALLEE: org.eclipse.jetty.server.AbstractNetworkConnector#toString()
	CALLEE: org.eclipse.jetty.util.thread.QueuedThreadPool#toString()
	CALLEE: org.eclipse.jetty.server.AbstractConnectionFactory#toString()
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle.Bean#toString()
	CALLEE: org.apache.log4j.NameValue#toString()
	CALLEE: liquibase.changelog.ChangeLogParameters.ChangeLogParameter#toString()
	CALLEE: org.eclipse.jetty.server.AbstractConnector.Acceptor#toString()
	CALLEE: org.eclipse.jetty.server.HttpConfiguration#toString()
	CALLEE: org.eclipse.jetty.util.MultiException#toString()
	CALLEE: org.eclipse.jetty.http.PathMap.MappedEntry#toString()
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector#toString()
	CALLEE: liquibase.servicelocator.AssignableToPackageScanFilter#toString()
	CALLEE: org.eclipse.jetty.http.HttpField#toString()
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#toString()
	CALLEE: org.slf4j.helpers.NOPLogger#warn(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.helpers.NOPLogger#warn(java.lang.String,java.lang.Object)
	CALLEE: org.slf4j.helpers.SubstituteLogger#warn(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.helpers.SubstituteLogger#warn(java.lang.String,java.lang.Object)
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#toString()
	CALLEE: org.eclipse.jetty.http.PathMap.MappedEntry#getValue()
	CALLEE: org.eclipse.jetty.http.PathMap.MappedEntry#getKey()
	CALLEE: org.eclipse.jetty.servlet.ServletMapping#toString()
	CALLEE: org.glassfish.jersey.internal.OsgiRegistry.BundleSpiProvidersLoader#toString()
	CALLEE: org.slf4j.impl.SimpleLogger#warn(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.impl.SimpleLogger#warn(java.lang.String,java.lang.Object)
	CALLEE: org.h2.jdbc.JdbcSQLException#toString()
	CALLEE: liquibase.changelog.filter.ChangeSetFilterResult#toString()
	CALLEE: com.zaxxer.hikari.pool.PoolEntry#toString()
	CALLEE: org.eclipse.jetty.io.SelectChannelEndPoint#toString()
	CALLEE: org.eclipse.jetty.util.FutureCallback#toString()
	CALLEE: org.eclipse.jetty.util.ConstantThrowable#toString()
	CALLEE: javax.ws.rs.core.MediaType#toString()
	CALLEE: org.glassfish.jersey.model.internal.RankedProvider#toString()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#toString()
	CALLEE: org.glassfish.hk2.api.MultiException#toString()
	CALLEE: org.glassfish.jersey.message.internal.QualitySourceMediaType#toString()
	CALLEE: jersey.repackaged.com.google.common.base.Predicates.AndPredicate#toString()
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.MapType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#toString()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: org.glassfish.hk2.utilities.NamedImpl#toString()
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#toString()
	CALLEE: com.fasterxml.jackson.core.JsonLocation#toString()
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#toString()
	CALLEE: com.fasterxml.jackson.databind.jsontype.NamedType#toString()
	CALLEE: liquibase.changelog.RanChangeSet#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.UnresolvedId#toString()
	CALLEE: org.glassfish.jersey.server.model.ResourceModelIssue#toString()
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#toString()
	CALLEE: org.glassfish.jersey.server.model.Parameter#toString()
	CALLEE: org.glassfish.hk2.utilities.reflection.ParameterizedTypeImpl#toString()
	CALLEE: com.fasterxml.jackson.databind.type.ClassKey#toString()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException.Reference#toString()
	CALLEE: org.glassfish.jersey.server.model.Resource.Data#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ValueNode#toString()
	CALLEE: org.glassfish.jersey.server.model.Resource#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#toString()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Data#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.MemberKey#toString()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ObjectNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ArrayNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.POJONode#toString()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#toString()
	CALLEE: com.fasterxml.jackson.databind.node.TextNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.BinaryNode#toString()
	CALLEE: com.fasterxml.jackson.databind.PropertyName#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#toString()
	CALLEE: com.fasterxml.jackson.core.io.SerializedString#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey#toString()
	CALLEE: org.glassfish.jersey.server.model.Invocable#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#toString()
	CALLEE: org.glassfish.jersey.server.model.MethodHandler.ClassBasedMethodHandler#toString()
	CALLEE: org.glassfish.jersey.server.model.MethodHandler.InstanceBasedMethodHandler#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#toString()
CALLER: com.zaxxer.hikari.pool.PoolBase#setLoginTimeout(javax.sql.DataSource)
	CALLEE: com.zaxxer.hikari.util.DriverDataSource#setLoginTimeout(int)
	CALLEE: org.slf4j.helpers.NOPLogger#info(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.helpers.SubstituteLogger#info(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.impl.SimpleLogger#info(java.lang.String,java.lang.Object,java.lang.Object)
CALLER: com.zaxxer.hikari.pool.PoolBase#createNetworkTimeoutExecutor(javax.sql.DataSource,java.lang.String,java.lang.String)
	CALLEE: com.zaxxer.hikari.HikariConfig#getThreadFactory()
	CALLEE: com.zaxxer.hikari.util.UtilityElf.DefaultThreadFactory#<init>(java.lang.String,boolean)
	CALLEE: com.zaxxer.hikari.pool.PoolBase.SynchronousExecutor#<init>(com.zaxxer.hikari.pool.PoolBase.1)
CALLER: com.zaxxer.hikari.util.QueuedSequenceSynchronizer.Synchronizer#<init>(com.zaxxer.hikari.util.QueuedSequenceSynchronizer,com.zaxxer.hikari.util.QueuedSequenceSynchronizer.1)
	CALLEE: com.zaxxer.hikari.util.QueuedSequenceSynchronizer.Synchronizer#<init>(com.zaxxer.hikari.util.QueuedSequenceSynchronizer)
CALLER: static com.zaxxer.hikari.util.Sequence.Factory#create()
	CALLEE: static com.zaxxer.hikari.util.UtilityElf#isJdk8Plus()
	CALLEE: com.zaxxer.hikari.util.Sequence.Java8Sequence#<init>()
	CALLEE: com.zaxxer.hikari.util.Sequence.DropwizardSequence#<init>(java.lang.Class)
	CALLEE: com.zaxxer.hikari.util.Sequence.Java7Sequence#<init>()
CALLER: com.zaxxer.hikari.util.SuspendResumeLock#<init>(boolean,com.zaxxer.hikari.util.SuspendResumeLock.1)
	CALLEE: com.zaxxer.hikari.util.SuspendResumeLock#<init>(boolean)
CALLER: com.zaxxer.hikari.util.DriverDataSource#getConnection(java.lang.String,java.lang.String)
	CALLEE: com.zaxxer.hikari.util.DriverDataSource#getConnection()
CALLER: com.zaxxer.hikari.pool.PoolBase#setupConnection(java.sql.Connection)
	CALLEE: com.zaxxer.hikari.pool.PoolBase#getAndSetNetworkTimeout(java.sql.Connection,long)
	CALLEE: com.zaxxer.hikari.pool.PoolBase#setNetworkTimeout(java.sql.Connection,long)
	CALLEE: com.zaxxer.hikari.pool.PoolBase#checkDriverSupport(java.sql.Connection)
	CALLEE: com.zaxxer.hikari.HikariConfig#getConnectionInitSql()
	CALLEE: com.zaxxer.hikari.pool.PoolBase#executeSql(java.sql.Connection,java.lang.String,boolean)
CALLER: com.zaxxer.hikari.pool.PoolBase#quietlyCloseConnection(java.sql.Connection,java.lang.String)
	CALLEE: com.zaxxer.hikari.pool.PoolBase#setNetworkTimeout(java.sql.Connection,long)
	CALLEE: org.slf4j.helpers.NOPLogger#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.slf4j.helpers.SubstituteLogger#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.slf4j.impl.SimpleLogger#debug(java.lang.String,java.lang.Object[])
CALLER: com.zaxxer.hikari.pool.HikariPool.4#<init>(com.zaxxer.hikari.pool.HikariPool,long)
	CALLEE: com.zaxxer.hikari.metrics.PoolStats#<init>(long)
CALLER: com.zaxxer.hikari.pool.ProxyLeakTask#<init>(com.zaxxer.hikari.pool.ProxyLeakTask.1)
	CALLEE: com.zaxxer.hikari.pool.ProxyLeakTask#<init>()
CALLER: liquibase.servicelocator.DefaultPackageScanClassResolver#<init>()
	CALLEE: liquibase.logging.core.DefaultLogger#<init>()
CALLER: liquibase.resource.ClassLoaderResourceAccessor#<init>(java.lang.ClassLoader)
	CALLEE: liquibase.resource.AbstractResourceAccessor#<init>()
	CALLEE: liquibase.resource.AbstractResourceAccessor#init()
CALLER: liquibase.servicelocator.ServiceLocator#setResourceAccessor(liquibase.resource.ResourceAccessor)
	CALLEE: static liquibase.util.StringUtils#trimToNull(java.lang.String)
	CALLEE: liquibase.exception.UnexpectedLiquibaseException#<init>(java.lang.Throwable)
	CALLEE: liquibase.resource.ClassLoaderResourceAccessor#toClassLoader()
	CALLEE: liquibase.servicelocator.DefaultPackageScanClassResolver#setClassLoaders(java.util.Set)
	CALLEE: liquibase.servicelocator.ServiceLocator#addPackageToScan(java.lang.String)
	CALLEE: liquibase.resource.ClassLoaderResourceAccessor#getResourcesAsStream(java.lang.String)
CALLER: liquibase.servicelocator.ServiceLocator#defaultClassLoader()
	CALLEE: liquibase.servicelocator.DefaultPackageScanClassResolver#<init>()
	CALLEE: static liquibase.servicelocator.WebSpherePackageScanClassResolver#isWebSphereClassLoader(java.lang.ClassLoader)
	CALLEE: liquibase.logging.core.DefaultLogger#debug(java.lang.String)
	CALLEE: liquibase.servicelocator.WebSpherePackageScanClassResolver#<init>(java.lang.String)
CALLER: liquibase.resource.ClassLoaderResourceAccessor#<init>()
	CALLEE: liquibase.resource.AbstractResourceAccessor#<init>()
	CALLEE: liquibase.resource.AbstractResourceAccessor#init()
CALLER: liquibase.configuration.LiquibaseConfiguration#init(liquibase.configuration.ConfigurationValueProvider[])
	CALLEE: liquibase.configuration.LiquibaseConfiguration#reset()
CALLER: static liquibase.parser.ChangeLogParserFactory#getInstance()
	CALLEE: liquibase.parser.ChangeLogParserFactory#<init>()
CALLER: liquibase.changelog.filter.ShouldRunChangeSetFilter#<init>(liquibase.database.Database,boolean)
	CALLEE: liquibase.database.AbstractJdbcDatabase#getRanChangeSetList()
	CALLEE: liquibase.changelog.RanChangeSet#toString()
	CALLEE: liquibase.changelog.RanChangeSet#getOrderExecuted()
	CALLEE: liquibase.changelog.RanChangeSet#getDateExecuted()
CALLER: liquibase.changelog.visitor.UpdateVisitor#<init>(liquibase.database.Database,liquibase.changelog.visitor.ChangeExecListener)
	CALLEE: liquibase.changelog.visitor.UpdateVisitor#<init>(liquibase.database.Database)
CALLER: com.zaxxer.hikari.pool.HikariPool#getConnection(long)
	CALLEE: com.zaxxer.hikari.pool.PoolEntry#createProxyConnection(com.zaxxer.hikari.pool.ProxyLeakTask,long)
	CALLEE: com.zaxxer.hikari.pool.PoolEntry#isMarkedEvicted()
	CALLEE: com.zaxxer.hikari.util.SuspendResumeLock#acquire()
	CALLEE: com.zaxxer.hikari.util.ConcurrentBag#borrow(long,java.util.concurrent.TimeUnit)
	CALLEE: com.zaxxer.hikari.pool.PoolBase#isConnectionAlive(java.sql.Connection)
	CALLEE: com.zaxxer.hikari.pool.HikariPool#closeConnection(com.zaxxer.hikari.pool.PoolEntry,java.lang.String)
	CALLEE: com.zaxxer.hikari.pool.PoolBase.MetricsTrackerDelegate#recordBorrowStats(com.zaxxer.hikari.pool.PoolEntry,long)
	CALLEE: com.zaxxer.hikari.pool.PoolBase.NopMetricsTrackerDelegate#recordBorrowStats(com.zaxxer.hikari.pool.PoolEntry,long)
	CALLEE: com.zaxxer.hikari.pool.ProxyLeakTask#schedule(com.zaxxer.hikari.pool.PoolEntry)
	CALLEE: com.zaxxer.hikari.util.SuspendResumeLock#release()
	CALLEE: com.zaxxer.hikari.pool.HikariPool#createTimeoutException(long)
	CALLEE: com.zaxxer.hikari.util.SuspendResumeLock.1#release()
	CALLEE: com.zaxxer.hikari.util.SuspendResumeLock.1#acquire()
	CALLEE: com.zaxxer.hikari.util.ClockSource.MillisecondClockSource#currentTime()
	CALLEE: com.zaxxer.hikari.util.ClockSource.NanosecondClockSource#currentTime()
	CALLEE: com.zaxxer.hikari.util.ClockSource.MillisecondClockSource#elapsedMillis(long)
	CALLEE: com.zaxxer.hikari.util.ClockSource.NanosecondClockSource#elapsedMillis(long)
	CALLEE: com.zaxxer.hikari.util.ClockSource.MillisecondClockSource#elapsedMillis(long,long)
	CALLEE: com.zaxxer.hikari.util.ClockSource.NanosecondClockSource#elapsedMillis(long,long)
CALLER: static org.eclipse.jetty.util.log.StdErrLog#<clinit>()
	CALLEE: org.eclipse.jetty.util.DateCache#<init>(java.lang.String)
	CALLEE: org.h2.jdbc.JdbcSQLException#printStackTrace(java.io.PrintStream)
CALLER: org.eclipse.jetty.util.log.StdErrLog#<init>()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#<init>(java.lang.String)
CALLER: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#format(java.lang.StringBuilder,java.lang.String,java.lang.String,java.lang.Object[])
CALLER: org.eclipse.jetty.util.Uptime#<init>()
	CALLEE: org.eclipse.jetty.util.Uptime.DefaultImpl#<init>()
CALLER: org.eclipse.jetty.util.thread.QueuedThreadPool#<init>(int,int)
	CALLEE: org.eclipse.jetty.util.thread.QueuedThreadPool#<init>(int,int,int)
CALLER: org.eclipse.jetty.util.component.ContainerLifeCycle#contains(java.lang.Object)
	CALLEE: static org.eclipse.jetty.util.component.ContainerLifeCycle.Bean#access$000(org.eclipse.jetty.util.component.ContainerLifeCycle.Bean)
CALLER: org.eclipse.jetty.util.component.ContainerLifeCycle.Bean#<init>(java.lang.Object,org.eclipse.jetty.util.component.ContainerLifeCycle.1)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle.Bean#<init>(java.lang.Object)
CALLER: org.eclipse.jetty.util.component.ContainerLifeCycle#addEventListener(org.eclipse.jetty.util.component.Container.Listener)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#addBean(java.lang.Object)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#addBean(java.lang.Object,boolean)
	CALLEE: static org.eclipse.jetty.util.component.ContainerLifeCycle.Bean#access$000(org.eclipse.jetty.util.component.ContainerLifeCycle.Bean)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle.Bean#isManaged()
CALLER: static org.eclipse.jetty.util.component.ContainerLifeCycle.1#<clinit>()
	CALLEE: static org.eclipse.jetty.util.component.ContainerLifeCycle.Managed#values()
CALLER: org.eclipse.jetty.util.component.ContainerLifeCycle#unmanage(org.eclipse.jetty.util.component.ContainerLifeCycle.Bean)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#removeBean(java.lang.Object)
	CALLEE: static org.eclipse.jetty.util.component.ContainerLifeCycle.Bean#access$102(org.eclipse.jetty.util.component.ContainerLifeCycle.Bean,org.eclipse.jetty.util.component.ContainerLifeCycle.Managed)
	CALLEE: static org.eclipse.jetty.util.component.ContainerLifeCycle.Bean#access$000(org.eclipse.jetty.util.component.ContainerLifeCycle.Bean)
	CALLEE: static org.eclipse.jetty.util.component.ContainerLifeCycle.Bean#access$100(org.eclipse.jetty.util.component.ContainerLifeCycle.Bean)
CALLER: org.eclipse.jetty.util.component.ContainerLifeCycle#manage(org.eclipse.jetty.util.component.ContainerLifeCycle.Bean)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#addBean(java.lang.Object)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#addBean(java.lang.Object,boolean)
	CALLEE: static org.eclipse.jetty.util.component.ContainerLifeCycle.Bean#access$102(org.eclipse.jetty.util.component.ContainerLifeCycle.Bean,org.eclipse.jetty.util.component.ContainerLifeCycle.Managed)
	CALLEE: static org.eclipse.jetty.util.component.ContainerLifeCycle.Bean#access$000(org.eclipse.jetty.util.component.ContainerLifeCycle.Bean)
	CALLEE: static org.eclipse.jetty.util.component.ContainerLifeCycle.Bean#access$100(org.eclipse.jetty.util.component.ContainerLifeCycle.Bean)
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#getStopTimeout()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#setStopTimeout(long)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#setStopTimeout(long)
	CALLEE: org.eclipse.jetty.server.Server#setStopTimeout(long)
CALLER: org.eclipse.jetty.server.Server#start(org.eclipse.jetty.util.component.LifeCycle)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#start(org.eclipse.jetty.util.component.LifeCycle)
CALLER: static org.eclipse.jetty.http.HttpScheme#<clinit>()
	CALLEE: org.eclipse.jetty.util.ArrayTrie#put(java.lang.String,java.lang.Object)
	CALLEE: org.eclipse.jetty.http.HttpScheme#<init>(java.lang.String,int,java.lang.String)
	CALLEE: org.eclipse.jetty.util.ArrayTrie#<init>()
	CALLEE: static org.eclipse.jetty.http.HttpScheme#values()
CALLER: static org.eclipse.jetty.http.HttpVersion#<clinit>()
	CALLEE: org.eclipse.jetty.util.ArrayTrie#put(java.lang.String,java.lang.Object)
	CALLEE: org.eclipse.jetty.util.ArrayTrie#<init>()
	CALLEE: org.eclipse.jetty.http.HttpVersion#<init>(java.lang.String,int,java.lang.String,int)
	CALLEE: static org.eclipse.jetty.http.HttpVersion#values()
CALLER: org.eclipse.jetty.server.AbstractConnectionFactory#<init>(java.lang.String)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#<init>()
CALLER: org.eclipse.jetty.server.AbstractConnector#<init>(org.eclipse.jetty.server.Server,java.util.concurrent.Executor,org.eclipse.jetty.util.thread.Scheduler,org.eclipse.jetty.io.ByteBufferPool,int,org.eclipse.jetty.server.ConnectionFactory[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#warn(java.lang.String,java.lang.Object[])
	CALLEE: static org.eclipse.jetty.util.log.Log#getLogger(java.lang.Class)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#<init>()
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#addBean(java.lang.Object)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#addBean(java.lang.Object,boolean)
	CALLEE: org.eclipse.jetty.server.Server#getThreadPool()
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#getBean(java.lang.Class)
	CALLEE: org.eclipse.jetty.util.thread.ScheduledExecutorScheduler#<init>()
	CALLEE: org.eclipse.jetty.io.ArrayByteBufferPool#<init>()
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#unmanage(java.lang.Object)
	CALLEE: org.eclipse.jetty.server.AbstractConnector#addConnectionFactory(org.eclipse.jetty.server.ConnectionFactory)
CALLER: org.eclipse.jetty.server.ServerConnector.ServerConnectorManager#<init>(org.eclipse.jetty.server.ServerConnector,java.util.concurrent.Executor,org.eclipse.jetty.util.thread.Scheduler,int)
	CALLEE: org.eclipse.jetty.io.SelectorManager#<init>(java.util.concurrent.Executor,org.eclipse.jetty.util.thread.Scheduler,int)
CALLER: org.eclipse.jetty.util.component.ContainerLifeCycle#getBean(java.lang.Object)
	CALLEE: static org.eclipse.jetty.util.component.ContainerLifeCycle.Bean#access$000(org.eclipse.jetty.util.component.ContainerLifeCycle.Bean)
CALLER: org.eclipse.jetty.util.component.ContainerLifeCycle#remove(org.eclipse.jetty.util.component.ContainerLifeCycle.Bean)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#unmanage(org.eclipse.jetty.util.component.ContainerLifeCycle.Bean)
	CALLEE: static org.eclipse.jetty.util.component.ContainerLifeCycle.Bean#access$000(org.eclipse.jetty.util.component.ContainerLifeCycle.Bean)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#removeEventListener(org.eclipse.jetty.util.component.Container.Listener)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#stop(org.eclipse.jetty.util.component.LifeCycle)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle.Bean#isManaged()
CALLER: org.eclipse.jetty.server.handler.ScopedHandler#<init>()
	CALLEE: org.eclipse.jetty.server.handler.HandlerWrapper#<init>()
CALLER: org.eclipse.jetty.server.handler.ContextHandler.Context#<init>(org.eclipse.jetty.server.handler.ContextHandler)
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler.NoContext#<init>()
CALLER: org.eclipse.jetty.server.handler.HandlerWrapper#setHandler(org.eclipse.jetty.server.Handler)
	CALLEE: org.eclipse.jetty.server.handler.AbstractHandler#getServer()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#isStarted()
	CALLEE: org.eclipse.jetty.server.handler.HandlerWrapper#setServer(org.eclipse.jetty.server.Server)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#updateBean(java.lang.Object,java.lang.Object)
	CALLEE: org.eclipse.jetty.server.handler.HandlerCollection#setServer(org.eclipse.jetty.server.Server)
CALLER: org.eclipse.jetty.servlet.ServletContextHandler#setHandler(org.eclipse.jetty.server.Handler)
	CALLEE: org.eclipse.jetty.servlet.ServletContextHandler#relinkHandlers()
	CALLEE: org.eclipse.jetty.server.handler.HandlerWrapper#setHandler(org.eclipse.jetty.server.Handler)
	CALLEE: org.eclipse.jetty.servlet.ServletContextHandler#setServletHandler(org.eclipse.jetty.servlet.ServletHandler)
	CALLEE: org.eclipse.jetty.servlet.ServletContextHandler#setSessionHandler(org.eclipse.jetty.server.session.SessionHandler)
	CALLEE: org.eclipse.jetty.servlet.ServletContextHandler#setSecurityHandler(org.eclipse.jetty.security.SecurityHandler)
CALLER: org.eclipse.jetty.servlet.ServletContextHandler#getSecurityHandler()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#isStarted()
	CALLEE: org.eclipse.jetty.servlet.ServletContextHandler#newSecurityHandler()
CALLER: org.eclipse.jetty.server.session.SessionHandler#setSessionManager(org.eclipse.jetty.server.SessionManager)
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#isStarted()
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#updateBean(java.lang.Object,java.lang.Object)
	CALLEE: org.eclipse.jetty.server.session.AbstractSessionManager#setSessionHandler(org.eclipse.jetty.server.session.SessionHandler)
CALLER: static jersey.repackaged.com.google.common.base.Predicates.ObjectPredicate#<clinit>()
	CALLEE: jersey.repackaged.com.google.common.base.Predicates.ObjectPredicate.1#<init>(java.lang.String,int)
	CALLEE: jersey.repackaged.com.google.common.base.Predicates.ObjectPredicate.2#<init>(java.lang.String,int)
	CALLEE: jersey.repackaged.com.google.common.base.Predicates.ObjectPredicate.3#<init>(java.lang.String,int)
	CALLEE: jersey.repackaged.com.google.common.base.Predicates.ObjectPredicate.4#<init>(java.lang.String,int)
CALLER: static jersey.repackaged.com.google.common.base.Joiner#on(char)
	CALLEE: jersey.repackaged.com.google.common.base.Joiner#<init>(java.lang.String)
CALLER: org.glassfish.jersey.model.internal.ComponentBag#<init>(jersey.repackaged.com.google.common.base.Predicate)
	CALLEE: static jersey.repackaged.com.google.common.collect.Maps#newIdentityHashMap()
	CALLEE: static jersey.repackaged.com.google.common.collect.Sets#newLinkedHashSet()
CALLER: static jersey.repackaged.com.google.common.collect.Sets#newSetFromMap(java.util.Map)
	CALLEE: static jersey.repackaged.com.google.common.collect.Platform#newSetFromMap(java.util.Map)
CALLER: static jersey.repackaged.com.google.common.collect.Collections2#<clinit>()
	CALLEE: static jersey.repackaged.com.google.common.base.Joiner#on(java.lang.String)
	CALLEE: jersey.repackaged.com.google.common.base.Joiner#useForNull(java.lang.String)
CALLER: org.glassfish.jersey.model.internal.CommonConfig#checkComponentClassNotNull(java.lang.Class)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#COMPONENT_CLASS_CANNOT_BE_NULL()
CALLER: org.glassfish.jersey.server.ResourceConfig.State#getModelEnhancer(java.lang.Class)
	CALLEE: org.glassfish.jersey.server.ResourceConfig.State.1#<init>(org.glassfish.jersey.server.ResourceConfig.State,java.lang.Class)
CALLER: org.glassfish.jersey.model.internal.CommonConfig#processFeatureRegistration(java.lang.Object,java.lang.Class)
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig.FeatureRegistration#<init>(javax.ws.rs.core.Feature,org.glassfish.jersey.model.internal.CommonConfig.1)
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig.FeatureRegistration#<init>(java.lang.Class,org.glassfish.jersey.model.internal.CommonConfig.1)
	CALLEE: org.glassfish.jersey.model.internal.ComponentBag#getModel(java.lang.Class)
	CALLEE: org.glassfish.jersey.model.ContractProvider#getContracts()
CALLER: org.glassfish.jersey.server.internal.scanning.PackageNamesScanner#add(org.glassfish.jersey.server.internal.scanning.UriSchemeResourceFinderFactory)
	CALLEE: org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory#getSchemes()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory#getSchemes()
	CALLEE: org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory#getSchemes()
	CALLEE: org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory#getSchemes()
CALLER: static org.glassfish.jersey.internal.util.ReflectionHelper#getOsgiRegistryInstance()
	CALLEE: static org.glassfish.jersey.internal.OsgiRegistry#getInstance()
CALLER: org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.1#<init>(org.glassfish.jersey.server.internal.scanning.PackageNamesScanner,org.glassfish.jersey.internal.OsgiRegistry,boolean)
	CALLEE: org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.ResourcesProvider#<init>()
CALLER: static org.glassfish.jersey.server.internal.scanning.PackageNamesScanner#setResourcesProvider(org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.ResourcesProvider)
	CALLEE: static org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.ResourcesProvider#access$100(org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.ResourcesProvider)
CALLER: org.glassfish.jersey.server.internal.scanning.PackageNamesScanner#init()
	CALLEE: org.glassfish.jersey.server.internal.scanning.CompositeResourceFinder#<init>()
	CALLEE: static org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.ResourcesProvider#access$000()
	CALLEE: org.glassfish.jersey.server.internal.scanning.PackageNamesScanner#toURI(java.net.URL)
	CALLEE: org.glassfish.jersey.server.internal.scanning.PackageNamesScanner#addResourceFinder(java.net.URI)
	CALLEE: org.glassfish.jersey.server.internal.scanning.ResourceFinderException#<init>(java.lang.String,java.lang.Throwable)
	CALLEE: org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.1#getResources(java.lang.String,java.lang.ClassLoader)
	CALLEE: org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.ResourcesProvider.1#getResources(java.lang.String,java.lang.ClassLoader)
CALLER: org.eclipse.jetty.util.resource.EmptyResource#<init>()
	CALLEE: org.eclipse.jetty.util.resource.Resource#<init>()
CALLER: static org.eclipse.jetty.http.HttpHeader#<clinit>()
	CALLEE: org.eclipse.jetty.util.ArrayTrie#<init>(int)
	CALLEE: org.eclipse.jetty.util.ArrayTrie#put(java.lang.String,java.lang.Object)
	CALLEE: org.eclipse.jetty.http.HttpHeader#<init>(java.lang.String,int,java.lang.String)
	CALLEE: static org.eclipse.jetty.http.HttpHeader#values()
CALLER: org.eclipse.jetty.http.HttpGenerator.CachedHttpField#<init>(org.eclipse.jetty.http.HttpHeader,java.lang.String)
	CALLEE: org.eclipse.jetty.http.HttpField#<init>(org.eclipse.jetty.http.HttpHeader,java.lang.String)
	CALLEE: org.eclipse.jetty.http.HttpHeader#getBytesColonSpace()
CALLER: org.eclipse.jetty.util.resource.FileResource#assertValidPath(java.lang.String)
	CALLEE: static org.eclipse.jetty.util.StringUtil#indexOfControlChars(java.lang.String)
CALLER: static org.eclipse.jetty.util.resource.FileResource#checkFileAlias(java.io.File)
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#toString()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Object[])
	CALLEE: static org.eclipse.jetty.util.URIUtil#encodePath(java.lang.String)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#warn(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#ignore(java.lang.Throwable)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.Throwable)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#isDebugEnabled()
	CALLEE: org.eclipse.jetty.util.MultiException#toString()
	CALLEE: org.h2.jdbc.JdbcSQLException#toString()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#toString()
CALLER: org.eclipse.jetty.util.resource.FileResource#<init>(java.net.URL)
	CALLEE: org.eclipse.jetty.util.resource.Resource#<init>()
	CALLEE: org.eclipse.jetty.util.resource.FileResource#assertValidPath(java.lang.String)
	CALLEE: static org.eclipse.jetty.util.resource.FileResource#normalizeURI(java.io.File,java.net.URI)
	CALLEE: static org.eclipse.jetty.util.resource.FileResource#checkFileAlias(java.io.File)
	CALLEE: static org.eclipse.jetty.util.URIUtil#encodePath(java.lang.String)
	CALLEE: static org.eclipse.jetty.util.URIUtil#decodePath(java.lang.String)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#ignore(java.lang.Throwable)
CALLER: static org.eclipse.jetty.util.resource.URLResource#<clinit>()
	CALLEE: static org.eclipse.jetty.util.log.Log#getLogger(java.lang.Class)
CALLER: org.eclipse.jetty.util.resource.BadResource#<init>(java.net.URL,java.lang.String)
	CALLEE: org.eclipse.jetty.util.resource.URLResource#<init>(java.net.URL,java.net.URLConnection)
CALLER: static org.eclipse.jetty.util.resource.JarFileResource#<clinit>()
	CALLEE: static org.eclipse.jetty.util.log.Log#getLogger(java.lang.Class)
CALLER: static org.eclipse.jetty.util.resource.JarResource#<clinit>()
	CALLEE: static org.eclipse.jetty.util.log.Log#getLogger(java.lang.Class)
CALLER: org.eclipse.jetty.util.resource.JarFileResource#<init>(java.net.URL,boolean)
	CALLEE: org.eclipse.jetty.util.resource.JarResource#<init>(java.net.URL,boolean)
CALLER: org.eclipse.jetty.util.resource.JarResource#<init>(java.net.URL,boolean)
	CALLEE: org.eclipse.jetty.util.resource.URLResource#<init>(java.net.URL,java.net.URLConnection,boolean)
CALLER: org.eclipse.jetty.util.resource.URLResource#<init>(java.net.URL,java.net.URLConnection,boolean)
	CALLEE: org.eclipse.jetty.util.resource.URLResource#<init>(java.net.URL,java.net.URLConnection)
CALLER: static org.apache.commons.collections.ExtendedProperties#access$000(java.lang.String)
	CALLEE: static org.apache.commons.collections.ExtendedProperties#endsWithSlash(java.lang.String)
CALLER: org.apache.commons.collections.ExtendedProperties#load(java.io.InputStream,java.lang.String)
	CALLEE: org.apache.commons.collections.ExtendedProperties#addProperty(java.lang.String,java.lang.Object)
	CALLEE: org.apache.commons.collections.ExtendedProperties#load(java.io.InputStream)
	CALLEE: org.apache.commons.collections.ExtendedProperties.PropertiesReader#<init>(java.io.Reader)
	CALLEE: org.apache.commons.collections.ExtendedProperties.PropertiesReader#readProperty()
	CALLEE: org.apache.commons.collections.ExtendedProperties#getInclude()
CALLER: org.apache.velocity.runtime.log.Log#debug(java.lang.Object,java.lang.Throwable)
	CALLEE: org.apache.velocity.runtime.log.Log#log(int,java.lang.Object,java.lang.Throwable)
CALLER: org.apache.velocity.runtime.log.SystemLogChute#init(org.apache.velocity.runtime.RuntimeServices)
	CALLEE: org.apache.velocity.runtime.RuntimeInstance#getProperty(java.lang.String)
	CALLEE: org.apache.velocity.runtime.log.SystemLogChute#toLevel(java.lang.String)
	CALLEE: org.apache.velocity.runtime.log.SystemLogChute#setEnabledLevel(int)
	CALLEE: org.apache.velocity.runtime.log.SystemLogChute#setSystemErrLevel(int)
CALLER: org.apache.commons.collections.ExtendedProperties#getString(java.lang.String,java.lang.String)
	CALLEE: org.apache.commons.collections.ExtendedProperties#interpolate(java.lang.String)
CALLER: org.apache.velocity.runtime.RuntimeInstance#getString(java.lang.String,java.lang.String)
	CALLEE: org.apache.commons.collections.ExtendedProperties#getString(java.lang.String,java.lang.String)
CALLER: org.apache.velocity.runtime.log.LogDisplayWrapper#getLogChute()
	CALLEE: org.apache.velocity.runtime.log.Log#getLogChute()
CALLER: static org.slf4j.LoggerFactory#isAndroid()
	CALLEE: static org.slf4j.helpers.Util#safeGetSystemProperty(java.lang.String)
CALLER: static org.slf4j.LoggerFactory#findPossibleStaticLoggerBinderPathSet()
	CALLEE: static org.slf4j.helpers.Util#report(java.lang.String,java.lang.Throwable)
CALLER: static org.slf4j.LoggerFactory#reportMultipleBindingAmbiguity(java.util.Set)
	CALLEE: static org.slf4j.helpers.Util#report(java.lang.String)
	CALLEE: static org.slf4j.LoggerFactory#isAmbiguousStaticLoggerBinderPathSet(java.util.Set)
CALLER: static org.slf4j.LoggerFactory#reportActualBinding(java.util.Set)
	CALLEE: static org.slf4j.helpers.Util#report(java.lang.String)
	CALLEE: static org.slf4j.impl.StaticLoggerBinder#getSingleton()
	CALLEE: static org.slf4j.LoggerFactory#isAmbiguousStaticLoggerBinderPathSet(java.util.Set)
	CALLEE: org.slf4j.impl.StaticLoggerBinder#getLoggerFactoryClassStr()
CALLER: static org.slf4j.LoggerFactory#fixSubstituteLoggers()
	CALLEE: static org.slf4j.LoggerFactory#getLogger(java.lang.String)
	CALLEE: org.slf4j.helpers.SubstituteLoggerFactory#postInitialization()
	CALLEE: org.slf4j.helpers.SubstituteLoggerFactory#getLoggers()
	CALLEE: org.slf4j.helpers.SubstituteLogger#getName()
	CALLEE: org.slf4j.helpers.SubstituteLogger#setDelegate(org.slf4j.Logger)
CALLER: static org.slf4j.LoggerFactory#replayEvents()
	CALLEE: org.slf4j.helpers.SubstituteLoggerFactory#getEventQueue()
	CALLEE: static org.slf4j.LoggerFactory#replaySingleEvent(org.slf4j.event.SubstituteLoggingEvent)
	CALLEE: static org.slf4j.LoggerFactory#emitReplayOrSubstituionWarning(org.slf4j.event.SubstituteLoggingEvent,int)
CALLER: static org.slf4j.LoggerFactory#failedBinding(java.lang.Throwable)
	CALLEE: static org.slf4j.helpers.Util#report(java.lang.String,java.lang.Throwable)
CALLER: static org.slf4j.helpers.Util#report(java.lang.String,java.lang.Throwable)
	CALLEE: org.h2.jdbc.JdbcSQLException#printStackTrace()
CALLER: org.slf4j.impl.SimpleLoggerFactory#<init>()
	CALLEE: static org.slf4j.impl.SimpleLogger#init()
CALLER: org.apache.log4j.PropertyConfigurator#parseAppender(java.util.Properties,java.lang.String)
	CALLEE: static org.apache.log4j.helpers.LogLog#debug(java.lang.String)
	CALLEE: static org.apache.log4j.helpers.LogLog#error(java.lang.String)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#findAndSubst(java.lang.String,java.util.Properties)
	CALLEE: static org.apache.log4j.PropertyConfigurator#class$(java.lang.String)
	CALLEE: static org.apache.log4j.config.PropertySetter#setProperties(java.lang.Object,java.util.Properties,java.lang.String)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#instantiateByKey(java.util.Properties,java.lang.String,java.lang.Class,java.lang.Object)
	CALLEE: org.apache.log4j.PropertyConfigurator#registryGet(java.lang.String)
	CALLEE: org.apache.log4j.PropertyConfigurator#parseErrorHandler(org.apache.log4j.spi.ErrorHandler,java.lang.String,java.util.Properties,org.apache.log4j.spi.LoggerRepository)
	CALLEE: org.apache.log4j.PropertyConfigurator#parseAppenderFilters(java.util.Properties,java.lang.String,org.apache.log4j.Appender)
	CALLEE: org.apache.log4j.PropertyConfigurator#registryPut(org.apache.log4j.Appender)
	CALLEE: org.eclipse.jetty.http.PathMap.MappedEntry#getValue()
	CALLEE: org.eclipse.jetty.http.PathMap.MappedEntry#getKey()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
CALLER: org.apache.log4j.config.PropertySetter#getPropertyDescriptor(java.lang.String)
	CALLEE: org.apache.log4j.config.PropertySetter#introspect()
CALLER: org.apache.log4j.config.PropertySetter#setProperty(java.lang.String,java.lang.String)
	CALLEE: static org.apache.log4j.helpers.LogLog#warn(java.lang.String,java.lang.Throwable)
	CALLEE: static org.apache.log4j.helpers.LogLog#warn(java.lang.String)
	CALLEE: org.apache.log4j.config.PropertySetter#getPropertyDescriptor(java.lang.String)
	CALLEE: org.apache.log4j.config.PropertySetter#setProperty(java.beans.PropertyDescriptor,java.lang.String,java.lang.String)
CALLER: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer#<init>(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer,int,java.lang.String[],com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.Bucket[],int,int,int)
	CALLEE: static com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer#_thresholdSize(int)
	CALLEE: com.fasterxml.jackson.core.JsonFactory.Feature#enabledIn(int)
CALLER: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer#initTableInfo(int)
	CALLEE: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.TableInfo#<init>(int,int,int[],com.fasterxml.jackson.core.sym.Name[],com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.Bucket[],int,int,int)
CALLER: com.zaxxer.hikari.util.ClockSource.MillisecondClockSource#<init>()
	CALLEE: com.zaxxer.hikari.util.ClockSource.NanosecondClockSource#<init>()
CALLER: com.zaxxer.hikari.pool.PoolBase.SynchronousExecutor#<init>(com.zaxxer.hikari.pool.PoolBase.1)
	CALLEE: com.zaxxer.hikari.pool.PoolBase.SynchronousExecutor#<init>()
CALLER: com.zaxxer.hikari.pool.PoolBase#getAndSetNetworkTimeout(java.sql.Connection,long)
	CALLEE: org.slf4j.helpers.NOPLogger#warn(java.lang.String,java.lang.Object)
	CALLEE: org.slf4j.helpers.NOPLogger#info(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.helpers.SubstituteLogger#warn(java.lang.String,java.lang.Object)
	CALLEE: org.slf4j.helpers.SubstituteLogger#info(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.impl.SimpleLogger#warn(java.lang.String,java.lang.Object)
	CALLEE: org.slf4j.impl.SimpleLogger#info(java.lang.String,java.lang.Object,java.lang.Object)
CALLER: com.zaxxer.hikari.pool.PoolBase#checkDriverSupport(java.sql.Connection)
	CALLEE: com.zaxxer.hikari.HikariConfig#getConnectionTestQuery()
	CALLEE: com.zaxxer.hikari.pool.PoolBase#executeSql(java.sql.Connection,java.lang.String,boolean)
	CALLEE: org.slf4j.helpers.NOPLogger#warn(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.helpers.NOPLogger#error(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.helpers.SubstituteLogger#warn(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.helpers.SubstituteLogger#error(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.impl.SimpleLogger#warn(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.impl.SimpleLogger#error(java.lang.String,java.lang.Object,java.lang.Object)
CALLER: liquibase.resource.ClassLoaderResourceAccessor#getResourcesAsStream(java.lang.String)
	CALLEE: liquibase.logging.LogFactory#getLog()
	CALLEE: static liquibase.logging.LogFactory#getInstance()
	CALLEE: liquibase.logging.core.DefaultLogger#debug(java.lang.String)
CALLER: liquibase.logging.core.DefaultLogger#debug(java.lang.String)
	CALLEE: liquibase.logging.core.DefaultLogger#getLogLevel()
	CALLEE: liquibase.logging.core.DefaultLogger#print(liquibase.logging.LogLevel,java.lang.String)
CALLER: liquibase.servicelocator.WebSpherePackageScanClassResolver#<init>(java.lang.String)
	CALLEE: liquibase.servicelocator.DefaultPackageScanClassResolver#<init>()
CALLER: liquibase.parser.ChangeLogParserFactory#<init>()
	CALLEE: static liquibase.servicelocator.ServiceLocator#getInstance()
	CALLEE: liquibase.exception.UnexpectedLiquibaseException#<init>(java.lang.Throwable)
	CALLEE: liquibase.parser.ChangeLogParserFactory.1#<init>(liquibase.parser.ChangeLogParserFactory)
	CALLEE: liquibase.parser.ChangeLogParserFactory#register(liquibase.parser.ChangeLogParser)
	CALLEE: liquibase.servicelocator.ServiceLocator#findClasses(java.lang.Class)
CALLER: liquibase.changelog.visitor.UpdateVisitor#<init>(liquibase.database.Database)
	CALLEE: static liquibase.logging.LogFactory#getLogger()
CALLER: com.zaxxer.hikari.util.ConcurrentBag#borrow(long,java.util.concurrent.TimeUnit)
	CALLEE: com.zaxxer.hikari.util.QueuedSequenceSynchronizer#currentSequence()
	CALLEE: com.zaxxer.hikari.pool.HikariPool#addBagItem()
	CALLEE: com.zaxxer.hikari.util.QueuedSequenceSynchronizer#waitUntilSequenceExceeded(long,long)
	CALLEE: com.zaxxer.hikari.util.FastList#remove(int)
	CALLEE: com.zaxxer.hikari.util.FastList#size()
	CALLEE: com.zaxxer.hikari.pool.PoolEntry#compareAndSet(int,int)
CALLER: com.zaxxer.hikari.pool.PoolBase#isConnectionAlive(java.sql.Connection)
	CALLEE: com.zaxxer.hikari.HikariConfig#getConnectionTestQuery()
	CALLEE: com.zaxxer.hikari.pool.PoolBase#setNetworkTimeout(java.sql.Connection,long)
	CALLEE: com.zaxxer.hikari.pool.PoolBase#setQueryTimeout(java.sql.Statement,int)
	CALLEE: org.slf4j.helpers.NOPLogger#warn(java.lang.String,java.lang.Object[])
	CALLEE: org.slf4j.helpers.SubstituteLogger#warn(java.lang.String,java.lang.Object[])
	CALLEE: org.h2.jdbc.JdbcSQLException#getMessage()
	CALLEE: org.slf4j.impl.SimpleLogger#warn(java.lang.String,java.lang.Object[])
CALLER: com.zaxxer.hikari.pool.HikariPool#closeConnection(com.zaxxer.hikari.pool.PoolEntry,java.lang.String)
	CALLEE: com.zaxxer.hikari.util.ConcurrentBag#remove(com.zaxxer.hikari.util.ConcurrentBag.IConcurrentBagEntry)
	CALLEE: com.zaxxer.hikari.pool.HikariPool.1#<init>(com.zaxxer.hikari.pool.HikariPool,java.sql.Connection,java.lang.String)
	CALLEE: org.slf4j.helpers.NOPLogger#warn(java.lang.String,java.lang.Object[])
	CALLEE: org.slf4j.helpers.SubstituteLogger#warn(java.lang.String,java.lang.Object[])
	CALLEE: org.slf4j.impl.SimpleLogger#warn(java.lang.String,java.lang.Object[])
	CALLEE: com.zaxxer.hikari.pool.PoolEntry#close()
CALLER: com.zaxxer.hikari.pool.PoolBase.MetricsTrackerDelegate#recordBorrowStats(com.zaxxer.hikari.pool.PoolEntry,long)
	CALLEE: com.zaxxer.hikari.util.ClockSource.MillisecondClockSource#elapsedNanos(long,long)
	CALLEE: com.zaxxer.hikari.util.ClockSource.NanosecondClockSource#elapsedNanos(long,long)
	CALLEE: com.zaxxer.hikari.util.ClockSource.MillisecondClockSource#currentTime()
	CALLEE: com.zaxxer.hikari.util.ClockSource.NanosecondClockSource#currentTime()
	CALLEE: com.zaxxer.hikari.metrics.dropwizard.CodaHaleMetricsTracker#recordConnectionAcquiredNanos(long)
CALLER: com.zaxxer.hikari.pool.ProxyLeakTask#schedule(com.zaxxer.hikari.pool.PoolEntry)
	CALLEE: com.zaxxer.hikari.pool.ProxyLeakTask#<init>(com.zaxxer.hikari.pool.ProxyLeakTask,com.zaxxer.hikari.pool.PoolEntry)
CALLER: com.zaxxer.hikari.pool.HikariPool#createTimeoutException(long)
	CALLEE: com.zaxxer.hikari.pool.HikariPool#logPoolState(java.lang.String[])
	CALLEE: com.zaxxer.hikari.pool.PoolBase.MetricsTrackerDelegate#recordConnectionTimeout()
	CALLEE: com.zaxxer.hikari.pool.PoolBase.NopMetricsTrackerDelegate#recordConnectionTimeout()
	CALLEE: com.zaxxer.hikari.pool.PoolBase#getLastConnectionFailure()
	CALLEE: com.zaxxer.hikari.util.ClockSource.MillisecondClockSource#elapsedMillis(long)
	CALLEE: com.zaxxer.hikari.util.ClockSource.NanosecondClockSource#elapsedMillis(long)
CALLER: org.eclipse.jetty.util.DateCache#<init>(java.lang.String)
	CALLEE: org.eclipse.jetty.util.DateCache#<init>(java.lang.String,java.util.Locale,java.util.TimeZone)
CALLER: org.eclipse.jetty.util.log.StdErrLog#<init>(java.lang.String)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#<init>(java.lang.String,java.util.Properties)
CALLER: org.eclipse.jetty.util.log.StdErrLog#format(java.lang.StringBuilder,java.lang.String,java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.DateCache#formatNow(long)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#tag(java.lang.StringBuilder,java.lang.String,int,java.lang.String)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#format(java.lang.StringBuilder,java.lang.String,java.lang.Object[])
CALLER: org.eclipse.jetty.util.thread.QueuedThreadPool#<init>(int,int,int)
	CALLEE: org.eclipse.jetty.util.thread.QueuedThreadPool#<init>(int,int,int,java.util.concurrent.BlockingQueue)
CALLER: org.eclipse.jetty.util.component.ContainerLifeCycle#start(org.eclipse.jetty.util.component.LifeCycle)
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#start()
CALLER: org.eclipse.jetty.http.HttpScheme#<init>(java.lang.String,int,java.lang.String)
	CALLEE: static org.eclipse.jetty.util.BufferUtil#toBuffer(java.lang.String)
CALLER: org.eclipse.jetty.util.ArrayTrie#<init>()
	CALLEE: org.eclipse.jetty.util.ArrayTrie#<init>(int)
CALLER: org.eclipse.jetty.http.HttpVersion#<init>(java.lang.String,int,java.lang.String,int)
	CALLEE: static org.eclipse.jetty.util.StringUtil#getBytes(java.lang.String)
CALLER: org.eclipse.jetty.util.component.ContainerLifeCycle#getBean(java.lang.Class)
	CALLEE: static org.eclipse.jetty.util.component.ContainerLifeCycle.Bean#access$000(org.eclipse.jetty.util.component.ContainerLifeCycle.Bean)
CALLER: org.eclipse.jetty.util.thread.ScheduledExecutorScheduler#<init>()
	CALLEE: org.eclipse.jetty.util.thread.ScheduledExecutorScheduler#<init>(java.lang.String,boolean)
CALLER: org.eclipse.jetty.io.ArrayByteBufferPool#<init>()
	CALLEE: org.eclipse.jetty.io.ArrayByteBufferPool#<init>(int,int,int)
CALLER: org.eclipse.jetty.util.component.ContainerLifeCycle#unmanage(java.lang.Object)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#unmanage(org.eclipse.jetty.util.component.ContainerLifeCycle.Bean)
	CALLEE: static org.eclipse.jetty.util.component.ContainerLifeCycle.Bean#access$000(org.eclipse.jetty.util.component.ContainerLifeCycle.Bean)
CALLER: org.eclipse.jetty.server.AbstractConnector#addConnectionFactory(org.eclipse.jetty.server.ConnectionFactory)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#addBean(java.lang.Object)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#removeBean(java.lang.Object)
	CALLEE: org.eclipse.jetty.server.AbstractConnectionFactory#getProtocol()
CALLER: org.eclipse.jetty.io.SelectorManager#<init>(java.util.concurrent.Executor,org.eclipse.jetty.util.thread.Scheduler,int)
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#<init>()
CALLER: org.eclipse.jetty.util.component.ContainerLifeCycle#removeEventListener(org.eclipse.jetty.util.component.Container.Listener)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#removeBean(java.lang.Object)
	CALLEE: static org.eclipse.jetty.util.component.ContainerLifeCycle.Bean#access$000(org.eclipse.jetty.util.component.ContainerLifeCycle.Bean)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle.Bean#isManaged()
CALLER: org.eclipse.jetty.util.component.ContainerLifeCycle#stop(org.eclipse.jetty.util.component.LifeCycle)
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#stop()
CALLER: org.eclipse.jetty.server.handler.ContextHandler.NoContext#<init>()
	CALLEE: org.eclipse.jetty.util.AttributesMap#<init>()
CALLER: org.eclipse.jetty.servlet.ServletContextHandler#setServletHandler(org.eclipse.jetty.servlet.ServletHandler)
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#isStarted()
	CALLEE: org.eclipse.jetty.server.handler.HandlerWrapper#getHandler()
	CALLEE: org.eclipse.jetty.servlet.ServletContextHandler#relinkHandlers()
	CALLEE: org.eclipse.jetty.server.handler.HandlerWrapper#setHandler(org.eclipse.jetty.server.Handler)
CALLER: org.eclipse.jetty.servlet.ServletContextHandler#setSessionHandler(org.eclipse.jetty.server.session.SessionHandler)
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#isStarted()
	CALLEE: org.eclipse.jetty.servlet.ServletContextHandler#relinkHandlers()
	CALLEE: org.eclipse.jetty.server.handler.HandlerWrapper#setHandler(org.eclipse.jetty.server.Handler)
CALLER: org.eclipse.jetty.servlet.ServletContextHandler#setSecurityHandler(org.eclipse.jetty.security.SecurityHandler)
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#isStarted()
	CALLEE: org.eclipse.jetty.servlet.ServletContextHandler#relinkHandlers()
CALLER: jersey.repackaged.com.google.common.base.Predicates.ObjectPredicate.1#<init>(java.lang.String,int)
	CALLEE: jersey.repackaged.com.google.common.base.Predicates.ObjectPredicate#<init>(java.lang.String,int,jersey.repackaged.com.google.common.base.Predicates.1)
CALLER: jersey.repackaged.com.google.common.base.Predicates.ObjectPredicate.2#<init>(java.lang.String,int)
	CALLEE: jersey.repackaged.com.google.common.base.Predicates.ObjectPredicate#<init>(java.lang.String,int,jersey.repackaged.com.google.common.base.Predicates.1)
CALLER: jersey.repackaged.com.google.common.base.Predicates.ObjectPredicate.3#<init>(java.lang.String,int)
	CALLEE: jersey.repackaged.com.google.common.base.Predicates.ObjectPredicate#<init>(java.lang.String,int,jersey.repackaged.com.google.common.base.Predicates.1)
CALLER: jersey.repackaged.com.google.common.base.Predicates.ObjectPredicate.4#<init>(java.lang.String,int)
	CALLEE: jersey.repackaged.com.google.common.base.Predicates.ObjectPredicate#<init>(java.lang.String,int,jersey.repackaged.com.google.common.base.Predicates.1)
CALLER: jersey.repackaged.com.google.common.base.Joiner#<init>(java.lang.String)
	CALLEE: static jersey.repackaged.com.google.common.base.Preconditions#checkNotNull(java.lang.Object)
CALLER: static jersey.repackaged.com.google.common.base.Joiner#on(java.lang.String)
	CALLEE: jersey.repackaged.com.google.common.base.Joiner#<init>(java.lang.String)
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#COMPONENT_CLASS_CANNOT_BE_NULL()
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#localizableCOMPONENT_CLASS_CANNOT_BE_NULL()
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#<clinit>()
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#<init>(java.lang.String)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#<init>()
CALLER: org.glassfish.jersey.model.internal.CommonConfig.FeatureRegistration#<init>(javax.ws.rs.core.Feature,org.glassfish.jersey.model.internal.CommonConfig.1)
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig.FeatureRegistration#<init>(javax.ws.rs.core.Feature)
CALLER: org.glassfish.jersey.model.internal.CommonConfig.FeatureRegistration#<init>(java.lang.Class,org.glassfish.jersey.model.internal.CommonConfig.1)
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig.FeatureRegistration#<init>(java.lang.Class)
CALLER: static org.glassfish.jersey.internal.OsgiRegistry#getInstance()
	CALLEE: static org.osgi.framework.FrameworkUtil#getBundle(java.lang.Class)
	CALLEE: static org.glassfish.jersey.internal.util.ReflectionHelper#getClassLoaderPA(java.lang.Class)
	CALLEE: org.glassfish.jersey.internal.OsgiRegistry#<init>(org.osgi.framework.BundleContext)
CALLER: static org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.ResourcesProvider#access$100(org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.ResourcesProvider)
	CALLEE: static org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.ResourcesProvider#setInstance(org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.ResourcesProvider)
CALLER: org.glassfish.jersey.server.internal.scanning.CompositeResourceFinder#<init>()
	CALLEE: org.glassfish.jersey.server.internal.AbstractResourceFinderAdapter#<init>()
CALLER: static org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.ResourcesProvider#access$000()
	CALLEE: static org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.ResourcesProvider#getInstance()
CALLER: org.glassfish.jersey.server.internal.scanning.PackageNamesScanner#toURI(java.net.URL)
	CALLEE: org.glassfish.jersey.server.internal.scanning.PackageNamesScanner#toExternalForm(java.net.URL)
CALLER: org.glassfish.jersey.server.internal.scanning.PackageNamesScanner#addResourceFinder(java.net.URI)
	CALLEE: org.glassfish.jersey.server.internal.scanning.CompositeResourceFinder#push(org.glassfish.jersey.server.ResourceFinder)
	CALLEE: org.glassfish.jersey.server.internal.scanning.ResourceFinderException#<init>(java.lang.String)
	CALLEE: org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory#create(java.net.URI,boolean)
	CALLEE: org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory#create(java.net.URI,boolean)
	CALLEE: org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory#create(java.net.URI,boolean)
	CALLEE: org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory#create(java.net.URI,boolean)
CALLER: org.eclipse.jetty.http.HttpHeader#<init>(java.lang.String,int,java.lang.String)
	CALLEE: static org.eclipse.jetty.util.StringUtil#getBytes(java.lang.String)
CALLER: org.eclipse.jetty.http.HttpField#<init>(org.eclipse.jetty.http.HttpHeader,java.lang.String)
	CALLEE: org.eclipse.jetty.http.HttpField#<init>(org.eclipse.jetty.http.HttpHeader,java.lang.String,java.lang.String)
	CALLEE: org.eclipse.jetty.http.HttpHeader#asString()
CALLER: static org.eclipse.jetty.util.URIUtil#encodePath(java.lang.String)
	CALLEE: static org.eclipse.jetty.util.URIUtil#encodePath(java.lang.StringBuilder,java.lang.String)
CALLER: static org.eclipse.jetty.util.URIUtil#decodePath(java.lang.String)
	CALLEE: static org.eclipse.jetty.util.TypeUtil#parseInt(java.lang.String,int,int,int)
CALLER: org.eclipse.jetty.util.resource.URLResource#<init>(java.net.URL,java.net.URLConnection)
	CALLEE: org.eclipse.jetty.util.resource.Resource#<init>()
CALLER: static org.apache.commons.collections.ExtendedProperties#endsWithSlash(java.lang.String)
	CALLEE: static org.apache.commons.collections.ExtendedProperties#countPreceding(java.lang.String,int,char)
CALLER: org.apache.commons.collections.ExtendedProperties.PropertiesReader#readProperty()
	CALLEE: static org.apache.commons.collections.ExtendedProperties#access$000(java.lang.String)
CALLER: org.apache.commons.collections.ExtendedProperties#interpolate(java.lang.String)
	CALLEE: org.apache.commons.collections.ExtendedProperties#interpolateHelper(java.lang.String,java.util.List)
CALLER: static org.slf4j.LoggerFactory#replaySingleEvent(org.slf4j.event.SubstituteLoggingEvent)
	CALLEE: static org.slf4j.helpers.Util#report(java.lang.String)
	CALLEE: org.slf4j.helpers.SubstituteLogger#getName()
	CALLEE: org.slf4j.event.SubstituteLoggingEvent#getLogger()
	CALLEE: org.slf4j.helpers.SubstituteLogger#isDelegateNOP()
	CALLEE: org.slf4j.helpers.SubstituteLogger#isDelegateEventAware()
	CALLEE: org.slf4j.helpers.SubstituteLogger#log(org.slf4j.event.LoggingEvent)
	CALLEE: org.slf4j.helpers.SubstituteLogger#isDelegateNull()
CALLER: static org.slf4j.LoggerFactory#emitReplayOrSubstituionWarning(org.slf4j.event.SubstituteLoggingEvent,int)
	CALLEE: static org.slf4j.LoggerFactory#emitReplayWarning(int)
	CALLEE: static org.slf4j.LoggerFactory#emitSubstitutionWarning()
	CALLEE: org.slf4j.event.SubstituteLoggingEvent#getLogger()
	CALLEE: org.slf4j.helpers.SubstituteLogger#isDelegateNOP()
	CALLEE: org.slf4j.helpers.SubstituteLogger#isDelegateEventAware()
CALLER: static org.slf4j.impl.SimpleLogger#init()
	CALLEE: static org.slf4j.helpers.Util#report(java.lang.String,java.lang.Throwable)
	CALLEE: static org.slf4j.impl.SimpleLogger#loadProperties()
	CALLEE: static org.slf4j.impl.SimpleLogger#getStringProperty(java.lang.String,java.lang.String)
	CALLEE: static org.slf4j.impl.SimpleLogger#stringToLevel(java.lang.String)
	CALLEE: static org.slf4j.impl.SimpleLogger#getBooleanProperty(java.lang.String,boolean)
	CALLEE: static org.slf4j.impl.SimpleLogger#computeTargetStream(java.lang.String)
CALLER: org.apache.log4j.PropertyConfigurator#parseErrorHandler(org.apache.log4j.spi.ErrorHandler,java.lang.String,java.util.Properties,org.apache.log4j.spi.LoggerRepository)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#toBoolean(java.lang.String,boolean)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#findAndSubst(java.lang.String,java.util.Properties)
	CALLEE: org.apache.log4j.PropertyConfigurator#parseAppender(java.util.Properties,java.lang.String)
	CALLEE: org.apache.log4j.Hierarchy#getLogger(java.lang.String)
	CALLEE: org.apache.log4j.spi.NOPLoggerRepository#getLogger(java.lang.String)
	CALLEE: org.apache.log4j.Hierarchy#getRootLogger()
	CALLEE: org.apache.log4j.spi.NOPLoggerRepository#getRootLogger()
	CALLEE: org.apache.log4j.Hierarchy#getLogger(java.lang.String,org.apache.log4j.spi.LoggerFactory)
	CALLEE: org.apache.log4j.spi.NOPLoggerRepository#getLogger(java.lang.String,org.apache.log4j.spi.LoggerFactory)
CALLER: org.apache.log4j.PropertyConfigurator#parseAppenderFilters(java.util.Properties,java.lang.String,org.apache.log4j.Appender)
	CALLEE: static org.apache.log4j.helpers.LogLog#warn(java.lang.String)
	CALLEE: org.apache.log4j.config.PropertySetter#setProperty(java.lang.String,java.lang.String)
	CALLEE: org.apache.log4j.config.PropertySetter#activate()
	CALLEE: static org.apache.log4j.helpers.LogLog#debug(java.lang.String)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#instantiateByClassName(java.lang.String,java.lang.Class,java.lang.Object)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#findAndSubst(java.lang.String,java.util.Properties)
	CALLEE: static org.apache.log4j.PropertyConfigurator#class$(java.lang.String)
	CALLEE: org.apache.log4j.config.PropertySetter#<init>(java.lang.Object)
	CALLEE: org.apache.log4j.NameValue#<init>(java.lang.String,java.lang.String)
	CALLEE: org.apache.log4j.SortedKeyEnumeration#<init>(java.util.Hashtable)
	CALLEE: org.apache.log4j.SortedKeyEnumeration#hasMoreElements()
	CALLEE: org.apache.log4j.SortedKeyEnumeration#nextElement()
CALLER: org.apache.log4j.config.PropertySetter#introspect()
	CALLEE: static org.apache.log4j.helpers.LogLog#error(java.lang.String)
CALLER: org.apache.log4j.config.PropertySetter#setProperty(java.beans.PropertyDescriptor,java.lang.String,java.lang.String)
	CALLEE: static org.apache.log4j.helpers.LogLog#debug(java.lang.String)
	CALLEE: org.apache.log4j.config.PropertySetterException#<init>(java.lang.String)
	CALLEE: org.apache.log4j.config.PropertySetter#convertArg(java.lang.String,java.lang.Class)
	CALLEE: org.apache.log4j.config.PropertySetterException#<init>(java.lang.Throwable)
CALLER: com.fasterxml.jackson.core.JsonFactory.Feature#enabledIn(int)
	CALLEE: com.fasterxml.jackson.core.JsonFactory.Feature#getMask()
CALLER: liquibase.logging.core.DefaultLogger#getLogLevel()
	CALLEE: static liquibase.configuration.LiquibaseConfiguration#getInstance()
	CALLEE: liquibase.logging.core.AbstractLogger#getLogLevel()
	CALLEE: liquibase.configuration.LiquibaseConfiguration#getConfiguration(java.lang.Class)
	CALLEE: liquibase.logging.core.AbstractLogger#toLogLevel(java.lang.String)
CALLER: static liquibase.logging.LogLevel#<clinit>()
	CALLEE: liquibase.logging.LogLevel#<init>(java.lang.String,int)
CALLER: liquibase.logging.core.DefaultLogger#print(liquibase.logging.LogLevel,java.lang.String)
	CALLEE: static liquibase.util.StringUtils#trimToNull(java.lang.String)
	CALLEE: liquibase.logging.core.AbstractLogger#buildMessage(java.lang.String)
CALLER: com.zaxxer.hikari.util.QueuedSequenceSynchronizer#currentSequence()
	CALLEE: com.zaxxer.hikari.util.Sequence.Java8Sequence#get()
	CALLEE: com.zaxxer.hikari.util.Sequence.DropwizardSequence#get()
CALLER: com.zaxxer.hikari.pool.PoolBase#setQueryTimeout(java.sql.Statement,int)
	CALLEE: org.slf4j.helpers.NOPLogger#info(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.helpers.SubstituteLogger#info(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.impl.SimpleLogger#info(java.lang.String,java.lang.Object,java.lang.Object)
CALLER: com.zaxxer.hikari.util.ConcurrentBag#remove(com.zaxxer.hikari.util.ConcurrentBag.IConcurrentBagEntry)
	CALLEE: org.slf4j.helpers.NOPLogger#warn(java.lang.String,java.lang.Object)
	CALLEE: org.slf4j.helpers.SubstituteLogger#warn(java.lang.String,java.lang.Object)
	CALLEE: org.slf4j.impl.SimpleLogger#warn(java.lang.String,java.lang.Object)
	CALLEE: com.zaxxer.hikari.pool.PoolEntry#compareAndSet(int,int)
CALLER: com.zaxxer.hikari.pool.HikariPool#logPoolState(java.lang.String[])
	CALLEE: com.zaxxer.hikari.pool.HikariPool#getTotalConnections()
	CALLEE: com.zaxxer.hikari.pool.HikariPool#getActiveConnections()
	CALLEE: com.zaxxer.hikari.pool.HikariPool#getIdleConnections()
	CALLEE: com.zaxxer.hikari.pool.HikariPool#getThreadsAwaitingConnection()
	CALLEE: org.slf4j.helpers.NOPLogger#isDebugEnabled()
	CALLEE: org.slf4j.helpers.NOPLogger#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.slf4j.helpers.SubstituteLogger#isDebugEnabled()
	CALLEE: org.slf4j.helpers.SubstituteLogger#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.slf4j.impl.SimpleLogger#isDebugEnabled()
	CALLEE: org.slf4j.impl.SimpleLogger#debug(java.lang.String,java.lang.Object[])
CALLER: com.zaxxer.hikari.pool.PoolBase.MetricsTrackerDelegate#recordConnectionTimeout()
	CALLEE: com.zaxxer.hikari.metrics.dropwizard.CodaHaleMetricsTracker#recordConnectionTimeout()
CALLER: org.eclipse.jetty.util.log.StdErrLog#<init>(java.lang.String,java.util.Properties)
	CALLEE: org.eclipse.jetty.util.log.AbstractLogger#<init>()
	CALLEE: static org.eclipse.jetty.util.log.StdErrLog#condensePackageString(java.lang.String)
	CALLEE: static org.eclipse.jetty.util.log.StdErrLog#getLoggingLevel(java.util.Properties,java.lang.String)
	CALLEE: static org.eclipse.jetty.util.log.StdErrLog#getLoggingProperty(java.util.Properties,java.lang.String,java.lang.String)
CALLER: org.eclipse.jetty.util.DateCache#formatNow(long)
	CALLEE: org.eclipse.jetty.util.DateCache#formatTick(long)
CALLER: org.eclipse.jetty.util.log.StdErrLog#tag(java.lang.StringBuilder,java.lang.String,int,java.lang.String)
	CALLEE: static org.eclipse.jetty.util.log.StdErrLog#condensePackageString(java.lang.String)
CALLER: org.eclipse.jetty.util.log.StdErrLog#format(java.lang.StringBuilder,java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#escape(java.lang.StringBuilder,java.lang.String)
CALLER: org.eclipse.jetty.util.thread.QueuedThreadPool#<init>(int,int,int,java.util.concurrent.BlockingQueue)
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#<init>()
	CALLEE: org.eclipse.jetty.util.ConcurrentHashSet#<init>()
	CALLEE: org.eclipse.jetty.util.thread.QueuedThreadPool.3#<init>(org.eclipse.jetty.util.thread.QueuedThreadPool)
	CALLEE: org.eclipse.jetty.util.thread.QueuedThreadPool#setMinThreads(int)
	CALLEE: org.eclipse.jetty.util.thread.QueuedThreadPool#setMaxThreads(int)
	CALLEE: org.eclipse.jetty.util.thread.QueuedThreadPool#setIdleTimeout(int)
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#setStopTimeout(long)
	CALLEE: org.eclipse.jetty.util.BlockingArrayQueue#<init>(int,int)
CALLER: org.eclipse.jetty.util.component.AbstractLifeCycle#start()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#setStarting()
	CALLEE: org.eclipse.jetty.util.thread.QueuedThreadPool#doStart()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#setStarted()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#setFailed(java.lang.Throwable)
	CALLEE: org.eclipse.jetty.server.handler.AbstractHandler#doStart()
	CALLEE: org.eclipse.jetty.server.Server#doStart()
	CALLEE: org.eclipse.jetty.server.ServerConnector#doStart()
	CALLEE: org.eclipse.jetty.servlet.ErrorPageErrorHandler#doStart()
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#doStart()
	CALLEE: org.eclipse.jetty.io.SelectorManager#doStart()
	CALLEE: org.eclipse.jetty.server.session.HashSessionManager#doStart()
	CALLEE: org.eclipse.jetty.util.thread.ScheduledExecutorScheduler#doStart()
	CALLEE: org.eclipse.jetty.server.session.SessionHandler#doStart()
	CALLEE: org.eclipse.jetty.servlet.ServletHandler#doStart()
	CALLEE: org.eclipse.jetty.server.session.HashSessionIdManager#doStart()
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector#doStart()
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#doStart()
CALLER: org.eclipse.jetty.util.thread.ScheduledExecutorScheduler#<init>(java.lang.String,boolean)
	CALLEE: org.eclipse.jetty.util.thread.ScheduledExecutorScheduler#<init>(java.lang.String,boolean,java.lang.ClassLoader)
CALLER: org.eclipse.jetty.io.ArrayByteBufferPool#<init>(int,int,int)
	CALLEE: org.eclipse.jetty.io.ArrayByteBufferPool.Bucket#<init>(int)
CALLER: jersey.repackaged.com.google.common.base.Predicates.ObjectPredicate#<init>(java.lang.String,int,jersey.repackaged.com.google.common.base.Predicates.1)
	CALLEE: jersey.repackaged.com.google.common.base.Predicates.ObjectPredicate#<init>(java.lang.String,int)
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#localizableCOMPONENT_CLASS_CANNOT_BE_NULL()
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: org.glassfish.jersey.internal.l10n.Localizer#<init>()
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#<init>(java.util.Locale)
CALLER: static org.glassfish.jersey.internal.util.ReflectionHelper#getClassLoaderPA(java.lang.Class)
	CALLEE: org.glassfish.jersey.internal.util.ReflectionHelper.3#<init>(java.lang.Class)
CALLER: static org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.ResourcesProvider#getInstance()
	CALLEE: org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.ResourcesProvider.1#<init>()
CALLER: org.glassfish.jersey.server.internal.scanning.PackageNamesScanner#toExternalForm(java.net.URL)
	CALLEE: static org.glassfish.jersey.uri.UriComponent#contextualEncode(java.lang.String,org.glassfish.jersey.uri.UriComponent.Type)
CALLER: static org.eclipse.jetty.util.URIUtil#encodePath(java.lang.StringBuilder,java.lang.String)
	CALLEE: static org.eclipse.jetty.util.TypeUtil#toHex(byte,java.lang.Appendable)
CALLER: static org.eclipse.jetty.util.TypeUtil#parseInt(java.lang.String,int,int,int)
	CALLEE: static org.eclipse.jetty.util.TypeUtil#convertHexDigit(int)
CALLER: static org.eclipse.jetty.util.TypeUtil#<clinit>()
	CALLEE: static org.eclipse.jetty.util.log.Log#getLogger(java.lang.Class)
CALLER: org.apache.commons.collections.ExtendedProperties#interpolateHelper(java.lang.String,java.util.List)
	CALLEE: org.glassfish.jersey.message.internal.QualitySourceMediaType#toString()
	CALLEE: com.fasterxml.jackson.core.JsonLocation#toString()
	CALLEE: com.fasterxml.jackson.databind.PropertyName#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey#toString()
	CALLEE: org.glassfish.jersey.server.model.Invocable#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#toString()
	CALLEE: org.glassfish.jersey.server.model.MethodHandler.ClassBasedMethodHandler#toString()
	CALLEE: org.glassfish.jersey.server.model.MethodHandler.InstanceBasedMethodHandler#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#toString()
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodRouting#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#toString()
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.ConsumesProducesAcceptor#toString()
	CALLEE: org.apache.commons.collections.ExtendedProperties#getProperty(java.lang.String)
	CALLEE: org.apache.commons.collections.ExtendedProperties#interpolateHelper(java.lang.String,java.util.List)
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#toString()
	CALLEE: org.eclipse.jetty.webapp.WebAppContext#toString()
	CALLEE: org.eclipse.jetty.server.handler.HandlerCollection#toString()
	CALLEE: org.eclipse.jetty.server.Server#toString()
	CALLEE: org.eclipse.jetty.server.AbstractNetworkConnector#toString()
	CALLEE: org.eclipse.jetty.util.thread.QueuedThreadPool#toString()
	CALLEE: org.eclipse.jetty.server.AbstractConnectionFactory#toString()
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle.Bean#toString()
	CALLEE: org.apache.log4j.NameValue#toString()
	CALLEE: liquibase.changelog.ChangeLogParameters.ChangeLogParameter#toString()
	CALLEE: org.eclipse.jetty.server.AbstractConnector.Acceptor#toString()
	CALLEE: org.eclipse.jetty.server.HttpConfiguration#toString()
	CALLEE: org.eclipse.jetty.util.MultiException#toString()
	CALLEE: org.eclipse.jetty.http.PathMap.MappedEntry#toString()
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector#toString()
	CALLEE: liquibase.servicelocator.AssignableToPackageScanFilter#toString()
	CALLEE: org.eclipse.jetty.http.HttpField#toString()
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#toString()
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#toString()
	CALLEE: org.eclipse.jetty.servlet.ServletMapping#toString()
	CALLEE: org.glassfish.jersey.internal.OsgiRegistry.BundleSpiProvidersLoader#toString()
	CALLEE: org.h2.jdbc.JdbcSQLException#toString()
	CALLEE: liquibase.changelog.filter.ChangeSetFilterResult#toString()
	CALLEE: com.zaxxer.hikari.pool.PoolEntry#toString()
	CALLEE: org.eclipse.jetty.io.SelectChannelEndPoint#toString()
	CALLEE: org.eclipse.jetty.util.FutureCallback#toString()
	CALLEE: org.eclipse.jetty.util.ConstantThrowable#toString()
	CALLEE: javax.ws.rs.core.MediaType#toString()
	CALLEE: org.glassfish.jersey.model.internal.RankedProvider#toString()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#toString()
	CALLEE: org.glassfish.hk2.api.MultiException#toString()
	CALLEE: jersey.repackaged.com.google.common.base.Predicates.AndPredicate#toString()
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.MapType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#toString()
	CALLEE: org.glassfish.hk2.utilities.NamedImpl#toString()
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#toString()
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#toString()
	CALLEE: com.fasterxml.jackson.databind.jsontype.NamedType#toString()
	CALLEE: liquibase.changelog.RanChangeSet#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.UnresolvedId#toString()
	CALLEE: org.glassfish.jersey.server.model.ResourceModelIssue#toString()
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#toString()
	CALLEE: org.glassfish.jersey.server.model.Parameter#toString()
	CALLEE: org.glassfish.hk2.utilities.reflection.ParameterizedTypeImpl#toString()
	CALLEE: com.fasterxml.jackson.databind.type.ClassKey#toString()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException.Reference#toString()
	CALLEE: org.glassfish.jersey.server.model.Resource.Data#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ValueNode#toString()
	CALLEE: org.glassfish.jersey.server.model.Resource#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#toString()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Data#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.MemberKey#toString()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ObjectNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ArrayNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.POJONode#toString()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#toString()
	CALLEE: com.fasterxml.jackson.databind.node.TextNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.BinaryNode#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#toString()
	CALLEE: com.fasterxml.jackson.core.io.SerializedString#toString()
CALLER: static org.slf4j.LoggerFactory#emitReplayWarning(int)
	CALLEE: static org.slf4j.helpers.Util#report(java.lang.String)
CALLER: static org.slf4j.LoggerFactory#emitSubstitutionWarning()
	CALLEE: static org.slf4j.helpers.Util#report(java.lang.String)
CALLER: static org.slf4j.impl.SimpleLogger#loadProperties()
	CALLEE: org.slf4j.impl.SimpleLogger.1#<init>()
CALLER: static org.slf4j.impl.SimpleLogger#getStringProperty(java.lang.String,java.lang.String)
	CALLEE: static org.slf4j.impl.SimpleLogger#getStringProperty(java.lang.String)
CALLER: static org.slf4j.impl.SimpleLogger#getBooleanProperty(java.lang.String,boolean)
	CALLEE: static org.slf4j.impl.SimpleLogger#getStringProperty(java.lang.String)
CALLER: static org.slf4j.impl.SimpleLogger#computeTargetStream(java.lang.String)
	CALLEE: static org.slf4j.helpers.Util#report(java.lang.String,java.lang.Throwable)
CALLER: org.apache.log4j.config.PropertySetter#convertArg(java.lang.String,java.lang.Class)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#instantiateByClassName(java.lang.String,java.lang.Class,java.lang.Object)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#toLevel(java.lang.String,org.apache.log4j.Level)
	CALLEE: static org.apache.log4j.config.PropertySetter#class$(java.lang.String)
CALLER: liquibase.configuration.LiquibaseConfiguration#getConfiguration(java.lang.Class)
	CALLEE: liquibase.configuration.LiquibaseConfiguration#createConfiguration(java.lang.Class)
CALLER: liquibase.logging.core.AbstractLogger#toLogLevel(java.lang.String)
	CALLEE: liquibase.exception.UnexpectedLiquibaseException#<init>(java.lang.String)
CALLER: com.zaxxer.hikari.pool.HikariPool#getTotalConnections()
	CALLEE: com.zaxxer.hikari.util.ConcurrentBag#size()
	CALLEE: com.zaxxer.hikari.util.ConcurrentBag#getCount(int)
CALLER: com.zaxxer.hikari.pool.HikariPool#getActiveConnections()
	CALLEE: com.zaxxer.hikari.util.ConcurrentBag#getCount(int)
CALLER: com.zaxxer.hikari.pool.HikariPool#getIdleConnections()
	CALLEE: com.zaxxer.hikari.util.ConcurrentBag#getCount(int)
CALLER: com.zaxxer.hikari.pool.HikariPool#getThreadsAwaitingConnection()
	CALLEE: com.zaxxer.hikari.util.ConcurrentBag#getPendingQueue()
CALLER: static org.eclipse.jetty.util.log.StdErrLog#getLoggingLevel(java.util.Properties,java.lang.String)
	CALLEE: static org.eclipse.jetty.util.log.StdErrLog#getLevelId(java.lang.String,java.lang.String)
CALLER: org.eclipse.jetty.util.DateCache#formatTick(long)
	CALLEE: org.eclipse.jetty.util.DateCache.Tick#<init>(long,java.lang.String)
CALLER: org.eclipse.jetty.util.thread.QueuedThreadPool#setMinThreads(int)
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#isStarted()
	CALLEE: org.eclipse.jetty.util.thread.QueuedThreadPool#startThreads(int)
CALLER: static org.eclipse.jetty.util.BlockingArrayQueue#<clinit>()
	CALLEE: static org.eclipse.jetty.util.MemoryUtils#getIntegersPerCacheLine()
CALLER: org.eclipse.jetty.util.component.AbstractLifeCycle#setStarting()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#isDebugEnabled()
CALLER: org.eclipse.jetty.util.thread.QueuedThreadPool#doStart()
	CALLEE: org.eclipse.jetty.util.thread.QueuedThreadPool#startThreads(int)
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#doStart()
CALLER: org.eclipse.jetty.util.component.AbstractLifeCycle#setStarted()
	CALLEE: static org.eclipse.jetty.util.Uptime#getUptime()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#isDebugEnabled()
CALLER: org.eclipse.jetty.util.component.AbstractLifeCycle#setFailed(java.lang.Throwable)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#warn(java.lang.String,java.lang.Throwable)
CALLER: org.eclipse.jetty.util.thread.ScheduledExecutorScheduler#<init>(java.lang.String,boolean,java.lang.ClassLoader)
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#<init>()
CALLER: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessage#<init>(java.lang.String,java.lang.String,java.lang.Object[])
CALLER: org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.ResourcesProvider.1#<init>()
	CALLEE: org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.ResourcesProvider#<init>()
CALLER: static org.glassfish.jersey.uri.UriComponent.Type#<clinit>()
	CALLEE: org.glassfish.jersey.uri.UriComponent.Type#<init>(java.lang.String,int)
CALLER: static org.glassfish.jersey.uri.UriComponent#contextualEncode(java.lang.String,org.glassfish.jersey.uri.UriComponent.Type)
	CALLEE: static org.glassfish.jersey.uri.UriComponent#_encode(java.lang.String,org.glassfish.jersey.uri.UriComponent.Type,boolean,boolean)
CALLER: static org.glassfish.jersey.uri.UriComponent#<clinit>()
	CALLEE: static org.glassfish.jersey.uri.UriComponent#initEncodingTables()
	CALLEE: static org.glassfish.jersey.uri.UriComponent#initHexTable()
CALLER: liquibase.configuration.LiquibaseConfiguration#createConfiguration(java.lang.Class)
	CALLEE: liquibase.exception.UnexpectedLiquibaseException#<init>(java.lang.String,java.lang.Throwable)
CALLER: com.zaxxer.hikari.util.QueuedSequenceSynchronizer.Synchronizer#tryAcquireShared(long)
	CALLEE: static com.zaxxer.hikari.util.QueuedSequenceSynchronizer#access$100(com.zaxxer.hikari.util.QueuedSequenceSynchronizer)
	CALLEE: com.zaxxer.hikari.util.Sequence.Java8Sequence#get()
	CALLEE: com.zaxxer.hikari.util.Sequence.DropwizardSequence#get()
CALLER: com.zaxxer.hikari.util.ConcurrentBag#getCount(int)
	CALLEE: com.zaxxer.hikari.pool.PoolEntry#getState()
CALLER: com.zaxxer.hikari.util.ConcurrentBag#getPendingQueue()
	CALLEE: com.zaxxer.hikari.util.QueuedSequenceSynchronizer#getQueueLength()
CALLER: org.eclipse.jetty.util.thread.QueuedThreadPool#startThreads(int)
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#isRunning()
	CALLEE: org.eclipse.jetty.util.thread.QueuedThreadPool#newThread(java.lang.Runnable)
	CALLEE: org.eclipse.jetty.util.thread.QueuedThreadPool#isDaemon()
	CALLEE: org.eclipse.jetty.util.thread.QueuedThreadPool#getThreadsPriority()
	CALLEE: org.eclipse.jetty.util.ConcurrentHashSet#add(java.lang.Object)
CALLER: static org.eclipse.jetty.util.MemoryUtils#getIntegersPerCacheLine()
	CALLEE: static org.eclipse.jetty.util.MemoryUtils#getCacheLineBytes()
CALLER: static org.eclipse.jetty.util.MemoryUtils#<clinit>()
	CALLEE: org.eclipse.jetty.util.MemoryUtils.1#<init>()
CALLER: static org.glassfish.jersey.uri.UriComponent#_encode(java.lang.String,org.glassfish.jersey.uri.UriComponent.Type,boolean,boolean)
	CALLEE: static org.glassfish.jersey.uri.UriComponent#isHexCharacter(char)
	CALLEE: static org.glassfish.jersey.uri.UriComponent#appendPercentEncodedOctet(java.lang.StringBuilder,int)
	CALLEE: static org.glassfish.jersey.uri.UriComponent#appendUTF8EncodedCharacter(java.lang.StringBuilder,int)
CALLER: static org.glassfish.jersey.uri.UriComponent#initEncodingTables()
	CALLEE: static org.glassfish.jersey.uri.UriComponent.Type#values()
	CALLEE: static org.glassfish.jersey.uri.UriComponent#initEncodingTable(java.util.List)
CALLER: static org.glassfish.jersey.uri.UriComponent#appendUTF8EncodedCharacter(java.lang.StringBuilder,int)
	CALLEE: static org.glassfish.jersey.uri.UriComponent#appendPercentEncodedOctet(java.lang.StringBuilder,int)
CALLER: liquibase.parser.ChangeLogParserFactory.1#compare(java.lang.Object,java.lang.Object)
	CALLEE: liquibase.parser.ChangeLogParserFactory.1#compare(liquibase.parser.ChangeLogParser,liquibase.parser.ChangeLogParser)
CALLER: org.apache.velocity.runtime.log.LogDisplayWrapper#log(int,java.lang.Object)
	CALLEE: org.apache.velocity.runtime.log.LogDisplayWrapper#log(boolean,int,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.MappingJsonFactory#getCodec()
	CALLEE: com.fasterxml.jackson.databind.MappingJsonFactory#getCodec()
CALLER: org.eclipse.jetty.util.resource.URLResource#close()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#ignore(java.lang.Throwable)
CALLER: org.eclipse.jetty.util.resource.JarFileResource#close()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.resource.JarResource#close()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#ignore(java.lang.Throwable)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#isDebugEnabled()
	CALLEE: org.eclipse.jetty.util.resource.URLResource#getUseCaches()
CALLER: org.eclipse.jetty.util.resource.JarResource#close()
	CALLEE: org.eclipse.jetty.util.resource.URLResource#close()
CALLER: liquibase.database.DatabaseFactory.DatabaseComparator#compare(java.lang.Object,java.lang.Object)
	CALLEE: liquibase.database.DatabaseFactory.DatabaseComparator#compare(liquibase.database.Database,liquibase.database.Database)
CALLER: liquibase.lockservice.LockServiceFactory.1#compare(java.lang.Object,java.lang.Object)
	CALLEE: liquibase.lockservice.LockServiceFactory.1#compare(liquibase.lockservice.LockService,liquibase.lockservice.LockService)
CALLER: com.zaxxer.hikari.metrics.dropwizard.CodahaleMetricsTrackerFactory#create(java.lang.String,com.zaxxer.hikari.metrics.PoolStats)
	CALLEE: com.zaxxer.hikari.metrics.dropwizard.CodaHaleMetricsTracker#<init>(java.lang.String,com.zaxxer.hikari.metrics.PoolStats,com.codahale.metrics.MetricRegistry)
CALLER: org.eclipse.jetty.util.thread.QueuedThreadPool.3#run()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#warn(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#ignore(java.lang.Throwable)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#warn(java.lang.Throwable)
	CALLEE: org.eclipse.jetty.util.ConcurrentHashSet#remove(java.lang.Object)
	CALLEE: org.eclipse.jetty.util.BlockingArrayQueue#take()
	CALLEE: org.eclipse.jetty.util.BlockingArrayQueue#poll()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#isRunning()
	CALLEE: static org.eclipse.jetty.util.thread.QueuedThreadPool#access$000(org.eclipse.jetty.util.thread.QueuedThreadPool)
	CALLEE: static org.eclipse.jetty.util.thread.QueuedThreadPool#access$100(org.eclipse.jetty.util.thread.QueuedThreadPool)
	CALLEE: static org.eclipse.jetty.util.thread.QueuedThreadPool#access$200(org.eclipse.jetty.util.thread.QueuedThreadPool,int)
	CALLEE: org.eclipse.jetty.util.thread.QueuedThreadPool#runJob(java.lang.Runnable)
	CALLEE: static org.eclipse.jetty.util.thread.QueuedThreadPool#access$300(org.eclipse.jetty.util.thread.QueuedThreadPool)
	CALLEE: static org.eclipse.jetty.util.thread.QueuedThreadPool#access$400(org.eclipse.jetty.util.thread.QueuedThreadPool)
	CALLEE: static org.eclipse.jetty.util.thread.QueuedThreadPool#access$500(org.eclipse.jetty.util.thread.QueuedThreadPool)
	CALLEE: static org.eclipse.jetty.util.thread.QueuedThreadPool#access$600(org.eclipse.jetty.util.thread.QueuedThreadPool)
	CALLEE: static org.eclipse.jetty.util.thread.QueuedThreadPool#access$700(org.eclipse.jetty.util.thread.QueuedThreadPool)
	CALLEE: static org.eclipse.jetty.util.thread.QueuedThreadPool#access$800()
	CALLEE: org.eclipse.jetty.util.thread.QueuedThreadPool#getMaxThreads()
	CALLEE: static org.eclipse.jetty.util.thread.QueuedThreadPool#access$900(org.eclipse.jetty.util.thread.QueuedThreadPool)
CALLER: jersey.repackaged.com.google.common.base.Joiner#useForNull(java.lang.String)
	CALLEE: static jersey.repackaged.com.google.common.base.Preconditions#checkNotNull(java.lang.Object)
	CALLEE: jersey.repackaged.com.google.common.base.Joiner.1#<init>(jersey.repackaged.com.google.common.base.Joiner,jersey.repackaged.com.google.common.base.Joiner,java.lang.String)
CALLER: liquibase.parser.ChangeLogParserFactory#getParser(java.lang.String,liquibase.resource.ResourceAccessor)
	CALLEE: liquibase.exception.UnknownChangelogFormatException#<init>(java.lang.String)
CALLER: com.zaxxer.hikari.util.ConcurrentBag.1#initialValue()
	CALLEE: com.zaxxer.hikari.util.ConcurrentBag.1#initialValue()
CALLER: org.glassfish.jersey.model.internal.ComponentBag#register(java.lang.Class,org.glassfish.jersey.process.Inflector)
	CALLEE: org.glassfish.jersey.model.internal.ComponentBag#registerModel(java.lang.Class,int,java.util.Map,org.glassfish.jersey.process.Inflector)
CALLER: liquibase.changelog.ChangeLogIterator#run(liquibase.changelog.visitor.ChangeSetVisitor,liquibase.RuntimeEnvironment)
	CALLEE: liquibase.changelog.filter.DbmsChangeSetFilter#accepts(liquibase.changelog.ChangeSet)
	CALLEE: liquibase.changelog.filter.ChangeSetFilterResult#isAccepted()
	CALLEE: static liquibase.logging.LogFactory#getLogger()
	CALLEE: liquibase.logging.core.AbstractLogger#setChangeLog(liquibase.changelog.DatabaseChangeLog)
	CALLEE: liquibase.changelog.visitor.UpdateVisitor#getDirection()
	CALLEE: liquibase.logging.core.AbstractLogger#setChangeSet(liquibase.changelog.ChangeSet)
	CALLEE: liquibase.changelog.ChangeLogIterator#alreadySaw(liquibase.changelog.ChangeSet)
	CALLEE: liquibase.RuntimeEnvironment#getTargetDatabase()
	CALLEE: liquibase.changelog.visitor.UpdateVisitor#visit(liquibase.changelog.ChangeSet,liquibase.changelog.DatabaseChangeLog,liquibase.database.Database,java.util.Set)
	CALLEE: liquibase.changelog.ChangeLogIterator#markSeen(liquibase.changelog.ChangeSet)
	CALLEE: liquibase.changelog.filter.ShouldRunChangeSetFilter#accepts(liquibase.changelog.ChangeSet)
	CALLEE: liquibase.changelog.filter.ContextChangeSetFilter#accepts(liquibase.changelog.ChangeSet)
	CALLEE: liquibase.changelog.filter.LabelChangeSetFilter#accepts(liquibase.changelog.ChangeSet)
CALLER: org.eclipse.jetty.util.log.StdErrLog#info(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#format(java.lang.StringBuilder,java.lang.String,java.lang.String,java.lang.Object[])
CALLER: liquibase.changelog.ChangeLogHistoryServiceFactory.1#compare(java.lang.Object,java.lang.Object)
	CALLEE: liquibase.changelog.ChangeLogHistoryServiceFactory.1#compare(liquibase.changelog.ChangeLogHistoryService,liquibase.changelog.ChangeLogHistoryService)
CALLER: org.slf4j.helpers.SubstituteLoggerFactory#getLogger(java.lang.String)
	CALLEE: org.slf4j.helpers.SubstituteLogger#<init>(java.lang.String,java.util.Queue,boolean)
CALLER: org.eclipse.jetty.server.handler.AbstractHandlerContainer#getChildHandlersByClass(java.lang.Class)
	CALLEE: org.eclipse.jetty.server.handler.HandlerWrapper#expandChildren(java.util.List,java.lang.Class)
	CALLEE: org.eclipse.jetty.server.handler.HandlerCollection#expandChildren(java.util.List,java.lang.Class)
CALLER: liquibase.logging.core.DefaultLogger#severe(java.lang.String,java.lang.Throwable)
	CALLEE: liquibase.logging.core.DefaultLogger#getLogLevel()
	CALLEE: liquibase.logging.core.DefaultLogger#print(liquibase.logging.LogLevel,java.lang.String)
	CALLEE: org.h2.jdbc.JdbcSQLException#printStackTrace(java.io.PrintStream)
CALLER: liquibase.servicelocator.ServiceLocator#findClasses(java.lang.Class)
	CALLEE: liquibase.logging.core.DefaultLogger#debug(java.lang.String)
	CALLEE: liquibase.servicelocator.ServiceLocator#findClassesImpl(java.lang.Class)
	CALLEE: liquibase.exception.ServiceNotFoundException#<init>(java.lang.Throwable)
CALLER: liquibase.servicelocator.ServiceLocator#newInstance(java.lang.Class)
	CALLEE: liquibase.exception.ServiceNotFoundException#<init>(java.lang.Throwable)
	CALLEE: liquibase.servicelocator.ServiceLocator#findClass(java.lang.Class)
CALLER: liquibase.database.DatabaseFactory#openDatabase(java.lang.String,java.lang.String,java.lang.String,java.lang.String,liquibase.resource.ResourceAccessor)
	CALLEE: liquibase.database.DatabaseFactory#openDatabase(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,liquibase.resource.ResourceAccessor)
CALLER: org.apache.log4j.Hierarchy#getLogger(java.lang.String)
	CALLEE: org.apache.log4j.Hierarchy#getLogger(java.lang.String,org.apache.log4j.spi.LoggerFactory)
CALLER: org.apache.log4j.spi.NOPLoggerRepository#getLogger(java.lang.String)
	CALLEE: org.apache.log4j.spi.NOPLogger#<init>(org.apache.log4j.spi.NOPLoggerRepository,java.lang.String)
CALLER: org.apache.log4j.spi.NOPLoggerRepository#getRootLogger()
	CALLEE: org.apache.log4j.spi.NOPLogger#<init>(org.apache.log4j.spi.NOPLoggerRepository,java.lang.String)
CALLER: org.apache.log4j.Hierarchy#resetConfiguration()
	CALLEE: org.apache.log4j.spi.RootLogger#setLevel(org.apache.log4j.Level)
	CALLEE: org.apache.log4j.Hierarchy#setThreshold(org.apache.log4j.Level)
	CALLEE: org.apache.log4j.Hierarchy#getRootLogger()
	CALLEE: org.apache.log4j.Category#setResourceBundle(java.util.ResourceBundle)
	CALLEE: org.apache.log4j.Hierarchy#shutdown()
	CALLEE: org.apache.log4j.Hierarchy#getCurrentLoggers()
	CALLEE: org.apache.log4j.or.RendererMap#clear()
	CALLEE: org.apache.log4j.Category#setLevel(org.apache.log4j.Level)
	CALLEE: org.apache.log4j.Category#setAdditivity(boolean)
CALLER: org.apache.log4j.Hierarchy#getLogger(java.lang.String,org.apache.log4j.spi.LoggerFactory)
	CALLEE: org.apache.log4j.Category#setHierarchy(org.apache.log4j.spi.LoggerRepository)
	CALLEE: org.apache.log4j.CategoryKey#<init>(java.lang.String)
	CALLEE: org.apache.log4j.DefaultCategoryFactory#makeNewLoggerInstance(java.lang.String)
	CALLEE: org.apache.log4j.Hierarchy#updateParents(org.apache.log4j.Logger)
	CALLEE: org.apache.log4j.Hierarchy#updateChildren(org.apache.log4j.ProvisionNode,org.apache.log4j.Logger)
CALLER: org.apache.log4j.spi.NOPLoggerRepository#getLogger(java.lang.String,org.apache.log4j.spi.LoggerFactory)
	CALLEE: org.apache.log4j.spi.NOPLogger#<init>(org.apache.log4j.spi.NOPLoggerRepository,java.lang.String)
CALLER: org.apache.log4j.Hierarchy#setRenderer(java.lang.Class,org.apache.log4j.or.ObjectRenderer)
	CALLEE: org.apache.log4j.or.RendererMap#put(java.lang.Class,org.apache.log4j.or.ObjectRenderer)
CALLER: org.apache.log4j.helpers.PatternParser#parse()
	CALLEE: static org.apache.log4j.helpers.LogLog#error(java.lang.String)
	CALLEE: org.apache.log4j.helpers.PatternParser.LiteralPatternConverter#<init>(java.lang.String)
	CALLEE: org.apache.log4j.helpers.PatternParser#addToList(org.apache.log4j.helpers.PatternConverter)
	CALLEE: org.apache.log4j.helpers.FormattingInfo#reset()
	CALLEE: org.apache.log4j.helpers.PatternParser#finalizeConverter(char)
CALLER: org.eclipse.jetty.server.handler.HandlerCollection#setServer(org.eclipse.jetty.server.Server)
	CALLEE: org.eclipse.jetty.server.handler.HandlerCollection#getHandlers()
	CALLEE: org.eclipse.jetty.server.handler.AbstractHandler#setServer(org.eclipse.jetty.server.Server)
CALLER: org.traccar.Config#getLong(java.lang.String,long)
	CALLEE: org.traccar.Config#hasKey(java.lang.String)
	CALLEE: org.traccar.Config#getString(java.lang.String)
CALLER: org.traccar.web.WebServer#start()
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#start()
CALLER: org.traccar.ServerManager#start()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
CALLER: org.traccar.database.DeviceManager#getAllGroups()
	CALLEE: org.traccar.database.DeviceManager#updateGroupCache(boolean)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: org.eclipse.jetty.server.handler.ContextHandler#toString()
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#getVirtualHosts()
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#getContextPath()
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#getBaseResource()
CALLER: org.eclipse.jetty.webapp.WebAppContext#toString()
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#toString()
CALLER: org.eclipse.jetty.util.log.AbstractLogger#getLogger(java.lang.String)
	CALLEE: static org.eclipse.jetty.util.log.AbstractLogger#isBlank(java.lang.String)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#getName()
	CALLEE: static org.eclipse.jetty.util.log.Log#getRootLogger()
	CALLEE: static org.eclipse.jetty.util.log.Log#getLoggers()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#newLogger(java.lang.String)
	CALLEE: static org.eclipse.jetty.util.log.Log#getMutableLoggers()
CALLER: org.eclipse.jetty.util.log.StdErrLog#warn(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#format(java.lang.StringBuilder,java.lang.String,java.lang.String,java.lang.Object[])
CALLER: org.eclipse.jetty.util.log.StdErrLog#ignore(java.lang.Throwable)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#format(java.lang.StringBuilder,java.lang.String,java.lang.String,java.lang.Throwable)
CALLER: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.Throwable)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Throwable)
CALLER: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Throwable)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#format(java.lang.StringBuilder,java.lang.String,java.lang.String,java.lang.Throwable)
CALLER: org.eclipse.jetty.util.log.StdErrLog#warn(java.lang.String,java.lang.Throwable)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#format(java.lang.StringBuilder,java.lang.String,java.lang.String,java.lang.Throwable)
CALLER: liquibase.executor.ExecutorService#getExecutor(liquibase.database.Database)
	CALLEE: static liquibase.servicelocator.ServiceLocator#getInstance()
	CALLEE: liquibase.exception.UnexpectedLiquibaseException#<init>(java.lang.Throwable)
	CALLEE: liquibase.servicelocator.ServiceLocator#newInstance(java.lang.Class)
CALLER: liquibase.changelog.ChangeLogHistoryServiceFactory#resetAll()
	CALLEE: liquibase.changelog.OfflineChangeLogHistoryService#reset()
CALLER: org.eclipse.jetty.servlet.ServletHandler#start(org.eclipse.jetty.util.component.LifeCycle)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#start(org.eclipse.jetty.util.component.LifeCycle)
CALLER: org.apache.log4j.helpers.OnlyOnceErrorHandler#error(java.lang.String,java.lang.Exception,int)
	CALLEE: org.apache.log4j.helpers.OnlyOnceErrorHandler#error(java.lang.String,java.lang.Exception,int,org.apache.log4j.spi.LoggingEvent)
CALLER: org.apache.velocity.runtime.log.LogChuteSystem#log(int,java.lang.String,java.lang.Throwable)
	CALLEE: static org.apache.velocity.util.StringUtils#stackTrace(java.lang.Throwable)
CALLER: org.apache.velocity.runtime.log.SystemLogChute#log(int,java.lang.String,java.lang.Throwable)
	CALLEE: org.apache.velocity.runtime.log.SystemLogChute#isLevelEnabled(int)
	CALLEE: org.apache.velocity.runtime.log.SystemLogChute#getPrefix(int)
	CALLEE: org.apache.velocity.runtime.log.SystemLogChute#write(java.io.PrintStream,java.lang.String,java.lang.String,java.lang.Throwable)
CALLER: org.apache.velocity.runtime.log.HoldingLogChute#transferTo(org.apache.velocity.runtime.log.LogChute)
	CALLEE: org.apache.velocity.runtime.log.LogChuteSystem#log(int,java.lang.String,java.lang.Throwable)
	CALLEE: org.apache.velocity.runtime.log.SystemLogChute#log(int,java.lang.String,java.lang.Throwable)
	CALLEE: org.apache.velocity.runtime.log.LogChuteSystem#log(int,java.lang.String)
	CALLEE: org.apache.velocity.runtime.log.SystemLogChute#log(int,java.lang.String)
CALLER: org.apache.velocity.runtime.log.SystemLogChute#log(int,java.lang.String)
	CALLEE: org.apache.velocity.runtime.log.SystemLogChute#log(int,java.lang.String,java.lang.Throwable)
CALLER: org.traccar.database.DataManager#clearPositionsHistory()
	CALLEE: org.traccar.Config#getInteger(java.lang.String)
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#setDate(java.lang.String,java.util.Date)
	CALLEE: org.traccar.database.QueryBuilder#executeUpdate()
CALLER: com.fasterxml.jackson.databind.SerializationConfig#without(com.fasterxml.jackson.databind.SerializationFeature)
	CALLEE: com.fasterxml.jackson.databind.SerializationConfig#<init>(com.fasterxml.jackson.databind.SerializationConfig,int,int,int,int)
	CALLEE: com.fasterxml.jackson.databind.SerializationFeature#getMask()
CALLER: org.eclipse.jetty.server.handler.HandlerCollection#toString()
	CALLEE: org.eclipse.jetty.server.handler.HandlerCollection#getHandlers()
CALLER: org.eclipse.jetty.server.AbstractNetworkConnector#toString()
	CALLEE: org.eclipse.jetty.server.AbstractConnector#toString()
	CALLEE: org.eclipse.jetty.server.AbstractNetworkConnector#getHost()
	CALLEE: org.eclipse.jetty.server.ServerConnector#getLocalPort()
	CALLEE: org.eclipse.jetty.server.AbstractNetworkConnector#getPort()
CALLER: org.eclipse.jetty.util.thread.QueuedThreadPool#toString()
	CALLEE: org.eclipse.jetty.util.thread.QueuedThreadPool#getMaxThreads()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#getState()
	CALLEE: org.eclipse.jetty.util.thread.QueuedThreadPool#getMinThreads()
	CALLEE: org.eclipse.jetty.util.thread.QueuedThreadPool#getThreads()
	CALLEE: org.eclipse.jetty.util.thread.QueuedThreadPool#getIdleThreads()
	CALLEE: org.eclipse.jetty.util.BlockingArrayQueue#size()
CALLER: org.eclipse.jetty.server.AbstractConnectionFactory#toString()
	CALLEE: org.eclipse.jetty.server.AbstractConnectionFactory#getProtocol()
CALLER: com.ning.http.client.ProxyServer.Protocol#toString()
	CALLEE: com.ning.http.client.ProxyServer.Protocol#getProtocol()
CALLER: org.eclipse.jetty.server.handler.AbstractHandler#doStart()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#warn(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#isDebugEnabled()
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#doStart()
CALLER: org.eclipse.jetty.server.Server#doStart()
	CALLEE: static org.eclipse.jetty.util.Uptime#getUptime()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#start()
	CALLEE: org.eclipse.jetty.util.MultiException#add(java.lang.Throwable)
	CALLEE: org.eclipse.jetty.server.Server#isDumpAfterStart()
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#dumpStdErr()
	CALLEE: org.eclipse.jetty.util.MultiException#ifExceptionThrow()
	CALLEE: org.eclipse.jetty.server.AbstractConnector#getAcceptors()
	CALLEE: org.eclipse.jetty.io.SelectorManager#getSelectorCount()
	CALLEE: org.eclipse.jetty.server.ShutdownMonitor#start()
	CALLEE: org.eclipse.jetty.server.ServerConnector#getSelectorManager()
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#getBean(java.lang.Class)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#info(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.server.handler.AbstractHandler#doStart()
	CALLEE: org.eclipse.jetty.util.thread.QueuedThreadPool#getMaxThreads()
	CALLEE: org.eclipse.jetty.server.Server#getStopAtShutdown()
	CALLEE: static org.eclipse.jetty.util.thread.ShutdownThread#register(org.eclipse.jetty.util.component.LifeCycle[])
	CALLEE: static org.eclipse.jetty.server.ShutdownMonitor#register(org.eclipse.jetty.util.component.LifeCycle[])
	CALLEE: static org.eclipse.jetty.server.ShutdownMonitor#getInstance()
	CALLEE: static org.eclipse.jetty.server.Server#getVersion()
	CALLEE: static org.eclipse.jetty.http.HttpGenerator#setJettyVersion(java.lang.String)
	CALLEE: org.eclipse.jetty.util.MultiException#<init>()
	CALLEE: org.eclipse.jetty.util.MultiException#size()
CALLER: org.eclipse.jetty.server.ServerConnector#doStart()
	CALLEE: org.eclipse.jetty.server.AbstractNetworkConnector#doStart()
	CALLEE: org.eclipse.jetty.server.AbstractConnector#getAcceptors()
	CALLEE: org.eclipse.jetty.io.SelectorManager#acceptor(java.nio.channels.ServerSocketChannel)
CALLER: org.eclipse.jetty.servlet.ErrorPageErrorHandler#doStart()
	CALLEE: org.eclipse.jetty.server.handler.AbstractHandler#doStart()
	CALLEE: static org.eclipse.jetty.server.handler.ContextHandler#getCurrentContext()
CALLER: org.eclipse.jetty.util.component.ContainerLifeCycle#doStart()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#isRunning()
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#unmanage(org.eclipse.jetty.util.component.ContainerLifeCycle.Bean)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#manage(org.eclipse.jetty.util.component.ContainerLifeCycle.Bean)
	CALLEE: org.eclipse.jetty.server.Server#start(org.eclipse.jetty.util.component.LifeCycle)
	CALLEE: static org.eclipse.jetty.util.component.ContainerLifeCycle.Bean#access$000(org.eclipse.jetty.util.component.ContainerLifeCycle.Bean)
	CALLEE: static org.eclipse.jetty.util.component.ContainerLifeCycle.Bean#access$100(org.eclipse.jetty.util.component.ContainerLifeCycle.Bean)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#start(org.eclipse.jetty.util.component.LifeCycle)
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#doStart()
	CALLEE: org.eclipse.jetty.servlet.ServletHandler#start(org.eclipse.jetty.util.component.LifeCycle)
CALLER: org.eclipse.jetty.io.SelectorManager#doStart()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#start()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#doStart()
	CALLEE: org.eclipse.jetty.io.SelectorManager#newSelector(int)
	CALLEE: org.eclipse.jetty.util.thread.NonBlockingThread#<init>(java.lang.Runnable)
	CALLEE: org.eclipse.jetty.io.SelectorManager#execute(java.lang.Runnable)
CALLER: org.eclipse.jetty.server.session.HashSessionManager#doStart()
	CALLEE: org.eclipse.jetty.server.session.HashSessionManager#setScavengePeriod(int)
	CALLEE: org.eclipse.jetty.server.handler.AbstractHandler#getServer()
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#addBean(java.lang.Object,boolean)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#getBean(java.lang.Class)
	CALLEE: org.eclipse.jetty.util.thread.ScheduledExecutorScheduler#<init>(java.lang.String,boolean)
	CALLEE: static org.eclipse.jetty.server.handler.ContextHandler#getCurrentContext()
	CALLEE: org.eclipse.jetty.server.session.AbstractSessionManager#getSessionHandler()
	CALLEE: org.eclipse.jetty.server.session.AbstractSessionManager#doStart()
	CALLEE: org.eclipse.jetty.server.session.HashSessionManager#getScavengePeriod()
	CALLEE: org.eclipse.jetty.server.session.HashSessionManager#restoreSessions()
	CALLEE: org.eclipse.jetty.server.session.HashSessionManager#getSavePeriod()
	CALLEE: org.eclipse.jetty.server.session.HashSessionManager#setSavePeriod(int)
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler.Context#getAttribute(java.lang.String)
CALLER: org.eclipse.jetty.util.thread.ScheduledExecutorScheduler#doStart()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#doStart()
	CALLEE: org.eclipse.jetty.util.thread.ScheduledExecutorScheduler.1#<init>(org.eclipse.jetty.util.thread.ScheduledExecutorScheduler)
CALLER: org.eclipse.jetty.servlet.ServletHandler#addServletWithMapping(org.eclipse.jetty.servlet.ServletHolder,java.lang.String)
	CALLEE: static org.eclipse.jetty.util.ArrayUtil#addToArray(java.lang.Object[],java.lang.Object,java.lang.Class)
	CALLEE: org.eclipse.jetty.servlet.Holder#getName()
	CALLEE: org.eclipse.jetty.servlet.ServletHandler#getServlets()
	CALLEE: org.eclipse.jetty.servlet.ServletHandler#setServlets(org.eclipse.jetty.servlet.ServletHolder[])
	CALLEE: org.eclipse.jetty.servlet.ServletMapping#<init>()
	CALLEE: org.eclipse.jetty.servlet.ServletMapping#setServletName(java.lang.String)
	CALLEE: org.eclipse.jetty.servlet.ServletMapping#setPathSpec(java.lang.String)
	CALLEE: org.eclipse.jetty.servlet.ServletHandler#getServletMappings()
	CALLEE: org.eclipse.jetty.servlet.ServletHandler#setServletMappings(org.eclipse.jetty.servlet.ServletMapping[])
CALLER: liquibase.logging.core.DefaultLogger#info(java.lang.String)
	CALLEE: liquibase.logging.core.DefaultLogger#getLogLevel()
	CALLEE: liquibase.logging.core.DefaultLogger#print(liquibase.logging.LogLevel,java.lang.String)
CALLER: org.traccar.database.GeofenceManager#getCurrentDeviceGeofences(org.traccar.model.Position)
	CALLEE: org.traccar.database.GeofenceManager#getGeofence(long)
	CALLEE: org.traccar.database.GeofenceManager#getAllDeviceGeofences(long)
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
CALLER: org.eclipse.jetty.util.component.AbstractLifeCycle#stop()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#setFailed(java.lang.Throwable)
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#setStopping()
	CALLEE: org.eclipse.jetty.server.handler.AbstractHandler#doStop()
	CALLEE: org.eclipse.jetty.server.session.HashSessionManager#doStop()
	CALLEE: org.eclipse.jetty.server.Server#doStop()
	CALLEE: org.eclipse.jetty.server.AbstractNetworkConnector#doStop()
	CALLEE: org.eclipse.jetty.util.thread.QueuedThreadPool#doStop()
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#doStop()
	CALLEE: org.eclipse.jetty.server.session.SessionHandler#doStop()
	CALLEE: org.eclipse.jetty.io.SelectorManager#doStop()
	CALLEE: org.eclipse.jetty.servlet.ServletHandler#doStop()
	CALLEE: org.eclipse.jetty.util.thread.ScheduledExecutorScheduler#doStop()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#setStopped()
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector#doStop()
	CALLEE: org.eclipse.jetty.server.session.HashSessionIdManager#doStop()
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#doStop()
	CALLEE: org.eclipse.jetty.servlet.ServletContextHandler#doStop()
	CALLEE: org.eclipse.jetty.webapp.WebAppContext#doStop()
CALLER: org.eclipse.jetty.util.component.ContainerLifeCycle#setStopTimeout(long)
	CALLEE: static org.eclipse.jetty.util.component.ContainerLifeCycle.Bean#access$000(org.eclipse.jetty.util.component.ContainerLifeCycle.Bean)
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#setStopTimeout(long)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#setStopTimeout(long)
	CALLEE: org.eclipse.jetty.server.Server#setStopTimeout(long)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle.Bean#isManaged()
CALLER: org.eclipse.jetty.server.Server#setStopTimeout(long)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#setStopTimeout(long)
CALLER: org.traccar.Main.2#run()
	CALLEE: static org.traccar.helper.Log#info(java.lang.String)
	CALLEE: static org.traccar.Context#getServerManager()
	CALLEE: static org.traccar.Context#getWebServer()
	CALLEE: org.traccar.web.WebServer#stop()
	CALLEE: org.traccar.ServerManager#stop()
CALLER: org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.1#getResources(java.lang.String,java.lang.ClassLoader)
	CALLEE: org.glassfish.jersey.internal.OsgiRegistry#getPackageResources(java.lang.String,java.lang.ClassLoader,boolean)
CALLER: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.internal.util.ReflectionHelper#getOsgiRegistryInstance()
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessage#getKey()
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessage#getArguments()
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessage#getResourceBundleName()
	CALLEE: org.glassfish.jersey.internal.OsgiRegistry#getResourceBundle(java.lang.String)
	CALLEE: static org.glassfish.hk2.osgiresourcelocator.ResourceFinder#findEntry(java.lang.String)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#getDefaultMessage(org.glassfish.jersey.internal.l10n.Localizable)
CALLER: liquibase.changelog.ChangeLogParameters.ChangeLogParameter#isValid()
	CALLEE: static liquibase.changelog.ChangeLogParameters#access$100(liquibase.changelog.ChangeLogParameters)
	CALLEE: static liquibase.changelog.ChangeLogParameters#access$200(liquibase.changelog.ChangeLogParameters)
	CALLEE: static liquibase.changelog.ChangeLogParameters#access$300(liquibase.changelog.ChangeLogParameters)
	CALLEE: static liquibase.database.DatabaseList#definitionMatches(java.util.Collection,liquibase.database.Database,boolean)
	CALLEE: liquibase.LabelExpression#matches(liquibase.Labels)
CALLER: liquibase.changelog.ChangeLogParameters.ChangeLogParameter#toString()
	CALLEE: liquibase.changelog.ChangeLogParameters.ChangeLogParameter#getValue()
CALLER: org.eclipse.jetty.server.session.SessionHandler#doStart()
	CALLEE: org.eclipse.jetty.server.session.HashSessionManager#<init>()
	CALLEE: org.eclipse.jetty.server.session.SessionHandler#setSessionManager(org.eclipse.jetty.server.SessionManager)
	CALLEE: org.eclipse.jetty.server.handler.ScopedHandler#doStart()
CALLER: org.eclipse.jetty.servlet.ServletHandler#doStart()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler.NoContext#<init>()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#isDebugEnabled()
	CALLEE: static org.eclipse.jetty.server.handler.ContextHandler#getCurrentContext()
	CALLEE: org.eclipse.jetty.server.handler.ScopedHandler#doStart()
	CALLEE: org.eclipse.jetty.servlet.ServletHandler#updateNameMappings()
	CALLEE: org.eclipse.jetty.servlet.ServletHandler#updateMappings()
	CALLEE: org.eclipse.jetty.servlet.ServletHandler#getServletMapping(java.lang.String)
	CALLEE: org.eclipse.jetty.servlet.ServletHandler#addServletWithMapping(java.lang.Class,java.lang.String)
	CALLEE: org.eclipse.jetty.servlet.ServletHandler#initialize()
	CALLEE: org.eclipse.jetty.server.handler.AbstractHandlerContainer#getChildHandlerByClass(java.lang.Class)
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler.Context#getContextHandler()
CALLER: org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory#create(java.net.URI,boolean)
	CALLEE: org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory#create(java.net.URI,boolean)
CALLER: org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory#create(java.net.URI,boolean)
	CALLEE: org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory#create(java.net.URI,boolean)
CALLER: org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory#create(java.net.URI,boolean)
	CALLEE: org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.VfsResourceFinder#<init>(java.net.URI,boolean)
CALLER: org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory#create(java.net.URI,boolean)
	CALLEE: org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory#create(java.net.URI,boolean)
CALLER: org.apache.velocity.runtime.log.LogDisplayWrapper#log(boolean,int,java.lang.Object)
	CALLEE: org.apache.velocity.runtime.log.LogDisplayWrapper#getLogChute()
	CALLEE: org.apache.velocity.runtime.log.HoldingLogChute#log(int,java.lang.String)
	CALLEE: org.apache.velocity.runtime.log.LogChuteSystem#log(int,java.lang.String)
	CALLEE: org.apache.velocity.runtime.log.SystemLogChute#log(int,java.lang.String)
CALLER: com.zaxxer.hikari.metrics.dropwizard.CodaHaleMetricsTracker#<init>(java.lang.String,com.zaxxer.hikari.metrics.PoolStats,com.codahale.metrics.MetricRegistry)
	CALLEE: com.zaxxer.hikari.metrics.MetricsTracker#<init>()
	CALLEE: com.zaxxer.hikari.metrics.dropwizard.CodaHaleMetricsTracker.1#<init>(com.zaxxer.hikari.metrics.dropwizard.CodaHaleMetricsTracker,com.zaxxer.hikari.metrics.PoolStats)
	CALLEE: com.zaxxer.hikari.metrics.dropwizard.CodaHaleMetricsTracker.2#<init>(com.zaxxer.hikari.metrics.dropwizard.CodaHaleMetricsTracker,com.zaxxer.hikari.metrics.PoolStats)
	CALLEE: com.zaxxer.hikari.metrics.dropwizard.CodaHaleMetricsTracker.3#<init>(com.zaxxer.hikari.metrics.dropwizard.CodaHaleMetricsTracker,com.zaxxer.hikari.metrics.PoolStats)
	CALLEE: com.zaxxer.hikari.metrics.dropwizard.CodaHaleMetricsTracker.4#<init>(com.zaxxer.hikari.metrics.dropwizard.CodaHaleMetricsTracker,com.zaxxer.hikari.metrics.PoolStats)
CALLER: static org.eclipse.jetty.util.thread.QueuedThreadPool#access$200(org.eclipse.jetty.util.thread.QueuedThreadPool,int)
	CALLEE: org.eclipse.jetty.util.thread.QueuedThreadPool#startThreads(int)
CALLER: org.eclipse.jetty.util.thread.QueuedThreadPool#runJob(java.lang.Runnable)
	CALLEE: org.eclipse.jetty.util.thread.NonBlockingThread#run()
	CALLEE: org.eclipse.jetty.server.AbstractConnector.Acceptor#run()
	CALLEE: org.eclipse.jetty.util.thread.QueuedThreadPool.1#run()
	CALLEE: org.eclipse.jetty.io.AbstractConnection.1#run()
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector.EndPointCloser#run()
CALLER: static org.eclipse.jetty.util.thread.QueuedThreadPool#access$700(org.eclipse.jetty.util.thread.QueuedThreadPool)
	CALLEE: org.eclipse.jetty.util.thread.QueuedThreadPool#idleJobPoll()
CALLER: jersey.repackaged.com.google.common.base.Joiner.1#<init>(jersey.repackaged.com.google.common.base.Joiner,jersey.repackaged.com.google.common.base.Joiner,java.lang.String)
	CALLEE: jersey.repackaged.com.google.common.base.Joiner#<init>(jersey.repackaged.com.google.common.base.Joiner,jersey.repackaged.com.google.common.base.Joiner.1)
CALLER: liquibase.exception.UnknownChangelogFormatException#<init>(java.lang.String)
	CALLEE: liquibase.exception.LiquibaseException#<init>(java.lang.String)
CALLER: com.zaxxer.hikari.util.ConcurrentBag.1#initialValue()
	CALLEE: com.zaxxer.hikari.util.FastList#<init>(java.lang.Class,int)
CALLER: org.glassfish.jersey.model.internal.ComponentBag#registerModel(java.lang.Class,int,java.util.Map,org.glassfish.jersey.process.Inflector)
	CALLEE: org.glassfish.jersey.model.internal.ComponentBag.5#<init>(org.glassfish.jersey.model.internal.ComponentBag,java.lang.Class,int,java.util.Map,org.glassfish.jersey.process.Inflector)
	CALLEE: static org.glassfish.jersey.internal.Errors#process(org.glassfish.jersey.internal.util.Producer)
CALLER: static liquibase.changelog.visitor.ChangeSetVisitor.Direction#<clinit>()
	CALLEE: liquibase.changelog.visitor.ChangeSetVisitor.Direction#<init>(java.lang.String,int)
CALLER: liquibase.changelog.ChangeLogIterator#alreadySaw(liquibase.changelog.ChangeSet)
	CALLEE: liquibase.changelog.ChangeLogIterator#createKey(liquibase.changelog.ChangeSet)
CALLER: liquibase.changelog.visitor.UpdateVisitor#visit(liquibase.changelog.ChangeSet,liquibase.changelog.DatabaseChangeLog,liquibase.database.Database,java.util.Set)
	CALLEE: liquibase.logging.core.DefaultLogger#debug(java.lang.String)
	CALLEE: liquibase.changelog.visitor.UpdateVisitor#fireWillRun(liquibase.changelog.ChangeSet,liquibase.changelog.DatabaseChangeLog,liquibase.database.Database,liquibase.changelog.ChangeSet.RunStatus)
	CALLEE: liquibase.changelog.visitor.UpdateVisitor#fireRunFailed(liquibase.changelog.ChangeSet,liquibase.changelog.DatabaseChangeLog,liquibase.database.Database,liquibase.exception.MigrationFailedException)
	CALLEE: liquibase.changelog.visitor.UpdateVisitor#fireRan(liquibase.changelog.ChangeSet,liquibase.changelog.DatabaseChangeLog,liquibase.database.Database,liquibase.changelog.ChangeSet.ExecType)
	CALLEE: liquibase.database.AbstractJdbcDatabase#setObjectQuotingStrategy(liquibase.database.ObjectQuotingStrategy)
	CALLEE: liquibase.database.AbstractJdbcDatabase#commit()
	CALLEE: liquibase.database.AbstractJdbcDatabase#markChangeSetExecStatus(liquibase.changelog.ChangeSet,liquibase.changelog.ChangeSet.ExecType)
	CALLEE: liquibase.database.AbstractJdbcDatabase#getObjectQuotingStrategy()
	CALLEE: liquibase.database.AbstractJdbcDatabase#getRunStatus(liquibase.changelog.ChangeSet)
CALLER: liquibase.changelog.ChangeLogIterator#markSeen(liquibase.changelog.ChangeSet)
	CALLEE: liquibase.changelog.ChangeLogIterator#createKey(liquibase.changelog.ChangeSet)
CALLER: liquibase.changelog.ChangeLogHistoryServiceFactory.1#compare(liquibase.changelog.ChangeLogHistoryService,liquibase.changelog.ChangeLogHistoryService)
	CALLEE: liquibase.changelog.OfflineChangeLogHistoryService#getPriority()
CALLER: static org.slf4j.helpers.NOPLogger#<clinit>()
	CALLEE: org.slf4j.helpers.NOPLogger#<init>()
CALLER: org.eclipse.jetty.server.handler.HandlerWrapper#expandChildren(java.util.List,java.lang.Class)
	CALLEE: org.eclipse.jetty.server.handler.AbstractHandlerContainer#expandHandler(org.eclipse.jetty.server.Handler,java.util.List,java.lang.Class)
CALLER: liquibase.servicelocator.ServiceLocator#findClassesImpl(java.lang.Class)
	CALLEE: liquibase.resource.ClassLoaderResourceAccessor#toClassLoader()
	CALLEE: liquibase.logging.core.DefaultLogger#debug(java.lang.String)
	CALLEE: liquibase.logging.core.DefaultLogger#info(java.lang.String)
	CALLEE: liquibase.servicelocator.DefaultPackageScanClassResolver#addClassLoader(java.lang.ClassLoader)
	CALLEE: liquibase.servicelocator.DefaultPackageScanClassResolver#findImplementations(java.lang.Class,java.lang.String[])
	CALLEE: liquibase.logging.core.DefaultLogger#warning(java.lang.String)
CALLER: liquibase.servicelocator.ServiceLocator#findClass(java.lang.Class)
	CALLEE: liquibase.exception.UnexpectedLiquibaseException#<init>(java.lang.Throwable)
	CALLEE: liquibase.servicelocator.ServiceLocator#findClasses(java.lang.Class)
	CALLEE: liquibase.exception.ServiceNotFoundException#<init>(java.lang.String)
CALLER: liquibase.database.DatabaseFactory#openDatabase(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,liquibase.resource.ResourceAccessor)
	CALLEE: liquibase.database.DatabaseFactory#openConnection(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,liquibase.resource.ResourceAccessor)
	CALLEE: liquibase.database.DatabaseFactory#findCorrectDatabaseImplementation(liquibase.database.DatabaseConnection)
CALLER: org.apache.log4j.spi.NOPLogger#<init>(org.apache.log4j.spi.NOPLoggerRepository,java.lang.String)
	CALLEE: org.apache.log4j.Logger#<init>(java.lang.String)
CALLER: org.apache.log4j.Hierarchy#shutdown()
	CALLEE: org.apache.log4j.Hierarchy#getRootLogger()
	CALLEE: org.apache.log4j.Hierarchy#getCurrentLoggers()
	CALLEE: org.apache.log4j.Category#closeNestedAppenders()
	CALLEE: org.apache.log4j.Category#removeAllAppenders()
CALLER: org.apache.log4j.DefaultCategoryFactory#makeNewLoggerInstance(java.lang.String)
	CALLEE: org.apache.log4j.Logger#<init>(java.lang.String)
CALLER: org.apache.log4j.Hierarchy#updateParents(org.apache.log4j.Logger)
	CALLEE: org.apache.log4j.CategoryKey#<init>(java.lang.String)
	CALLEE: org.apache.log4j.ProvisionNode#<init>(org.apache.log4j.Logger)
CALLER: org.apache.log4j.helpers.PatternParser.LiteralPatternConverter#<init>(java.lang.String)
	CALLEE: org.apache.log4j.helpers.PatternConverter#<init>()
CALLER: org.apache.log4j.helpers.PatternParser#finalizeConverter(char)
	CALLEE: static org.apache.log4j.helpers.LogLog#error(java.lang.String)
	CALLEE: org.apache.log4j.helpers.PatternParser.LiteralPatternConverter#<init>(java.lang.String)
	CALLEE: org.apache.log4j.helpers.PatternParser#addConverter(org.apache.log4j.helpers.PatternConverter)
	CALLEE: static org.apache.log4j.helpers.LogLog#error(java.lang.String,java.lang.Throwable)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#instantiateByClassName(java.lang.String,java.lang.Class,java.lang.Object)
	CALLEE: org.apache.log4j.helpers.PatternParser#extractPrecisionOption()
	CALLEE: org.apache.log4j.helpers.PatternParser.CategoryPatternConverter#<init>(org.apache.log4j.helpers.PatternParser,org.apache.log4j.helpers.FormattingInfo,int)
	CALLEE: org.apache.log4j.helpers.PatternParser.ClassNamePatternConverter#<init>(org.apache.log4j.helpers.PatternParser,org.apache.log4j.helpers.FormattingInfo,int)
	CALLEE: org.apache.log4j.helpers.PatternParser#extractOption()
	CALLEE: org.apache.log4j.helpers.ISO8601DateFormat#<init>()
	CALLEE: org.apache.log4j.helpers.AbsoluteTimeDateFormat#<init>()
	CALLEE: org.apache.log4j.helpers.DateTimeDateFormat#<init>()
	CALLEE: static org.apache.log4j.helpers.PatternParser#class$(java.lang.String)
	CALLEE: org.apache.log4j.helpers.PatternParser.DatePatternConverter#<init>(org.apache.log4j.helpers.FormattingInfo,java.text.DateFormat)
	CALLEE: org.apache.log4j.helpers.PatternParser.LocationPatternConverter#<init>(org.apache.log4j.helpers.PatternParser,org.apache.log4j.helpers.FormattingInfo,int)
	CALLEE: org.apache.log4j.helpers.PatternParser.BasicPatternConverter#<init>(org.apache.log4j.helpers.FormattingInfo,int)
	CALLEE: org.apache.log4j.helpers.PatternParser.MDCPatternConverter#<init>(org.apache.log4j.helpers.FormattingInfo,java.lang.String)
CALLER: static org.eclipse.jetty.util.log.Log#getRootLogger()
	CALLEE: static org.eclipse.jetty.util.log.Log#initialized()
CALLER: org.eclipse.jetty.util.log.StdErrLog#newLogger(java.lang.String)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#<init>(java.lang.String)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#setPrintLongNames(boolean)
CALLER: org.eclipse.jetty.util.log.StdErrLog#format(java.lang.StringBuilder,java.lang.String,java.lang.String,java.lang.Throwable)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#format(java.lang.StringBuilder,java.lang.String,java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#format(java.lang.StringBuilder,java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#isHideStacks()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#format(java.lang.StringBuilder,java.lang.Throwable)
CALLER: org.apache.log4j.helpers.OnlyOnceErrorHandler#error(java.lang.String,java.lang.Exception,int,org.apache.log4j.spi.LoggingEvent)
	CALLEE: static org.apache.log4j.helpers.LogLog#error(java.lang.String,java.lang.Throwable)
CALLER: static org.apache.velocity.util.StringUtils#stackTrace(java.lang.Throwable)
	CALLEE: org.h2.jdbc.JdbcSQLException#printStackTrace(java.io.PrintWriter)
	CALLEE: org.glassfish.hk2.api.MultiException#printStackTrace(java.io.PrintWriter)
CALLER: org.apache.velocity.runtime.log.SystemLogChute#write(java.io.PrintStream,java.lang.String,java.lang.String,java.lang.Throwable)
	CALLEE: org.apache.log4j.config.PropertySetterException#getMessage()
	CALLEE: org.glassfish.hk2.api.MultiException#getMessage()
	CALLEE: org.glassfish.hk2.api.MultiException#printStackTrace(java.io.PrintStream)
	CALLEE: org.glassfish.jersey.server.model.ModelValidationException#getMessage()
	CALLEE: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference#getMessage()
	CALLEE: org.h2.jdbc.JdbcSQLException#getMessage()
	CALLEE: org.h2.jdbc.JdbcSQLException#printStackTrace(java.io.PrintStream)
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#getMessage()
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#getMessage()
CALLER: org.traccar.database.QueryBuilder#setDate(java.lang.String,java.util.Date)
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: org.traccar.database.QueryBuilder#indexes(java.lang.String)
	CALLEE: com.zaxxer.hikari.pool.ProxyConnection#close()
	CALLEE: com.zaxxer.hikari.pool.ProxyStatement#close()
	CALLEE: com.zaxxer.hikari.pool.HikariProxyPreparedStatement#setTimestamp(int,java.sql.Timestamp)
	CALLEE: com.zaxxer.hikari.pool.HikariProxyPreparedStatement#setNull(int,int)
CALLER: org.eclipse.jetty.server.AbstractConnector#toString()
	CALLEE: org.eclipse.jetty.server.AbstractConnector#getDefaultProtocol()
CALLER: static org.eclipse.jetty.util.thread.ShutdownThread#register(org.eclipse.jetty.util.component.LifeCycle[])
	CALLEE: org.eclipse.jetty.util.thread.ShutdownThread#hook()
CALLER: static org.eclipse.jetty.util.thread.ShutdownThread#<clinit>()
	CALLEE: static org.eclipse.jetty.util.log.Log#getLogger(java.lang.Class)
	CALLEE: org.eclipse.jetty.util.thread.ShutdownThread#<init>()
CALLER: static org.eclipse.jetty.server.ShutdownMonitor#register(org.eclipse.jetty.util.component.LifeCycle[])
	CALLEE: static org.eclipse.jetty.server.ShutdownMonitor#getInstance()
CALLER: static org.eclipse.jetty.http.HttpGenerator#setJettyVersion(java.lang.String)
	CALLEE: static org.eclipse.jetty.util.StringUtil#getBytes(java.lang.String)
CALLER: static org.eclipse.jetty.http.HttpGenerator#<clinit>()
	CALLEE: static org.eclipse.jetty.util.log.Log#getLogger(java.lang.Class)
	CALLEE: static org.eclipse.jetty.util.StringUtil#getBytes(java.lang.String)
	CALLEE: org.eclipse.jetty.http.HttpVersion#toString()
	CALLEE: org.eclipse.jetty.http.HttpGenerator.ResponseInfo#<init>(org.eclipse.jetty.http.HttpVersion,org.eclipse.jetty.http.HttpFields,long,int,java.lang.String,boolean)
	CALLEE: org.eclipse.jetty.http.HttpGenerator.1#<init>()
	CALLEE: static org.eclipse.jetty.http.HttpStatus#getCode(int)
	CALLEE: org.eclipse.jetty.http.HttpVersion#toBuffer()
	CALLEE: org.eclipse.jetty.http.HttpGenerator.PreparedResponse#<init>(org.eclipse.jetty.http.HttpGenerator.1)
	CALLEE: org.eclipse.jetty.http.HttpMethod#asString()
CALLER: org.eclipse.jetty.util.component.ContainerLifeCycle#dumpStdErr()
	CALLEE: org.eclipse.jetty.server.Server#dump(java.lang.Appendable,java.lang.String)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#warn(java.lang.Throwable)
CALLER: org.eclipse.jetty.server.AbstractNetworkConnector#doStart()
	CALLEE: org.eclipse.jetty.server.ServerConnector#open()
	CALLEE: org.eclipse.jetty.server.AbstractConnector#doStart()
CALLER: org.eclipse.jetty.io.SelectorManager#acceptor(java.nio.channels.ServerSocketChannel)
	CALLEE: org.eclipse.jetty.io.SelectorManager#chooseSelector()
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector.Acceptor#<init>(org.eclipse.jetty.io.SelectorManager.ManagedSelector,java.nio.channels.ServerSocketChannel)
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector#submit(java.lang.Runnable)
CALLER: org.eclipse.jetty.io.SelectorManager#newSelector(int)
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector#<init>(org.eclipse.jetty.io.SelectorManager,int)
CALLER: org.eclipse.jetty.io.SelectorManager#execute(java.lang.Runnable)
	CALLEE: org.eclipse.jetty.util.thread.QueuedThreadPool#execute(java.lang.Runnable)
CALLER: org.eclipse.jetty.server.session.AbstractSessionManager#doStart()
	CALLEE: org.eclipse.jetty.server.handler.AbstractHandler#getServer()
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#addBean(java.lang.Object,boolean)
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#start()
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#doStart()
	CALLEE: static org.eclipse.jetty.server.handler.ContextHandler#getCurrentContext()
	CALLEE: org.eclipse.jetty.server.session.AbstractSessionManager#getSessionHandler()
	CALLEE: org.eclipse.jetty.server.Server#getSessionIdManager()
	CALLEE: org.eclipse.jetty.server.session.HashSessionIdManager#<init>()
	CALLEE: org.eclipse.jetty.server.Server#setSessionIdManager(org.eclipse.jetty.server.SessionIdManager)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#manage(java.lang.Object)
	CALLEE: org.eclipse.jetty.server.session.AbstractSessionManager#setSessionIdPathParameterName(java.lang.String)
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler.Context#getInitParameter(java.lang.String)
CALLER: org.eclipse.jetty.server.session.HashSessionManager#restoreSessions()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#warn(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.server.session.HashSessionManager#restoreSession(java.lang.String)
CALLER: org.eclipse.jetty.server.session.HashSessionManager#setSavePeriod(int)
	CALLEE: org.eclipse.jetty.server.session.HashSessionManager.Saver#<init>(org.eclipse.jetty.server.session.HashSessionManager)
	CALLEE: org.eclipse.jetty.util.thread.ScheduledExecutorScheduler#schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)
	CALLEE: org.eclipse.jetty.util.thread.ScheduledExecutorScheduler.2#cancel()
	CALLEE: org.eclipse.jetty.util.thread.ScheduledExecutorScheduler.ScheduledFutureTask#cancel()
CALLER: org.eclipse.jetty.servlet.ServletHandler#setServlets(org.eclipse.jetty.servlet.ServletHolder[])
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#updateBeans(java.lang.Object[],java.lang.Object[])
	CALLEE: org.eclipse.jetty.servlet.ServletHandler#updateNameMappings()
	CALLEE: org.eclipse.jetty.servlet.ServletHandler#invalidateChainsCache()
	CALLEE: org.eclipse.jetty.servlet.BaseHolder#setServletHandler(org.eclipse.jetty.servlet.ServletHandler)
CALLER: org.eclipse.jetty.servlet.ServletHandler#setServletMappings(org.eclipse.jetty.servlet.ServletMapping[])
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#isStarted()
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#updateBeans(java.lang.Object[],java.lang.Object[])
	CALLEE: org.eclipse.jetty.servlet.ServletHandler#updateMappings()
	CALLEE: org.eclipse.jetty.servlet.ServletHandler#invalidateChainsCache()
CALLER: org.traccar.database.GeofenceManager#getAllDeviceGeofences(long)
	CALLEE: org.traccar.database.GeofenceManager#getDeviceGeofences(java.util.Map,long)
CALLER: org.eclipse.jetty.util.component.AbstractLifeCycle#setStopping()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#isDebugEnabled()
CALLER: org.eclipse.jetty.server.handler.AbstractHandler#doStop()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#isDebugEnabled()
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#doStop()
CALLER: org.eclipse.jetty.server.session.HashSessionManager#doStop()
	CALLEE: org.eclipse.jetty.server.session.AbstractSessionManager#doStop()
	CALLEE: org.eclipse.jetty.util.thread.ScheduledExecutorScheduler.2#cancel()
	CALLEE: org.eclipse.jetty.util.thread.ScheduledExecutorScheduler.ScheduledFutureTask#cancel()
CALLER: org.eclipse.jetty.server.Server#doStop()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#stop()
	CALLEE: org.eclipse.jetty.util.MultiException#ifExceptionThrow()
	CALLEE: static org.eclipse.jetty.util.thread.ShutdownThread#deregister(org.eclipse.jetty.util.component.LifeCycle)
	CALLEE: static org.eclipse.jetty.server.ShutdownMonitor#deregister(org.eclipse.jetty.util.component.LifeCycle)
	CALLEE: org.eclipse.jetty.server.ServerConnector#shutdown()
	CALLEE: org.eclipse.jetty.util.FutureCallback#cancel(boolean)
	CALLEE: org.eclipse.jetty.util.FutureCallback#isDone()
	CALLEE: org.eclipse.jetty.util.FutureCallback#get(long,java.util.concurrent.TimeUnit)
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#shutdown()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#getStopTimeout()
	CALLEE: org.eclipse.jetty.server.handler.AbstractHandlerContainer#getChildHandlersByClass(java.lang.Class)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#isDebugEnabled()
	CALLEE: org.eclipse.jetty.server.Server#getStopAtShutdown()
	CALLEE: org.eclipse.jetty.util.MultiException#<init>()
	CALLEE: org.eclipse.jetty.util.MultiException#add(java.lang.Throwable)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#dumpStdErr()
	CALLEE: org.eclipse.jetty.server.handler.AbstractHandler#doStop()
	CALLEE: org.eclipse.jetty.server.Server#isDumpBeforeStop()
CALLER: org.eclipse.jetty.server.AbstractNetworkConnector#doStop()
	CALLEE: org.eclipse.jetty.server.ServerConnector#close()
	CALLEE: org.eclipse.jetty.server.AbstractConnector#doStop()
CALLER: org.eclipse.jetty.util.thread.QueuedThreadPool#doStop()
	CALLEE: org.eclipse.jetty.util.BlockingArrayQueue#offer(java.lang.Object)
	CALLEE: org.eclipse.jetty.util.BlockingArrayQueue#clear()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#getStopTimeout()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#warn(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#isDebugEnabled()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#doStop()
	CALLEE: org.eclipse.jetty.util.thread.QueuedThreadPool#getQueue()
	CALLEE: org.eclipse.jetty.util.thread.QueuedThreadPool.1#<init>(org.eclipse.jetty.util.thread.QueuedThreadPool)
	CALLEE: org.eclipse.jetty.util.ConcurrentHashSet#iterator()
	CALLEE: org.eclipse.jetty.util.ConcurrentHashSet#size()
CALLER: org.eclipse.jetty.util.component.ContainerLifeCycle#doStop()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#isRunning()
	CALLEE: static org.eclipse.jetty.util.component.ContainerLifeCycle.Bean#access$000(org.eclipse.jetty.util.component.ContainerLifeCycle.Bean)
	CALLEE: static org.eclipse.jetty.util.component.ContainerLifeCycle.Bean#access$100(org.eclipse.jetty.util.component.ContainerLifeCycle.Bean)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#stop(org.eclipse.jetty.util.component.LifeCycle)
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#doStop()
CALLER: org.eclipse.jetty.server.session.SessionHandler#doStop()
	CALLEE: org.eclipse.jetty.server.handler.AbstractHandler#doStop()
CALLER: org.eclipse.jetty.io.SelectorManager#doStop()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#stop()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#doStop()
CALLER: org.eclipse.jetty.servlet.ServletHandler#doStop()
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#updateBeans(java.lang.Object[],java.lang.Object[])
	CALLEE: org.eclipse.jetty.servlet.Holder#getName()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#warn(java.lang.String,java.lang.Throwable)
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#stop()
	CALLEE: org.eclipse.jetty.server.handler.AbstractHandler#doStop()
	CALLEE: static org.eclipse.jetty.util.ArrayUtil#asMutableList(java.lang.Object[])
	CALLEE: static org.eclipse.jetty.util.LazyList#toArray(java.lang.Object,java.lang.Class)
	CALLEE: org.eclipse.jetty.servlet.BaseHolder#getSource()
	CALLEE: org.eclipse.jetty.servlet.ServletMapping#getServletName()
CALLER: org.eclipse.jetty.util.thread.ScheduledExecutorScheduler#doStop()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#doStop()
CALLER: org.eclipse.jetty.util.component.AbstractLifeCycle#setStopped()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#isDebugEnabled()
CALLER: org.traccar.web.WebServer#stop()
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#stop()
CALLER: org.traccar.ServerManager#stop()
	CALLEE: static org.traccar.GlobalChannelFactory#release()
	CALLEE: static org.traccar.GlobalTimer#release()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
CALLER: org.glassfish.jersey.internal.OsgiRegistry#getPackageResources(java.lang.String,java.lang.ClassLoader,boolean)
	CALLEE: static org.glassfish.jersey.internal.OsgiRegistry#findEntries(org.osgi.framework.Bundle,java.lang.String,java.lang.String,boolean)
	CALLEE: static org.glassfish.jersey.internal.OsgiRegistry#bundleEntryPathToClassName(java.lang.String,java.lang.String)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#OSGI_REGISTRY_ERROR_OPENING_RESOURCE_STREAM(java.lang.Object)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#OSGI_REGISTRY_ERROR_PROCESSING_RESOURCE_STREAM(java.lang.Object)
	CALLEE: static org.glassfish.jersey.internal.OsgiRegistry#normalizedPackagePath(java.lang.String)
	CALLEE: static org.glassfish.jersey.internal.OsgiRegistry#isPackageLevelEntry(java.lang.String,java.lang.String)
CALLER: org.glassfish.jersey.internal.OsgiRegistry#getResourceBundle(java.lang.String)
	CALLEE: static org.glassfish.jersey.internal.OsgiRegistry#findEntries(org.osgi.framework.Bundle,java.lang.String,java.lang.String,boolean)
CALLER: org.glassfish.jersey.internal.l10n.Localizer#getDefaultMessage(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessage#getKey()
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessage#getArguments()
CALLER: static liquibase.database.DatabaseList#definitionMatches(java.util.Collection,liquibase.database.Database,boolean)
	CALLEE: static liquibase.database.DatabaseList#definitionMatches(java.util.Collection,java.lang.String,boolean)
	CALLEE: liquibase.database.core.UnsupportedDatabase#getShortName()
CALLER: org.eclipse.jetty.server.handler.ScopedHandler#doStart()
	CALLEE: org.eclipse.jetty.server.handler.AbstractHandler#doStart()
	CALLEE: org.eclipse.jetty.server.handler.AbstractHandlerContainer#getChildHandlerByClass(java.lang.Class)
CALLER: org.eclipse.jetty.servlet.ServletHandler#updateNameMappings()
	CALLEE: org.eclipse.jetty.servlet.Holder#getName()
	CALLEE: org.eclipse.jetty.servlet.BaseHolder#setServletHandler(org.eclipse.jetty.servlet.ServletHandler)
CALLER: org.eclipse.jetty.servlet.ServletHandler#updateMappings()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#isStarted()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#isDebugEnabled()
	CALLEE: org.eclipse.jetty.servlet.ServletHandler#initialize()
	CALLEE: org.eclipse.jetty.util.MultiMap#<init>()
	CALLEE: org.eclipse.jetty.util.MultiMap#add(java.lang.String,java.lang.Object)
	CALLEE: org.eclipse.jetty.http.PathMap#<init>()
	CALLEE: org.eclipse.jetty.http.PathMap#put(java.lang.String,java.lang.Object)
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#isEnabled()
	CALLEE: org.eclipse.jetty.servlet.ServletMapping#getServletName()
	CALLEE: org.eclipse.jetty.servlet.ServletMapping#isDefault()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
CALLER: org.eclipse.jetty.servlet.ServletHandler#addServletWithMapping(java.lang.Class,java.lang.String)
	CALLEE: org.eclipse.jetty.servlet.Holder#setHeldClass(java.lang.Class)
	CALLEE: org.eclipse.jetty.servlet.ServletHandler#addServletWithMapping(org.eclipse.jetty.servlet.ServletHolder,java.lang.String)
	CALLEE: org.eclipse.jetty.servlet.ServletHandler#newServletHolder(org.eclipse.jetty.servlet.BaseHolder.Source)
CALLER: org.eclipse.jetty.servlet.ServletHandler#initialize()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#isStarted()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#start()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Throwable)
	CALLEE: org.eclipse.jetty.util.MultiException#<init>()
	CALLEE: org.eclipse.jetty.util.MultiException#add(java.lang.Throwable)
	CALLEE: org.eclipse.jetty.util.MultiException#ifExceptionThrow()
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#getBeans(java.lang.Class)
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#initialize()
CALLER: org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory#create(java.net.URI,boolean)
	CALLEE: org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory#getInputStream(java.lang.String)
	CALLEE: org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.JarZipSchemeScanner#<init>(org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory,java.io.InputStream,java.lang.String,boolean,org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.1)
	CALLEE: org.glassfish.jersey.server.internal.scanning.ResourceFinderException#<init>(java.lang.Throwable)
CALLER: org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory#create(java.net.URI,boolean)
	CALLEE: org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeScanner#<init>(org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory,java.net.URI,boolean,org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.1)
CALLER: org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.VfsResourceFinder#<init>(java.net.URI,boolean)
	CALLEE: org.glassfish.jersey.server.internal.AbstractResourceFinderAdapter#<init>()
	CALLEE: org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.VfsResourceFinder#bindDirectory(java.net.URI)
	CALLEE: org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.VfsResourceFinder#bindMethod(java.lang.Object,java.lang.String)
	CALLEE: org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.VfsResourceFinder#getChildren(java.lang.Object,boolean)
CALLER: org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory#create(java.net.URI,boolean)
	CALLEE: org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory.BundleSchemeScanner#<init>(org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory,java.net.URI,org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory.1)
CALLER: org.eclipse.jetty.util.thread.QueuedThreadPool#idleJobPoll()
	CALLEE: org.eclipse.jetty.util.BlockingArrayQueue#poll(long,java.util.concurrent.TimeUnit)
CALLER: jersey.repackaged.com.google.common.base.Joiner#<init>(jersey.repackaged.com.google.common.base.Joiner,jersey.repackaged.com.google.common.base.Joiner.1)
	CALLEE: jersey.repackaged.com.google.common.base.Joiner#<init>(jersey.repackaged.com.google.common.base.Joiner)
CALLER: static org.glassfish.jersey.internal.Errors#process(org.glassfish.jersey.internal.util.Producer)
	CALLEE: static org.glassfish.jersey.internal.Errors#process(org.glassfish.jersey.internal.util.Producer,boolean)
CALLER: liquibase.changelog.ChangeLogIterator#createKey(liquibase.changelog.ChangeSet)
	CALLEE: static liquibase.util.StringUtils#join(java.util.Collection,java.lang.String)
CALLER: static liquibase.changelog.ChangeSet.RunStatus#<clinit>()
	CALLEE: liquibase.changelog.ChangeSet.RunStatus#<init>(java.lang.String,int)
CALLER: static liquibase.changelog.ChangeSet.ExecType#<clinit>()
	CALLEE: liquibase.changelog.ChangeSet.ExecType#<init>(java.lang.String,int,java.lang.String,boolean,boolean)
CALLER: org.slf4j.helpers.NOPLogger#<init>()
	CALLEE: org.slf4j.helpers.MarkerIgnoringBase#<init>()
CALLER: org.eclipse.jetty.server.handler.AbstractHandlerContainer#expandHandler(org.eclipse.jetty.server.Handler,java.util.List,java.lang.Class)
	CALLEE: org.eclipse.jetty.server.handler.AbstractHandlerContainer#getChildHandlersByClass(java.lang.Class)
	CALLEE: org.eclipse.jetty.server.handler.HandlerWrapper#expandChildren(java.util.List,java.lang.Class)
	CALLEE: org.eclipse.jetty.server.handler.HandlerCollection#expandChildren(java.util.List,java.lang.Class)
	CALLEE: org.eclipse.jetty.server.handler.AbstractHandlerContainer#getChildHandlers()
CALLER: liquibase.servicelocator.DefaultPackageScanClassResolver#addClassLoader(java.lang.ClassLoader)
	CALLEE: liquibase.servicelocator.DefaultPackageScanClassResolver#getClassLoaders()
CALLER: liquibase.servicelocator.DefaultPackageScanClassResolver#findImplementations(java.lang.Class,java.lang.String[])
	CALLEE: liquibase.logging.core.DefaultLogger#debug(java.lang.String)
	CALLEE: liquibase.servicelocator.AssignableToPackageScanFilter#<init>(java.lang.Class)
	CALLEE: liquibase.servicelocator.DefaultPackageScanClassResolver#getCompositeFilter(liquibase.servicelocator.PackageScanFilter)
	CALLEE: liquibase.osgi.OSGiPackageScanClassResolver#find(liquibase.servicelocator.PackageScanFilter,java.lang.String,java.util.Set)
	CALLEE: liquibase.servicelocator.DefaultPackageScanClassResolver#find(liquibase.servicelocator.PackageScanFilter,java.lang.String,java.util.Set)
CALLER: liquibase.logging.core.DefaultLogger#warning(java.lang.String)
	CALLEE: liquibase.logging.core.DefaultLogger#getLogLevel()
	CALLEE: liquibase.logging.core.DefaultLogger#print(liquibase.logging.LogLevel,java.lang.String)
CALLER: static liquibase.servicelocator.PrioritizedService#<clinit>()
	CALLEE: liquibase.servicelocator.PrioritizedService.1#<init>()
CALLER: liquibase.database.DatabaseFactory#openConnection(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,liquibase.resource.ResourceAccessor)
	CALLEE: static liquibase.database.DatabaseFactory#getInstance()
	CALLEE: liquibase.database.DatabaseFactory#register(liquibase.database.Database)
	CALLEE: static liquibase.util.StringUtils#trimToNull(java.lang.String)
	CALLEE: liquibase.resource.FileSystemResourceAccessor#toClassLoader()
	CALLEE: liquibase.database.OfflineConnection#<init>(java.lang.String,liquibase.resource.ResourceAccessor)
	CALLEE: liquibase.database.DatabaseFactory#findDefaultDriver(java.lang.String)
	CALLEE: liquibase.database.DatabaseFactory#clearRegistry()
	CALLEE: liquibase.exception.DatabaseException#<init>(java.lang.String)
	CALLEE: liquibase.database.jvm.JdbcConnection#<init>(java.sql.Connection)
	CALLEE: liquibase.exception.DatabaseException#<init>(java.lang.Throwable)
	CALLEE: org.h2.jdbc.JdbcSQLException#getMessage()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#getMessage()
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#getMessage()
	CALLEE: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference#getMessage()
CALLER: liquibase.database.DatabaseFactory#findCorrectDatabaseImplementation(liquibase.database.DatabaseConnection)
	CALLEE: liquibase.exception.UnexpectedLiquibaseException#<init>(java.lang.Throwable)
	CALLEE: liquibase.database.DatabaseFactory.DatabaseComparator#<init>(liquibase.database.DatabaseFactory.1)
	CALLEE: liquibase.logging.core.DefaultLogger#warning(java.lang.String)
	CALLEE: liquibase.database.DatabaseFactory#getImplementedDatabases()
	CALLEE: liquibase.database.core.UnsupportedDatabase#<init>()
	CALLEE: liquibase.database.core.UnsupportedDatabase#setConnection(liquibase.database.DatabaseConnection)
	CALLEE: liquibase.database.OfflineConnection#getDatabaseProductName()
	CALLEE: liquibase.database.jvm.JdbcConnection#getDatabaseProductName()
	CALLEE: liquibase.database.OfflineConnection#isCorrectDatabaseImplementation(liquibase.database.Database)
CALLER: org.apache.log4j.Category#closeNestedAppenders()
	CALLEE: org.apache.log4j.WriterAppender#close()
	CALLEE: org.apache.log4j.varia.NullAppender#close()
	CALLEE: org.apache.log4j.Category#getAllAppenders()
	CALLEE: org.apache.log4j.helpers.NullEnumeration#nextElement()
	CALLEE: org.apache.log4j.helpers.NullEnumeration#hasMoreElements()
CALLER: org.apache.log4j.Category#removeAllAppenders()
	CALLEE: org.apache.log4j.Category#fireRemoveAppenderEvent(org.apache.log4j.Appender)
	CALLEE: org.apache.log4j.helpers.AppenderAttachableImpl#getAllAppenders()
	CALLEE: org.apache.log4j.helpers.AppenderAttachableImpl#removeAllAppenders()
CALLER: org.apache.log4j.helpers.PatternParser#extractPrecisionOption()
	CALLEE: static org.apache.log4j.helpers.LogLog#error(java.lang.String)
	CALLEE: static org.apache.log4j.helpers.LogLog#error(java.lang.String,java.lang.Throwable)
	CALLEE: org.apache.log4j.helpers.PatternParser#extractOption()
CALLER: org.apache.log4j.helpers.PatternParser.CategoryPatternConverter#<init>(org.apache.log4j.helpers.PatternParser,org.apache.log4j.helpers.FormattingInfo,int)
	CALLEE: org.apache.log4j.helpers.PatternParser.NamedPatternConverter#<init>(org.apache.log4j.helpers.FormattingInfo,int)
CALLER: org.apache.log4j.helpers.PatternParser.ClassNamePatternConverter#<init>(org.apache.log4j.helpers.PatternParser,org.apache.log4j.helpers.FormattingInfo,int)
	CALLEE: org.apache.log4j.helpers.PatternParser.NamedPatternConverter#<init>(org.apache.log4j.helpers.FormattingInfo,int)
CALLER: org.apache.log4j.helpers.ISO8601DateFormat#<init>()
	CALLEE: org.apache.log4j.helpers.AbsoluteTimeDateFormat#<init>()
CALLER: org.apache.log4j.helpers.DateTimeDateFormat#<init>()
	CALLEE: org.apache.log4j.helpers.AbsoluteTimeDateFormat#<init>()
CALLER: org.apache.log4j.helpers.PatternParser.DatePatternConverter#<init>(org.apache.log4j.helpers.FormattingInfo,java.text.DateFormat)
	CALLEE: org.apache.log4j.helpers.PatternConverter#<init>(org.apache.log4j.helpers.FormattingInfo)
CALLER: org.apache.log4j.helpers.PatternParser.LocationPatternConverter#<init>(org.apache.log4j.helpers.PatternParser,org.apache.log4j.helpers.FormattingInfo,int)
	CALLEE: org.apache.log4j.helpers.PatternConverter#<init>(org.apache.log4j.helpers.FormattingInfo)
CALLER: org.apache.log4j.helpers.PatternParser.BasicPatternConverter#<init>(org.apache.log4j.helpers.FormattingInfo,int)
	CALLEE: org.apache.log4j.helpers.PatternConverter#<init>(org.apache.log4j.helpers.FormattingInfo)
CALLER: org.apache.log4j.helpers.PatternParser.MDCPatternConverter#<init>(org.apache.log4j.helpers.FormattingInfo,java.lang.String)
	CALLEE: org.apache.log4j.helpers.PatternConverter#<init>(org.apache.log4j.helpers.FormattingInfo)
CALLER: org.apache.log4j.helpers.PatternParser#addConverter(org.apache.log4j.helpers.PatternConverter)
	CALLEE: org.apache.log4j.helpers.PatternParser#addToList(org.apache.log4j.helpers.PatternConverter)
	CALLEE: org.apache.log4j.helpers.FormattingInfo#reset()
CALLER: org.eclipse.jetty.util.log.StdErrLog#format(java.lang.StringBuilder,java.lang.Throwable)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#format(java.lang.StringBuilder,java.lang.Throwable,java.lang.String)
CALLER: static org.eclipse.jetty.server.ShutdownMonitor.Holder#<clinit>()
	CALLEE: org.eclipse.jetty.server.ShutdownMonitor#<init>(org.eclipse.jetty.server.ShutdownMonitor.1)
CALLER: static org.eclipse.jetty.http.HttpHeaderValue#<clinit>()
	CALLEE: org.eclipse.jetty.util.ArrayTrie#put(java.lang.String,java.lang.Object)
	CALLEE: org.eclipse.jetty.util.ArrayTrie#<init>()
	CALLEE: org.eclipse.jetty.http.HttpHeaderValue#<init>(java.lang.String,int,java.lang.String)
	CALLEE: static org.eclipse.jetty.http.HttpHeaderValue#values()
CALLER: org.eclipse.jetty.http.HttpGenerator.ResponseInfo#<init>(org.eclipse.jetty.http.HttpVersion,org.eclipse.jetty.http.HttpFields,long,int,java.lang.String,boolean)
	CALLEE: org.eclipse.jetty.http.HttpGenerator.Info#<init>(org.eclipse.jetty.http.HttpVersion,org.eclipse.jetty.http.HttpFields,long,org.eclipse.jetty.http.HttpGenerator.1)
CALLER: static org.eclipse.jetty.http.HttpFields#<clinit>()
	CALLEE: static org.eclipse.jetty.util.log.Log#getLogger(java.lang.Class)
	CALLEE: org.eclipse.jetty.util.ArrayTernaryTrie#<init>()
	CALLEE: org.eclipse.jetty.util.ArrayTernaryTrie#put(java.lang.String,java.lang.Object)
CALLER: org.eclipse.jetty.http.HttpGenerator.1#<init>()
	CALLEE: org.eclipse.jetty.http.HttpFields#<init>()
	CALLEE: org.eclipse.jetty.http.HttpFields#put(org.eclipse.jetty.http.HttpHeader,org.eclipse.jetty.http.HttpHeaderValue)
CALLER: static org.eclipse.jetty.http.HttpMethod#<clinit>()
	CALLEE: org.eclipse.jetty.util.ArrayTrie#put(java.lang.String,java.lang.Object)
	CALLEE: org.eclipse.jetty.util.ArrayTrie#<init>()
	CALLEE: org.eclipse.jetty.http.HttpMethod#<init>(java.lang.String,int)
	CALLEE: static org.eclipse.jetty.http.HttpMethod#values()
CALLER: static org.eclipse.jetty.http.HttpStatus#<clinit>()
	CALLEE: static org.eclipse.jetty.http.HttpStatus.Code#values()
	CALLEE: static org.eclipse.jetty.http.HttpStatus.Code#access$000(org.eclipse.jetty.http.HttpStatus.Code)
CALLER: org.eclipse.jetty.http.HttpGenerator.PreparedResponse#<init>(org.eclipse.jetty.http.HttpGenerator.1)
	CALLEE: org.eclipse.jetty.http.HttpGenerator.PreparedResponse#<init>()
CALLER: org.eclipse.jetty.server.Server#dump(java.lang.Appendable,java.lang.String)
	CALLEE: org.eclipse.jetty.server.ClassLoaderDump#<init>(java.lang.ClassLoader)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#dumpBeans(java.lang.Appendable,java.lang.String,java.util.Collection[])
CALLER: org.eclipse.jetty.util.log.StdErrLog#warn(java.lang.Throwable)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#warn(java.lang.String,java.lang.Throwable)
CALLER: org.eclipse.jetty.server.ServerConnector#open()
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#addBean(java.lang.Object)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#warn(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.server.AbstractNetworkConnector#getHost()
	CALLEE: org.eclipse.jetty.server.AbstractNetworkConnector#getPort()
	CALLEE: org.eclipse.jetty.server.ServerConnector#isInheritChannel()
	CALLEE: org.eclipse.jetty.server.ServerConnector#getReuseAddress()
	CALLEE: org.eclipse.jetty.server.ServerConnector#getAcceptQueueSize()
CALLER: org.eclipse.jetty.server.AbstractConnector#doStart()
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#addBean(java.lang.Object)
	CALLEE: org.eclipse.jetty.server.AbstractConnector#getExecutor()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#info(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#doStart()
	CALLEE: org.eclipse.jetty.util.thread.QueuedThreadPool#execute(java.lang.Runnable)
	CALLEE: org.eclipse.jetty.server.AbstractConnector#getConnectionFactory(java.lang.String)
	CALLEE: org.eclipse.jetty.server.AbstractConnector.Acceptor#<init>(org.eclipse.jetty.server.AbstractConnector,int,org.eclipse.jetty.server.AbstractConnector.1)
CALLER: org.eclipse.jetty.io.SelectorManager#chooseSelector()
	CALLEE: org.eclipse.jetty.io.SelectorManager#getSelectorCount()
CALLER: org.eclipse.jetty.io.SelectorManager.ManagedSelector#<init>(org.eclipse.jetty.io.SelectorManager,int)
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#<init>()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#setStopTimeout(long)
	CALLEE: org.eclipse.jetty.util.ConcurrentArrayQueue#<init>()
CALLER: org.eclipse.jetty.util.thread.QueuedThreadPool#execute(java.lang.Runnable)
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#isRunning()
	CALLEE: org.eclipse.jetty.util.thread.QueuedThreadPool#startThreads(int)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#warn(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.thread.QueuedThreadPool#getThreads()
	CALLEE: org.eclipse.jetty.util.BlockingArrayQueue#offer(java.lang.Object)
	CALLEE: org.eclipse.jetty.server.AbstractConnector.Acceptor#toString()
CALLER: static org.eclipse.jetty.server.session.AbstractSessionIdManager#<clinit>()
	CALLEE: static org.eclipse.jetty.util.log.Log#getLogger(java.lang.Class)
CALLER: org.eclipse.jetty.server.session.HashSessionIdManager#<init>()
	CALLEE: org.eclipse.jetty.server.session.AbstractSessionIdManager#<init>()
CALLER: org.eclipse.jetty.server.Server#setSessionIdManager(org.eclipse.jetty.server.SessionIdManager)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#updateBean(java.lang.Object,java.lang.Object)
CALLER: org.eclipse.jetty.util.component.ContainerLifeCycle#manage(java.lang.Object)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#manage(org.eclipse.jetty.util.component.ContainerLifeCycle.Bean)
	CALLEE: static org.eclipse.jetty.util.component.ContainerLifeCycle.Bean#access$000(org.eclipse.jetty.util.component.ContainerLifeCycle.Bean)
CALLER: org.eclipse.jetty.server.session.HashSessionManager#restoreSession(java.lang.String)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#isDebugEnabled()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#warn(java.lang.String,java.lang.Throwable)
	CALLEE: org.eclipse.jetty.server.session.HashSessionManager#restoreSession(java.io.InputStream,org.eclipse.jetty.server.session.HashedSession)
	CALLEE: org.eclipse.jetty.server.session.AbstractSessionManager#addSession(org.eclipse.jetty.server.session.AbstractSession,boolean)
	CALLEE: org.eclipse.jetty.server.session.HashSessionManager#isDeleteUnrestorableSessions()
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#didActivate()
CALLER: org.eclipse.jetty.util.thread.ScheduledExecutorScheduler#schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)
	CALLEE: org.eclipse.jetty.util.thread.ScheduledExecutorScheduler.2#<init>(org.eclipse.jetty.util.thread.ScheduledExecutorScheduler)
	CALLEE: org.eclipse.jetty.util.thread.ScheduledExecutorScheduler.ScheduledFutureTask#<init>(org.eclipse.jetty.util.thread.ScheduledExecutorScheduler,java.util.concurrent.ScheduledFuture)
CALLER: org.eclipse.jetty.server.session.AbstractSessionManager#doStop()
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#doStop()
	CALLEE: org.eclipse.jetty.server.session.HashSessionManager#shutdownSessions()
CALLER: static org.eclipse.jetty.util.thread.ShutdownThread#deregister(org.eclipse.jetty.util.component.LifeCycle)
	CALLEE: org.eclipse.jetty.util.thread.ShutdownThread#unhook()
CALLER: static org.eclipse.jetty.server.ShutdownMonitor#deregister(org.eclipse.jetty.util.component.LifeCycle)
	CALLEE: static org.eclipse.jetty.server.ShutdownMonitor#getInstance()
CALLER: org.eclipse.jetty.server.ServerConnector#close()
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#removeBean(java.lang.Object)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#warn(java.lang.Throwable)
CALLER: org.eclipse.jetty.server.AbstractConnector#doStop()
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#removeBean(java.lang.Object)
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#getStopTimeout()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#info(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#doStop()
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#getBeans(java.lang.Class)
	CALLEE: org.eclipse.jetty.server.AbstractConnector#interruptAcceptors()
CALLER: static org.eclipse.jetty.servlet.FilterHolder#<clinit>()
	CALLEE: static org.eclipse.jetty.util.log.Log#getLogger(java.lang.Class)
CALLER: static org.glassfish.jersey.internal.OsgiRegistry#findEntries(org.osgi.framework.Bundle,java.lang.String,java.lang.String,boolean)
	CALLEE: org.glassfish.jersey.internal.OsgiRegistry.2#<init>(org.osgi.framework.Bundle,java.lang.String,java.lang.String,boolean)
CALLER: static org.glassfish.jersey.internal.OsgiRegistry#bundleEntryPathToClassName(java.lang.String,java.lang.String)
	CALLEE: static org.glassfish.jersey.internal.OsgiRegistry#normalizedPackagePath(java.lang.String)
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#OSGI_REGISTRY_ERROR_OPENING_RESOURCE_STREAM(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#localizableOSGI_REGISTRY_ERROR_OPENING_RESOURCE_STREAM(java.lang.Object)
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#OSGI_REGISTRY_ERROR_PROCESSING_RESOURCE_STREAM(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#localizableOSGI_REGISTRY_ERROR_PROCESSING_RESOURCE_STREAM(java.lang.Object)
CALLER: static org.glassfish.jersey.internal.OsgiRegistry#isPackageLevelEntry(java.lang.String,java.lang.String)
	CALLEE: static org.glassfish.jersey.internal.OsgiRegistry#normalizedPackagePath(java.lang.String)
CALLER: org.eclipse.jetty.server.handler.AbstractHandlerContainer#getChildHandlerByClass(java.lang.Class)
	CALLEE: org.eclipse.jetty.server.handler.HandlerWrapper#expandChildren(java.util.List,java.lang.Class)
CALLER: org.eclipse.jetty.http.PathMap#<init>()
	CALLEE: org.eclipse.jetty.http.PathMap#<init>(int)
CALLER: org.eclipse.jetty.http.PathMap#put(java.lang.String,java.lang.Object)
	CALLEE: org.eclipse.jetty.util.ArrayTernaryTrie#put(java.lang.String,java.lang.Object)
	CALLEE: org.eclipse.jetty.http.PathMap.MappedEntry#<init>(java.lang.String,java.lang.Object)
	CALLEE: org.eclipse.jetty.http.PathMap.MappedEntry#setMapped(java.lang.String)
	CALLEE: org.eclipse.jetty.http.PathMap.MappedEntry#getKey()
	CALLEE: org.eclipse.jetty.util.ArrayTernaryTrie#<init>(org.eclipse.jetty.util.ArrayTernaryTrie,double)
CALLER: org.eclipse.jetty.servlet.ServletHandler#newServletHolder(org.eclipse.jetty.servlet.BaseHolder.Source)
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#<init>(org.eclipse.jetty.servlet.BaseHolder.Source)
CALLER: org.eclipse.jetty.util.component.ContainerLifeCycle#getBeans(java.lang.Class)
	CALLEE: static org.eclipse.jetty.util.component.ContainerLifeCycle.Bean#access$000(org.eclipse.jetty.util.component.ContainerLifeCycle.Bean)
CALLER: org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory#getInputStream(java.lang.String)
	CALLEE: static org.glassfish.jersey.uri.UriComponent#decode(java.lang.String,org.glassfish.jersey.uri.UriComponent.Type)
CALLER: org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.JarZipSchemeScanner#<init>(org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory,java.io.InputStream,java.lang.String,boolean,org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.1)
	CALLEE: org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.JarZipSchemeScanner#<init>(org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory,java.io.InputStream,java.lang.String,boolean)
CALLER: org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeScanner#<init>(org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory,java.net.URI,boolean,org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.1)
	CALLEE: org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeScanner#<init>(org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory,java.net.URI,boolean)
CALLER: org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.VfsResourceFinder#bindDirectory(java.net.URI)
	CALLEE: org.glassfish.jersey.server.internal.scanning.ResourceFinderException#<init>(java.lang.String)
CALLER: org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.VfsResourceFinder#bindMethod(java.lang.Object,java.lang.String)
	CALLEE: org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.VfsResourceFinder.1#<init>(org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.VfsResourceFinder,java.lang.Object,java.lang.String)
	CALLEE: org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.VfsResourceFinder#bindMethod0(java.lang.Object,java.lang.String)
CALLER: org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.VfsResourceFinder#getChildren(java.lang.Object,boolean)
	CALLEE: org.glassfish.jersey.server.internal.scanning.ResourceFinderException#<init>(java.lang.String)
	CALLEE: org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.VfsResourceFinder#bindMethod(java.lang.Object,java.lang.String)
	CALLEE: org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.VfsResourceFinder#invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Class)
CALLER: org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory.BundleSchemeScanner#<init>(org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory,java.net.URI,org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory.1)
	CALLEE: org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory.BundleSchemeScanner#<init>(org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory,java.net.URI)
CALLER: static org.glassfish.jersey.internal.Errors#process(org.glassfish.jersey.internal.util.Producer,boolean)
	CALLEE: static org.glassfish.jersey.internal.Errors#process(java.util.concurrent.Callable,boolean)
CALLER: static liquibase.util.StringUtils#join(java.util.Collection,java.lang.String)
	CALLEE: liquibase.util.StringUtils.ToStringFormatter#<init>()
	CALLEE: static liquibase.util.StringUtils#join(java.util.Collection,java.lang.String,liquibase.util.StringUtils.StringUtilsFormatter)
CALLER: org.slf4j.helpers.MarkerIgnoringBase#<init>()
	CALLEE: org.slf4j.helpers.NamedLoggerBase#<init>()
CALLER: org.eclipse.jetty.server.handler.HandlerCollection#expandChildren(java.util.List,java.lang.Class)
	CALLEE: org.eclipse.jetty.server.handler.HandlerCollection#getHandlers()
	CALLEE: org.eclipse.jetty.server.handler.AbstractHandlerContainer#expandHandler(org.eclipse.jetty.server.Handler,java.util.List,java.lang.Class)
CALLER: org.eclipse.jetty.server.handler.AbstractHandlerContainer#getChildHandlers()
	CALLEE: org.eclipse.jetty.server.handler.HandlerWrapper#expandChildren(java.util.List,java.lang.Class)
	CALLEE: org.eclipse.jetty.server.handler.HandlerCollection#expandChildren(java.util.List,java.lang.Class)
CALLER: liquibase.servicelocator.DefaultPackageScanClassResolver#getClassLoaders()
	CALLEE: liquibase.logging.core.DefaultLogger#debug(java.lang.String)
CALLER: liquibase.servicelocator.DefaultPackageScanClassResolver#getCompositeFilter(liquibase.servicelocator.PackageScanFilter)
	CALLEE: liquibase.servicelocator.CompositePackageScanFilter#<init>(java.util.Set)
	CALLEE: liquibase.servicelocator.CompositePackageScanFilter#addFilter(liquibase.servicelocator.PackageScanFilter)
CALLER: liquibase.osgi.OSGiPackageScanClassResolver#find(liquibase.servicelocator.PackageScanFilter,java.lang.String,java.util.Set)
	CALLEE: liquibase.logging.core.DefaultLogger#debug(java.lang.String)
	CALLEE: liquibase.servicelocator.AssignableToPackageScanFilter#matches(java.lang.Class)
	CALLEE: liquibase.servicelocator.CompositePackageScanFilter#matches(java.lang.Class)
CALLER: liquibase.servicelocator.DefaultPackageScanClassResolver#find(liquibase.servicelocator.PackageScanFilter,java.lang.String,java.util.Set)
	CALLEE: liquibase.servicelocator.DefaultPackageScanClassResolver#getClassLoaders()
	CALLEE: liquibase.servicelocator.DefaultPackageScanClassResolver#findAllClasses(java.lang.String,java.lang.ClassLoader)
	CALLEE: liquibase.servicelocator.DefaultPackageScanClassResolver#findInAllClasses(liquibase.servicelocator.PackageScanFilter,java.lang.String,java.util.Set)
CALLER: liquibase.database.OfflineConnection#<init>(java.lang.String,liquibase.resource.ResourceAccessor)
	CALLEE: liquibase.exception.UnexpectedLiquibaseException#<init>(java.lang.String,java.lang.Throwable)
	CALLEE: static liquibase.database.OfflineConnection.OutputLiquibaseSql#fromString(java.lang.String)
	CALLEE: static liquibase.parser.SnapshotParserFactory#getInstance()
	CALLEE: liquibase.parser.SnapshotParserFactory#getParser(java.lang.String,liquibase.resource.ResourceAccessor)
	CALLEE: liquibase.logging.LogFactory#getLog()
	CALLEE: static liquibase.logging.LogFactory#getInstance()
	CALLEE: static liquibase.util.StringUtils#trimToNull(java.lang.String)
	CALLEE: liquibase.exception.UnexpectedLiquibaseException#<init>(java.lang.String)
	CALLEE: liquibase.logging.core.DefaultLogger#warning(java.lang.String)
CALLER: liquibase.database.DatabaseFactory#findDefaultDriver(java.lang.String)
	CALLEE: liquibase.database.DatabaseFactory#getImplementedDatabases()
CALLER: liquibase.exception.DatabaseException#<init>(java.lang.String)
	CALLEE: liquibase.exception.LiquibaseException#<init>(java.lang.String)
CALLER: liquibase.exception.DatabaseException#<init>(java.lang.Throwable)
	CALLEE: liquibase.exception.LiquibaseException#<init>(java.lang.Throwable)
CALLER: liquibase.database.core.UnsupportedDatabase#<init>()
	CALLEE: liquibase.database.AbstractJdbcDatabase#<init>()
CALLER: liquibase.database.core.UnsupportedDatabase#setConnection(liquibase.database.DatabaseConnection)
	CALLEE: liquibase.database.AbstractJdbcDatabase#setConnection(liquibase.database.DatabaseConnection)
	CALLEE: liquibase.database.core.UnsupportedDatabase#findCurrentDateTimeFunction()
CALLER: org.apache.log4j.Category#getAllAppenders()
	CALLEE: static org.apache.log4j.helpers.NullEnumeration#getInstance()
	CALLEE: org.apache.log4j.helpers.AppenderAttachableImpl#getAllAppenders()
CALLER: org.apache.log4j.Category#fireRemoveAppenderEvent(org.apache.log4j.Appender)
	CALLEE: org.apache.log4j.Hierarchy#fireRemoveAppenderEvent(org.apache.log4j.Category,org.apache.log4j.Appender)
CALLER: org.apache.log4j.helpers.PatternParser.NamedPatternConverter#<init>(org.apache.log4j.helpers.FormattingInfo,int)
	CALLEE: org.apache.log4j.helpers.PatternConverter#<init>(org.apache.log4j.helpers.FormattingInfo)
CALLER: org.eclipse.jetty.util.log.StdErrLog#format(java.lang.StringBuilder,java.lang.Throwable,java.lang.String)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#format(java.lang.StringBuilder,java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#format(java.lang.StringBuilder,java.lang.Throwable,java.lang.String)
	CALLEE: org.eclipse.jetty.util.MultiException#toString()
	CALLEE: org.h2.jdbc.JdbcSQLException#toString()
	CALLEE: org.eclipse.jetty.util.ConstantThrowable#toString()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#toString()
	CALLEE: org.glassfish.hk2.api.MultiException#toString()
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#toString()
CALLER: org.eclipse.jetty.server.ShutdownMonitor#<init>(org.eclipse.jetty.server.ShutdownMonitor.1)
	CALLEE: org.eclipse.jetty.server.ShutdownMonitor#<init>()
CALLER: org.eclipse.jetty.http.HttpHeaderValue#<init>(java.lang.String,int,java.lang.String)
	CALLEE: static org.eclipse.jetty.util.BufferUtil#toBuffer(java.lang.String)
CALLER: org.eclipse.jetty.http.HttpGenerator.Info#<init>(org.eclipse.jetty.http.HttpVersion,org.eclipse.jetty.http.HttpFields,long,org.eclipse.jetty.http.HttpGenerator.1)
	CALLEE: org.eclipse.jetty.http.HttpGenerator.Info#<init>(org.eclipse.jetty.http.HttpVersion,org.eclipse.jetty.http.HttpFields,long)
CALLER: org.eclipse.jetty.util.ArrayTernaryTrie#<init>()
	CALLEE: org.eclipse.jetty.util.ArrayTernaryTrie#<init>(int)
CALLER: org.eclipse.jetty.util.ArrayTernaryTrie#put(java.lang.String,java.lang.Object)
	CALLEE: org.eclipse.jetty.util.AbstractTrie#isCaseInsensitive()
CALLER: org.eclipse.jetty.http.HttpFields#put(org.eclipse.jetty.http.HttpHeader,org.eclipse.jetty.http.HttpHeaderValue)
	CALLEE: org.eclipse.jetty.http.HttpHeaderValue#toString()
	CALLEE: org.eclipse.jetty.http.HttpFields#put(org.eclipse.jetty.http.HttpHeader,java.lang.String)
CALLER: org.eclipse.jetty.http.HttpMethod#<init>(java.lang.String,int)
	CALLEE: static org.eclipse.jetty.util.StringUtil#getBytes(java.lang.String)
CALLER: static org.eclipse.jetty.http.HttpStatus.Code#<clinit>()
	CALLEE: org.eclipse.jetty.http.HttpStatus.Code#<init>(java.lang.String,int,int,java.lang.String)
CALLER: org.eclipse.jetty.util.component.ContainerLifeCycle#dumpBeans(java.lang.Appendable,java.lang.String,java.util.Collection[])
	CALLEE: static org.eclipse.jetty.util.component.ContainerLifeCycle.Bean#access$000(org.eclipse.jetty.util.component.ContainerLifeCycle.Bean)
	CALLEE: static org.eclipse.jetty.util.component.ContainerLifeCycle.Bean#access$100(org.eclipse.jetty.util.component.ContainerLifeCycle.Bean)
	CALLEE: org.eclipse.jetty.server.Server#dump(java.lang.Appendable,java.lang.String)
	CALLEE: org.eclipse.jetty.server.handler.AbstractHandler#dumpThis(java.lang.Appendable)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#dump(java.lang.Appendable,java.lang.String)
	CALLEE: org.eclipse.jetty.util.thread.QueuedThreadPool#dump(java.lang.Appendable,java.lang.String)
	CALLEE: org.eclipse.jetty.io.SelectorManager#dump(java.lang.Appendable,java.lang.String)
	CALLEE: org.eclipse.jetty.util.thread.ScheduledExecutorScheduler#dump(java.lang.Appendable,java.lang.String)
	CALLEE: static org.eclipse.jetty.util.component.ContainerLifeCycle#dumpObject(java.lang.Appendable,java.lang.Object)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#dumpThis(java.lang.Appendable)
	CALLEE: org.eclipse.jetty.servlet.Holder#dump(java.lang.Appendable,java.lang.String)
	CALLEE: org.eclipse.jetty.server.ClassLoaderDump#dump(java.lang.Appendable,java.lang.String)
CALLER: org.eclipse.jetty.server.AbstractConnector.Acceptor#<init>(org.eclipse.jetty.server.AbstractConnector,int,org.eclipse.jetty.server.AbstractConnector.1)
	CALLEE: org.eclipse.jetty.server.AbstractConnector.Acceptor#<init>(org.eclipse.jetty.server.AbstractConnector,int)
CALLER: static org.eclipse.jetty.io.SelectorManager.State#<clinit>()
	CALLEE: org.eclipse.jetty.io.SelectorManager.State#<init>(java.lang.String,int)
CALLER: static org.eclipse.jetty.util.ConcurrentArrayQueue#<clinit>()
	CALLEE: static org.eclipse.jetty.util.MemoryUtils#getIntegersPerCacheLine()
	CALLEE: org.eclipse.jetty.util.ConcurrentArrayQueue.1#<init>()
CALLER: org.eclipse.jetty.util.ConcurrentArrayQueue#<init>()
	CALLEE: org.eclipse.jetty.util.ConcurrentArrayQueue#<init>(int)
CALLER: org.eclipse.jetty.util.BlockingArrayQueue#offer(java.lang.Object)
	CALLEE: org.eclipse.jetty.util.BlockingArrayQueue#grow()
CALLER: org.eclipse.jetty.server.session.AbstractSessionIdManager#<init>()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#<init>()
CALLER: org.eclipse.jetty.server.session.HashSessionManager#restoreSession(java.io.InputStream,org.eclipse.jetty.server.session.HashedSession)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#ignore(java.lang.Throwable)
	CALLEE: org.eclipse.jetty.server.session.HashSessionManager#newSession(long,long,java.lang.String)
	CALLEE: org.eclipse.jetty.server.session.HashSessionManager#restoreSessionAttributes(java.io.InputStream,int,org.eclipse.jetty.server.session.HashedSession)
	CALLEE: org.eclipse.jetty.server.session.HashedSession#setMaxInactiveInterval(int)
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#setRequests(int)
CALLER: org.eclipse.jetty.server.session.AbstractSessionManager#addSession(org.eclipse.jetty.server.session.AbstractSession,boolean)
	CALLEE: org.eclipse.jetty.server.session.HashSessionIdManager#addSession(javax.servlet.http.HttpSession)
	CALLEE: org.eclipse.jetty.server.session.HashSessionManager#addSession(org.eclipse.jetty.server.session.AbstractSession)
	CALLEE: org.eclipse.jetty.util.statistic.CounterStatistic#increment()
	CALLEE: javax.servlet.http.HttpSessionEvent#<init>(javax.servlet.http.HttpSession)
CALLER: org.eclipse.jetty.server.session.HashSessionManager#shutdownSessions()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#isStopping()
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#getClusterId()
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#invalidate()
	CALLEE: org.eclipse.jetty.server.session.HashedSession#save(boolean)
CALLER: org.eclipse.jetty.util.thread.ShutdownThread#unhook()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#ignore(java.lang.Throwable)
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#localizableOSGI_REGISTRY_ERROR_OPENING_RESOURCE_STREAM(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#localizableOSGI_REGISTRY_ERROR_PROCESSING_RESOURCE_STREAM(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: org.eclipse.jetty.http.PathMap#<init>(int)
	CALLEE: org.eclipse.jetty.http.PathMap#<init>(int,boolean)
CALLER: org.eclipse.jetty.util.ArrayTernaryTrie#<init>(org.eclipse.jetty.util.ArrayTernaryTrie,double)
	CALLEE: org.eclipse.jetty.util.AbstractTrie#<init>(boolean)
	CALLEE: org.eclipse.jetty.util.AbstractTrie#isCaseInsensitive()
CALLER: static org.glassfish.jersey.uri.UriComponent#decode(java.lang.String,org.glassfish.jersey.uri.UriComponent.Type)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#URI_COMPONENT_ENCODED_OCTET_MALFORMED(java.lang.Object)
	CALLEE: static org.glassfish.jersey.uri.UriComponent#decode(java.lang.String,int)
	CALLEE: static org.glassfish.jersey.uri.UriComponent#decodeHost(java.lang.String,int)
	CALLEE: static org.glassfish.jersey.uri.UriComponent#decodeQueryParam(java.lang.String,int)
CALLER: org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.JarZipSchemeScanner#<init>(org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory,java.io.InputStream,java.lang.String,boolean)
	CALLEE: org.glassfish.jersey.server.internal.AbstractResourceFinderAdapter#<init>()
	CALLEE: org.glassfish.jersey.server.internal.scanning.JarFileScanner#<init>(java.io.InputStream,java.lang.String,boolean)
CALLER: org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeScanner#<init>(org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory,java.net.URI,boolean)
	CALLEE: org.glassfish.jersey.server.internal.AbstractResourceFinderAdapter#<init>()
	CALLEE: org.glassfish.jersey.server.internal.scanning.CompositeResourceFinder#<init>()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeScanner#processFile(java.io.File)
CALLER: org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.VfsResourceFinder#bindMethod0(java.lang.Object,java.lang.String)
	CALLEE: org.glassfish.jersey.server.internal.scanning.ResourceFinderException#<init>(java.lang.String)
CALLER: org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.VfsResourceFinder#invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Class)
	CALLEE: org.glassfish.jersey.server.internal.scanning.ResourceFinderException#<init>(java.lang.String)
CALLER: org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory.BundleSchemeScanner#<init>(org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory,java.net.URI)
	CALLEE: org.glassfish.jersey.server.internal.AbstractResourceFinderAdapter#<init>()
CALLER: static org.glassfish.jersey.internal.Errors#process(java.util.concurrent.Callable,boolean)
	CALLEE: org.glassfish.jersey.internal.Errors#<init>()
	CALLEE: org.glassfish.jersey.internal.Errors#preProcess()
	CALLEE: org.glassfish.jersey.model.internal.ComponentBag.5#call()
	CALLEE: org.glassfish.jersey.internal.Errors#postProcess(boolean)
	CALLEE: org.glassfish.jersey.server.ApplicationHandler.3#call()
	CALLEE: org.glassfish.jersey.internal.Errors.2#call()
	CALLEE: org.glassfish.jersey.internal.Errors.1#call()
	CALLEE: org.glassfish.jersey.server.model.IntrospectionModeller.1#call()
CALLER: static liquibase.util.StringUtils#join(java.util.Collection,java.lang.String,liquibase.util.StringUtils.StringUtilsFormatter)
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: liquibase.util.StringUtils.ToStringFormatter#toString(java.lang.Object)
CALLER: com.zaxxer.hikari.pool.HikariPool.HouseKeeper#run()
	CALLEE: com.zaxxer.hikari.pool.HikariPool#closeConnection(com.zaxxer.hikari.pool.PoolEntry,java.lang.String)
	CALLEE: com.zaxxer.hikari.util.ConcurrentBag#reserve(com.zaxxer.hikari.util.ConcurrentBag.IConcurrentBagEntry)
	CALLEE: com.zaxxer.hikari.pool.ProxyLeakTask#updateLeakDetectionThreshold(long)
	CALLEE: com.zaxxer.hikari.util.ConcurrentBag#values(int)
	CALLEE: org.slf4j.helpers.NOPLogger#warn(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.helpers.NOPLogger#error(java.lang.String,java.lang.Throwable)
	CALLEE: org.slf4j.helpers.SubstituteLogger#warn(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.helpers.SubstituteLogger#error(java.lang.String,java.lang.Throwable)
	CALLEE: org.slf4j.impl.SimpleLogger#warn(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.impl.SimpleLogger#error(java.lang.String,java.lang.Throwable)
	CALLEE: com.zaxxer.hikari.HikariConfig#getLeakDetectionThreshold()
	CALLEE: com.zaxxer.hikari.HikariConfig#getConnectionTimeout()
	CALLEE: com.zaxxer.hikari.HikariConfig#getValidationTimeout()
	CALLEE: static com.zaxxer.hikari.pool.HikariPool#access$700()
	CALLEE: static com.zaxxer.hikari.pool.HikariPool#access$800(com.zaxxer.hikari.pool.HikariPool)
	CALLEE: com.zaxxer.hikari.pool.HikariPool#logPoolState(java.lang.String[])
	CALLEE: com.zaxxer.hikari.util.ClockSource.MillisecondClockSource#currentTime()
	CALLEE: com.zaxxer.hikari.util.ClockSource.NanosecondClockSource#currentTime()
	CALLEE: com.zaxxer.hikari.util.ClockSource.MillisecondClockSource#elapsedMillis(long,long)
	CALLEE: com.zaxxer.hikari.util.ClockSource.NanosecondClockSource#elapsedMillis(long,long)
	CALLEE: com.zaxxer.hikari.util.ClockSource.MillisecondClockSource#plusMillis(long,long)
	CALLEE: com.zaxxer.hikari.util.ClockSource.NanosecondClockSource#plusMillis(long,long)
	CALLEE: static com.zaxxer.hikari.pool.HikariPool#access$900(com.zaxxer.hikari.pool.HikariPool)
	CALLEE: com.zaxxer.hikari.HikariConfig#getIdleTimeout()
	CALLEE: static com.zaxxer.hikari.pool.HikariPool#access$1000(com.zaxxer.hikari.pool.HikariPool)
	CALLEE: com.zaxxer.hikari.util.ClockSource.NanosecondClockSource#elapsedDisplayString(long,long)
	CALLEE: com.zaxxer.hikari.pool.HikariPool#softEvictConnections()
	CALLEE: static com.zaxxer.hikari.pool.HikariPool#access$1100(com.zaxxer.hikari.pool.HikariPool)
	CALLEE: static com.zaxxer.hikari.pool.HikariPool#access$600(com.zaxxer.hikari.pool.HikariPool)
	CALLEE: com.zaxxer.hikari.HikariConfig#getMinimumIdle()
CALLER: com.zaxxer.hikari.pool.ProxyLeakTask#run()
	CALLEE: org.slf4j.helpers.NOPLogger#warn(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.helpers.SubstituteLogger#warn(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.impl.SimpleLogger#warn(java.lang.String,java.lang.Object,java.lang.Object)
CALLER: liquibase.servicelocator.DefaultPackageScanClassResolver#findAllClasses(java.lang.String,java.lang.ClassLoader)
	CALLEE: liquibase.servicelocator.DefaultPackageScanClassResolver#loadImplementationsInDirectory(java.lang.String,java.io.File,java.lang.ClassLoader)
	CALLEE: liquibase.servicelocator.DefaultPackageScanClassResolver#loadImplementationsInJar(java.lang.String,java.io.InputStream,java.lang.ClassLoader,java.lang.String,java.lang.String)
	CALLEE: liquibase.logging.core.DefaultLogger#debug(java.lang.String,java.lang.Throwable)
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#getMessage()
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#getMessage()
	CALLEE: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference#getMessage()
	CALLEE: static liquibase.configuration.LiquibaseConfiguration#getInstance()
	CALLEE: liquibase.logging.core.DefaultLogger#debug(java.lang.String)
	CALLEE: liquibase.configuration.LiquibaseConfiguration#getConfiguration(java.lang.Class)
	CALLEE: liquibase.servicelocator.DefaultPackageScanClassResolver#getResources(java.lang.ClassLoader,java.lang.String)
	CALLEE: liquibase.servicelocator.WebSpherePackageScanClassResolver#getResources(java.lang.ClassLoader,java.lang.String)
	CALLEE: liquibase.logging.core.DefaultLogger#warning(java.lang.String,java.lang.Throwable)
	CALLEE: liquibase.servicelocator.DefaultPackageScanClassResolver#customResourceLocator(java.net.URL)
CALLER: liquibase.servicelocator.DefaultPackageScanClassResolver#findInAllClasses(liquibase.servicelocator.PackageScanFilter,java.lang.String,java.util.Set)
	CALLEE: liquibase.logging.core.DefaultLogger#debug(java.lang.String)
	CALLEE: liquibase.servicelocator.DefaultPackageScanClassResolver#getFoundClasses(java.lang.String)
	CALLEE: liquibase.servicelocator.AssignableToPackageScanFilter#matches(java.lang.Class)
	CALLEE: liquibase.servicelocator.CompositePackageScanFilter#matches(java.lang.Class)
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
CALLER: static liquibase.database.OfflineConnection.OutputLiquibaseSql#<clinit>()
	CALLEE: liquibase.database.OfflineConnection.OutputLiquibaseSql#<init>(java.lang.String,int)
CALLER: static liquibase.database.OfflineConnection.OutputLiquibaseSql#fromString(java.lang.String)
	CALLEE: static liquibase.database.OfflineConnection.OutputLiquibaseSql#valueOf(java.lang.String)
CALLER: static liquibase.parser.SnapshotParserFactory#getInstance()
	CALLEE: liquibase.parser.SnapshotParserFactory#<init>()
CALLER: liquibase.database.AbstractJdbcDatabase#setConnection(liquibase.database.DatabaseConnection)
	CALLEE: static liquibase.logging.LogFactory#getLogger()
	CALLEE: liquibase.logging.core.DefaultLogger#debug(java.lang.String)
	CALLEE: liquibase.logging.core.DefaultLogger#warning(java.lang.String)
	CALLEE: liquibase.database.AbstractJdbcDatabase#getAutoCommitMode()
	CALLEE: liquibase.database.OfflineConnection#getAutoCommit()
	CALLEE: liquibase.database.jvm.JdbcConnection#getAutoCommit()
	CALLEE: liquibase.database.OfflineConnection#getURL()
	CALLEE: liquibase.database.jvm.JdbcConnection#getURL()
	CALLEE: liquibase.database.OfflineConnection#getConnectionUserName()
	CALLEE: liquibase.database.jvm.JdbcConnection#getConnectionUserName()
	CALLEE: liquibase.database.OfflineConnection#attached(liquibase.database.Database)
	CALLEE: liquibase.database.jvm.JdbcConnection#attached(liquibase.database.Database)
	CALLEE: liquibase.database.OfflineConnection#setAutoCommit(boolean)
	CALLEE: liquibase.database.jvm.JdbcConnection#setAutoCommit(boolean)
CALLER: static org.apache.log4j.helpers.NullEnumeration#<clinit>()
	CALLEE: org.apache.log4j.helpers.NullEnumeration#<init>()
CALLER: org.eclipse.jetty.util.ArrayTernaryTrie#<init>(int)
	CALLEE: org.eclipse.jetty.util.ArrayTernaryTrie#<init>(boolean,int)
CALLER: org.eclipse.jetty.http.HttpFields#put(org.eclipse.jetty.http.HttpHeader,java.lang.String)
	CALLEE: org.eclipse.jetty.http.HttpField#<init>(org.eclipse.jetty.http.HttpHeader,java.lang.String)
	CALLEE: org.eclipse.jetty.http.HttpFields#remove(org.eclipse.jetty.http.HttpHeader)
	CALLEE: org.eclipse.jetty.http.HttpFields#put(org.eclipse.jetty.http.HttpField)
CALLER: org.eclipse.jetty.server.handler.AbstractHandler#dumpThis(java.lang.Appendable)
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#toString()
	CALLEE: org.eclipse.jetty.webapp.WebAppContext#toString()
	CALLEE: org.eclipse.jetty.server.handler.HandlerCollection#toString()
	CALLEE: org.eclipse.jetty.server.Server#toString()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#getState()
CALLER: org.eclipse.jetty.util.component.ContainerLifeCycle#dump(java.lang.Appendable,java.lang.String)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#dumpBeans(java.lang.Appendable,java.lang.String,java.util.Collection[])
CALLER: org.eclipse.jetty.util.thread.QueuedThreadPool#dump(java.lang.Appendable,java.lang.String)
	CALLEE: org.eclipse.jetty.util.thread.QueuedThreadPool#getMaxThreads()
	CALLEE: org.eclipse.jetty.util.ConcurrentHashSet#iterator()
	CALLEE: static org.eclipse.jetty.util.component.ContainerLifeCycle#dumpObject(java.lang.Appendable,java.lang.Object)
	CALLEE: org.eclipse.jetty.util.thread.QueuedThreadPool#isDetailedDump()
	CALLEE: org.eclipse.jetty.util.thread.QueuedThreadPool.2#<init>(org.eclipse.jetty.util.thread.QueuedThreadPool,java.lang.Thread,boolean,java.lang.StackTraceElement[])
	CALLEE: static org.eclipse.jetty.util.component.ContainerLifeCycle#dump(java.lang.Appendable,java.lang.String,java.util.Collection[])
CALLER: org.eclipse.jetty.io.SelectorManager#dump(java.lang.Appendable,java.lang.String)
	CALLEE: static org.eclipse.jetty.util.component.ContainerLifeCycle#dumpObject(java.lang.Appendable,java.lang.Object)
	CALLEE: static org.eclipse.jetty.util.component.ContainerLifeCycle#dump(java.lang.Appendable,java.lang.String,java.util.Collection[])
	CALLEE: static org.eclipse.jetty.util.TypeUtil#asList(java.lang.Object[])
CALLER: org.eclipse.jetty.util.thread.ScheduledExecutorScheduler#dump(java.lang.Appendable,java.lang.String)
	CALLEE: static org.eclipse.jetty.util.component.ContainerLifeCycle#dumpObject(java.lang.Appendable,java.lang.Object)
	CALLEE: static org.eclipse.jetty.util.component.ContainerLifeCycle#dump(java.lang.Appendable,java.lang.String,java.util.Collection[])
CALLER: static org.eclipse.jetty.util.component.ContainerLifeCycle#dumpObject(java.lang.Appendable,java.lang.Object)
	CALLEE: static org.eclipse.jetty.util.component.AbstractLifeCycle#getState(org.eclipse.jetty.util.component.LifeCycle)
	CALLEE: org.eclipse.jetty.util.MultiException#toString()
	CALLEE: org.h2.jdbc.JdbcSQLException#toString()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#toString()
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#toString()
CALLER: org.eclipse.jetty.util.ConcurrentArrayQueue#<init>(int)
	CALLEE: org.eclipse.jetty.util.ConcurrentArrayQueue#newBlock()
CALLER: org.eclipse.jetty.server.session.HashSessionManager#newSession(long,long,java.lang.String)
	CALLEE: org.eclipse.jetty.server.session.HashedSession#<init>(org.eclipse.jetty.server.session.HashSessionManager,long,long,java.lang.String)
CALLER: org.eclipse.jetty.server.session.HashSessionManager#restoreSessionAttributes(java.io.InputStream,int,org.eclipse.jetty.server.session.HashedSession)
	CALLEE: org.eclipse.jetty.util.ClassLoadingObjectInputStream#<init>(java.io.InputStream)
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#setAttribute(java.lang.String,java.lang.Object)
CALLER: org.eclipse.jetty.server.session.HashSessionIdManager#addSession(javax.servlet.http.HttpSession)
	CALLEE: org.eclipse.jetty.server.session.AbstractSessionIdManager#getClusterId(java.lang.String)
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#getId()
CALLER: org.eclipse.jetty.server.session.HashSessionManager#addSession(org.eclipse.jetty.server.session.AbstractSession)
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#isRunning()
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#getClusterId()
CALLER: org.eclipse.jetty.util.statistic.CounterStatistic#increment()
	CALLEE: org.eclipse.jetty.util.statistic.CounterStatistic#add(long)
CALLER: org.eclipse.jetty.http.PathMap#<init>(int,boolean)
	CALLEE: org.eclipse.jetty.util.ArrayTernaryTrie#<init>(boolean)
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#URI_COMPONENT_ENCODED_OCTET_MALFORMED(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#localizableURI_COMPONENT_ENCODED_OCTET_MALFORMED(java.lang.Object)
CALLER: static org.glassfish.jersey.uri.UriComponent#decode(java.lang.String,int)
	CALLEE: static org.glassfish.jersey.uri.UriComponent#decodePercentEncodedOctets(java.lang.String,int,java.nio.ByteBuffer)
	CALLEE: static org.glassfish.jersey.uri.UriComponent#decodeOctets(int,java.nio.ByteBuffer,java.lang.StringBuilder)
CALLER: static org.glassfish.jersey.uri.UriComponent.1#<clinit>()
	CALLEE: static org.glassfish.jersey.uri.UriComponent.Type#values()
CALLER: static org.glassfish.jersey.uri.UriComponent#decodeHost(java.lang.String,int)
	CALLEE: static org.glassfish.jersey.uri.UriComponent#decodePercentEncodedOctets(java.lang.String,int,java.nio.ByteBuffer)
	CALLEE: static org.glassfish.jersey.uri.UriComponent#decodeOctets(int,java.nio.ByteBuffer,java.lang.StringBuilder)
CALLER: static org.glassfish.jersey.uri.UriComponent#decodeQueryParam(java.lang.String,int)
	CALLEE: static org.glassfish.jersey.uri.UriComponent#decodePercentEncodedOctets(java.lang.String,int,java.nio.ByteBuffer)
	CALLEE: static org.glassfish.jersey.uri.UriComponent#decodeOctets(int,java.nio.ByteBuffer,java.lang.StringBuilder)
CALLER: org.glassfish.jersey.server.internal.scanning.JarFileScanner#<init>(java.io.InputStream,java.lang.String,boolean)
	CALLEE: org.glassfish.jersey.server.internal.AbstractResourceFinderAdapter#<init>()
CALLER: org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeScanner#processFile(java.io.File)
	CALLEE: org.glassfish.jersey.server.internal.scanning.CompositeResourceFinder#push(org.glassfish.jersey.server.ResourceFinder)
	CALLEE: org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeScanner.1#<init>(org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeScanner,java.io.File)
CALLER: org.glassfish.jersey.model.internal.ComponentBag.5#call()
	CALLEE: org.glassfish.jersey.model.internal.ComponentBag.5#call()
CALLER: org.glassfish.jersey.internal.Errors#postProcess(boolean)
	CALLEE: static org.glassfish.jersey.internal.Errors#processErrors(boolean)
CALLER: liquibase.util.StringUtils.ToStringFormatter#toString(java.lang.Object)
	CALLEE: org.glassfish.jersey.message.internal.QualitySourceMediaType#toString()
	CALLEE: com.fasterxml.jackson.core.JsonLocation#toString()
	CALLEE: com.fasterxml.jackson.databind.PropertyName#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#toString()
	CALLEE: com.fasterxml.jackson.core.io.SerializedString#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey#toString()
	CALLEE: org.glassfish.jersey.server.model.Invocable#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#toString()
	CALLEE: org.glassfish.jersey.server.model.MethodHandler.ClassBasedMethodHandler#toString()
	CALLEE: org.glassfish.jersey.server.model.MethodHandler.InstanceBasedMethodHandler#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#toString()
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodRouting#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#toString()
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.ConsumesProducesAcceptor#toString()
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#toString()
	CALLEE: org.eclipse.jetty.webapp.WebAppContext#toString()
	CALLEE: org.eclipse.jetty.server.handler.HandlerCollection#toString()
	CALLEE: org.eclipse.jetty.server.Server#toString()
	CALLEE: org.eclipse.jetty.server.AbstractNetworkConnector#toString()
	CALLEE: org.eclipse.jetty.util.thread.QueuedThreadPool#toString()
	CALLEE: org.eclipse.jetty.server.AbstractConnectionFactory#toString()
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle.Bean#toString()
	CALLEE: org.apache.log4j.NameValue#toString()
	CALLEE: liquibase.changelog.ChangeLogParameters.ChangeLogParameter#toString()
	CALLEE: org.eclipse.jetty.server.AbstractConnector.Acceptor#toString()
	CALLEE: org.eclipse.jetty.server.HttpConfiguration#toString()
	CALLEE: org.eclipse.jetty.util.MultiException#toString()
	CALLEE: org.eclipse.jetty.http.PathMap.MappedEntry#toString()
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector#toString()
	CALLEE: liquibase.servicelocator.AssignableToPackageScanFilter#toString()
	CALLEE: org.eclipse.jetty.http.HttpField#toString()
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#toString()
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#toString()
	CALLEE: org.eclipse.jetty.servlet.ServletMapping#toString()
	CALLEE: org.glassfish.jersey.internal.OsgiRegistry.BundleSpiProvidersLoader#toString()
	CALLEE: org.h2.jdbc.JdbcSQLException#toString()
	CALLEE: liquibase.changelog.filter.ChangeSetFilterResult#toString()
	CALLEE: com.zaxxer.hikari.pool.PoolEntry#toString()
	CALLEE: org.eclipse.jetty.io.SelectChannelEndPoint#toString()
	CALLEE: org.eclipse.jetty.util.FutureCallback#toString()
	CALLEE: org.eclipse.jetty.util.ConstantThrowable#toString()
	CALLEE: javax.ws.rs.core.MediaType#toString()
	CALLEE: org.glassfish.jersey.model.internal.RankedProvider#toString()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#toString()
	CALLEE: org.glassfish.hk2.api.MultiException#toString()
	CALLEE: jersey.repackaged.com.google.common.base.Predicates.AndPredicate#toString()
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.MapType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#toString()
	CALLEE: org.glassfish.hk2.utilities.NamedImpl#toString()
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#toString()
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#toString()
	CALLEE: com.fasterxml.jackson.databind.jsontype.NamedType#toString()
	CALLEE: liquibase.changelog.RanChangeSet#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.UnresolvedId#toString()
	CALLEE: org.glassfish.jersey.server.model.ResourceModelIssue#toString()
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#toString()
	CALLEE: org.glassfish.jersey.server.model.Parameter#toString()
	CALLEE: org.glassfish.hk2.utilities.reflection.ParameterizedTypeImpl#toString()
	CALLEE: com.fasterxml.jackson.databind.type.ClassKey#toString()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException.Reference#toString()
	CALLEE: org.glassfish.jersey.server.model.Resource.Data#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ValueNode#toString()
	CALLEE: org.glassfish.jersey.server.model.Resource#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#toString()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Data#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.MemberKey#toString()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ObjectNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ArrayNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.POJONode#toString()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#toString()
	CALLEE: com.fasterxml.jackson.databind.node.TextNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.BinaryNode#toString()
CALLER: com.zaxxer.hikari.util.ClockSource.NanosecondClockSource#elapsedDisplayString(long,long)
	CALLEE: com.zaxxer.hikari.util.ClockSource.MillisecondClockSource#elapsedNanos(long,long)
	CALLEE: com.zaxxer.hikari.util.ClockSource.NanosecondClockSource#elapsedNanos(long,long)
CALLER: com.zaxxer.hikari.pool.HikariPool#softEvictConnections()
	CALLEE: com.zaxxer.hikari.util.ConcurrentBag#values()
	CALLEE: com.zaxxer.hikari.pool.HikariPool#softEvictConnection(com.zaxxer.hikari.pool.PoolEntry,java.lang.String,boolean)
CALLER: static com.zaxxer.hikari.pool.HikariPool#access$1100(com.zaxxer.hikari.pool.HikariPool)
	CALLEE: com.zaxxer.hikari.pool.HikariPool#fillPool()
CALLER: static com.zaxxer.hikari.pool.PoolEntry#<clinit>()
	CALLEE: static org.slf4j.LoggerFactory#getLogger(java.lang.Class)
	CALLEE: com.zaxxer.hikari.pool.PoolEntry.1#<init>()
CALLER: liquibase.servicelocator.DefaultPackageScanClassResolver#getResources(java.lang.ClassLoader,java.lang.String)
	CALLEE: liquibase.logging.core.DefaultLogger#debug(java.lang.String)
CALLER: liquibase.servicelocator.WebSpherePackageScanClassResolver#getResources(java.lang.ClassLoader,java.lang.String)
	CALLEE: liquibase.logging.core.DefaultLogger#debug(java.lang.String)
	CALLEE: liquibase.servicelocator.DefaultPackageScanClassResolver#getResources(java.lang.ClassLoader,java.lang.String)
CALLER: liquibase.logging.core.DefaultLogger#warning(java.lang.String,java.lang.Throwable)
	CALLEE: liquibase.logging.core.DefaultLogger#getLogLevel()
	CALLEE: liquibase.logging.core.DefaultLogger#print(liquibase.logging.LogLevel,java.lang.String)
	CALLEE: org.h2.jdbc.JdbcSQLException#printStackTrace(java.io.PrintStream)
CALLER: liquibase.servicelocator.DefaultPackageScanClassResolver#loadImplementationsInDirectory(java.lang.String,java.io.File,java.lang.ClassLoader)
	CALLEE: liquibase.servicelocator.DefaultPackageScanClassResolver#loadImplementationsInDirectory(java.lang.String,java.io.File,java.lang.ClassLoader)
	CALLEE: liquibase.servicelocator.DefaultPackageScanClassResolver#loadClass(java.lang.String,java.lang.ClassLoader)
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
CALLER: liquibase.servicelocator.DefaultPackageScanClassResolver#loadImplementationsInJar(java.lang.String,java.io.InputStream,java.lang.ClassLoader,java.lang.String,java.lang.String)
	CALLEE: liquibase.logging.core.DefaultLogger#debug(java.lang.String)
	CALLEE: liquibase.servicelocator.DefaultPackageScanClassResolver#loadImplementationsInJar(java.lang.String,java.io.InputStream,java.lang.ClassLoader,java.lang.String,java.lang.String)
	CALLEE: liquibase.servicelocator.DefaultPackageScanClassResolver#loadClass(java.lang.String,java.lang.ClassLoader)
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
CALLER: liquibase.logging.core.DefaultLogger#debug(java.lang.String,java.lang.Throwable)
	CALLEE: liquibase.logging.core.DefaultLogger#getLogLevel()
	CALLEE: liquibase.logging.core.DefaultLogger#print(liquibase.logging.LogLevel,java.lang.String)
CALLER: liquibase.parser.SnapshotParserFactory#<init>()
	CALLEE: static liquibase.servicelocator.ServiceLocator#getInstance()
	CALLEE: liquibase.exception.UnexpectedLiquibaseException#<init>(java.lang.Throwable)
	CALLEE: liquibase.servicelocator.ServiceLocator#findClasses(java.lang.Class)
	CALLEE: liquibase.parser.SnapshotParserFactory.1#<init>(liquibase.parser.SnapshotParserFactory)
	CALLEE: liquibase.parser.SnapshotParserFactory#register(liquibase.parser.SnapshotParser)
CALLER: liquibase.database.AbstractJdbcDatabase#getAutoCommitMode()
	CALLEE: liquibase.database.AbstractJdbcDatabase#supportsDDLInTransaction()
CALLER: org.eclipse.jetty.util.ArrayTernaryTrie#<init>(boolean,int)
	CALLEE: org.eclipse.jetty.util.AbstractTrie#<init>(boolean)
CALLER: org.eclipse.jetty.http.HttpFields#remove(org.eclipse.jetty.http.HttpHeader)
	CALLEE: org.eclipse.jetty.http.HttpField#getHeader()
CALLER: org.eclipse.jetty.http.HttpFields#put(org.eclipse.jetty.http.HttpField)
	CALLEE: org.eclipse.jetty.http.HttpField#isSame(org.eclipse.jetty.http.HttpField)
CALLER: static org.eclipse.jetty.util.component.ContainerLifeCycle#dump(java.lang.Appendable,java.lang.String,java.util.Collection[])
	CALLEE: org.eclipse.jetty.util.thread.QueuedThreadPool.2#dump(java.lang.Appendable,java.lang.String)
	CALLEE: org.eclipse.jetty.servlet.Holder#dump(java.lang.Appendable,java.lang.String)
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector#dump(java.lang.Appendable,java.lang.String)
	CALLEE: org.eclipse.jetty.server.ClassLoaderDump#dump(java.lang.Appendable,java.lang.String)
	CALLEE: org.eclipse.jetty.server.Server#dump(java.lang.Appendable,java.lang.String)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#dump(java.lang.Appendable,java.lang.String)
	CALLEE: org.eclipse.jetty.util.thread.QueuedThreadPool#dump(java.lang.Appendable,java.lang.String)
	CALLEE: org.eclipse.jetty.io.SelectorManager#dump(java.lang.Appendable,java.lang.String)
	CALLEE: org.eclipse.jetty.util.thread.ScheduledExecutorScheduler#dump(java.lang.Appendable,java.lang.String)
	CALLEE: static org.eclipse.jetty.util.component.ContainerLifeCycle#dumpObject(java.lang.Appendable,java.lang.Object)
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#dump(java.lang.Appendable,java.lang.String)
CALLER: static org.eclipse.jetty.util.component.AbstractLifeCycle#getState(org.eclipse.jetty.util.component.LifeCycle)
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#isStarted()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#isStarting()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#isStopping()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#isStopped()
CALLER: org.eclipse.jetty.util.ConcurrentArrayQueue#newBlock()
	CALLEE: org.eclipse.jetty.util.ConcurrentArrayQueue#getBlockSize()
	CALLEE: org.eclipse.jetty.util.ConcurrentArrayQueue.Block#<init>(int)
CALLER: static org.eclipse.jetty.server.session.HashedSession#<clinit>()
	CALLEE: static org.eclipse.jetty.util.log.Log#getLogger(java.lang.Class)
CALLER: org.eclipse.jetty.server.session.HashedSession#<init>(org.eclipse.jetty.server.session.HashSessionManager,long,long,java.lang.String)
	CALLEE: org.eclipse.jetty.server.session.MemSession#<init>(org.eclipse.jetty.server.session.AbstractSessionManager,long,long,java.lang.String)
CALLER: org.eclipse.jetty.util.statistic.CounterStatistic#add(long)
	CALLEE: static org.eclipse.jetty.util.Atomics#updateMax(java.util.concurrent.atomic.AtomicLong,long)
CALLER: org.eclipse.jetty.util.ArrayTernaryTrie#<init>(boolean)
	CALLEE: org.eclipse.jetty.util.ArrayTernaryTrie#<init>(boolean,int)
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#localizableURI_COMPONENT_ENCODED_OCTET_MALFORMED(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.uri.UriComponent#decodePercentEncodedOctets(java.lang.String,int,java.nio.ByteBuffer)
	CALLEE: static org.glassfish.jersey.uri.UriComponent#decodeHex(java.lang.String,int)
CALLER: org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeScanner.1#<init>(org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeScanner,java.io.File)
	CALLEE: org.glassfish.jersey.server.internal.AbstractResourceFinderAdapter#<init>()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeScanner.1.1#<init>(org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeScanner.1)
CALLER: org.glassfish.jersey.model.internal.ComponentBag.5#call()
	CALLEE: static org.glassfish.jersey.model.internal.ComponentBag#access$000(org.glassfish.jersey.model.internal.ComponentBag)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#COMPONENT_TYPE_ALREADY_REGISTERED(java.lang.Object)
	CALLEE: static org.glassfish.jersey.internal.Errors#error(java.lang.String,org.glassfish.jersey.Severity)
	CALLEE: static org.glassfish.jersey.model.internal.ComponentBag#access$100(java.lang.Class,int,java.util.Map,org.glassfish.jersey.process.Inflector)
	CALLEE: static org.glassfish.jersey.model.internal.ComponentBag#access$200(org.glassfish.jersey.model.internal.ComponentBag)
	CALLEE: jersey.repackaged.com.google.common.base.Predicates.ObjectPredicate.1#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.ApplicationHandler.7#apply(java.lang.Object)
CALLER: static org.glassfish.jersey.internal.Errors#processErrors(boolean)
	CALLEE: static org.glassfish.jersey.internal.Errors#logErrors(java.util.Collection)
	CALLEE: org.glassfish.jersey.internal.Errors.ErrorMessagesException#<init>(java.util.List,org.glassfish.jersey.internal.Errors.1)
CALLER: com.zaxxer.hikari.pool.HikariPool#softEvictConnection(com.zaxxer.hikari.pool.PoolEntry,java.lang.String,boolean)
	CALLEE: com.zaxxer.hikari.pool.HikariPool#closeConnection(com.zaxxer.hikari.pool.PoolEntry,java.lang.String)
	CALLEE: com.zaxxer.hikari.util.ConcurrentBag#reserve(com.zaxxer.hikari.util.ConcurrentBag.IConcurrentBagEntry)
	CALLEE: com.zaxxer.hikari.pool.PoolEntry#markEvicted()
CALLER: com.zaxxer.hikari.pool.HikariPool#fillPool()
	CALLEE: com.zaxxer.hikari.HikariConfig#getMaximumPoolSize()
	CALLEE: com.zaxxer.hikari.pool.HikariPool#addBagItem()
	CALLEE: com.zaxxer.hikari.pool.HikariPool#getIdleConnections()
	CALLEE: com.zaxxer.hikari.HikariConfig#getMinimumIdle()
	CALLEE: com.zaxxer.hikari.pool.HikariPool.3#<init>(com.zaxxer.hikari.pool.HikariPool)
	CALLEE: org.slf4j.helpers.NOPLogger#isDebugEnabled()
	CALLEE: org.slf4j.helpers.SubstituteLogger#isDebugEnabled()
	CALLEE: org.slf4j.impl.SimpleLogger#isDebugEnabled()
CALLER: liquibase.servicelocator.DefaultPackageScanClassResolver#loadClass(java.lang.String,java.lang.ClassLoader)
	CALLEE: liquibase.logging.core.DefaultLogger#debug(java.lang.String)
	CALLEE: liquibase.logging.core.DefaultLogger#severe(java.lang.String,java.lang.Throwable)
	CALLEE: liquibase.logging.core.DefaultLogger#debug(java.lang.String,java.lang.Throwable)
	CALLEE: liquibase.servicelocator.DefaultPackageScanClassResolver#addFoundClass(java.lang.Class)
CALLER: org.eclipse.jetty.server.handler.ContextHandler#dump(java.lang.Appendable,java.lang.String)
	CALLEE: org.eclipse.jetty.server.ClassLoaderDump#<init>(java.lang.ClassLoader)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#dumpBeans(java.lang.Appendable,java.lang.String,java.util.Collection[])
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#getClassLoader()
	CALLEE: org.eclipse.jetty.util.AttributesMap#getAttributeEntrySet()
CALLER: static org.eclipse.jetty.util.ConcurrentArrayQueue.Block#<clinit>()
	CALLEE: static org.eclipse.jetty.util.MemoryUtils#getIntegersPerCacheLine()
CALLER: org.eclipse.jetty.util.ConcurrentArrayQueue.Block#<init>(int)
	CALLEE: static org.eclipse.jetty.util.ConcurrentArrayQueue#access$000()
CALLER: org.eclipse.jetty.server.session.MemSession#<init>(org.eclipse.jetty.server.session.AbstractSessionManager,long,long,java.lang.String)
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#<init>(org.eclipse.jetty.server.session.AbstractSessionManager,long,long,java.lang.String)
CALLER: static org.glassfish.jersey.uri.UriComponent#decodeHex(java.lang.String,int)
	CALLEE: static org.glassfish.jersey.uri.UriComponent#decodeHex(char)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#URI_COMPONENT_ENCODED_OCTET_INVALID_DIGIT(java.lang.Object,java.lang.Object)
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#COMPONENT_TYPE_ALREADY_REGISTERED(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#localizableCOMPONENT_TYPE_ALREADY_REGISTERED(java.lang.Object)
CALLER: static org.glassfish.jersey.Severity#<clinit>()
	CALLEE: org.glassfish.jersey.Severity#<init>(java.lang.String,int)
CALLER: static org.glassfish.jersey.internal.Errors#error(java.lang.String,org.glassfish.jersey.Severity)
	CALLEE: static org.glassfish.jersey.internal.Errors#error(java.lang.Object,java.lang.String,org.glassfish.jersey.Severity)
CALLER: static org.glassfish.jersey.model.internal.ComponentBag#access$100(java.lang.Class,int,java.util.Map,org.glassfish.jersey.process.Inflector)
	CALLEE: static org.glassfish.jersey.model.internal.ComponentBag#modelFor(java.lang.Class,int,java.util.Map,org.glassfish.jersey.process.Inflector)
CALLER: static org.glassfish.jersey.internal.Errors#logErrors(java.util.Collection)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#ERROR_MSG(java.lang.Object)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#WARNING_MSG(java.lang.Object)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#HINT_MSG(java.lang.Object)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#ERRORS_AND_WARNINGS_DETECTED(java.lang.Object)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#WARNINGS_DETECTED(java.lang.Object)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#HINTS_DETECTED(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.Errors.ErrorMessage#getMessage()
	CALLEE: org.glassfish.jersey.internal.Errors.ErrorMessage#getSeverity()
CALLER: org.glassfish.jersey.internal.Errors.ErrorMessagesException#<init>(java.util.List,org.glassfish.jersey.internal.Errors.1)
	CALLEE: org.glassfish.jersey.internal.Errors.ErrorMessagesException#<init>(java.util.List)
CALLER: com.zaxxer.hikari.util.ConcurrentBag#reserve(com.zaxxer.hikari.util.ConcurrentBag.IConcurrentBagEntry)
	CALLEE: com.zaxxer.hikari.pool.PoolEntry#compareAndSet(int,int)
CALLER: liquibase.servicelocator.DefaultPackageScanClassResolver#addFoundClass(java.lang.Class)
	CALLEE: static liquibase.util.StringUtils#join(java.util.Collection,java.lang.String)
	CALLEE: liquibase.servicelocator.DefaultPackageScanClassResolver#addFoundClass(java.lang.String,java.lang.Class)
CALLER: org.eclipse.jetty.util.AttributesMap#getAttributeEntrySet()
	CALLEE: org.eclipse.jetty.util.AttributesMap#map()
CALLER: org.eclipse.jetty.server.session.AbstractSession#<init>(org.eclipse.jetty.server.session.AbstractSessionManager,long,long,java.lang.String)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#isDebugEnabled()
	CALLEE: org.eclipse.jetty.server.session.AbstractSessionIdManager#getNodeId(java.lang.String,javax.servlet.http.HttpServletRequest)
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#URI_COMPONENT_ENCODED_OCTET_INVALID_DIGIT(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#localizableURI_COMPONENT_ENCODED_OCTET_INVALID_DIGIT(java.lang.Object,java.lang.Object)
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#localizableCOMPONENT_TYPE_ALREADY_REGISTERED(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.internal.Errors#error(java.lang.Object,java.lang.String,org.glassfish.jersey.Severity)
	CALLEE: static org.glassfish.jersey.internal.Errors#getInstance()
	CALLEE: org.glassfish.jersey.internal.Errors.ErrorMessage#<init>(java.lang.Object,java.lang.String,org.glassfish.jersey.Severity,org.glassfish.jersey.internal.Errors.1)
CALLER: static org.glassfish.jersey.model.internal.ComponentBag#modelFor(java.lang.Class,int,java.util.Map,org.glassfish.jersey.process.Inflector)
	CALLEE: static org.glassfish.jersey.internal.Errors#error(java.lang.String,org.glassfish.jersey.Severity)
	CALLEE: static org.glassfish.jersey.internal.inject.Providers#getProviderContracts(java.lang.Class)
	CALLEE: static org.glassfish.jersey.model.internal.ComponentBag#asMap(java.util.Set)
	CALLEE: static org.glassfish.jersey.internal.inject.Providers#isSupportedContract(java.lang.Class)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#CONTRACT_NOT_SUPPORTED(java.lang.Object,java.lang.Object)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#CONTRACT_NOT_ASSIGNABLE(java.lang.Object,java.lang.Object)
	CALLEE: static org.glassfish.jersey.model.ContractProvider#builder()
	CALLEE: org.glassfish.jersey.server.ResourceConfig.State.1#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.model.ContractProvider.Builder#addContracts(java.util.Map)
	CALLEE: org.glassfish.jersey.model.ContractProvider.Builder#defaultPriority(int)
	CALLEE: org.glassfish.jersey.model.internal.ComponentBag.4#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.model.ContractProvider.Builder#scope(java.lang.Class)
	CALLEE: org.glassfish.jersey.model.ContractProvider.Builder#addNameBinding(java.lang.Class)
CALLER: static org.glassfish.jersey.internal.Errors.3#<clinit>()
	CALLEE: static org.glassfish.jersey.Severity#values()
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#ERROR_MSG(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#localizableERROR_MSG(java.lang.Object)
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#WARNING_MSG(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#localizableWARNING_MSG(java.lang.Object)
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#HINT_MSG(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#localizableHINT_MSG(java.lang.Object)
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#ERRORS_AND_WARNINGS_DETECTED(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#localizableERRORS_AND_WARNINGS_DETECTED(java.lang.Object)
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#WARNINGS_DETECTED(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#localizableWARNINGS_DETECTED(java.lang.Object)
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#HINTS_DETECTED(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#localizableHINTS_DETECTED(java.lang.Object)
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#localizableURI_COMPONENT_ENCODED_OCTET_INVALID_DIGIT(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.internal.Errors#getInstance()
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#NO_ERROR_PROCESSING_IN_SCOPE()
CALLER: org.glassfish.jersey.internal.Errors.ErrorMessage#<init>(java.lang.Object,java.lang.String,org.glassfish.jersey.Severity,org.glassfish.jersey.internal.Errors.1)
	CALLEE: org.glassfish.jersey.internal.Errors.ErrorMessage#<init>(java.lang.Object,java.lang.String,org.glassfish.jersey.Severity)
CALLER: static org.glassfish.jersey.internal.inject.Providers#getProviderContracts(java.lang.Class)
	CALLEE: static jersey.repackaged.com.google.common.collect.Sets#newIdentityHashSet()
	CALLEE: static org.glassfish.jersey.internal.inject.Providers#computeProviderContracts(java.lang.Class,java.util.Set)
CALLER: static org.glassfish.jersey.internal.inject.Providers#<clinit>()
	CALLEE: static org.glassfish.jersey.internal.inject.Providers#getJaxRsProviderInterfaces()
	CALLEE: static org.glassfish.jersey.internal.inject.Providers#getExternalProviderInterfaces()
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#CONTRACT_NOT_SUPPORTED(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#localizableCONTRACT_NOT_SUPPORTED(java.lang.Object,java.lang.Object)
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#CONTRACT_NOT_ASSIGNABLE(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#localizableCONTRACT_NOT_ASSIGNABLE(java.lang.Object,java.lang.Object)
CALLER: static org.glassfish.jersey.model.ContractProvider#builder()
	CALLEE: org.glassfish.jersey.model.ContractProvider.Builder#<init>(org.glassfish.jersey.model.ContractProvider.1)
CALLER: org.glassfish.jersey.server.ResourceConfig.State.1#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.ResourceConfig.State.1#apply(org.glassfish.jersey.model.ContractProvider.Builder)
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#localizableERROR_MSG(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#localizableWARNING_MSG(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#localizableHINT_MSG(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#localizableERRORS_AND_WARNINGS_DETECTED(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#localizableWARNINGS_DETECTED(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#localizableHINTS_DETECTED(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#NO_ERROR_PROCESSING_IN_SCOPE()
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#localizableNO_ERROR_PROCESSING_IN_SCOPE()
CALLER: static org.glassfish.jersey.internal.inject.Providers#computeProviderContracts(java.lang.Class,java.util.Set)
	CALLEE: static org.glassfish.jersey.internal.inject.Providers#isSupportedContract(java.lang.Class)
	CALLEE: static org.glassfish.jersey.internal.inject.Providers#computeProviderContracts(java.lang.Class,java.util.Set)
	CALLEE: static org.glassfish.jersey.internal.inject.Providers#getImplementedContracts(java.lang.Class)
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#localizableCONTRACT_NOT_SUPPORTED(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#localizableCONTRACT_NOT_ASSIGNABLE(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.model.ContractProvider.Builder#<clinit>()
	CALLEE: org.glassfish.jersey.model.ContractProvider#<init>(java.lang.Class,java.util.Map,int,java.util.Set,org.glassfish.jersey.model.ContractProvider.1)
CALLER: org.glassfish.jersey.model.ContractProvider.Builder#<init>(org.glassfish.jersey.model.ContractProvider.1)
	CALLEE: org.glassfish.jersey.model.ContractProvider.Builder#<init>()
CALLER: org.glassfish.jersey.server.ResourceConfig.State.1#apply(org.glassfish.jersey.model.ContractProvider.Builder)
	CALLEE: static org.glassfish.jersey.server.model.Resource#getPath(java.lang.Class)
	CALLEE: org.glassfish.jersey.model.ContractProvider.Builder#scope(java.lang.Class)
	CALLEE: org.glassfish.jersey.model.ContractProvider.Builder#build()
	CALLEE: org.glassfish.jersey.model.ContractProvider.Builder#getContracts()
	CALLEE: org.glassfish.jersey.model.ContractProvider.Builder#getScope()
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#localizableNO_ERROR_PROCESSING_IN_SCOPE()
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.internal.inject.Providers.ProviderRuntime#<clinit>()
	CALLEE: org.glassfish.jersey.internal.inject.Providers.ProviderRuntime#<init>(java.lang.String,int,javax.ws.rs.RuntimeType)
CALLER: org.glassfish.jersey.model.ContractProvider#<init>(java.lang.Class,java.util.Map,int,java.util.Set,org.glassfish.jersey.model.ContractProvider.1)
	CALLEE: org.glassfish.jersey.model.ContractProvider#<init>(java.lang.Class,java.util.Map,int,java.util.Set)
CALLER: org.glassfish.jersey.model.ContractProvider.Builder#<init>()
	CALLEE: static jersey.repackaged.com.google.common.collect.Sets#newIdentityHashSet()
	CALLEE: static jersey.repackaged.com.google.common.collect.Maps#newHashMap()
CALLER: static org.glassfish.jersey.server.model.Resource#getPath(java.lang.Class)
	CALLEE: static org.glassfish.jersey.server.model.internal.ModelHelper#getAnnotatedResourceClass(java.lang.Class)
CALLER: org.eclipse.jetty.server.session.HashSessionIdManager#doStart()
	CALLEE: org.eclipse.jetty.server.session.AbstractSessionIdManager#doStart()
CALLER: org.eclipse.jetty.util.component.ContainerLifeCycle#dumpThis(java.lang.Appendable)
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#getState()
CALLER: org.eclipse.jetty.server.session.HashedSession#setMaxInactiveInterval(int)
	CALLEE: org.eclipse.jetty.server.session.HashSessionManager#setScavengePeriod(int)
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#setMaxInactiveInterval(int)
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#getMaxInactiveInterval()
CALLER: org.eclipse.jetty.server.session.AbstractSession#setAttribute(java.lang.String,java.lang.Object)
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#changeAttribute(java.lang.String,java.lang.Object)
CALLER: liquibase.parser.SnapshotParserFactory#getParser(java.lang.String,liquibase.resource.ResourceAccessor)
	CALLEE: liquibase.exception.UnknownFormatException#<init>(java.lang.String)
CALLER: org.eclipse.jetty.server.session.AbstractSession#didActivate()
	CALLEE: javax.servlet.http.HttpSessionEvent#<init>(javax.servlet.http.HttpSession)
	CALLEE: org.eclipse.jetty.server.session.MemSession#getAttributeMap()
CALLER: liquibase.servicelocator.CompositePackageScanFilter#matches(java.lang.Class)
	CALLEE: liquibase.servicelocator.AssignableToPackageScanFilter#matches(java.lang.Class)
CALLER: org.eclipse.jetty.util.thread.ShutdownThread#hook()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#info(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#ignore(java.lang.Throwable)
CALLER: liquibase.database.jvm.JdbcConnection#getDatabaseProductName()
	CALLEE: liquibase.exception.DatabaseException#<init>(java.lang.Throwable)
CALLER: liquibase.database.jvm.JdbcConnection#getAutoCommit()
	CALLEE: liquibase.exception.DatabaseException#<init>(java.lang.Throwable)
CALLER: liquibase.database.jvm.JdbcConnection#getURL()
	CALLEE: liquibase.exception.UnexpectedLiquibaseException#<init>(java.lang.Throwable)
CALLER: liquibase.database.jvm.JdbcConnection#getConnectionUserName()
	CALLEE: liquibase.exception.UnexpectedLiquibaseException#<init>(java.lang.Throwable)
CALLER: liquibase.database.OfflineConnection#attached(liquibase.database.Database)
	CALLEE: liquibase.changelog.ChangeLogHistoryServiceFactory#register(liquibase.changelog.ChangeLogHistoryService)
	CALLEE: org.h2.jdbc.JdbcSQLException#getMessage()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#getMessage()
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#getMessage()
	CALLEE: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference#getMessage()
	CALLEE: liquibase.logging.LogFactory#getLog()
	CALLEE: static liquibase.logging.LogFactory#getInstance()
	CALLEE: static liquibase.changelog.ChangeLogHistoryServiceFactory#getInstance()
	CALLEE: liquibase.logging.core.DefaultLogger#warning(java.lang.String,java.lang.Throwable)
	CALLEE: static liquibase.util.ObjectUtil#setProperty(java.lang.Object,java.lang.String,java.lang.String)
	CALLEE: liquibase.database.AbstractJdbcDatabase#setCaseSensitive(java.lang.Boolean)
	CALLEE: liquibase.database.OfflineConnection#createChangeLogHistoryService(liquibase.database.Database)
CALLER: liquibase.database.jvm.JdbcConnection#attached(liquibase.database.Database)
	CALLEE: static liquibase.logging.LogFactory#getLogger()
	CALLEE: liquibase.database.jvm.JdbcConnection#getWrappedConnection()
	CALLEE: liquibase.database.AbstractJdbcDatabase#addReservedWords(java.util.Collection)
	CALLEE: liquibase.logging.core.DefaultLogger#info(java.lang.String,java.lang.Throwable)
CALLER: liquibase.database.jvm.JdbcConnection#setAutoCommit(boolean)
	CALLEE: liquibase.exception.DatabaseException#<init>(java.lang.Throwable)
CALLER: org.eclipse.jetty.io.SelectorManager.ManagedSelector#doStart()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#doStart()
CALLER: org.eclipse.jetty.io.SelectorManager.ManagedSelector#submit(java.lang.Runnable)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#isDebugEnabled()
	CALLEE: org.eclipse.jetty.util.ConcurrentArrayQueue#offer(java.lang.Object)
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector#wakeup()
CALLER: org.eclipse.jetty.io.SelectorManager.ManagedSelector#doStop()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#getStopTimeout()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#isDebugEnabled()
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector#submit(java.lang.Runnable)
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector.Stop#<init>(org.eclipse.jetty.io.SelectorManager.ManagedSelector,org.eclipse.jetty.io.SelectorManager.1)
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector.Stop#await(long)
CALLER: org.eclipse.jetty.server.ShutdownMonitor#start()
	CALLEE: org.eclipse.jetty.server.ShutdownMonitor.ShutdownMonitorRunnable#<init>(org.eclipse.jetty.server.ShutdownMonitor)
CALLER: com.zaxxer.hikari.pool.PoolEntry.1#compare(java.lang.Object,java.lang.Object)
	CALLEE: com.zaxxer.hikari.pool.PoolEntry.1#compare(com.zaxxer.hikari.pool.PoolEntry,com.zaxxer.hikari.pool.PoolEntry)
CALLER: liquibase.parser.SnapshotParserFactory.1#compare(java.lang.Object,java.lang.Object)
	CALLEE: liquibase.parser.SnapshotParserFactory.1#compare(liquibase.parser.SnapshotParser,liquibase.parser.SnapshotParser)
CALLER: com.zaxxer.hikari.util.ConcurrentBag#values(int)
	CALLEE: com.zaxxer.hikari.pool.PoolEntry#getState()
CALLER: jersey.repackaged.com.google.common.base.Joiner#withKeyValueSeparator(java.lang.String)
	CALLEE: jersey.repackaged.com.google.common.base.Joiner.MapJoiner#<init>(jersey.repackaged.com.google.common.base.Joiner,java.lang.String,jersey.repackaged.com.google.common.base.Joiner.1)
CALLER: org.glassfish.jersey.server.internal.scanning.PackageNamesScanner#reset()
	CALLEE: org.glassfish.jersey.server.internal.scanning.PackageNamesScanner#init()
	CALLEE: org.glassfish.jersey.server.internal.scanning.PackageNamesScanner#close()
CALLER: liquibase.LabelExpression#matches(liquibase.Labels)
	CALLEE: liquibase.LabelExpression#matches(java.lang.String,liquibase.Labels)
CALLER: org.slf4j.impl.SimpleLoggerFactory#getLogger(java.lang.String)
	CALLEE: org.slf4j.impl.SimpleLogger#<init>(java.lang.String)
CALLER: org.traccar.database.QueryBuilder#executeUpdate()
	CALLEE: com.zaxxer.hikari.pool.ProxyConnection#close()
	CALLEE: com.zaxxer.hikari.pool.ProxyStatement#close()
	CALLEE: com.zaxxer.hikari.pool.HikariProxyPreparedStatement#getGeneratedKeys()
	CALLEE: com.zaxxer.hikari.pool.HikariProxyPreparedStatement#execute()
CALLER: org.eclipse.jetty.util.thread.ShutdownThread#run()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#isStarted()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.Throwable)
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#stop()
	CALLEE: org.eclipse.jetty.server.handler.HandlerCollection#destroy()
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#destroy()
	CALLEE: org.eclipse.jetty.server.handler.AbstractHandler#destroy()
	CALLEE: org.eclipse.jetty.server.handler.HandlerWrapper#destroy()
	CALLEE: org.eclipse.jetty.webapp.WebAppContext#destroy()
CALLER: com.zaxxer.hikari.pool.HikariPool.1#run()
	CALLEE: com.zaxxer.hikari.pool.PoolBase#quietlyCloseConnection(java.sql.Connection,java.lang.String)
CALLER: com.zaxxer.hikari.pool.HikariPool.3#run()
	CALLEE: com.zaxxer.hikari.pool.HikariPool#logPoolState(java.lang.String[])
CALLER: com.zaxxer.hikari.pool.HikariPool.PoolEntryCreator#call()
	CALLEE: com.zaxxer.hikari.pool.HikariPool.PoolEntryCreator#call()
CALLER: liquibase.database.AbstractJdbcDatabase#getRanChangeSetList()
	CALLEE: static liquibase.changelog.ChangeLogHistoryServiceFactory#getInstance()
	CALLEE: liquibase.changelog.ChangeLogHistoryServiceFactory#getChangeLogService(liquibase.database.Database)
	CALLEE: liquibase.changelog.OfflineChangeLogHistoryService#getRanChangeSets()
CALLER: liquibase.database.AbstractJdbcDatabase#commit()
	CALLEE: liquibase.exception.DatabaseException#<init>(java.lang.Throwable)
	CALLEE: liquibase.database.AbstractJdbcDatabase#getConnection()
	CALLEE: liquibase.database.OfflineConnection#commit()
	CALLEE: liquibase.database.jvm.JdbcConnection#commit()
CALLER: liquibase.database.AbstractJdbcDatabase#getDatabaseChangeLogTableName()
	CALLEE: static liquibase.configuration.LiquibaseConfiguration#getInstance()
	CALLEE: liquibase.configuration.LiquibaseConfiguration#getConfiguration(java.lang.Class)
CALLER: liquibase.database.AbstractJdbcDatabase#getLiquibaseSchemaName()
	CALLEE: static liquibase.configuration.LiquibaseConfiguration#getInstance()
	CALLEE: liquibase.database.AbstractJdbcDatabase#getDefaultSchemaName()
	CALLEE: liquibase.configuration.LiquibaseConfiguration#getProperty(java.lang.Class,java.lang.String)
CALLER: liquibase.database.AbstractJdbcDatabase#getLiquibaseCatalogName()
	CALLEE: static liquibase.configuration.LiquibaseConfiguration#getInstance()
	CALLEE: liquibase.database.core.UnsupportedDatabase#getDefaultCatalogName()
	CALLEE: liquibase.configuration.LiquibaseConfiguration#getProperty(java.lang.Class,java.lang.String)
CALLER: liquibase.database.AbstractJdbcDatabase#isSafeToRunUpdate()
	CALLEE: liquibase.database.OfflineConnection#getURL()
	CALLEE: liquibase.database.jvm.JdbcConnection#getURL()
	CALLEE: liquibase.database.AbstractJdbcDatabase#getConnection()
CALLER: liquibase.database.AbstractJdbcDatabase#getDefaultSchemaName()
	CALLEE: liquibase.database.AbstractJdbcDatabase#supportsSchemas()
	CALLEE: liquibase.database.core.UnsupportedDatabase#getDefaultCatalogName()
	CALLEE: liquibase.database.AbstractJdbcDatabase#getConnectionSchemaName()
CALLER: liquibase.database.AbstractJdbcDatabase#getDatabaseProductVersion()
	CALLEE: liquibase.exception.DatabaseException#<init>(java.lang.Throwable)
	CALLEE: liquibase.database.OfflineConnection#getDatabaseProductVersion()
	CALLEE: liquibase.database.jvm.JdbcConnection#getDatabaseProductVersion()
CALLER: liquibase.database.AbstractJdbcDatabase#getDatabaseProductName()
	CALLEE: liquibase.database.OfflineConnection#getDatabaseProductName()
	CALLEE: liquibase.database.jvm.JdbcConnection#getDatabaseProductName()
	CALLEE: liquibase.database.core.UnsupportedDatabase#getDefaultDatabaseProductName()
CALLER: liquibase.database.AbstractJdbcDatabase#getDatabaseMinorVersion()
	CALLEE: liquibase.exception.DatabaseException#<init>(java.lang.Throwable)
	CALLEE: liquibase.database.OfflineConnection#getDatabaseMinorVersion()
	CALLEE: liquibase.database.jvm.JdbcConnection#getDatabaseMinorVersion()
CALLER: liquibase.database.AbstractJdbcDatabase#getDatabaseMajorVersion()
	CALLEE: liquibase.exception.DatabaseException#<init>(java.lang.Throwable)
	CALLEE: liquibase.database.OfflineConnection#getDatabaseMajorVersion()
	CALLEE: liquibase.database.jvm.JdbcConnection#getDatabaseMajorVersion()
CALLER: liquibase.database.AbstractJdbcDatabase#getDatabaseChangeLogLockTableName()
	CALLEE: static liquibase.configuration.LiquibaseConfiguration#getInstance()
	CALLEE: liquibase.configuration.LiquibaseConfiguration#getConfiguration(java.lang.Class)
CALLER: liquibase.database.AbstractJdbcDatabase#getAutoIncrementClause(java.math.BigInteger,java.math.BigInteger)
	CALLEE: liquibase.database.AbstractJdbcDatabase#supportsAutoIncrement()
	CALLEE: liquibase.database.AbstractJdbcDatabase#getAutoIncrementClause()
	CALLEE: liquibase.database.AbstractJdbcDatabase#generateAutoIncrementStartWith(java.math.BigInteger)
	CALLEE: liquibase.database.AbstractJdbcDatabase#generateAutoIncrementBy(java.math.BigInteger)
	CALLEE: liquibase.database.AbstractJdbcDatabase#getAutoIncrementOpening()
	CALLEE: liquibase.database.AbstractJdbcDatabase#getAutoIncrementStartWithClause()
	CALLEE: liquibase.database.AbstractJdbcDatabase#getAutoIncrementByClause()
	CALLEE: liquibase.database.AbstractJdbcDatabase#getAutoIncrementClosing()
CALLER: liquibase.database.AbstractJdbcDatabase#markChangeSetExecStatus(liquibase.changelog.ChangeSet,liquibase.changelog.ChangeSet.ExecType)
	CALLEE: static liquibase.changelog.ChangeLogHistoryServiceFactory#getInstance()
	CALLEE: liquibase.changelog.ChangeLogHistoryServiceFactory#getChangeLogService(liquibase.database.Database)
	CALLEE: liquibase.changelog.OfflineChangeLogHistoryService#setExecType(liquibase.changelog.ChangeSet,liquibase.changelog.ChangeSet.ExecType)
CALLER: liquibase.database.AbstractJdbcDatabase#getRunStatus(liquibase.changelog.ChangeSet)
	CALLEE: static liquibase.changelog.ChangeLogHistoryServiceFactory#getInstance()
	CALLEE: liquibase.changelog.ChangeLogHistoryServiceFactory#getChangeLogService(liquibase.database.Database)
	CALLEE: liquibase.changelog.AbstractChangeLogHistoryService#getRunStatus(liquibase.changelog.ChangeSet)
CALLER: org.eclipse.jetty.util.thread.NonBlockingThread#run()
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector#run()
CALLER: org.eclipse.jetty.server.AbstractConnector.Acceptor#run()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#ignore(java.lang.Throwable)
	CALLEE: org.eclipse.jetty.server.AbstractNetworkConnector#toString()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#warn(java.lang.Throwable)
	CALLEE: static org.eclipse.jetty.server.AbstractConnector#access$100(org.eclipse.jetty.server.AbstractConnector)
	CALLEE: static org.eclipse.jetty.server.AbstractConnector#access$200(org.eclipse.jetty.server.AbstractConnector)
	CALLEE: org.eclipse.jetty.server.AbstractNetworkConnector#isAccepting()
	CALLEE: org.eclipse.jetty.server.ServerConnector#accept(int)
	CALLEE: static org.eclipse.jetty.server.AbstractConnector#access$300(org.eclipse.jetty.server.AbstractConnector)
CALLER: org.apache.log4j.Category#addAppender(org.apache.log4j.Appender)
	CALLEE: org.apache.log4j.helpers.AppenderAttachableImpl#<init>()
	CALLEE: org.apache.log4j.helpers.AppenderAttachableImpl#addAppender(org.apache.log4j.Appender)
	CALLEE: org.apache.log4j.Hierarchy#fireAddAppenderEvent(org.apache.log4j.Category,org.apache.log4j.Appender)
	CALLEE: org.apache.log4j.spi.NOPLoggerRepository#fireAddAppenderEvent(org.apache.log4j.Category,org.apache.log4j.Appender)
CALLER: com.zaxxer.hikari.pool.HikariPool#toString()
	CALLEE: com.zaxxer.hikari.pool.PoolBase#toString()
CALLER: org.eclipse.jetty.http.HttpField#toString()
	CALLEE: org.eclipse.jetty.http.HttpField#getValue()
	CALLEE: org.eclipse.jetty.http.HttpField#getName()
CALLER: org.apache.log4j.Category#warn(java.lang.Object)
	CALLEE: org.apache.log4j.Hierarchy#isDisabled(int)
	CALLEE: org.apache.log4j.spi.NOPLoggerRepository#isDisabled(int)
	CALLEE: org.apache.log4j.spi.NOPLogger#getEffectiveLevel()
	CALLEE: org.apache.log4j.Category#getEffectiveLevel()
	CALLEE: org.apache.log4j.Priority#isGreaterOrEqual(org.apache.log4j.Priority)
	CALLEE: org.apache.log4j.Category#forcedLog(java.lang.String,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)
CALLER: org.apache.log4j.Category#info(java.lang.Object)
	CALLEE: org.apache.log4j.Hierarchy#isDisabled(int)
	CALLEE: org.apache.log4j.spi.NOPLoggerRepository#isDisabled(int)
	CALLEE: org.apache.log4j.spi.NOPLogger#getEffectiveLevel()
	CALLEE: org.apache.log4j.Category#getEffectiveLevel()
	CALLEE: org.apache.log4j.Priority#isGreaterOrEqual(org.apache.log4j.Priority)
	CALLEE: org.apache.log4j.Category#forcedLog(java.lang.String,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)
CALLER: org.apache.log4j.CategoryKey#equals(java.lang.Object)
	CALLEE: static org.apache.log4j.CategoryKey#class$(java.lang.String)
CALLER: org.eclipse.jetty.http.HttpField#isSame(org.eclipse.jetty.http.HttpField)
	CALLEE: org.eclipse.jetty.http.HttpField#getHeader()
	CALLEE: org.eclipse.jetty.http.HttpField#getName()
CALLER: liquibase.changelog.filter.ShouldRunChangeSetFilter#accepts(liquibase.changelog.ChangeSet)
	CALLEE: liquibase.changelog.filter.ShouldRunChangeSetFilter#changeSetsMatch(liquibase.changelog.ChangeSet,liquibase.changelog.RanChangeSet)
	CALLEE: liquibase.changelog.filter.ChangeSetFilterResult#<init>(boolean,java.lang.String,java.lang.Class)
	CALLEE: liquibase.changelog.filter.ShouldRunChangeSetFilter#checksumChanged(liquibase.changelog.ChangeSet,liquibase.changelog.RanChangeSet)
CALLER: liquibase.changelog.filter.ContextChangeSetFilter#accepts(liquibase.changelog.ChangeSet)
	CALLEE: liquibase.changelog.filter.ChangeSetFilterResult#<init>(boolean,java.lang.String,java.lang.Class)
	CALLEE: liquibase.Contexts#isEmpty()
	CALLEE: static liquibase.ContextExpression#matchesAll(java.util.Collection,liquibase.Contexts)
	CALLEE: liquibase.Contexts#toString()
CALLER: liquibase.changelog.filter.LabelChangeSetFilter#accepts(liquibase.changelog.ChangeSet)
	CALLEE: liquibase.LabelExpression#matches(liquibase.Labels)
	CALLEE: liquibase.changelog.filter.ChangeSetFilterResult#<init>(boolean,java.lang.String,java.lang.Class)
	CALLEE: liquibase.LabelExpression#isEmpty()
	CALLEE: liquibase.LabelExpression#toString()
CALLER: liquibase.changelog.filter.DbmsChangeSetFilter#accepts(liquibase.changelog.ChangeSet)
	CALLEE: static liquibase.database.DatabaseList#definitionMatches(java.util.Collection,liquibase.database.Database,boolean)
	CALLEE: static liquibase.util.StringUtils#join(java.util.Collection,java.lang.String)
	CALLEE: liquibase.database.core.UnsupportedDatabase#getShortName()
	CALLEE: liquibase.changelog.filter.ChangeSetFilterResult#<init>(boolean,java.lang.String,java.lang.Class)
CALLER: liquibase.database.AbstractJdbcDatabase#equals(java.lang.Object)
	CALLEE: liquibase.database.jvm.JdbcConnection#equals(java.lang.Object)
CALLER: liquibase.database.AbstractJdbcDatabase#hashCode()
	CALLEE: liquibase.database.jvm.JdbcConnection#hashCode()
CALLER: org.eclipse.jetty.server.session.AbstractSession#toString()
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#getId()
CALLER: org.eclipse.jetty.util.thread.QueuedThreadPool.2#dump(java.lang.Appendable,java.lang.String)
	CALLEE: static org.eclipse.jetty.util.component.ContainerLifeCycle#dump(java.lang.Appendable,java.lang.String,java.util.Collection[])
CALLER: org.eclipse.jetty.server.session.HashSessionManager.Scavenger#run()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#isRunning()
	CALLEE: org.eclipse.jetty.util.thread.ScheduledExecutorScheduler#schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)
	CALLEE: org.eclipse.jetty.server.session.HashSessionManager#scavenge()
	CALLEE: static org.eclipse.jetty.server.session.HashSessionManager#access$000(org.eclipse.jetty.server.session.HashSessionManager)
	CALLEE: static org.eclipse.jetty.server.session.HashSessionManager#access$102(org.eclipse.jetty.server.session.HashSessionManager,org.eclipse.jetty.util.thread.Scheduler.Task)
CALLER: org.eclipse.jetty.server.session.HashSessionManager.Saver#run()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#isRunning()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#warn(java.lang.Throwable)
	CALLEE: org.eclipse.jetty.util.thread.ScheduledExecutorScheduler#schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)
	CALLEE: static org.eclipse.jetty.server.session.HashSessionManager#access$000(org.eclipse.jetty.server.session.HashSessionManager)
	CALLEE: org.eclipse.jetty.server.session.HashSessionManager#saveSessions(boolean)
	CALLEE: static org.eclipse.jetty.server.session.HashSessionManager#access$202(org.eclipse.jetty.server.session.HashSessionManager,org.eclipse.jetty.util.thread.Scheduler.Task)
CALLER: org.eclipse.jetty.server.session.HashSessionIdManager#doStop()
	CALLEE: org.eclipse.jetty.server.session.AbstractSessionIdManager#doStop()
CALLER: org.eclipse.jetty.server.ServerConnector#shutdown()
	CALLEE: org.eclipse.jetty.server.AbstractNetworkConnector#shutdown()
CALLER: org.traccar.database.QueryBuilder.1#process(java.lang.Object,java.sql.ResultSet)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
	CALLEE: com.zaxxer.hikari.pool.HikariProxyResultSet#getBoolean(java.lang.String)
CALLER: org.traccar.database.QueryBuilder.2#process(java.lang.Object,java.sql.ResultSet)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
	CALLEE: com.zaxxer.hikari.pool.HikariProxyResultSet#getInt(java.lang.String)
CALLER: org.traccar.database.QueryBuilder.3#process(java.lang.Object,java.sql.ResultSet)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
	CALLEE: com.zaxxer.hikari.pool.HikariProxyResultSet#getLong(java.lang.String)
CALLER: org.traccar.database.QueryBuilder.4#process(java.lang.Object,java.sql.ResultSet)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
	CALLEE: com.zaxxer.hikari.pool.HikariProxyResultSet#getDouble(java.lang.String)
CALLER: org.traccar.database.QueryBuilder.5#process(java.lang.Object,java.sql.ResultSet)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
	CALLEE: com.zaxxer.hikari.pool.HikariProxyResultSet#getString(java.lang.String)
CALLER: org.traccar.database.QueryBuilder.6#process(java.lang.Object,java.sql.ResultSet)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
	CALLEE: com.zaxxer.hikari.pool.HikariProxyResultSet#getTimestamp(java.lang.String)
CALLER: org.traccar.database.QueryBuilder.7#process(java.lang.Object,java.sql.ResultSet)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
	CALLEE: com.zaxxer.hikari.pool.HikariProxyResultSet#getBytes(java.lang.String)
CALLER: org.traccar.database.QueryBuilder.8#process(java.lang.Object,java.sql.ResultSet)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
	CALLEE: static org.traccar.Context#getObjectMapper()
	CALLEE: com.fasterxml.jackson.databind.ObjectMapper#readValue(java.lang.String,java.lang.Class)
	CALLEE: com.zaxxer.hikari.pool.HikariProxyResultSet#getString(java.lang.String)
CALLER: org.slf4j.helpers.SubstituteLogger#warn(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.helpers.NOPLogger#warn(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.helpers.SubstituteLogger#warn(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.helpers.SubstituteLogger#delegate()
	CALLEE: org.slf4j.impl.SimpleLogger#warn(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.event.EventRecodingLogger#warn(java.lang.String,java.lang.Object,java.lang.Object)
CALLER: org.slf4j.helpers.SubstituteLogger#warn(java.lang.String,java.lang.Object)
	CALLEE: org.slf4j.helpers.NOPLogger#warn(java.lang.String,java.lang.Object)
	CALLEE: org.slf4j.helpers.SubstituteLogger#warn(java.lang.String,java.lang.Object)
	CALLEE: org.slf4j.helpers.SubstituteLogger#delegate()
	CALLEE: org.slf4j.impl.SimpleLogger#warn(java.lang.String,java.lang.Object)
	CALLEE: org.slf4j.event.EventRecodingLogger#warn(java.lang.String,java.lang.Object)
CALLER: org.slf4j.helpers.SubstituteLogger#error(java.lang.String,java.lang.Object[])
	CALLEE: org.slf4j.helpers.NOPLogger#error(java.lang.String,java.lang.Object[])
	CALLEE: org.slf4j.helpers.SubstituteLogger#error(java.lang.String,java.lang.Object[])
	CALLEE: org.slf4j.helpers.SubstituteLogger#delegate()
	CALLEE: org.slf4j.impl.SimpleLogger#error(java.lang.String,java.lang.Object[])
	CALLEE: org.slf4j.event.EventRecodingLogger#error(java.lang.String,java.lang.Object[])
CALLER: org.slf4j.helpers.SubstituteLogger#error(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.helpers.NOPLogger#error(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.helpers.SubstituteLogger#error(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.helpers.SubstituteLogger#delegate()
	CALLEE: org.slf4j.impl.SimpleLogger#error(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.event.EventRecodingLogger#error(java.lang.String,java.lang.Object,java.lang.Object)
CALLER: org.slf4j.helpers.SubstituteLogger#isDebugEnabled()
	CALLEE: org.slf4j.helpers.NOPLogger#isDebugEnabled()
	CALLEE: org.slf4j.helpers.SubstituteLogger#isDebugEnabled()
	CALLEE: org.slf4j.helpers.SubstituteLogger#delegate()
	CALLEE: org.slf4j.impl.SimpleLogger#isDebugEnabled()
	CALLEE: org.slf4j.event.EventRecodingLogger#isDebugEnabled()
CALLER: org.slf4j.helpers.SubstituteLogger#error(java.lang.String,java.lang.Throwable)
	CALLEE: org.slf4j.helpers.NOPLogger#error(java.lang.String,java.lang.Throwable)
	CALLEE: org.slf4j.helpers.SubstituteLogger#error(java.lang.String,java.lang.Throwable)
	CALLEE: org.slf4j.helpers.SubstituteLogger#delegate()
	CALLEE: org.slf4j.impl.SimpleLogger#error(java.lang.String,java.lang.Throwable)
	CALLEE: org.slf4j.event.EventRecodingLogger#error(java.lang.String,java.lang.Throwable)
CALLER: org.slf4j.helpers.SubstituteLogger#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.slf4j.helpers.NOPLogger#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.slf4j.helpers.SubstituteLogger#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.slf4j.helpers.SubstituteLogger#delegate()
	CALLEE: org.slf4j.impl.SimpleLogger#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.slf4j.event.EventRecodingLogger#debug(java.lang.String,java.lang.Object[])
CALLER: org.slf4j.helpers.SubstituteLogger#info(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.helpers.NOPLogger#info(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.helpers.SubstituteLogger#info(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.helpers.SubstituteLogger#delegate()
	CALLEE: org.slf4j.impl.SimpleLogger#info(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.event.EventRecodingLogger#info(java.lang.String,java.lang.Object,java.lang.Object)
CALLER: org.slf4j.helpers.SubstituteLogger#warn(java.lang.String,java.lang.Object[])
	CALLEE: org.slf4j.helpers.NOPLogger#warn(java.lang.String,java.lang.Object[])
	CALLEE: org.slf4j.helpers.SubstituteLogger#warn(java.lang.String,java.lang.Object[])
	CALLEE: org.slf4j.helpers.SubstituteLogger#delegate()
	CALLEE: org.slf4j.impl.SimpleLogger#warn(java.lang.String,java.lang.Object[])
	CALLEE: org.slf4j.event.EventRecodingLogger#warn(java.lang.String,java.lang.Object[])
CALLER: org.slf4j.helpers.SubstituteLogger#info(java.lang.String,java.lang.Object)
	CALLEE: org.slf4j.helpers.NOPLogger#info(java.lang.String,java.lang.Object)
	CALLEE: org.slf4j.helpers.SubstituteLogger#info(java.lang.String,java.lang.Object)
	CALLEE: org.slf4j.helpers.SubstituteLogger#delegate()
	CALLEE: org.slf4j.impl.SimpleLogger#info(java.lang.String,java.lang.Object)
	CALLEE: org.slf4j.event.EventRecodingLogger#info(java.lang.String,java.lang.Object)
CALLER: org.slf4j.helpers.SubstituteLogger#debug(java.lang.String)
	CALLEE: org.slf4j.helpers.NOPLogger#debug(java.lang.String)
	CALLEE: org.slf4j.helpers.SubstituteLogger#debug(java.lang.String)
	CALLEE: org.slf4j.helpers.SubstituteLogger#delegate()
	CALLEE: org.slf4j.impl.SimpleLogger#debug(java.lang.String)
	CALLEE: org.slf4j.event.EventRecodingLogger#debug(java.lang.String)
CALLER: org.slf4j.helpers.SubstituteLogger#debug(java.lang.String,java.lang.Object)
	CALLEE: org.slf4j.helpers.NOPLogger#debug(java.lang.String,java.lang.Object)
	CALLEE: org.slf4j.helpers.SubstituteLogger#debug(java.lang.String,java.lang.Object)
	CALLEE: org.slf4j.helpers.SubstituteLogger#delegate()
	CALLEE: org.slf4j.impl.SimpleLogger#debug(java.lang.String,java.lang.Object)
	CALLEE: org.slf4j.event.EventRecodingLogger#debug(java.lang.String,java.lang.Object)
CALLER: org.slf4j.helpers.SubstituteLogger#error(java.lang.String,java.lang.Object)
	CALLEE: org.slf4j.helpers.NOPLogger#error(java.lang.String,java.lang.Object)
	CALLEE: org.slf4j.helpers.SubstituteLogger#error(java.lang.String,java.lang.Object)
	CALLEE: org.slf4j.helpers.SubstituteLogger#delegate()
	CALLEE: org.slf4j.impl.SimpleLogger#error(java.lang.String,java.lang.Object)
	CALLEE: org.slf4j.event.EventRecodingLogger#error(java.lang.String,java.lang.Object)
CALLER: org.slf4j.helpers.SubstituteLogger#debug(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.helpers.NOPLogger#debug(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.helpers.SubstituteLogger#debug(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.helpers.SubstituteLogger#delegate()
	CALLEE: org.slf4j.impl.SimpleLogger#debug(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.event.EventRecodingLogger#debug(java.lang.String,java.lang.Object,java.lang.Object)
CALLER: org.slf4j.helpers.SubstituteLogger#isErrorEnabled()
	CALLEE: org.slf4j.helpers.NOPLogger#isErrorEnabled()
	CALLEE: org.slf4j.helpers.SubstituteLogger#isErrorEnabled()
	CALLEE: org.slf4j.helpers.SubstituteLogger#delegate()
	CALLEE: org.slf4j.impl.SimpleLogger#isErrorEnabled()
	CALLEE: org.slf4j.event.EventRecodingLogger#isErrorEnabled()
CALLER: org.eclipse.jetty.servlet.ServletHolder#equals(java.lang.Object)
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#compareTo(org.eclipse.jetty.servlet.ServletHolder)
CALLER: org.eclipse.jetty.servlet.ServletHolder#compareTo(java.lang.Object)
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#compareTo(org.eclipse.jetty.servlet.ServletHolder)
CALLER: org.eclipse.jetty.servlet.ServletHolder#initialize()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#ignore(java.lang.Throwable)
	CALLEE: org.eclipse.jetty.servlet.BaseHolder#initialize()
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#initServlet()
	CALLEE: org.eclipse.jetty.servlet.ServletHandler#isStartWithUnavailable()
CALLER: org.eclipse.jetty.servlet.ServletHolder#doStart()
	CALLEE: org.eclipse.jetty.servlet.Holder#getName()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#ignore(java.lang.Throwable)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#isDebugEnabled()
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#getClassNameForJsp(java.lang.String)
	CALLEE: org.eclipse.jetty.servlet.BaseHolder#getServletHandler()
	CALLEE: org.eclipse.jetty.servlet.Holder#setClassName(java.lang.String)
	CALLEE: org.eclipse.jetty.servlet.BaseHolder#getClassName()
	CALLEE: org.eclipse.jetty.servlet.Holder#setInitParameter(java.lang.String,java.lang.String)
	CALLEE: org.eclipse.jetty.servlet.BaseHolder#doStart()
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#makeUnavailable(javax.servlet.UnavailableException)
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#checkServletType()
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#checkInitOnStartup()
	CALLEE: org.eclipse.jetty.servlet.ServletHolder.Config#<init>(org.eclipse.jetty.servlet.ServletHolder)
	CALLEE: org.eclipse.jetty.servlet.ServletHolder.SingleThreadedWrapper#<init>(org.eclipse.jetty.servlet.ServletHolder,org.eclipse.jetty.servlet.ServletHolder.1)
	CALLEE: org.eclipse.jetty.servlet.ServletHandler#getServlet(java.lang.String)
	CALLEE: org.eclipse.jetty.servlet.ServletHandler#isStartWithUnavailable()
	CALLEE: org.eclipse.jetty.servlet.ServletHandler#getIdentityService()
	CALLEE: org.eclipse.jetty.servlet.Holder#getInitParameters()
CALLER: org.eclipse.jetty.servlet.ServletHolder#toString()
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#hashCode()
CALLER: org.eclipse.jetty.servlet.ServletHolder#doStop()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#warn(java.lang.Throwable)
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#destroyInstance(java.lang.Object)
CALLER: org.eclipse.jetty.servlet.Holder#dump(java.lang.Appendable,java.lang.String)
	CALLEE: static org.eclipse.jetty.util.component.ContainerLifeCycle#dump(java.lang.Appendable,java.lang.String,java.util.Collection[])
	CALLEE: org.eclipse.jetty.servlet.BaseHolder#dump(java.lang.Appendable,java.lang.String)
CALLER: org.eclipse.jetty.util.thread.ScheduledExecutorScheduler.1#newThread(java.lang.Runnable)
	CALLEE: static org.eclipse.jetty.util.thread.ScheduledExecutorScheduler#access$100(org.eclipse.jetty.util.thread.ScheduledExecutorScheduler)
	CALLEE: static org.eclipse.jetty.util.thread.ScheduledExecutorScheduler#access$002(org.eclipse.jetty.util.thread.ScheduledExecutorScheduler,java.lang.Thread)
	CALLEE: static org.eclipse.jetty.util.thread.ScheduledExecutorScheduler#access$200(org.eclipse.jetty.util.thread.ScheduledExecutorScheduler)
	CALLEE: static org.eclipse.jetty.util.thread.ScheduledExecutorScheduler#access$300(org.eclipse.jetty.util.thread.ScheduledExecutorScheduler)
CALLER: org.eclipse.jetty.http.PathMap.MappedEntry#getKey()
	CALLEE: org.eclipse.jetty.http.PathMap.MappedEntry#getKey()
CALLER: org.eclipse.jetty.io.SelectorManager.ManagedSelector#dump(java.lang.Appendable,java.lang.String)
	CALLEE: static org.eclipse.jetty.util.component.ContainerLifeCycle#dump(java.lang.Appendable,java.lang.String,java.util.Collection[])
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector#submit(java.lang.Runnable)
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector.DumpKeys#<init>(org.eclipse.jetty.io.SelectorManager.ManagedSelector,java.util.List,org.eclipse.jetty.io.SelectorManager.1)
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector.DumpKeys#await(long,java.util.concurrent.TimeUnit)
CALLER: org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.JarZipSchemeScanner#reset()
	CALLEE: org.glassfish.jersey.server.internal.scanning.JarFileScanner#reset()
CALLER: org.eclipse.jetty.server.session.AbstractSessionIdManager#doStart()
	CALLEE: org.eclipse.jetty.server.session.AbstractSessionIdManager#initRandom()
CALLER: org.eclipse.jetty.server.session.AbstractSession#changeAttribute(java.lang.String,java.lang.Object)
	CALLEE: org.eclipse.jetty.server.session.HashedSession#checkValid()
	CALLEE: org.eclipse.jetty.server.session.MemSession#doPutOrRemove(java.lang.String,java.lang.Object)
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#callSessionAttributeListeners(java.lang.String,java.lang.Object,java.lang.Object)
CALLER: liquibase.exception.UnknownFormatException#<init>(java.lang.String)
	CALLEE: liquibase.exception.LiquibaseException#<init>(java.lang.String)
CALLER: static liquibase.util.ObjectUtil#setProperty(java.lang.Object,java.lang.String,java.lang.String)
	CALLEE: liquibase.exception.UnexpectedLiquibaseException#<init>(java.lang.Throwable)
	CALLEE: liquibase.exception.UnexpectedLiquibaseException#<init>(java.lang.String)
	CALLEE: static liquibase.util.ObjectUtil#getWriteMethod(java.lang.Object,java.lang.String)
	CALLEE: liquibase.statement.DatabaseFunction#<init>(java.lang.String)
	CALLEE: liquibase.statement.SequenceNextValueFunction#<init>(java.lang.String)
	CALLEE: liquibase.statement.SequenceCurrentValueFunction#<init>(java.lang.String)
CALLER: liquibase.database.OfflineConnection#createChangeLogHistoryService(liquibase.database.Database)
	CALLEE: liquibase.changelog.OfflineChangeLogHistoryService#<init>(liquibase.database.Database,java.io.File,boolean,boolean)
CALLER: liquibase.logging.core.DefaultLogger#info(java.lang.String,java.lang.Throwable)
	CALLEE: liquibase.logging.core.DefaultLogger#getLogLevel()
	CALLEE: liquibase.logging.core.DefaultLogger#print(liquibase.logging.LogLevel,java.lang.String)
	CALLEE: org.h2.jdbc.JdbcSQLException#printStackTrace(java.io.PrintStream)
CALLER: org.eclipse.jetty.util.ConcurrentArrayQueue#offer(java.lang.Object)
	CALLEE: org.eclipse.jetty.util.ConcurrentArrayQueue#newBlock()
	CALLEE: org.eclipse.jetty.util.ConcurrentArrayQueue#getBlockSize()
	CALLEE: org.eclipse.jetty.util.ConcurrentArrayQueue#getTailBlock()
	CALLEE: org.eclipse.jetty.util.ConcurrentArrayQueue.Block#tail()
	CALLEE: org.eclipse.jetty.util.ConcurrentArrayQueue.Block#peek(int)
	CALLEE: org.eclipse.jetty.util.ConcurrentArrayQueue.Block#store(int,java.lang.Object)
	CALLEE: org.eclipse.jetty.util.ConcurrentArrayQueue#updateTailBlock(org.eclipse.jetty.util.ConcurrentArrayQueue.Block,org.eclipse.jetty.util.ConcurrentArrayQueue.Block)
	CALLEE: org.eclipse.jetty.util.ConcurrentArrayQueue.Block#next()
	CALLEE: org.eclipse.jetty.util.ConcurrentArrayQueue.Block#link(org.eclipse.jetty.util.ConcurrentArrayQueue.Block)
CALLER: static org.eclipse.jetty.io.SelectorManager.1#<clinit>()
	CALLEE: static org.eclipse.jetty.io.SelectorManager.State#values()
CALLER: org.eclipse.jetty.io.SelectorManager.ManagedSelector.Stop#<init>(org.eclipse.jetty.io.SelectorManager.ManagedSelector,org.eclipse.jetty.io.SelectorManager.1)
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector.Stop#<init>(org.eclipse.jetty.io.SelectorManager.ManagedSelector)
CALLER: org.eclipse.jetty.server.ShutdownMonitor.ShutdownMonitorRunnable#<init>(org.eclipse.jetty.server.ShutdownMonitor)
	CALLEE: org.eclipse.jetty.server.ShutdownMonitor.ShutdownMonitorRunnable#startListenSocket()
CALLER: jersey.repackaged.com.google.common.base.Joiner.MapJoiner#<init>(jersey.repackaged.com.google.common.base.Joiner,java.lang.String,jersey.repackaged.com.google.common.base.Joiner.1)
	CALLEE: jersey.repackaged.com.google.common.base.Joiner.MapJoiner#<init>(jersey.repackaged.com.google.common.base.Joiner,java.lang.String)
CALLER: org.glassfish.jersey.server.internal.scanning.PackageNamesScanner#close()
	CALLEE: org.glassfish.jersey.server.internal.scanning.CompositeResourceFinder#close()
CALLER: liquibase.LabelExpression#matches(java.lang.String,liquibase.Labels)
	CALLEE: liquibase.exception.UnexpectedLiquibaseException#<init>(java.lang.String)
	CALLEE: liquibase.LabelExpression#matches(java.lang.String,liquibase.Labels)
CALLER: org.slf4j.impl.SimpleLogger#<init>(java.lang.String)
	CALLEE: static org.slf4j.impl.SimpleLogger#stringToLevel(java.lang.String)
	CALLEE: org.slf4j.helpers.MarkerIgnoringBase#<init>()
	CALLEE: org.slf4j.impl.SimpleLogger#recursivelyComputeLevelString()
CALLER: org.eclipse.jetty.server.handler.HandlerCollection#destroy()
	CALLEE: org.eclipse.jetty.server.handler.HandlerCollection#setHandlers(org.eclipse.jetty.server.Handler[])
	CALLEE: org.eclipse.jetty.server.handler.AbstractHandlerContainer#getChildHandlers()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#isStopped()
	CALLEE: org.eclipse.jetty.server.handler.HandlerCollection#destroy()
	CALLEE: org.eclipse.jetty.server.handler.AbstractHandler#destroy()
	CALLEE: org.eclipse.jetty.server.handler.HandlerWrapper#destroy()
	CALLEE: org.eclipse.jetty.webapp.WebAppContext#destroy()
CALLER: org.eclipse.jetty.util.component.ContainerLifeCycle#destroy()
	CALLEE: static org.eclipse.jetty.util.component.ContainerLifeCycle.Bean#access$000(org.eclipse.jetty.util.component.ContainerLifeCycle.Bean)
	CALLEE: static org.eclipse.jetty.util.component.ContainerLifeCycle.Bean#access$100(org.eclipse.jetty.util.component.ContainerLifeCycle.Bean)
	CALLEE: org.eclipse.jetty.server.handler.HandlerCollection#destroy()
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#destroy()
	CALLEE: org.eclipse.jetty.server.handler.AbstractHandler#destroy()
	CALLEE: org.eclipse.jetty.server.handler.HandlerWrapper#destroy()
CALLER: org.eclipse.jetty.server.handler.AbstractHandler#destroy()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#isStopped()
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#destroy()
CALLER: org.eclipse.jetty.server.handler.HandlerWrapper#destroy()
	CALLEE: org.eclipse.jetty.server.handler.HandlerWrapper#getHandler()
	CALLEE: org.eclipse.jetty.server.handler.HandlerWrapper#setHandler(org.eclipse.jetty.server.Handler)
	CALLEE: org.eclipse.jetty.servlet.ServletContextHandler#setHandler(org.eclipse.jetty.server.Handler)
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#isStopped()
	CALLEE: org.eclipse.jetty.server.handler.HandlerCollection#destroy()
	CALLEE: org.eclipse.jetty.server.handler.AbstractHandler#destroy()
	CALLEE: org.eclipse.jetty.server.handler.HandlerWrapper#destroy()
CALLER: org.eclipse.jetty.webapp.WebAppContext#destroy()
	CALLEE: org.eclipse.jetty.util.MultiException#<init>()
	CALLEE: org.eclipse.jetty.util.MultiException#add(java.lang.Throwable)
	CALLEE: org.eclipse.jetty.server.handler.HandlerWrapper#destroy()
	CALLEE: org.eclipse.jetty.util.MultiException#ifExceptionThrowRuntime()
CALLER: com.zaxxer.hikari.pool.HikariPool.PoolEntryCreator#call()
	CALLEE: com.zaxxer.hikari.HikariConfig#getMaximumPoolSize()
	CALLEE: static com.zaxxer.hikari.pool.HikariPool#access$600(com.zaxxer.hikari.pool.HikariPool)
	CALLEE: static com.zaxxer.hikari.pool.HikariPool#access$300(com.zaxxer.hikari.pool.HikariPool)
	CALLEE: static com.zaxxer.hikari.pool.HikariPool#access$400(com.zaxxer.hikari.pool.HikariPool)
	CALLEE: static com.zaxxer.hikari.pool.HikariPool#access$500(com.zaxxer.hikari.pool.HikariPool)
	CALLEE: com.zaxxer.hikari.util.ConcurrentBag#add(com.zaxxer.hikari.util.ConcurrentBag.IConcurrentBagEntry)
	CALLEE: static com.zaxxer.hikari.util.UtilityElf#quietlySleep(long)
CALLER: liquibase.configuration.LiquibaseConfiguration#getProperty(java.lang.Class,java.lang.String)
	CALLEE: liquibase.configuration.LiquibaseConfiguration#getConfiguration(java.lang.Class)
CALLER: liquibase.database.AbstractJdbcDatabase#getConnectionSchemaName()
	CALLEE: static liquibase.logging.LogFactory#getLogger()
	CALLEE: static liquibase.executor.ExecutorService#getInstance()
	CALLEE: liquibase.executor.ExecutorService#getExecutor(liquibase.database.Database)
	CALLEE: liquibase.logging.core.DefaultLogger#info(java.lang.String,java.lang.Throwable)
	CALLEE: liquibase.database.OfflineConnection#getSchema()
	CALLEE: liquibase.database.AbstractJdbcDatabase#getConnectionSchemaNameCallStatement()
CALLER: liquibase.database.jvm.JdbcConnection#getDatabaseProductVersion()
	CALLEE: liquibase.exception.DatabaseException#<init>(java.lang.Throwable)
CALLER: liquibase.database.jvm.JdbcConnection#getDatabaseMinorVersion()
	CALLEE: liquibase.exception.DatabaseException#<init>(java.lang.Throwable)
CALLER: liquibase.database.jvm.JdbcConnection#getDatabaseMajorVersion()
	CALLEE: liquibase.exception.DatabaseException#<init>(java.lang.Throwable)
CALLER: org.eclipse.jetty.io.SelectorManager.ManagedSelector#run()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#isRunning()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#isDebugEnabled()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#isStopping()
	CALLEE: static org.eclipse.jetty.io.SelectorManager#access$500(org.eclipse.jetty.io.SelectorManager)
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector#select()
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector#runChanges()
CALLER: org.eclipse.jetty.server.AbstractNetworkConnector#isAccepting()
	CALLEE: org.eclipse.jetty.server.AbstractConnector#isAccepting()
	CALLEE: org.eclipse.jetty.server.ServerConnector#isOpen()
CALLER: org.eclipse.jetty.server.ServerConnector#accept(int)
	CALLEE: org.eclipse.jetty.server.ServerConnector#accepted(java.nio.channels.SocketChannel)
CALLER: org.apache.log4j.Category#forcedLog(java.lang.String,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)
	CALLEE: org.apache.log4j.spi.LoggingEvent#<init>(java.lang.String,org.apache.log4j.Category,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)
	CALLEE: org.apache.log4j.spi.NOPLogger#callAppenders(org.apache.log4j.spi.LoggingEvent)
	CALLEE: org.apache.log4j.Category#callAppenders(org.apache.log4j.spi.LoggingEvent)
CALLER: liquibase.changelog.filter.ShouldRunChangeSetFilter#changeSetsMatch(liquibase.changelog.ChangeSet,liquibase.changelog.RanChangeSet)
	CALLEE: liquibase.changelog.filter.ShouldRunChangeSetFilter#idsAreEqual(liquibase.changelog.ChangeSet,liquibase.changelog.RanChangeSet)
	CALLEE: liquibase.changelog.filter.ShouldRunChangeSetFilter#authorsAreEqual(liquibase.changelog.ChangeSet,liquibase.changelog.RanChangeSet)
	CALLEE: liquibase.changelog.filter.ShouldRunChangeSetFilter#pathsAreEqual(liquibase.changelog.ChangeSet,liquibase.changelog.RanChangeSet)
CALLER: liquibase.changelog.filter.ShouldRunChangeSetFilter#checksumChanged(liquibase.changelog.ChangeSet,liquibase.changelog.RanChangeSet)
	CALLEE: liquibase.changelog.RanChangeSet#getLastCheckSum()
CALLER: static liquibase.ContextExpression#matchesAll(java.util.Collection,liquibase.Contexts)
	CALLEE: liquibase.Contexts#isEmpty()
CALLER: liquibase.Contexts#toString()
	CALLEE: static liquibase.util.StringUtils#join(java.util.Collection,java.lang.String)
CALLER: liquibase.LabelExpression#toString()
	CALLEE: static liquibase.util.StringUtils#join(java.util.Collection,java.lang.String)
CALLER: liquibase.database.jvm.JdbcConnection#equals(java.lang.Object)
	CALLEE: liquibase.database.jvm.JdbcConnection#getUnderlyingConnection()
CALLER: liquibase.database.jvm.JdbcConnection#hashCode()
	CALLEE: liquibase.database.jvm.JdbcConnection#getUnderlyingConnection()
CALLER: org.eclipse.jetty.server.session.HashSessionManager#scavenge()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#warn(java.lang.String,java.lang.Throwable)
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#isStopping()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#isStopped()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,long)
CALLER: org.eclipse.jetty.server.session.HashSessionManager#saveSessions(boolean)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#warn(java.lang.String,java.lang.Object[])
CALLER: org.eclipse.jetty.server.AbstractNetworkConnector#shutdown()
	CALLEE: org.eclipse.jetty.server.ServerConnector#close()
	CALLEE: org.eclipse.jetty.server.AbstractConnector#shutdown()
CALLER: org.slf4j.helpers.SubstituteLogger#delegate()
	CALLEE: org.slf4j.helpers.SubstituteLogger#getEventRecordingLogger()
CALLER: org.eclipse.jetty.servlet.BaseHolder#initialize()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#isStarted()
CALLER: org.eclipse.jetty.servlet.ServletHolder#initServlet()
	CALLEE: org.eclipse.jetty.servlet.Holder#getName()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#isDebugEnabled()
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#toString()
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#makeUnavailable(javax.servlet.UnavailableException)
	CALLEE: org.eclipse.jetty.servlet.ServletHolder.Config#<init>(org.eclipse.jetty.servlet.ServletHolder)
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#newInstance()
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#isJspServlet()
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#initJspServlet()
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#detectJspContainer()
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#initMultiPart()
	CALLEE: javax.servlet.GenericServlet#init(javax.servlet.ServletConfig)
	CALLEE: org.eclipse.jetty.servlet.ServletHolder.SingleThreadedWrapper#init(javax.servlet.ServletConfig)
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#makeUnavailable(java.lang.Throwable)
	CALLEE: javax.servlet.ServletException#<init>(java.lang.String,java.lang.Throwable)
CALLER: org.eclipse.jetty.servlet.ServletHolder#getClassNameForJsp(java.lang.String)
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#getJspPackagePrefix()
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#getPackageOfJspClass(java.lang.String)
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#getNameOfJspClass(java.lang.String)
CALLER: org.eclipse.jetty.servlet.Holder#setClassName(java.lang.String)
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#hashCode()
	CALLEE: org.eclipse.jetty.servlet.BaseHolder#setClassName(java.lang.String)
CALLER: org.eclipse.jetty.servlet.BaseHolder#doStart()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#getMessage()
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#getMessage()
	CALLEE: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference#getMessage()
	CALLEE: static org.eclipse.jetty.util.Loader#loadClass(java.lang.Class,java.lang.String)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#isDebugEnabled()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#warn(java.lang.Throwable)
	CALLEE: javax.servlet.UnavailableException#<init>(java.lang.String)
	CALLEE: org.h2.jdbc.JdbcSQLException#getMessage()
CALLER: org.eclipse.jetty.servlet.ServletHolder#makeUnavailable(javax.servlet.UnavailableException)
	CALLEE: org.eclipse.jetty.servlet.ServletHandler#getServletContext()
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler.NoContext#log(java.lang.String,java.lang.Throwable)
	CALLEE: javax.servlet.UnavailableException#getUnavailableSeconds()
	CALLEE: javax.servlet.UnavailableException#isPermanent()
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler.Context#log(java.lang.String,java.lang.Throwable)
CALLER: org.eclipse.jetty.servlet.ServletHolder#checkServletType()
	CALLEE: javax.servlet.UnavailableException#<init>(java.lang.String)
CALLER: org.eclipse.jetty.servlet.ServletHolder#checkInitOnStartup()
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#setInitOrder(int)
CALLER: org.eclipse.jetty.servlet.ServletHolder.Config#<init>(org.eclipse.jetty.servlet.ServletHolder)
	CALLEE: org.eclipse.jetty.servlet.Holder.HolderConfig#<init>(org.eclipse.jetty.servlet.Holder)
CALLER: org.eclipse.jetty.servlet.ServletHolder.SingleThreadedWrapper#<init>(org.eclipse.jetty.servlet.ServletHolder,org.eclipse.jetty.servlet.ServletHolder.1)
	CALLEE: org.eclipse.jetty.servlet.ServletHolder.SingleThreadedWrapper#<init>(org.eclipse.jetty.servlet.ServletHolder)
CALLER: org.eclipse.jetty.servlet.ServletHolder#destroyInstance(java.lang.Object)
	CALLEE: org.eclipse.jetty.servlet.BaseHolder#getServletHandler()
	CALLEE: org.eclipse.jetty.servlet.ServletHandler#destroyServlet(javax.servlet.Servlet)
	CALLEE: org.eclipse.jetty.websocket.servlet.WebSocketServlet#destroy()
	CALLEE: org.glassfish.jersey.servlet.ServletContainer#destroy()
	CALLEE: org.h2.server.web.WebServlet#destroy()
	CALLEE: org.eclipse.jetty.servlet.ServletHolder.SingleThreadedWrapper#destroy()
CALLER: org.eclipse.jetty.servlet.BaseHolder#dump(java.lang.Appendable,java.lang.String)
	CALLEE: static org.eclipse.jetty.util.component.AbstractLifeCycle#getState(org.eclipse.jetty.util.component.LifeCycle)
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#toString()
CALLER: org.eclipse.jetty.io.SelectorManager.ManagedSelector.DumpKeys#<init>(org.eclipse.jetty.io.SelectorManager.ManagedSelector,java.util.List,org.eclipse.jetty.io.SelectorManager.1)
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector.DumpKeys#<init>(org.eclipse.jetty.io.SelectorManager.ManagedSelector,java.util.List)
CALLER: org.eclipse.jetty.server.session.AbstractSessionIdManager#initRandom()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#warn(java.lang.String,java.lang.Throwable)
CALLER: org.eclipse.jetty.server.session.HashedSession#checkValid()
	CALLEE: org.eclipse.jetty.server.session.HashedSession#deIdle()
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#checkValid()
CALLER: org.eclipse.jetty.server.session.AbstractSession#callSessionAttributeListeners(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.JsonLocation#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#equals(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.ConsumesProducesAcceptor#equals(java.lang.Object)
	CALLEE: org.traccar.database.GroupTree.TreeNode#equals(java.lang.Object)
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig.FeatureRegistration#equals(java.lang.Object)
	CALLEE: org.apache.log4j.CategoryKey#equals(java.lang.Object)
	CALLEE: org.slf4j.helpers.SubstituteLogger#equals(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.Errors.ErrorMessage#equals(java.lang.Object)
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#equals(java.lang.Object)
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#unbindValue(java.lang.String,java.lang.Object)
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#bindValue(java.lang.String,java.lang.Object)
	CALLEE: org.eclipse.jetty.server.session.AbstractSessionManager#doSessionAttributeListeners(org.eclipse.jetty.server.session.AbstractSession,java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.OsgiRegistry.BundleSpiProvidersLoader#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.ClassKey#equals(java.lang.Object)
	CALLEE: javax.ws.rs.core.MediaType#equals(java.lang.Object)
	CALLEE: jersey.repackaged.com.google.common.base.Predicates.AndPredicate#equals(java.lang.Object)
	CALLEE: org.glassfish.hk2.api.AnnotationLiteral#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#equals(java.lang.Object)
	CALLEE: org.glassfish.hk2.utilities.reflection.ParameterizedTypeImpl#equals(java.lang.Object)
	CALLEE: liquibase.changelog.RanChangeSet#equals(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.model.ResourceModelIssue#equals(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.model.Parameter#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.jsontype.NamedType#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.NullNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.MemberKey#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.ObjectNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.ArrayNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.POJONode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.BooleanNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.TextNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.BinaryNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.IntNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.LongNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.BigIntegerNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.DoubleNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.DecimalNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.annotation.ObjectIdGenerator.IdKey#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.PropertyName#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.io.SerializedString#equals(java.lang.Object)
	CALLEE: org.glassfish.jersey.message.internal.AcceptableMediaType#equals(java.lang.Object)
	CALLEE: org.glassfish.jersey.message.internal.QualitySourceMediaType#equals(java.lang.Object)
CALLER: static liquibase.util.ObjectUtil#getWriteMethod(java.lang.Object,java.lang.String)
	CALLEE: static liquibase.util.ObjectUtil#getMethods(java.lang.Object)
CALLER: liquibase.statement.SequenceNextValueFunction#<init>(java.lang.String)
	CALLEE: liquibase.statement.DatabaseFunction#<init>(java.lang.String)
CALLER: liquibase.statement.SequenceCurrentValueFunction#<init>(java.lang.String)
	CALLEE: liquibase.statement.DatabaseFunction#<init>(java.lang.String)
CALLER: liquibase.changelog.OfflineChangeLogHistoryService#<init>(liquibase.database.Database,java.io.File,boolean,boolean)
	CALLEE: liquibase.changelog.AbstractChangeLogHistoryService#<init>()
	CALLEE: liquibase.changelog.AbstractChangeLogHistoryService#setDatabase(liquibase.database.Database)
CALLER: org.eclipse.jetty.util.ConcurrentArrayQueue#updateTailBlock(org.eclipse.jetty.util.ConcurrentArrayQueue.Block,org.eclipse.jetty.util.ConcurrentArrayQueue.Block)
	CALLEE: org.eclipse.jetty.util.ConcurrentArrayQueue#casTailBlock(org.eclipse.jetty.util.ConcurrentArrayQueue.Block,org.eclipse.jetty.util.ConcurrentArrayQueue.Block)
CALLER: org.eclipse.jetty.server.ShutdownMonitor.ShutdownMonitorRunnable#startListenSocket()
	CALLEE: org.eclipse.jetty.util.MultiException#toString()
	CALLEE: static org.eclipse.jetty.server.ShutdownMonitor#access$202(org.eclipse.jetty.server.ShutdownMonitor,java.lang.String)
	CALLEE: static org.eclipse.jetty.server.ShutdownMonitor#access$300(org.eclipse.jetty.server.ShutdownMonitor,java.lang.String,java.lang.Object[])
	CALLEE: static org.eclipse.jetty.server.ShutdownMonitor#access$600(org.eclipse.jetty.server.ShutdownMonitor,java.lang.Throwable)
	CALLEE: org.h2.jdbc.JdbcSQLException#toString()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#toString()
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#toString()
	CALLEE: static org.eclipse.jetty.server.ShutdownMonitor#access$1000(org.eclipse.jetty.server.ShutdownMonitor)
	CALLEE: static org.eclipse.jetty.server.ShutdownMonitor#access$1100(org.eclipse.jetty.server.ShutdownMonitor)
	CALLEE: static org.eclipse.jetty.server.ShutdownMonitor#access$102(org.eclipse.jetty.server.ShutdownMonitor,java.net.ServerSocket)
	CALLEE: static org.eclipse.jetty.server.ShutdownMonitor#access$100(org.eclipse.jetty.server.ShutdownMonitor)
	CALLEE: static org.eclipse.jetty.server.ShutdownMonitor#access$1200(org.eclipse.jetty.server.ShutdownMonitor)
	CALLEE: static org.eclipse.jetty.server.ShutdownMonitor#access$1002(org.eclipse.jetty.server.ShutdownMonitor,int)
	CALLEE: static org.eclipse.jetty.server.ShutdownMonitor#access$200(org.eclipse.jetty.server.ShutdownMonitor)
CALLER: jersey.repackaged.com.google.common.base.Joiner.MapJoiner#<init>(jersey.repackaged.com.google.common.base.Joiner,java.lang.String)
	CALLEE: static jersey.repackaged.com.google.common.base.Preconditions#checkNotNull(java.lang.Object)
CALLER: org.glassfish.jersey.server.internal.scanning.CompositeResourceFinder#close()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: org.glassfish.jersey.server.internal.scanning.PackageNamesScanner#close()
	CALLEE: org.glassfish.jersey.server.internal.AbstractResourceFinderAdapter#close()
	CALLEE: org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.JarZipSchemeScanner#close()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeScanner#close()
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#ERROR_CLOSING_FINDER(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.internal.scanning.JarFileScanner#close()
	CALLEE: org.glassfish.jersey.servlet.WebAppResourcesScanner#close()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FilesScanner#close()
CALLER: org.slf4j.impl.SimpleLogger#recursivelyComputeLevelString()
	CALLEE: static org.slf4j.impl.SimpleLogger#getStringProperty(java.lang.String,java.lang.String)
CALLER: static com.zaxxer.hikari.pool.HikariPool#access$500(com.zaxxer.hikari.pool.HikariPool)
	CALLEE: com.zaxxer.hikari.pool.HikariPool#createPoolEntry()
CALLER: com.zaxxer.hikari.util.ConcurrentBag#add(com.zaxxer.hikari.util.ConcurrentBag.IConcurrentBagEntry)
	CALLEE: org.slf4j.helpers.SubstituteLogger#info(java.lang.String)
	CALLEE: org.slf4j.helpers.NOPLogger#info(java.lang.String)
	CALLEE: com.zaxxer.hikari.util.QueuedSequenceSynchronizer#signal()
	CALLEE: org.slf4j.impl.SimpleLogger#info(java.lang.String)
CALLER: liquibase.database.AbstractJdbcDatabase#getConnectionSchemaNameCallStatement()
	CALLEE: liquibase.statement.core.RawCallStatement#<init>(java.lang.String)
CALLER: org.eclipse.jetty.io.SelectorManager.ManagedSelector#select()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#isRunning()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#ignore(java.lang.Throwable)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#isDebugEnabled()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#warn(java.lang.Throwable)
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector#runChanges()
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector#processKey(java.nio.channels.SelectionKey)
CALLER: org.eclipse.jetty.io.SelectorManager.ManagedSelector#runChanges()
	CALLEE: org.eclipse.jetty.util.ConcurrentArrayQueue#poll()
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector#runChange(java.lang.Runnable)
CALLER: org.eclipse.jetty.server.AbstractConnector#isAccepting()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#isRunning()
CALLER: org.eclipse.jetty.server.ServerConnector#accepted(java.nio.channels.SocketChannel)
	CALLEE: org.eclipse.jetty.server.ServerConnector#configure(java.net.Socket)
	CALLEE: org.eclipse.jetty.io.SelectorManager#accept(java.nio.channels.SocketChannel)
CALLER: org.apache.log4j.spi.LoggingEvent#<init>(java.lang.String,org.apache.log4j.Category,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)
	CALLEE: org.apache.log4j.Category#getName()
	CALLEE: org.apache.log4j.spi.ThrowableInformation#<init>(java.lang.Throwable,org.apache.log4j.Category)
CALLER: org.apache.log4j.Category#callAppenders(org.apache.log4j.spi.LoggingEvent)
	CALLEE: org.apache.log4j.helpers.AppenderAttachableImpl#appendLoopOnAppenders(org.apache.log4j.spi.LoggingEvent)
	CALLEE: org.apache.log4j.Hierarchy#emitNoAppenderWarning(org.apache.log4j.Category)
	CALLEE: org.apache.log4j.spi.NOPLoggerRepository#emitNoAppenderWarning(org.apache.log4j.Category)
CALLER: liquibase.changelog.filter.ShouldRunChangeSetFilter#idsAreEqual(liquibase.changelog.ChangeSet,liquibase.changelog.RanChangeSet)
	CALLEE: liquibase.changelog.RanChangeSet#getId()
CALLER: liquibase.changelog.filter.ShouldRunChangeSetFilter#authorsAreEqual(liquibase.changelog.ChangeSet,liquibase.changelog.RanChangeSet)
	CALLEE: liquibase.changelog.RanChangeSet#getAuthor()
CALLER: liquibase.changelog.filter.ShouldRunChangeSetFilter#pathsAreEqual(liquibase.changelog.ChangeSet,liquibase.changelog.RanChangeSet)
	CALLEE: liquibase.changelog.filter.ShouldRunChangeSetFilter#getPath(liquibase.changelog.RanChangeSet)
	CALLEE: liquibase.changelog.filter.ShouldRunChangeSetFilter#getPath(liquibase.changelog.ChangeSet)
CALLER: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,long)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#format(java.lang.StringBuilder,java.lang.String,java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#isDebugEnabled()
CALLER: org.eclipse.jetty.server.AbstractConnector#shutdown()
	CALLEE: org.eclipse.jetty.util.FutureCallback#<init>(boolean)
CALLER: org.slf4j.helpers.SubstituteLogger#getEventRecordingLogger()
	CALLEE: org.slf4j.event.EventRecodingLogger#<init>(org.slf4j.helpers.SubstituteLogger,java.util.Queue)
CALLER: org.eclipse.jetty.servlet.ServletHolder#newInstance()
	CALLEE: org.eclipse.jetty.servlet.BaseHolder#getServletHandler()
	CALLEE: org.eclipse.jetty.servlet.ServletHandler#getServletContext()
	CALLEE: org.eclipse.jetty.servlet.BaseHolder#getHeldClass()
	CALLEE: org.eclipse.jetty.servlet.ServletContextHandler.Context#createServlet(java.lang.Class)
	CALLEE: javax.servlet.ServletException#getRootCause()
CALLER: org.eclipse.jetty.servlet.ServletHolder#isJspServlet()
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#isJspServlet(java.lang.String)
CALLER: org.eclipse.jetty.servlet.ServletHolder#initJspServlet()
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#setAttribute(java.lang.String,java.lang.Object)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#isDebugEnabled()
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#getClassLoader()
	CALLEE: org.eclipse.jetty.servlet.BaseHolder#getServletHandler()
	CALLEE: org.eclipse.jetty.servlet.Holder#setInitParameter(java.lang.String,java.lang.String)
	CALLEE: org.eclipse.jetty.servlet.ServletHandler#getServletContext()
	CALLEE: static org.eclipse.jetty.server.handler.ContextHandler#getContextHandler(javax.servlet.ServletContext)
	CALLEE: static org.eclipse.jetty.util.Loader#getClassPath(java.lang.ClassLoader)
	CALLEE: org.eclipse.jetty.servlet.Holder#getInitParameter(java.lang.String)
	CALLEE: org.eclipse.jetty.util.AttributesMap#getAttribute(java.lang.String)
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler.Context#getAttribute(java.lang.String)
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#getClassPath()
CALLER: org.eclipse.jetty.servlet.ServletHolder#detectJspContainer()
	CALLEE: static org.eclipse.jetty.util.Loader#loadClass(java.lang.Class,java.lang.String)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#isDebugEnabled()
CALLER: org.eclipse.jetty.servlet.ServletHolder#initMultiPart()
	CALLEE: org.eclipse.jetty.servlet.BaseHolder#getServletHandler()
	CALLEE: org.eclipse.jetty.servlet.ServletHandler#getServletContext()
	CALLEE: static org.eclipse.jetty.server.handler.ContextHandler#getContextHandler(javax.servlet.ServletContext)
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#getRegistration()
	CALLEE: org.eclipse.jetty.server.Request.MultiPartCleanerListener#<init>()
	CALLEE: org.eclipse.jetty.servlet.ServletHolder.Registration#getMultipartConfig()
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#addEventListener(java.util.EventListener)
	CALLEE: org.eclipse.jetty.webapp.WebAppContext#addEventListener(java.util.EventListener)
CALLER: javax.servlet.GenericServlet#init(javax.servlet.ServletConfig)
	CALLEE: org.eclipse.jetty.websocket.servlet.WebSocketServlet#init()
	CALLEE: org.glassfish.jersey.servlet.ServletContainer#init()
	CALLEE: org.traccar.web.ConsoleServlet#init()
CALLER: org.eclipse.jetty.servlet.ServletHolder.SingleThreadedWrapper#init(javax.servlet.ServletConfig)
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#newInstance()
	CALLEE: javax.servlet.ServletException#<init>(java.lang.Throwable)
CALLER: org.eclipse.jetty.servlet.ServletHolder#makeUnavailable(java.lang.Throwable)
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#makeUnavailable(javax.servlet.UnavailableException)
	CALLEE: org.eclipse.jetty.servlet.ServletHandler#getServletContext()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#info(java.lang.String,java.lang.Throwable)
	CALLEE: org.eclipse.jetty.servlet.ServletHolder.1#<init>(org.eclipse.jetty.servlet.ServletHolder,java.lang.String,int,java.lang.Throwable)
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler.NoContext#log(java.lang.String,java.lang.Throwable)
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler.Context#log(java.lang.String,java.lang.Throwable)
CALLER: org.eclipse.jetty.servlet.ServletHolder#getJspPackagePrefix()
	CALLEE: org.eclipse.jetty.servlet.BaseHolder#getServletHandler()
	CALLEE: org.eclipse.jetty.servlet.ServletHandler#getServletContext()
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler.NoContext#getInitParameter(java.lang.String)
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler.Context#getInitParameter(java.lang.String)
CALLER: org.eclipse.jetty.servlet.ServletHolder#getPackageOfJspClass(java.lang.String)
	CALLEE: static org.eclipse.jetty.util.Loader#loadClass(java.lang.Class,java.lang.String)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#warn(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#isDebugEnabled()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#warn(java.lang.Throwable)
CALLER: org.eclipse.jetty.servlet.ServletHolder#getNameOfJspClass(java.lang.String)
	CALLEE: static org.eclipse.jetty.util.Loader#loadClass(java.lang.Class,java.lang.String)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#warn(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#isDebugEnabled()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#warn(java.lang.Throwable)
CALLER: javax.servlet.UnavailableException#<init>(java.lang.String)
	CALLEE: javax.servlet.ServletException#<init>(java.lang.String)
CALLER: org.eclipse.jetty.servlet.ServletHandler#destroyServlet(javax.servlet.Servlet)
	CALLEE: org.eclipse.jetty.servlet.ServletContextHandler#destroyServlet(javax.servlet.Servlet)
CALLER: org.glassfish.jersey.servlet.ServletContainer#destroy()
	CALLEE: javax.servlet.GenericServlet#destroy()
	CALLEE: org.glassfish.jersey.server.ApplicationHandler#onShutdown(org.glassfish.jersey.server.spi.Container)
CALLER: org.h2.server.web.WebServlet#destroy()
	CALLEE: org.h2.server.web.WebServer#stop()
CALLER: org.eclipse.jetty.servlet.ServletHolder.SingleThreadedWrapper#destroy()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#warn(java.lang.Throwable)
	CALLEE: static org.eclipse.jetty.servlet.ServletHolder#access$200()
CALLER: org.eclipse.jetty.server.session.HashedSession#deIdle()
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#invalidate()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#isDebugEnabled()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#warn(java.lang.String,java.lang.Throwable)
	CALLEE: org.eclipse.jetty.server.session.HashSessionManager#restoreSession(java.io.InputStream,org.eclipse.jetty.server.session.HashedSession)
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#didActivate()
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#getId()
	CALLEE: org.eclipse.jetty.server.session.HashedSession#isIdled()
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#access(long)
	CALLEE: static org.eclipse.jetty.util.IO#close(java.io.InputStream)
	CALLEE: org.eclipse.jetty.server.session.HashedSession#deIdleFailed()
CALLER: org.eclipse.jetty.server.session.AbstractSession#unbindValue(java.lang.String,java.lang.Object)
	CALLEE: javax.servlet.http.HttpSessionBindingEvent#<init>(javax.servlet.http.HttpSession,java.lang.String)
CALLER: org.eclipse.jetty.server.session.AbstractSession#bindValue(java.lang.String,java.lang.Object)
	CALLEE: javax.servlet.http.HttpSessionBindingEvent#<init>(javax.servlet.http.HttpSession,java.lang.String)
CALLER: org.eclipse.jetty.server.session.AbstractSessionManager#doSessionAttributeListeners(org.eclipse.jetty.server.session.AbstractSession,java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: javax.servlet.http.HttpSessionBindingEvent#<init>(javax.servlet.http.HttpSession,java.lang.String,java.lang.Object)
CALLER: static org.eclipse.jetty.server.ShutdownMonitor#access$300(org.eclipse.jetty.server.ShutdownMonitor,java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.server.ShutdownMonitor#debug(java.lang.String,java.lang.Object[])
CALLER: static org.eclipse.jetty.server.ShutdownMonitor#access$600(org.eclipse.jetty.server.ShutdownMonitor,java.lang.Throwable)
	CALLEE: org.eclipse.jetty.server.ShutdownMonitor#debug(java.lang.Throwable)
CALLER: org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.JarZipSchemeScanner#close()
	CALLEE: org.glassfish.jersey.server.internal.scanning.JarFileScanner#close()
CALLER: org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeScanner#close()
	CALLEE: org.glassfish.jersey.server.internal.scanning.CompositeResourceFinder#close()
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#ERROR_CLOSING_FINDER(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableERROR_CLOSING_FINDER(java.lang.Object)
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#<clinit>()
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#<init>(java.lang.String)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#<init>()
CALLER: com.zaxxer.hikari.pool.HikariPool#createPoolEntry()
	CALLEE: org.slf4j.helpers.NOPLogger#debug(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.helpers.SubstituteLogger#debug(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: com.zaxxer.hikari.pool.PoolBase#newPoolEntry()
	CALLEE: com.zaxxer.hikari.HikariConfig#getMaxLifetime()
	CALLEE: com.zaxxer.hikari.pool.HikariPool.2#<init>(com.zaxxer.hikari.pool.HikariPool,com.zaxxer.hikari.pool.PoolEntry)
	CALLEE: org.slf4j.impl.SimpleLogger#debug(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: com.zaxxer.hikari.pool.PoolEntry#setFutureEol(java.util.concurrent.ScheduledFuture)
CALLER: org.slf4j.helpers.SubstituteLogger#info(java.lang.String)
	CALLEE: org.slf4j.helpers.SubstituteLogger#delegate()
	CALLEE: org.slf4j.helpers.SubstituteLogger#info(java.lang.String)
	CALLEE: org.slf4j.helpers.NOPLogger#info(java.lang.String)
	CALLEE: org.slf4j.impl.SimpleLogger#info(java.lang.String)
	CALLEE: org.slf4j.event.EventRecodingLogger#info(java.lang.String)
CALLER: liquibase.statement.core.RawCallStatement#<init>(java.lang.String)
	CALLEE: liquibase.statement.core.RawSqlStatement#<init>(java.lang.String)
CALLER: org.eclipse.jetty.io.SelectorManager.ManagedSelector#processKey(java.nio.channels.SelectionKey)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#warn(java.lang.String,java.lang.Throwable)
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector#processConnect(java.nio.channels.SelectionKey,org.eclipse.jetty.io.SelectorManager.ManagedSelector.Connect)
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector#processAccept(java.nio.channels.SelectionKey)
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector#closeNoExceptions(java.io.Closeable)
CALLER: org.eclipse.jetty.util.ConcurrentArrayQueue#poll()
	CALLEE: org.eclipse.jetty.util.ConcurrentArrayQueue#getBlockSize()
	CALLEE: org.eclipse.jetty.util.ConcurrentArrayQueue#getHeadBlock()
	CALLEE: org.eclipse.jetty.util.ConcurrentArrayQueue#updateHeadBlock(org.eclipse.jetty.util.ConcurrentArrayQueue.Block,org.eclipse.jetty.util.ConcurrentArrayQueue.Block)
CALLER: org.eclipse.jetty.io.SelectorManager.ManagedSelector#runChange(java.lang.Runnable)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#isDebugEnabled()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Throwable)
	CALLEE: org.eclipse.jetty.io.SelectChannelEndPoint.1#run()
CALLER: org.eclipse.jetty.server.ServerConnector#configure(java.net.Socket)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#ignore(java.lang.Throwable)
CALLER: org.eclipse.jetty.io.SelectorManager#accept(java.nio.channels.SocketChannel)
	CALLEE: org.eclipse.jetty.io.SelectorManager#accept(java.nio.channels.SocketChannel,java.lang.Object)
CALLER: org.apache.log4j.helpers.AppenderAttachableImpl#appendLoopOnAppenders(org.apache.log4j.spi.LoggingEvent)
	CALLEE: org.apache.log4j.AppenderSkeleton#doAppend(org.apache.log4j.spi.LoggingEvent)
	CALLEE: org.apache.log4j.varia.NullAppender#doAppend(org.apache.log4j.spi.LoggingEvent)
CALLER: org.apache.log4j.Hierarchy#emitNoAppenderWarning(org.apache.log4j.Category)
	CALLEE: static org.apache.log4j.helpers.LogLog#warn(java.lang.String)
	CALLEE: org.apache.log4j.Category#getName()
CALLER: liquibase.changelog.filter.ShouldRunChangeSetFilter#getPath(liquibase.changelog.RanChangeSet)
	CALLEE: liquibase.changelog.filter.ShouldRunChangeSetFilter#normalizePath(java.lang.String)
	CALLEE: liquibase.changelog.RanChangeSet#getChangeLog()
CALLER: liquibase.changelog.filter.ShouldRunChangeSetFilter#getPath(liquibase.changelog.ChangeSet)
	CALLEE: liquibase.changelog.filter.ShouldRunChangeSetFilter#normalizePath(java.lang.String)
CALLER: static org.eclipse.jetty.util.FutureCallback#<clinit>()
	CALLEE: org.eclipse.jetty.util.ConstantThrowable#<init>()
CALLER: org.slf4j.event.EventRecodingLogger#<init>(org.slf4j.helpers.SubstituteLogger,java.util.Queue)
	CALLEE: org.slf4j.helpers.SubstituteLogger#getName()
CALLER: static org.eclipse.jetty.server.handler.ContextHandler#getContextHandler(javax.servlet.ServletContext)
	CALLEE: static org.eclipse.jetty.server.handler.ContextHandler#getCurrentContext()
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler.Context#getContextHandler()
CALLER: static org.eclipse.jetty.util.Loader#getClassPath(java.lang.ClassLoader)
	CALLEE: static org.eclipse.jetty.util.resource.Resource#newResource(java.net.URL)
	CALLEE: org.eclipse.jetty.util.resource.FileResource#getFile()
	CALLEE: org.eclipse.jetty.util.resource.BadResource#getFile()
	CALLEE: org.eclipse.jetty.util.resource.JarResource#getFile()
	CALLEE: org.eclipse.jetty.util.resource.URLResource#getFile()
CALLER: static org.eclipse.jetty.servlet.ServletHolder.JspContainer#<clinit>()
	CALLEE: org.eclipse.jetty.servlet.ServletHolder.JspContainer#<init>(java.lang.String,int)
CALLER: org.eclipse.jetty.servlet.ServletHolder#getRegistration()
	CALLEE: org.eclipse.jetty.servlet.ServletHolder.Registration#<init>(org.eclipse.jetty.servlet.ServletHolder)
CALLER: org.eclipse.jetty.websocket.servlet.WebSocketServlet#init()
	CALLEE: javax.servlet.ServletException#<init>(java.lang.Throwable)
	CALLEE: org.eclipse.jetty.websocket.api.WebSocketPolicy#<init>(org.eclipse.jetty.websocket.api.WebSocketBehavior)
	CALLEE: javax.servlet.GenericServlet#getInitParameter(java.lang.String)
	CALLEE: org.eclipse.jetty.websocket.api.WebSocketPolicy#setIdleTimeout(long)
	CALLEE: org.eclipse.jetty.websocket.api.WebSocketPolicy#setMaxTextMessageSize(int)
	CALLEE: org.eclipse.jetty.websocket.api.WebSocketPolicy#setMaxBinaryMessageSize(int)
	CALLEE: org.eclipse.jetty.websocket.api.WebSocketPolicy#setInputBufferSize(int)
	CALLEE: static org.eclipse.jetty.websocket.servlet.WebSocketServletFactory.Loader#create(org.eclipse.jetty.websocket.api.WebSocketPolicy)
	CALLEE: org.traccar.api.AsyncSocketServlet#configure(org.eclipse.jetty.websocket.servlet.WebSocketServletFactory)
	CALLEE: javax.servlet.GenericServlet#getServletContext()
	CALLEE: org.eclipse.jetty.util.AttributesMap#setAttribute(java.lang.String,java.lang.Object)
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler.Context#setAttribute(java.lang.String,java.lang.Object)
CALLER: org.glassfish.jersey.servlet.ServletContainer#init()
	CALLEE: org.glassfish.jersey.servlet.WebServletConfig#<init>(org.glassfish.jersey.servlet.ServletContainer)
	CALLEE: org.glassfish.jersey.servlet.ServletContainer#init(org.glassfish.jersey.servlet.WebConfig)
CALLER: org.traccar.web.ConsoleServlet#init()
	CALLEE: org.traccar.Config#getString(java.lang.String)
	CALLEE: static org.traccar.Context#getConfig()
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
	CALLEE: org.h2.server.web.WebServlet#init()
	CALLEE: org.h2.server.web.ConnectionInfo#<init>(java.lang.String)
CALLER: org.eclipse.jetty.util.log.StdErrLog#info(java.lang.String,java.lang.Throwable)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#format(java.lang.StringBuilder,java.lang.String,java.lang.String,java.lang.Throwable)
CALLER: org.eclipse.jetty.servlet.ServletHolder.1#<init>(org.eclipse.jetty.servlet.ServletHolder,java.lang.String,int,java.lang.Throwable)
	CALLEE: javax.servlet.UnavailableException#<init>(java.lang.String,int)
CALLER: org.eclipse.jetty.server.session.AbstractSession#access(long)
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#invalidate()
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#checkExpiry(long)
CALLER: static org.eclipse.jetty.util.IO#close(java.io.InputStream)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#ignore(java.lang.Throwable)
CALLER: static org.eclipse.jetty.util.IO#<clinit>()
	CALLEE: static org.eclipse.jetty.util.log.Log#getLogger(java.lang.Class)
	CALLEE: org.eclipse.jetty.util.IO.NullOS#<init>(org.eclipse.jetty.util.IO.1)
	CALLEE: org.eclipse.jetty.util.IO.ClosedIS#<init>(org.eclipse.jetty.util.IO.1)
	CALLEE: org.eclipse.jetty.util.IO.NullWrite#<init>(org.eclipse.jetty.util.IO.1)
CALLER: org.eclipse.jetty.server.session.AbstractSession#invalidate()
	CALLEE: org.eclipse.jetty.server.session.HashedSession#checkValid()
	CALLEE: org.eclipse.jetty.server.session.AbstractSessionManager#removeSession(org.eclipse.jetty.server.session.AbstractSession,boolean)
	CALLEE: org.eclipse.jetty.server.session.HashedSession#doInvalidate()
CALLER: javax.servlet.http.HttpSessionBindingEvent#<init>(javax.servlet.http.HttpSession,java.lang.String)
	CALLEE: javax.servlet.http.HttpSessionEvent#<init>(javax.servlet.http.HttpSession)
CALLER: javax.servlet.http.HttpSessionBindingEvent#<init>(javax.servlet.http.HttpSession,java.lang.String,java.lang.Object)
	CALLEE: javax.servlet.http.HttpSessionEvent#<init>(javax.servlet.http.HttpSession)
CALLER: org.eclipse.jetty.server.ShutdownMonitor#debug(java.lang.Throwable)
	CALLEE: org.h2.jdbc.JdbcSQLException#printStackTrace(java.io.PrintStream)
	CALLEE: org.glassfish.hk2.api.MultiException#printStackTrace(java.io.PrintStream)
CALLER: org.glassfish.jersey.server.internal.scanning.JarFileScanner#close()
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#JAR_SCANNER_UNABLE_TO_CLOSE_FILE()
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableERROR_CLOSING_FINDER(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: com.zaxxer.hikari.pool.PoolBase#newPoolEntry()
	CALLEE: com.zaxxer.hikari.pool.PoolBase#newConnection()
	CALLEE: com.zaxxer.hikari.pool.PoolEntry#<init>(java.sql.Connection,com.zaxxer.hikari.pool.PoolBase,boolean,boolean)
CALLER: liquibase.statement.core.RawSqlStatement#<init>(java.lang.String)
	CALLEE: liquibase.statement.AbstractSqlStatement#<init>()
CALLER: org.eclipse.jetty.io.SelectorManager.ManagedSelector#processConnect(java.nio.channels.SelectionKey,org.eclipse.jetty.io.SelectorManager.ManagedSelector.Connect)
	CALLEE: static org.eclipse.jetty.io.SelectorManager.ManagedSelector.Connect#access$600(org.eclipse.jetty.io.SelectorManager.ManagedSelector.Connect)
	CALLEE: org.eclipse.jetty.io.SelectorManager#finishConnect(java.nio.channels.SocketChannel)
	CALLEE: static org.eclipse.jetty.io.SelectorManager.ManagedSelector.Connect#access$700(org.eclipse.jetty.io.SelectorManager.ManagedSelector.Connect)
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector#createEndPoint(java.nio.channels.SocketChannel,java.nio.channels.SelectionKey)
	CALLEE: static org.eclipse.jetty.io.SelectorManager.ManagedSelector.Connect#access$800(org.eclipse.jetty.io.SelectorManager.ManagedSelector.Connect,java.lang.Throwable)
CALLER: org.eclipse.jetty.io.SelectorManager.ManagedSelector#processAccept(java.nio.channels.SelectionKey)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#warn(java.lang.String,java.lang.Throwable)
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector#closeNoExceptions(java.io.Closeable)
	CALLEE: org.eclipse.jetty.server.ServerConnector.ServerConnectorManager#accepted(java.nio.channels.SocketChannel)
CALLER: org.eclipse.jetty.io.SelectorManager.ManagedSelector#closeNoExceptions(java.io.Closeable)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#ignore(java.lang.Throwable)
CALLER: org.eclipse.jetty.util.ConcurrentArrayQueue#updateHeadBlock(org.eclipse.jetty.util.ConcurrentArrayQueue.Block,org.eclipse.jetty.util.ConcurrentArrayQueue.Block)
	CALLEE: org.eclipse.jetty.util.ConcurrentArrayQueue#casHeadBlock(org.eclipse.jetty.util.ConcurrentArrayQueue.Block,org.eclipse.jetty.util.ConcurrentArrayQueue.Block)
CALLER: org.eclipse.jetty.io.SelectorManager#accept(java.nio.channels.SocketChannel,java.lang.Object)
	CALLEE: org.eclipse.jetty.io.SelectorManager#chooseSelector()
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector#submit(java.lang.Runnable)
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector.Accept#<init>(org.eclipse.jetty.io.SelectorManager.ManagedSelector,java.nio.channels.SocketChannel,java.lang.Object,org.eclipse.jetty.io.SelectorManager.1)
CALLER: org.eclipse.jetty.util.ConstantThrowable#<init>()
	CALLEE: org.eclipse.jetty.util.ConstantThrowable#<init>(java.lang.String)
CALLER: static org.eclipse.jetty.util.resource.Resource#newResource(java.net.URL)
	CALLEE: static org.eclipse.jetty.util.resource.Resource#newResource(java.net.URL,boolean)
CALLER: org.eclipse.jetty.servlet.ServletHolder.Registration#<init>(org.eclipse.jetty.servlet.ServletHolder)
	CALLEE: org.eclipse.jetty.servlet.Holder.HolderRegistration#<init>(org.eclipse.jetty.servlet.Holder)
CALLER: static org.eclipse.jetty.websocket.api.WebSocketBehavior#<clinit>()
	CALLEE: org.eclipse.jetty.websocket.api.WebSocketBehavior#<init>(java.lang.String,int)
CALLER: javax.servlet.GenericServlet#getInitParameter(java.lang.String)
	CALLEE: javax.servlet.GenericServlet#getServletConfig()
	CALLEE: org.eclipse.jetty.servlet.Holder.HolderConfig#getInitParameter(java.lang.String)
CALLER: org.eclipse.jetty.websocket.api.WebSocketPolicy#setIdleTimeout(long)
	CALLEE: org.eclipse.jetty.websocket.api.WebSocketPolicy#assertGreaterThan(java.lang.String,long,long)
CALLER: org.eclipse.jetty.websocket.api.WebSocketPolicy#setMaxTextMessageSize(int)
	CALLEE: org.eclipse.jetty.websocket.api.WebSocketPolicy#assertGreaterThan(java.lang.String,long,long)
CALLER: org.eclipse.jetty.websocket.api.WebSocketPolicy#setMaxBinaryMessageSize(int)
	CALLEE: org.eclipse.jetty.websocket.api.WebSocketPolicy#assertGreaterThan(java.lang.String,long,long)
CALLER: org.eclipse.jetty.websocket.api.WebSocketPolicy#setInputBufferSize(int)
	CALLEE: org.eclipse.jetty.websocket.api.WebSocketPolicy#assertGreaterThan(java.lang.String,long,long)
	CALLEE: org.eclipse.jetty.websocket.api.WebSocketPolicy#assertLessThan(java.lang.String,long,java.lang.String,long)
CALLER: static org.eclipse.jetty.websocket.servlet.WebSocketServletFactory.Loader#create(org.eclipse.jetty.websocket.api.WebSocketPolicy)
	CALLEE: static org.eclipse.jetty.websocket.servlet.WebSocketServletFactory.Loader#load(org.eclipse.jetty.websocket.api.WebSocketPolicy)
CALLER: org.traccar.api.AsyncSocketServlet#configure(org.eclipse.jetty.websocket.servlet.WebSocketServletFactory)
	CALLEE: static org.traccar.Context#getConfig()
	CALLEE: org.traccar.Config#getLong(java.lang.String,long)
	CALLEE: org.traccar.api.AsyncSocketServlet.1#<init>(org.traccar.api.AsyncSocketServlet)
CALLER: javax.servlet.GenericServlet#getServletContext()
	CALLEE: javax.servlet.GenericServlet#getServletConfig()
	CALLEE: org.eclipse.jetty.servlet.Holder.HolderConfig#getServletContext()
CALLER: org.glassfish.jersey.servlet.ServletContainer#init(org.glassfish.jersey.servlet.WebConfig)
	CALLEE: org.glassfish.jersey.servlet.WebComponent#<init>(org.glassfish.jersey.servlet.WebConfig,org.glassfish.jersey.server.ResourceConfig)
	CALLEE: org.glassfish.jersey.server.ApplicationHandler#onStartup(org.glassfish.jersey.server.spi.Container)
CALLER: org.h2.server.web.WebServlet#init()
	CALLEE: com.fasterxml.jackson.core.JsonLocation#toString()
	CALLEE: com.fasterxml.jackson.core.io.SerializedString#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey#toString()
	CALLEE: org.glassfish.jersey.server.model.Invocable#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#toString()
	CALLEE: org.glassfish.jersey.server.model.MethodHandler.ClassBasedMethodHandler#toString()
	CALLEE: org.glassfish.jersey.server.model.MethodHandler.InstanceBasedMethodHandler#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#toString()
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodRouting#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#toString()
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.ConsumesProducesAcceptor#toString()
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#toString()
	CALLEE: org.eclipse.jetty.webapp.WebAppContext#toString()
	CALLEE: org.eclipse.jetty.server.handler.HandlerCollection#toString()
	CALLEE: org.eclipse.jetty.server.Server#toString()
	CALLEE: org.eclipse.jetty.server.AbstractNetworkConnector#toString()
	CALLEE: org.eclipse.jetty.util.thread.QueuedThreadPool#toString()
	CALLEE: org.eclipse.jetty.server.AbstractConnectionFactory#toString()
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle.Bean#toString()
	CALLEE: org.apache.log4j.NameValue#toString()
	CALLEE: liquibase.changelog.ChangeLogParameters.ChangeLogParameter#toString()
	CALLEE: org.eclipse.jetty.server.AbstractConnector.Acceptor#toString()
	CALLEE: org.eclipse.jetty.server.HttpConfiguration#toString()
	CALLEE: org.eclipse.jetty.util.MultiException#toString()
	CALLEE: org.eclipse.jetty.http.PathMap.MappedEntry#toString()
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector#toString()
	CALLEE: liquibase.servicelocator.AssignableToPackageScanFilter#toString()
	CALLEE: org.eclipse.jetty.http.HttpField#toString()
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#toString()
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#toString()
	CALLEE: org.eclipse.jetty.servlet.ServletMapping#toString()
	CALLEE: javax.servlet.GenericServlet#getServletConfig()
	CALLEE: static org.h2.util.New#arrayList()
	CALLEE: org.h2.server.web.WebServer#<init>()
	CALLEE: org.h2.server.web.WebServer#setAllowChunked(boolean)
	CALLEE: org.h2.server.web.WebServer#init(java.lang.String[])
	CALLEE: org.eclipse.jetty.servlet.Holder.HolderConfig#getInitParameterNames()
	CALLEE: org.glassfish.jersey.internal.OsgiRegistry.BundleSpiProvidersLoader#toString()
	CALLEE: org.h2.jdbc.JdbcSQLException#toString()
	CALLEE: liquibase.changelog.filter.ChangeSetFilterResult#toString()
	CALLEE: org.eclipse.jetty.servlet.Holder.HolderConfig#getInitParameter(java.lang.String)
	CALLEE: com.zaxxer.hikari.pool.PoolEntry#toString()
	CALLEE: org.eclipse.jetty.io.SelectChannelEndPoint#toString()
	CALLEE: org.eclipse.jetty.util.FutureCallback#toString()
	CALLEE: org.eclipse.jetty.util.ConstantThrowable#toString()
	CALLEE: javax.ws.rs.core.MediaType#toString()
	CALLEE: org.glassfish.jersey.model.internal.RankedProvider#toString()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#toString()
	CALLEE: org.glassfish.hk2.api.MultiException#toString()
	CALLEE: org.glassfish.jersey.message.internal.QualitySourceMediaType#toString()
	CALLEE: jersey.repackaged.com.google.common.base.Predicates.AndPredicate#toString()
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.MapType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#toString()
	CALLEE: org.glassfish.hk2.utilities.NamedImpl#toString()
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#toString()
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#toString()
	CALLEE: com.fasterxml.jackson.databind.jsontype.NamedType#toString()
	CALLEE: liquibase.changelog.RanChangeSet#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.UnresolvedId#toString()
	CALLEE: org.glassfish.jersey.server.model.ResourceModelIssue#toString()
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#toString()
	CALLEE: org.glassfish.jersey.server.model.Parameter#toString()
	CALLEE: org.glassfish.hk2.utilities.reflection.ParameterizedTypeImpl#toString()
	CALLEE: com.fasterxml.jackson.databind.type.ClassKey#toString()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException.Reference#toString()
	CALLEE: org.glassfish.jersey.server.model.Resource.Data#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ValueNode#toString()
	CALLEE: org.glassfish.jersey.server.model.Resource#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#toString()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Data#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.MemberKey#toString()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ObjectNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ArrayNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.POJONode#toString()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#toString()
	CALLEE: com.fasterxml.jackson.databind.node.TextNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.BinaryNode#toString()
	CALLEE: com.fasterxml.jackson.databind.PropertyName#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#toString()
CALLER: org.h2.server.web.ConnectionInfo#<init>(java.lang.String)
	CALLEE: static org.h2.util.StringUtils#arraySplit(java.lang.String,char,boolean)
	CALLEE: static org.h2.server.web.ConnectionInfo#get(java.lang.String[],int)
CALLER: javax.servlet.UnavailableException#<init>(java.lang.String,int)
	CALLEE: javax.servlet.ServletException#<init>(java.lang.String)
CALLER: org.eclipse.jetty.util.IO.NullOS#<init>(org.eclipse.jetty.util.IO.1)
	CALLEE: org.eclipse.jetty.util.IO.NullOS#<init>()
CALLER: org.eclipse.jetty.util.IO.ClosedIS#<init>(org.eclipse.jetty.util.IO.1)
	CALLEE: org.eclipse.jetty.util.IO.ClosedIS#<init>()
CALLER: org.eclipse.jetty.util.IO.NullWrite#<init>(org.eclipse.jetty.util.IO.1)
	CALLEE: org.eclipse.jetty.util.IO.NullWrite#<init>()
CALLER: org.eclipse.jetty.server.session.AbstractSessionManager#removeSession(org.eclipse.jetty.server.session.AbstractSession,boolean)
	CALLEE: javax.servlet.http.HttpSessionEvent#<init>(javax.servlet.http.HttpSession)
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#getClusterId()
	CALLEE: org.eclipse.jetty.server.session.HashSessionManager#removeSession(java.lang.String)
	CALLEE: org.eclipse.jetty.util.statistic.CounterStatistic#decrement()
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#getCreationTime()
	CALLEE: org.eclipse.jetty.util.statistic.SampleStatistic#set(long)
	CALLEE: org.eclipse.jetty.server.session.HashSessionIdManager#removeSession(javax.servlet.http.HttpSession)
	CALLEE: org.eclipse.jetty.server.session.HashSessionIdManager#invalidateAll(java.lang.String)
CALLER: org.eclipse.jetty.server.session.HashedSession#doInvalidate()
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#doInvalidate()
	CALLEE: org.eclipse.jetty.server.session.HashedSession#remove()
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#JAR_SCANNER_UNABLE_TO_CLOSE_FILE()
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableJAR_SCANNER_UNABLE_TO_CLOSE_FILE()
CALLER: com.zaxxer.hikari.pool.PoolEntry#<init>(java.sql.Connection,com.zaxxer.hikari.pool.PoolBase,boolean,boolean)
	CALLEE: com.zaxxer.hikari.util.ClockSource.MillisecondClockSource#currentTime()
	CALLEE: com.zaxxer.hikari.util.ClockSource.NanosecondClockSource#currentTime()
	CALLEE: com.zaxxer.hikari.util.FastList#<init>(java.lang.Class,int)
CALLER: com.zaxxer.hikari.util.QueuedSequenceSynchronizer.Synchronizer#tryReleaseShared(long)
	CALLEE: static com.zaxxer.hikari.util.QueuedSequenceSynchronizer#access$100(com.zaxxer.hikari.util.QueuedSequenceSynchronizer)
	CALLEE: com.zaxxer.hikari.util.Sequence.DropwizardSequence#increment()
	CALLEE: com.zaxxer.hikari.util.Sequence.Java7Sequence#increment()
CALLER: org.eclipse.jetty.io.SelectorManager.ManagedSelector#createEndPoint(java.nio.channels.SocketChannel,java.nio.channels.SelectionKey)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#isDebugEnabled()
	CALLEE: org.eclipse.jetty.server.ServerConnector.ServerConnectorManager#newEndPoint(java.nio.channels.SocketChannel,org.eclipse.jetty.io.SelectorManager.ManagedSelector,java.nio.channels.SelectionKey)
	CALLEE: org.eclipse.jetty.server.ServerConnector.ServerConnectorManager#endPointOpened(org.eclipse.jetty.io.EndPoint)
	CALLEE: org.eclipse.jetty.server.ServerConnector.ServerConnectorManager#newConnection(java.nio.channels.SocketChannel,org.eclipse.jetty.io.EndPoint,java.lang.Object)
	CALLEE: org.eclipse.jetty.io.SelectorManager#connectionOpened(org.eclipse.jetty.io.Connection)
	CALLEE: org.eclipse.jetty.io.AbstractEndPoint#setConnection(org.eclipse.jetty.io.Connection)
CALLER: org.eclipse.jetty.server.ServerConnector.ServerConnectorManager#accepted(java.nio.channels.SocketChannel)
	CALLEE: static org.eclipse.jetty.server.ServerConnector#access$100(org.eclipse.jetty.server.ServerConnector,java.nio.channels.SocketChannel)
CALLER: org.eclipse.jetty.io.SelectorManager.ManagedSelector.Accept#<init>(org.eclipse.jetty.io.SelectorManager.ManagedSelector,java.nio.channels.SocketChannel,java.lang.Object,org.eclipse.jetty.io.SelectorManager.1)
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector.Accept#<init>(org.eclipse.jetty.io.SelectorManager.ManagedSelector,java.nio.channels.SocketChannel,java.lang.Object)
CALLER: static org.glassfish.jersey.servlet.WebComponent#<clinit>()
	CALLEE: org.glassfish.jersey.servlet.WebComponent.1#<init>()
	CALLEE: org.glassfish.hk2.api.TypeLiteral#getType()
	CALLEE: org.glassfish.jersey.servlet.WebComponent.2#<init>()
	CALLEE: org.glassfish.jersey.servlet.WebComponent.3#<init>()
	CALLEE: org.glassfish.jersey.servlet.WebComponent.4#<init>()
CALLER: org.glassfish.jersey.servlet.WebComponent#<init>(org.glassfish.jersey.servlet.WebConfig,org.glassfish.jersey.server.ResourceConfig)
	CALLEE: static org.glassfish.jersey.servlet.WebComponent#createResourceConfig(org.glassfish.jersey.servlet.WebConfig)
	CALLEE: static org.glassfish.jersey.servlet.internal.ServletContainerProviderFactory#getAllServletContainerProviders()
	CALLEE: org.glassfish.jersey.servlet.WebComponent#configure(org.glassfish.jersey.server.ResourceConfig,org.glassfish.jersey.servlet.internal.spi.ServletContainerProvider[])
	CALLEE: org.glassfish.jersey.server.ResourceConfig#getProperties()
	CALLEE: org.glassfish.jersey.servlet.WebComponent.WebComponentBinder#<init>(org.glassfish.jersey.servlet.WebComponent,java.util.Map,org.glassfish.jersey.servlet.WebComponent.1)
	CALLEE: org.glassfish.jersey.server.ResourceConfig#register(java.lang.Object)
	CALLEE: org.glassfish.jersey.servlet.WebServletConfig#getServletContext()
	CALLEE: org.glassfish.jersey.server.ApplicationHandler#<init>(javax.ws.rs.core.Application,org.glassfish.hk2.utilities.Binder,org.glassfish.hk2.api.ServiceLocator)
	CALLEE: org.glassfish.jersey.servlet.WebComponent#getAsyncExtensionDelegate()
	CALLEE: org.glassfish.jersey.servlet.WebServletConfig#getConfigType()
	CALLEE: org.glassfish.jersey.server.ResourceConfig#isProperty(java.lang.String)
	CALLEE: static org.glassfish.jersey.server.ServerProperties#getValue(java.util.Map,java.lang.String,java.lang.Object,java.lang.Class)
	CALLEE: org.glassfish.jersey.server.ApplicationHandler#getServiceLocator()
	CALLEE: org.eclipse.jetty.util.AttributesMap#getAttribute(java.lang.String)
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler.Context#getAttribute(java.lang.String)
CALLER: org.h2.server.web.WebServer#<init>()
	CALLEE: static org.h2.util.New#hashMap()
	CALLEE: static org.h2.util.New#hashSet()
CALLER: org.h2.server.web.WebServer#init(java.lang.String[])
	CALLEE: org.h2.server.web.WebServer#loadProperties()
	CALLEE: static org.h2.util.SortedProperties#getIntProperty(java.util.Properties,java.lang.String,int)
	CALLEE: static org.h2.util.SortedProperties#getBooleanProperty(java.util.Properties,java.lang.String,boolean)
	CALLEE: static org.h2.util.Tool#isOption(java.lang.String,java.lang.String)
	CALLEE: static org.h2.engine.SysProperties#setBaseDir(java.lang.String)
	CALLEE: org.h2.server.web.WebServer#updateURL()
CALLER: static org.h2.util.StringUtils#arraySplit(java.lang.String,char,boolean)
	CALLEE: static org.h2.util.New#arrayList()
CALLER: static org.h2.engine.SysProperties#<clinit>()
	CALLEE: static org.h2.util.Utils#getProperty(java.lang.String,java.lang.String)
	CALLEE: static org.h2.util.Utils#getProperty(java.lang.String,boolean)
	CALLEE: static org.h2.util.Utils#getProperty(java.lang.String,int)
	CALLEE: static org.h2.engine.SysProperties#getAutoScaledForMemoryProperty(java.lang.String,int)
	CALLEE: static org.h2.util.MathUtils#nextPowerOf2(int)
CALLER: org.eclipse.jetty.util.statistic.CounterStatistic#decrement()
	CALLEE: org.eclipse.jetty.util.statistic.CounterStatistic#add(long)
CALLER: org.eclipse.jetty.server.session.AbstractSession#getCreationTime()
	CALLEE: org.eclipse.jetty.server.session.HashedSession#checkValid()
CALLER: org.eclipse.jetty.util.statistic.SampleStatistic#set(long)
	CALLEE: static org.eclipse.jetty.util.Atomics#updateMax(java.util.concurrent.atomic.AtomicLong,long)
CALLER: org.eclipse.jetty.server.session.HashSessionIdManager#removeSession(javax.servlet.http.HttpSession)
	CALLEE: org.eclipse.jetty.server.session.AbstractSessionIdManager#getClusterId(java.lang.String)
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#getId()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#remove()
CALLER: org.eclipse.jetty.server.session.HashSessionIdManager#invalidateAll(java.lang.String)
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#invalidate()
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#isValid()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
CALLER: org.eclipse.jetty.server.session.AbstractSession#doInvalidate()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#isDebugEnabled()
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#isValid()
	CALLEE: org.eclipse.jetty.server.session.MemSession#clearAttributes()
CALLER: org.eclipse.jetty.server.session.HashedSession#remove()
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#getId()
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableJAR_SCANNER_UNABLE_TO_CLOSE_FILE()
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: org.eclipse.jetty.server.ServerConnector.ServerConnectorManager#newEndPoint(java.nio.channels.SocketChannel,org.eclipse.jetty.io.SelectorManager.ManagedSelector,java.nio.channels.SelectionKey)
	CALLEE: org.eclipse.jetty.server.ServerConnector.ServerConnectorManager#newEndPoint(java.nio.channels.SocketChannel,org.eclipse.jetty.io.SelectorManager.ManagedSelector,java.nio.channels.SelectionKey)
CALLER: org.eclipse.jetty.server.ServerConnector.ServerConnectorManager#endPointOpened(org.eclipse.jetty.io.EndPoint)
	CALLEE: org.eclipse.jetty.io.SelectorManager#endPointOpened(org.eclipse.jetty.io.EndPoint)
	CALLEE: org.eclipse.jetty.server.AbstractConnector#onEndPointOpened(org.eclipse.jetty.io.EndPoint)
CALLER: org.eclipse.jetty.server.ServerConnector.ServerConnectorManager#newConnection(java.nio.channels.SocketChannel,org.eclipse.jetty.io.EndPoint,java.lang.Object)
	CALLEE: org.eclipse.jetty.server.AbstractConnector#getDefaultConnectionFactory()
	CALLEE: org.eclipse.jetty.server.HttpConnectionFactory#newConnection(org.eclipse.jetty.server.Connector,org.eclipse.jetty.io.EndPoint)
CALLER: org.eclipse.jetty.io.SelectorManager#connectionOpened(org.eclipse.jetty.io.Connection)
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#isRunning()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Throwable)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#warn(java.lang.String,java.lang.Throwable)
	CALLEE: org.eclipse.jetty.server.HttpConnection#onOpen()
CALLER: static org.eclipse.jetty.server.ServerConnector#access$100(org.eclipse.jetty.server.ServerConnector,java.nio.channels.SocketChannel)
	CALLEE: org.eclipse.jetty.server.ServerConnector#accepted(java.nio.channels.SocketChannel)
CALLER: org.glassfish.jersey.servlet.WebComponent.1#<init>()
	CALLEE: org.glassfish.hk2.api.TypeLiteral#<init>()
CALLER: org.glassfish.hk2.api.TypeLiteral#getType()
	CALLEE: static org.glassfish.hk2.api.TypeLiteral#getTypeLiteralSubclass(java.lang.Class)
	CALLEE: static org.glassfish.hk2.api.TypeLiteral#getTypeParameter(java.lang.Class)
CALLER: org.glassfish.jersey.servlet.WebComponent.2#<init>()
	CALLEE: org.glassfish.hk2.api.TypeLiteral#<init>()
CALLER: static org.glassfish.jersey.servlet.WebComponent#createResourceConfig(org.glassfish.jersey.servlet.WebConfig)
	CALLEE: org.glassfish.jersey.server.ResourceConfig#<init>()
	CALLEE: org.glassfish.jersey.server.ResourceConfig#registerFinder(org.glassfish.jersey.server.ResourceFinder)
	CALLEE: javax.servlet.ServletException#<init>(java.lang.String,java.lang.Throwable)
	CALLEE: javax.servlet.ServletException#<init>(java.lang.String)
	CALLEE: org.glassfish.jersey.servlet.WebServletConfig#getServletContext()
	CALLEE: org.glassfish.jersey.servlet.WebServletConfig#getName()
	CALLEE: static org.glassfish.jersey.servlet.internal.Utils#retrieve(javax.servlet.ServletContext,java.lang.String)
	CALLEE: static org.glassfish.jersey.servlet.WebComponent#getInitParams(org.glassfish.jersey.servlet.WebConfig)
	CALLEE: static org.glassfish.jersey.servlet.internal.Utils#getContextParams(javax.servlet.ServletContext)
	CALLEE: org.glassfish.jersey.servlet.WebServletConfig#getInitParameter(java.lang.String)
	CALLEE: org.glassfish.jersey.server.ResourceConfig#addProperties(java.util.Map)
	CALLEE: org.glassfish.jersey.servlet.WebAppResourcesScanner#<init>(javax.servlet.ServletContext)
	CALLEE: static org.glassfish.jersey.internal.util.ReflectionHelper#classForNameWithExceptionPEA(java.lang.String)
	CALLEE: static org.glassfish.jersey.server.ResourceConfig#forApplicationClass(java.lang.Class)
	CALLEE: static org.glassfish.jersey.servlet.internal.LocalizationMessages#RESOURCE_CONFIG_PARENT_CLASS_INVALID(java.lang.Object,java.lang.Object)
	CALLEE: static org.glassfish.jersey.servlet.internal.LocalizationMessages#RESOURCE_CONFIG_UNABLE_TO_LOAD(java.lang.Object)
CALLER: static org.glassfish.jersey.servlet.internal.ServletContainerProviderFactory#getAllServletContainerProviders()
	CALLEE: static org.glassfish.jersey.internal.ServiceFinder#find(java.lang.Class)
	CALLEE: org.glassfish.jersey.internal.ServiceFinder#toArray()
CALLER: org.glassfish.jersey.server.ResourceConfig#getProperties()
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig#getProperties()
CALLER: org.glassfish.jersey.servlet.WebComponent.WebComponentBinder#<init>(org.glassfish.jersey.servlet.WebComponent,java.util.Map,org.glassfish.jersey.servlet.WebComponent.1)
	CALLEE: org.glassfish.jersey.servlet.WebComponent.WebComponentBinder#<init>(org.glassfish.jersey.servlet.WebComponent,java.util.Map)
CALLER: org.glassfish.jersey.server.ResourceConfig#register(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.ResourceConfig#invalidateCache()
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig#register(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.ResourceConfig.ImmutableState#register(java.lang.Object)
CALLER: org.glassfish.jersey.servlet.WebServletConfig#getServletContext()
	CALLEE: org.glassfish.jersey.servlet.ServletContainer#getServletContext()
CALLER: static org.glassfish.jersey.server.ApplicationHandler#<clinit>()
	CALLEE: org.glassfish.jersey.server.ApplicationHandler.1#<init>()
CALLER: org.glassfish.jersey.server.ApplicationHandler#<init>(javax.ws.rs.core.Application,org.glassfish.hk2.utilities.Binder,org.glassfish.hk2.api.ServiceLocator)
	CALLEE: org.glassfish.jersey.server.ResourceConfig#getProperties()
	CALLEE: org.glassfish.jersey.server.ServerBinder#<init>(java.util.Map)
	CALLEE: org.glassfish.jersey.server.ApplicationHandler.ApplicationBinder#<init>(org.glassfish.jersey.server.ApplicationHandler,org.glassfish.jersey.server.ApplicationHandler.1)
	CALLEE: static org.glassfish.jersey.internal.inject.Injections#createLocator(org.glassfish.hk2.api.ServiceLocator,org.glassfish.hk2.utilities.Binder[])
	CALLEE: static org.glassfish.jersey.server.ApplicationHandler#getLazyInitializedComponentProviders(org.glassfish.hk2.api.ServiceLocator)
	CALLEE: org.glassfish.jersey.server.ResourceConfig#getApplicationClass()
	CALLEE: org.glassfish.jersey.server.ApplicationHandler#createApplication(java.lang.Class,org.glassfish.jersey.internal.util.collection.Value)
	CALLEE: org.glassfish.jersey.server.ResourceConfig#setApplication(javax.ws.rs.core.Application)
	CALLEE: static org.glassfish.jersey.server.ResourceConfig#createRuntimeConfig(javax.ws.rs.core.Application)
	CALLEE: org.glassfish.jersey.server.ApplicationHandler.3#<init>(org.glassfish.jersey.server.ApplicationHandler,org.glassfish.jersey.internal.util.collection.LazyValue)
	CALLEE: static org.glassfish.jersey.internal.Errors#processWithException(org.glassfish.jersey.internal.util.Producer)
	CALLEE: static org.glassfish.jersey.internal.inject.Providers#getAllProviders(org.glassfish.hk2.api.ServiceLocator,java.lang.Class)
	CALLEE: org.glassfish.jersey.server.ResourceConfig.WrappingResourceConfig#getApplicationClass()
CALLER: org.glassfish.jersey.servlet.WebComponent#getAsyncExtensionDelegate()
	CALLEE: org.glassfish.jersey.server.ApplicationHandler#getServiceLocator()
	CALLEE: static org.glassfish.jersey.internal.inject.Providers#getAllProviders(org.glassfish.hk2.api.ServiceLocator,java.lang.Class)
	CALLEE: org.glassfish.jersey.servlet.WebComponent.5#<init>(org.glassfish.jersey.servlet.WebComponent)
CALLER: static org.glassfish.jersey.servlet.WebConfig.ConfigType#<clinit>()
	CALLEE: org.glassfish.jersey.servlet.WebConfig.ConfigType#<init>(java.lang.String,int)
CALLER: org.glassfish.jersey.server.ResourceConfig#isProperty(java.lang.String)
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig#isProperty(java.lang.String)
CALLER: static org.glassfish.jersey.server.ServerProperties#getValue(java.util.Map,java.lang.String,java.lang.Object,java.lang.Class)
	CALLEE: static org.glassfish.jersey.internal.util.PropertiesHelper#getValue(java.util.Map,java.lang.String,java.lang.Object,java.lang.Class,java.util.Map)
CALLER: static org.glassfish.jersey.server.BackgroundSchedulerLiteral#<clinit>()
	CALLEE: org.glassfish.jersey.server.BackgroundSchedulerLiteral#<init>()
CALLER: org.h2.server.web.WebServer#loadProperties()
	CALLEE: static org.h2.util.SortedProperties#loadProperties(java.lang.String)
	CALLEE: static org.h2.message.DbException#traceThrowable(java.lang.Throwable)
CALLER: static org.h2.util.Tool#isOption(java.lang.String,java.lang.String)
	CALLEE: static org.h2.message.DbException#getUnsupportedException(java.lang.String)
CALLER: org.h2.server.web.WebServer#updateURL()
	CALLEE: static org.h2.util.NetUtils#getLocalAddress()
CALLER: static org.h2.util.Utils#<clinit>()
	CALLEE: static org.h2.util.New#hashMap()
CALLER: static org.h2.util.Utils#getProperty(java.lang.String,boolean)
	CALLEE: static org.h2.util.Utils#getProperty(java.lang.String,java.lang.String)
CALLER: static org.h2.util.Utils#getProperty(java.lang.String,int)
	CALLEE: static org.h2.util.Utils#getProperty(java.lang.String,java.lang.String)
CALLER: static org.h2.engine.SysProperties#getAutoScaledForMemoryProperty(java.lang.String,int)
	CALLEE: static org.h2.util.Utils#getProperty(java.lang.String,java.lang.String)
	CALLEE: static org.h2.util.Utils#scaleForAvailableMemory(int)
CALLER: org.eclipse.jetty.server.session.MemSession#clearAttributes()
	CALLEE: org.eclipse.jetty.server.session.MemSession#doPutOrRemove(java.lang.String,java.lang.Object)
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#unbindValue(java.lang.String,java.lang.Object)
	CALLEE: org.eclipse.jetty.server.session.AbstractSessionManager#doSessionAttributeListeners(org.eclipse.jetty.server.session.AbstractSession,java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#getSessionManager()
CALLER: org.eclipse.jetty.server.ServerConnector.ServerConnectorManager#newEndPoint(java.nio.channels.SocketChannel,org.eclipse.jetty.io.SelectorManager.ManagedSelector,java.nio.channels.SelectionKey)
	CALLEE: org.eclipse.jetty.server.ServerConnector#newEndPoint(java.nio.channels.SocketChannel,org.eclipse.jetty.io.SelectorManager.ManagedSelector,java.nio.channels.SelectionKey)
CALLER: org.eclipse.jetty.io.SelectorManager#endPointOpened(org.eclipse.jetty.io.EndPoint)
	CALLEE: org.eclipse.jetty.io.SelectChannelEndPoint#onOpen()
CALLER: org.eclipse.jetty.server.AbstractConnector#getDefaultConnectionFactory()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#isStarted()
	CALLEE: org.eclipse.jetty.server.AbstractConnector#getConnectionFactory(java.lang.String)
CALLER: static org.glassfish.hk2.api.TypeLiteral#getTypeLiteralSubclass(java.lang.Class)
	CALLEE: static org.glassfish.hk2.api.TypeLiteral#getTypeLiteralSubclass(java.lang.Class)
CALLER: org.glassfish.jersey.servlet.WebServletConfig#getName()
	CALLEE: javax.servlet.GenericServlet#getServletName()
CALLER: static org.glassfish.jersey.servlet.internal.Utils#retrieve(javax.servlet.ServletContext,java.lang.String)
	CALLEE: org.eclipse.jetty.util.AttributesMap#getAttribute(java.lang.String)
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler.Context#getAttribute(java.lang.String)
	CALLEE: org.eclipse.jetty.util.AttributesMap#removeAttribute(java.lang.String)
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler.Context#removeAttribute(java.lang.String)
CALLER: static org.glassfish.jersey.servlet.WebComponent#getInitParams(org.glassfish.jersey.servlet.WebConfig)
	CALLEE: org.glassfish.jersey.servlet.WebServletConfig#getInitParameter(java.lang.String)
	CALLEE: org.glassfish.jersey.servlet.WebServletConfig#getInitParameterNames()
CALLER: static org.glassfish.jersey.servlet.internal.Utils#getContextParams(javax.servlet.ServletContext)
	CALLEE: org.eclipse.jetty.util.AttributesMap#getAttribute(java.lang.String)
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler.Context#getAttributeNames()
	CALLEE: org.eclipse.jetty.util.AttributesMap#getAttributeNames()
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler.Context#getAttribute(java.lang.String)
CALLER: org.glassfish.jersey.servlet.WebServletConfig#getInitParameter(java.lang.String)
	CALLEE: javax.servlet.GenericServlet#getInitParameter(java.lang.String)
CALLER: org.glassfish.jersey.server.ResourceConfig#addProperties(java.util.Map)
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig#addProperties(java.util.Map)
	CALLEE: org.glassfish.jersey.server.ResourceConfig.ImmutableState#addProperties(java.util.Map)
CALLER: org.glassfish.jersey.servlet.WebAppResourcesScanner#<init>(javax.servlet.ServletContext)
	CALLEE: org.glassfish.jersey.server.internal.AbstractResourceFinderAdapter#<init>()
	CALLEE: org.glassfish.jersey.server.internal.scanning.CompositeResourceFinder#<init>()
	CALLEE: org.glassfish.jersey.servlet.WebAppResourcesScanner#processPaths(java.lang.String[])
CALLER: static org.glassfish.jersey.internal.util.ReflectionHelper#classForNameWithExceptionPEA(java.lang.String)
	CALLEE: static org.glassfish.jersey.internal.util.ReflectionHelper#getContextClassLoader()
	CALLEE: static org.glassfish.jersey.internal.util.ReflectionHelper#classForNameWithExceptionPEA(java.lang.String,java.lang.ClassLoader)
CALLER: static org.glassfish.jersey.server.ResourceConfig#forApplicationClass(java.lang.Class)
	CALLEE: org.glassfish.jersey.server.ResourceConfig.WrappingResourceConfig#<init>(javax.ws.rs.core.Application,java.lang.Class,java.util.Set)
CALLER: static org.glassfish.jersey.servlet.internal.LocalizationMessages#RESOURCE_CONFIG_PARENT_CLASS_INVALID(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.servlet.internal.LocalizationMessages#localizableRESOURCE_CONFIG_PARENT_CLASS_INVALID(java.lang.Object,java.lang.Object)
CALLER: static org.glassfish.jersey.servlet.internal.LocalizationMessages#<clinit>()
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#<init>(java.lang.String)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#<init>()
CALLER: static org.glassfish.jersey.servlet.internal.LocalizationMessages#RESOURCE_CONFIG_UNABLE_TO_LOAD(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.servlet.internal.LocalizationMessages#localizableRESOURCE_CONFIG_UNABLE_TO_LOAD(java.lang.Object)
CALLER: static org.glassfish.jersey.internal.ServiceFinder#find(java.lang.Class)
	CALLEE: static org.glassfish.jersey.internal.ServiceFinder#_getContextClassLoader()
	CALLEE: static org.glassfish.jersey.internal.ServiceFinder#find(java.lang.Class,java.lang.ClassLoader,boolean)
CALLER: static org.glassfish.jersey.internal.ServiceFinder#<clinit>()
	CALLEE: static org.glassfish.jersey.internal.util.ReflectionHelper#getOsgiRegistryInstance()
	CALLEE: org.glassfish.jersey.internal.OsgiRegistry#hookUp()
CALLER: org.glassfish.jersey.servlet.WebComponent.WebComponentBinder#<init>(org.glassfish.jersey.servlet.WebComponent,java.util.Map)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#<init>()
CALLER: org.glassfish.jersey.model.internal.CommonConfig#register(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.ResourceConfig.State#getModelEnhancer(java.lang.Class)
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig#processFeatureRegistration(java.lang.Object,java.lang.Class)
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig#checkProviderNotNull(java.lang.Object)
	CALLEE: org.glassfish.jersey.model.internal.ComponentBag#register(java.lang.Object,org.glassfish.jersey.process.Inflector)
CALLER: org.glassfish.jersey.servlet.ServletContainer#getServletContext()
	CALLEE: javax.servlet.GenericServlet#getServletContext()
CALLER: org.glassfish.jersey.server.ServerBinder#<init>(java.util.Map)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#<init>()
CALLER: org.glassfish.jersey.server.ApplicationHandler.ApplicationBinder#<init>(org.glassfish.jersey.server.ApplicationHandler,org.glassfish.jersey.server.ApplicationHandler.1)
	CALLEE: org.glassfish.jersey.server.ApplicationHandler.ApplicationBinder#<init>(org.glassfish.jersey.server.ApplicationHandler)
CALLER: static org.glassfish.jersey.internal.inject.Injections#createLocator(org.glassfish.hk2.api.ServiceLocator,org.glassfish.hk2.utilities.Binder[])
	CALLEE: static org.glassfish.jersey.internal.inject.Injections#_createLocator(java.lang.String,org.glassfish.hk2.api.ServiceLocator,org.glassfish.hk2.utilities.Binder[])
CALLER: static org.glassfish.jersey.internal.inject.Injections#<clinit>()
	CALLEE: static org.glassfish.hk2.api.ServiceLocatorFactory#getInstance()
CALLER: static org.glassfish.jersey.server.ApplicationHandler#getLazyInitializedComponentProviders(org.glassfish.hk2.api.ServiceLocator)
	CALLEE: org.glassfish.jersey.server.ApplicationHandler.4#<init>(org.glassfish.hk2.api.ServiceLocator)
	CALLEE: static org.glassfish.jersey.internal.util.collection.Values#lazy(org.glassfish.jersey.internal.util.collection.Value)
CALLER: org.glassfish.jersey.server.ApplicationHandler#createApplication(java.lang.Class,org.glassfish.jersey.internal.util.collection.Value)
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: org.glassfish.jersey.server.ResourceConfig#<init>()
	CALLEE: javax.ws.rs.core.Application#<init>()
	CALLEE: org.glassfish.jersey.server.ApplicationHandler#createApplication(java.lang.Class,org.glassfish.jersey.internal.util.collection.Value)
	CALLEE: static org.glassfish.jersey.internal.inject.Injections#getConfiguration(org.glassfish.hk2.api.ServiceLocator)
	CALLEE: static org.glassfish.jersey.internal.inject.Injections#newBinder(java.lang.Class)
	CALLEE: static org.glassfish.jersey.internal.inject.Injections#addBinding(org.glassfish.hk2.utilities.binding.BindingBuilder,org.glassfish.hk2.api.DynamicConfiguration)
	CALLEE: org.glassfish.jersey.internal.util.collection.Values.LazyValueImpl#get()
	CALLEE: org.glassfish.jersey.internal.util.collection.Values.1#get()
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#to(java.lang.reflect.Type)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#in(java.lang.Class)
CALLER: org.glassfish.jersey.server.ResourceConfig#setApplication(javax.ws.rs.core.Application)
	CALLEE: org.glassfish.jersey.server.ResourceConfig#_setApplication(javax.ws.rs.core.Application)
	CALLEE: org.glassfish.jersey.server.ResourceConfig.WrappingResourceConfig#_setApplication(javax.ws.rs.core.Application)
CALLER: static org.glassfish.jersey.server.ResourceConfig#createRuntimeConfig(javax.ws.rs.core.Application)
	CALLEE: org.glassfish.jersey.server.ResourceConfig.RuntimeConfig#<init>(org.glassfish.jersey.server.ResourceConfig,org.glassfish.jersey.server.ResourceConfig.1)
	CALLEE: org.glassfish.jersey.server.ResourceConfig.RuntimeConfig#<init>(javax.ws.rs.core.Application,org.glassfish.jersey.server.ResourceConfig.1)
CALLER: static org.glassfish.jersey.internal.Errors#processWithException(org.glassfish.jersey.internal.util.Producer)
	CALLEE: static org.glassfish.jersey.internal.Errors#process(org.glassfish.jersey.internal.util.Producer,boolean)
CALLER: static org.glassfish.jersey.internal.inject.Providers#getAllProviders(org.glassfish.hk2.api.ServiceLocator,java.lang.Class)
	CALLEE: static org.glassfish.jersey.internal.inject.Providers#getAllProviders(org.glassfish.hk2.api.ServiceLocator,java.lang.Class,java.util.Comparator)
CALLER: org.glassfish.jersey.model.internal.CommonConfig#isProperty(java.lang.String)
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig#getProperty(java.lang.String)
	CALLEE: static org.glassfish.jersey.internal.util.PropertiesHelper#isProperty(java.lang.Object)
CALLER: static org.glassfish.jersey.internal.util.PropertiesHelper#getValue(java.util.Map,java.lang.String,java.lang.Object,java.lang.Class,java.util.Map)
	CALLEE: static org.glassfish.jersey.internal.util.PropertiesHelper#getValue(java.util.Map,javax.ws.rs.RuntimeType,java.lang.String,java.lang.Object,java.lang.Class,java.util.Map)
CALLER: org.glassfish.jersey.server.BackgroundSchedulerLiteral#<init>()
	CALLEE: org.glassfish.hk2.api.AnnotationLiteral#<init>()
CALLER: static org.h2.util.SortedProperties#loadProperties(java.lang.String)
	CALLEE: org.h2.util.SortedProperties#<init>()
	CALLEE: static org.h2.store.fs.FileUtils#exists(java.lang.String)
	CALLEE: static org.h2.store.fs.FileUtils#newInputStream(java.lang.String)
CALLER: static org.h2.message.DbException#traceThrowable(java.lang.Throwable)
	CALLEE: org.h2.jdbc.JdbcSQLException#printStackTrace(java.io.PrintWriter)
CALLER: static org.h2.message.DbException#<clinit>()
	CALLEE: org.eclipse.jetty.http.PathMap.MappedEntry#getValue()
	CALLEE: org.eclipse.jetty.http.PathMap.MappedEntry#getKey()
	CALLEE: static org.h2.message.DbException#traceThrowable(java.lang.Throwable)
	CALLEE: static org.h2.util.Utils#getResource(java.lang.String)
	CALLEE: static org.h2.util.SortedProperties#fromLines(java.lang.String)
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
CALLER: static org.h2.message.DbException#getUnsupportedException(java.lang.String)
	CALLEE: static org.h2.message.DbException#get(int,java.lang.String)
CALLER: static org.h2.util.NetUtils#getLocalAddress()
	CALLEE: static org.h2.util.NetUtils#getBindAddress()
	CALLEE: static org.h2.message.DbException#convert(java.lang.Throwable)
	CALLEE: static org.h2.util.NetUtils#getHostAddress(java.net.InetAddress)
CALLER: org.eclipse.jetty.server.ServerConnector#newEndPoint(java.nio.channels.SocketChannel,org.eclipse.jetty.io.SelectorManager.ManagedSelector,java.nio.channels.SelectionKey)
	CALLEE: org.eclipse.jetty.server.AbstractConnector#getScheduler()
	CALLEE: org.eclipse.jetty.server.AbstractConnector#getIdleTimeout()
	CALLEE: org.eclipse.jetty.io.SelectChannelEndPoint#<init>(java.nio.channels.SocketChannel,org.eclipse.jetty.io.SelectorManager.ManagedSelector,java.nio.channels.SelectionKey,org.eclipse.jetty.util.thread.Scheduler,long)
CALLER: javax.servlet.GenericServlet#getServletName()
	CALLEE: javax.servlet.GenericServlet#getServletConfig()
	CALLEE: org.eclipse.jetty.servlet.ServletHolder.Config#getServletName()
CALLER: org.glassfish.jersey.servlet.WebServletConfig#getInitParameterNames()
	CALLEE: javax.servlet.GenericServlet#getInitParameterNames()
CALLER: org.glassfish.jersey.servlet.WebAppResourcesScanner#processPaths(java.lang.String[])
	CALLEE: org.glassfish.jersey.server.internal.scanning.CompositeResourceFinder#push(org.glassfish.jersey.server.ResourceFinder)
	CALLEE: org.glassfish.jersey.servlet.WebAppResourcesScanner.1#<init>(org.glassfish.jersey.servlet.WebAppResourcesScanner,java.util.Set)
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler.NoContext#getResourcePaths(java.lang.String)
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler.Context#getResourcePaths(java.lang.String)
CALLER: static org.glassfish.jersey.internal.util.ReflectionHelper#getContextClassLoader()
	CALLEE: static org.glassfish.jersey.internal.util.ReflectionHelper#getContextClassLoaderPA()
CALLER: static org.glassfish.jersey.internal.util.ReflectionHelper#classForNameWithExceptionPEA(java.lang.String,java.lang.ClassLoader)
	CALLEE: org.glassfish.jersey.internal.util.ReflectionHelper.7#<init>(java.lang.ClassLoader,java.lang.String)
CALLER: org.glassfish.jersey.server.ResourceConfig.WrappingResourceConfig#<init>(javax.ws.rs.core.Application,java.lang.Class,java.util.Set)
	CALLEE: org.glassfish.jersey.server.ResourceConfig#<init>()
	CALLEE: static jersey.repackaged.com.google.common.collect.Sets#newHashSet()
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#RESOURCE_CONFIG_ERROR_NULL_APPLICATIONCLASS()
	CALLEE: org.glassfish.jersey.server.ResourceConfig.WrappingResourceConfig#mergeApplications(javax.ws.rs.core.Application)
CALLER: static org.glassfish.jersey.servlet.internal.LocalizationMessages#localizableRESOURCE_CONFIG_PARENT_CLASS_INVALID(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.servlet.internal.LocalizationMessages#localizableRESOURCE_CONFIG_UNABLE_TO_LOAD(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.internal.ServiceFinder#_getContextClassLoader()
	CALLEE: static org.glassfish.jersey.internal.util.ReflectionHelper#getContextClassLoaderPA()
CALLER: static org.glassfish.jersey.internal.ServiceFinder#find(java.lang.Class,java.lang.ClassLoader,boolean)
	CALLEE: org.glassfish.jersey.internal.ServiceFinder#<init>(java.lang.Class,java.lang.ClassLoader,boolean)
CALLER: org.glassfish.jersey.internal.OsgiRegistry#hookUp()
	CALLEE: org.glassfish.jersey.internal.OsgiRegistry#setOSGiServiceFinderIteratorProvider()
	CALLEE: org.glassfish.jersey.internal.OsgiRegistry#registerExistingBundles()
CALLER: org.glassfish.jersey.model.internal.CommonConfig#checkProviderNotNull(java.lang.Object)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#COMPONENT_CANNOT_BE_NULL()
CALLER: org.glassfish.jersey.model.internal.ComponentBag#register(java.lang.Object,org.glassfish.jersey.process.Inflector)
	CALLEE: org.glassfish.jersey.model.internal.ComponentBag#registerModel(java.lang.Class,int,java.util.Map,org.glassfish.jersey.process.Inflector)
CALLER: org.glassfish.jersey.server.ApplicationHandler.ApplicationBinder#<init>(org.glassfish.jersey.server.ApplicationHandler)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#<init>()
CALLER: static org.glassfish.jersey.internal.inject.Injections#_createLocator(java.lang.String,org.glassfish.hk2.api.ServiceLocator,org.glassfish.hk2.utilities.Binder[])
	CALLEE: static org.glassfish.hk2.utilities.ServiceLocatorUtilities#enablePerThreadScope(org.glassfish.hk2.api.ServiceLocator)
	CALLEE: static org.glassfish.jersey.internal.inject.Injections#bind(org.glassfish.hk2.api.ServiceLocator,org.glassfish.hk2.utilities.Binder)
	CALLEE: org.glassfish.hk2.internal.ServiceLocatorFactoryImpl#create(java.lang.String,org.glassfish.hk2.api.ServiceLocator,org.glassfish.hk2.extension.ServiceLocatorGenerator,org.glassfish.hk2.api.ServiceLocatorFactory.CreatePolicy)
CALLER: static org.glassfish.hk2.api.ServiceLocatorFactory#<clinit>()
	CALLEE: org.glassfish.hk2.internal.ServiceLocatorFactoryImpl#<init>()
CALLER: static org.glassfish.jersey.internal.util.collection.Values#lazy(org.glassfish.jersey.internal.util.collection.Value)
	CALLEE: org.glassfish.jersey.internal.util.collection.Values.LazyValueImpl#<init>(org.glassfish.jersey.internal.util.collection.Value)
CALLER: static org.glassfish.jersey.internal.util.collection.Values#<clinit>()
	CALLEE: org.glassfish.jersey.internal.util.collection.Values.1#<init>()
	CALLEE: org.glassfish.jersey.internal.util.collection.Values.2#<init>()
CALLER: static org.glassfish.jersey.internal.inject.Injections#newBinder(java.lang.Class)
	CALLEE: static org.glassfish.hk2.utilities.binding.BindingBuilderFactory#newBinder(java.lang.Class)
CALLER: static org.glassfish.jersey.internal.inject.Injections#addBinding(org.glassfish.hk2.utilities.binding.BindingBuilder,org.glassfish.hk2.api.DynamicConfiguration)
	CALLEE: static org.glassfish.hk2.utilities.binding.BindingBuilderFactory#addBinding(org.glassfish.hk2.utilities.binding.BindingBuilder,org.glassfish.hk2.api.DynamicConfiguration)
CALLER: org.glassfish.jersey.server.ResourceConfig.RuntimeConfig#<init>(org.glassfish.jersey.server.ResourceConfig,org.glassfish.jersey.server.ResourceConfig.1)
	CALLEE: org.glassfish.jersey.server.ResourceConfig.RuntimeConfig#<init>(org.glassfish.jersey.server.ResourceConfig)
CALLER: org.glassfish.jersey.server.ResourceConfig.RuntimeConfig#<init>(javax.ws.rs.core.Application,org.glassfish.jersey.server.ResourceConfig.1)
	CALLEE: org.glassfish.jersey.server.ResourceConfig.RuntimeConfig#<init>(javax.ws.rs.core.Application)
CALLER: static org.glassfish.jersey.internal.inject.Providers#getAllProviders(org.glassfish.hk2.api.ServiceLocator,java.lang.Class,java.util.Comparator)
	CALLEE: static org.glassfish.jersey.internal.inject.Providers#getAllServiceHandles(org.glassfish.hk2.api.ServiceLocator,java.lang.Class)
	CALLEE: static org.glassfish.jersey.internal.inject.Providers#getClasses(java.util.Collection)
CALLER: static org.glassfish.jersey.internal.util.PropertiesHelper#isProperty(java.lang.Object)
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#toString()
	CALLEE: org.eclipse.jetty.webapp.WebAppContext#toString()
	CALLEE: org.eclipse.jetty.server.handler.HandlerCollection#toString()
	CALLEE: org.eclipse.jetty.server.Server#toString()
	CALLEE: org.eclipse.jetty.server.AbstractNetworkConnector#toString()
	CALLEE: org.eclipse.jetty.util.thread.QueuedThreadPool#toString()
	CALLEE: org.eclipse.jetty.server.AbstractConnectionFactory#toString()
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle.Bean#toString()
	CALLEE: org.apache.log4j.NameValue#toString()
	CALLEE: liquibase.changelog.ChangeLogParameters.ChangeLogParameter#toString()
	CALLEE: org.eclipse.jetty.server.AbstractConnector.Acceptor#toString()
	CALLEE: org.eclipse.jetty.server.HttpConfiguration#toString()
	CALLEE: org.eclipse.jetty.util.MultiException#toString()
	CALLEE: org.eclipse.jetty.http.PathMap.MappedEntry#toString()
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector#toString()
	CALLEE: liquibase.servicelocator.AssignableToPackageScanFilter#toString()
	CALLEE: org.eclipse.jetty.http.HttpField#toString()
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#toString()
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#toString()
	CALLEE: org.eclipse.jetty.servlet.ServletMapping#toString()
	CALLEE: org.glassfish.jersey.internal.OsgiRegistry.BundleSpiProvidersLoader#toString()
	CALLEE: org.h2.jdbc.JdbcSQLException#toString()
	CALLEE: liquibase.changelog.filter.ChangeSetFilterResult#toString()
	CALLEE: com.zaxxer.hikari.pool.PoolEntry#toString()
	CALLEE: org.eclipse.jetty.io.SelectChannelEndPoint#toString()
	CALLEE: org.eclipse.jetty.util.FutureCallback#toString()
	CALLEE: org.eclipse.jetty.util.ConstantThrowable#toString()
	CALLEE: javax.ws.rs.core.MediaType#toString()
	CALLEE: org.glassfish.jersey.model.internal.RankedProvider#toString()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#toString()
	CALLEE: org.glassfish.hk2.api.MultiException#toString()
	CALLEE: org.glassfish.jersey.message.internal.QualitySourceMediaType#toString()
	CALLEE: jersey.repackaged.com.google.common.base.Predicates.AndPredicate#toString()
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.MapType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#toString()
	CALLEE: org.glassfish.hk2.utilities.NamedImpl#toString()
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#toString()
	CALLEE: com.fasterxml.jackson.core.JsonLocation#toString()
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#toString()
	CALLEE: com.fasterxml.jackson.databind.jsontype.NamedType#toString()
	CALLEE: liquibase.changelog.RanChangeSet#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.UnresolvedId#toString()
	CALLEE: org.glassfish.jersey.server.model.ResourceModelIssue#toString()
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#toString()
	CALLEE: org.glassfish.jersey.server.model.Parameter#toString()
	CALLEE: org.glassfish.hk2.utilities.reflection.ParameterizedTypeImpl#toString()
	CALLEE: com.fasterxml.jackson.databind.type.ClassKey#toString()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException.Reference#toString()
	CALLEE: org.glassfish.jersey.server.model.Resource.Data#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ValueNode#toString()
	CALLEE: org.glassfish.jersey.server.model.Resource#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#toString()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Data#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.MemberKey#toString()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ObjectNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ArrayNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.POJONode#toString()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#toString()
	CALLEE: com.fasterxml.jackson.databind.node.TextNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.BinaryNode#toString()
	CALLEE: com.fasterxml.jackson.databind.PropertyName#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#toString()
	CALLEE: com.fasterxml.jackson.core.io.SerializedString#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey#toString()
	CALLEE: org.glassfish.jersey.server.model.Invocable#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#toString()
	CALLEE: org.glassfish.jersey.server.model.MethodHandler.ClassBasedMethodHandler#toString()
	CALLEE: org.glassfish.jersey.server.model.MethodHandler.InstanceBasedMethodHandler#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#toString()
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodRouting#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#toString()
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.ConsumesProducesAcceptor#toString()
CALLER: static org.glassfish.jersey.internal.util.PropertiesHelper#getValue(java.util.Map,javax.ws.rs.RuntimeType,java.lang.String,java.lang.Object,java.lang.Class,java.util.Map)
	CALLEE: static org.glassfish.jersey.internal.util.PropertiesHelper#getValue(java.util.Map,javax.ws.rs.RuntimeType,java.lang.String,java.lang.Class,java.util.Map)
CALLER: static org.h2.store.fs.FileUtils#exists(java.lang.String)
	CALLEE: static org.h2.store.fs.FilePath#get(java.lang.String)
CALLER: static org.h2.store.fs.FileUtils#newInputStream(java.lang.String)
	CALLEE: static org.h2.store.fs.FilePath#get(java.lang.String)
CALLER: static org.h2.util.Utils#getResource(java.lang.String)
	CALLEE: static org.h2.util.Utils#loadResource(java.lang.String)
CALLER: static org.h2.util.SortedProperties#fromLines(java.lang.String)
	CALLEE: static org.h2.util.StringUtils#arraySplit(java.lang.String,char,boolean)
	CALLEE: org.h2.util.SortedProperties#<init>()
CALLER: static org.h2.message.DbException#get(int,java.lang.String)
	CALLEE: static org.h2.message.DbException#get(int,java.lang.String[])
CALLER: static org.h2.message.DbException#convert(java.lang.Throwable)
	CALLEE: org.h2.message.DbException#<init>(java.sql.SQLException)
	CALLEE: static org.h2.message.DbException#convertInvocation(java.lang.reflect.InvocationTargetException,java.lang.String)
	CALLEE: static org.h2.message.DbException#get(int,java.lang.Throwable,java.lang.String[])
CALLER: static org.eclipse.jetty.io.SelectChannelEndPoint#<clinit>()
	CALLEE: static org.eclipse.jetty.util.log.Log#getLogger(java.lang.Class)
CALLER: static org.eclipse.jetty.io.ChannelEndPoint#<clinit>()
	CALLEE: static org.eclipse.jetty.util.log.Log#getLogger(java.lang.Class)
CALLER: static org.eclipse.jetty.io.AbstractEndPoint#<clinit>()
	CALLEE: static org.eclipse.jetty.util.log.Log#getLogger(java.lang.Class)
CALLER: static org.eclipse.jetty.io.IdleTimeout#<clinit>()
	CALLEE: static org.eclipse.jetty.util.log.Log#getLogger(java.lang.Class)
CALLER: org.eclipse.jetty.io.SelectChannelEndPoint#<init>(java.nio.channels.SocketChannel,org.eclipse.jetty.io.SelectorManager.ManagedSelector,java.nio.channels.SelectionKey,org.eclipse.jetty.util.thread.Scheduler,long)
	CALLEE: org.eclipse.jetty.io.ChannelEndPoint#<init>(org.eclipse.jetty.util.thread.Scheduler,java.nio.channels.SocketChannel)
	CALLEE: org.eclipse.jetty.io.SelectChannelEndPoint.1#<init>(org.eclipse.jetty.io.SelectChannelEndPoint)
	CALLEE: org.eclipse.jetty.io.IdleTimeout#setIdleTimeout(long)
CALLER: org.eclipse.jetty.servlet.ServletHolder.Config#getServletName()
	CALLEE: org.eclipse.jetty.servlet.Holder#getName()
CALLER: javax.servlet.GenericServlet#getInitParameterNames()
	CALLEE: javax.servlet.GenericServlet#getServletConfig()
	CALLEE: org.eclipse.jetty.servlet.Holder.HolderConfig#getInitParameterNames()
CALLER: org.glassfish.jersey.servlet.WebAppResourcesScanner.1#<init>(org.glassfish.jersey.servlet.WebAppResourcesScanner,java.util.Set)
	CALLEE: org.glassfish.jersey.server.internal.AbstractResourceFinderAdapter#<init>()
	CALLEE: org.glassfish.jersey.servlet.WebAppResourcesScanner.1.1#<init>(org.glassfish.jersey.servlet.WebAppResourcesScanner.1)
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#RESOURCE_CONFIG_ERROR_NULL_APPLICATIONCLASS()
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableRESOURCE_CONFIG_ERROR_NULL_APPLICATIONCLASS()
CALLER: org.glassfish.jersey.server.ResourceConfig.WrappingResourceConfig#mergeApplications(javax.ws.rs.core.Application)
	CALLEE: org.glassfish.jersey.server.ResourceConfig#invalidateCache()
	CALLEE: org.glassfish.jersey.server.ResourceConfig#getProperties()
	CALLEE: org.glassfish.jersey.server.ResourceConfig#addProperties(java.util.Map)
	CALLEE: org.glassfish.jersey.server.ResourceConfig#registerResources(java.util.Set)
	CALLEE: org.glassfish.jersey.server.ResourceConfig#setApplicationName(java.lang.String)
	CALLEE: org.glassfish.jersey.server.ResourceConfig#setClassLoader(java.lang.ClassLoader)
	CALLEE: org.glassfish.jersey.server.ResourceConfig#lock()
	CALLEE: org.glassfish.jersey.server.ResourceConfig#getResources()
	CALLEE: org.glassfish.jersey.server.ResourceConfig#getApplicationName()
	CALLEE: javax.ws.rs.core.Application#getProperties()
	CALLEE: org.glassfish.jersey.server.ResourceConfig#getClassLoader()
CALLER: org.glassfish.jersey.internal.ServiceFinder#<init>(java.lang.Class,java.lang.ClassLoader,boolean)
	CALLEE: org.glassfish.jersey.internal.ServiceFinder#<init>(java.lang.Class,java.lang.String,java.lang.ClassLoader,boolean)
CALLER: org.glassfish.jersey.internal.OsgiRegistry#setOSGiServiceFinderIteratorProvider()
	CALLEE: org.glassfish.jersey.internal.OsgiRegistry.OsgiServiceFinder#<init>(org.glassfish.jersey.internal.OsgiRegistry,org.glassfish.jersey.internal.OsgiRegistry.1)
	CALLEE: static org.glassfish.jersey.internal.ServiceFinder#setIteratorProvider(org.glassfish.jersey.internal.ServiceFinder.ServiceIteratorProvider)
CALLER: org.glassfish.jersey.internal.OsgiRegistry#registerExistingBundles()
	CALLEE: org.glassfish.jersey.internal.OsgiRegistry#register(org.osgi.framework.Bundle)
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#COMPONENT_CANNOT_BE_NULL()
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#localizableCOMPONENT_CANNOT_BE_NULL()
CALLER: static org.glassfish.hk2.api.ServiceLocatorFactory.CreatePolicy#<clinit>()
	CALLEE: org.glassfish.hk2.api.ServiceLocatorFactory.CreatePolicy#<init>(java.lang.String,int)
CALLER: static org.glassfish.hk2.utilities.ServiceLocatorUtilities#enablePerThreadScope(org.glassfish.hk2.api.ServiceLocator)
	CALLEE: static org.glassfish.hk2.utilities.ServiceLocatorUtilities#addClasses(org.glassfish.hk2.api.ServiceLocator,boolean,java.lang.Class[])
	CALLEE: static org.glassfish.hk2.utilities.ServiceLocatorUtilities#isDupException(org.glassfish.hk2.api.MultiException)
CALLER: static org.glassfish.hk2.utilities.ServiceLocatorUtilities#<clinit>()
	CALLEE: org.glassfish.hk2.utilities.ServiceLocatorUtilities.SingletonImpl#<init>(org.glassfish.hk2.utilities.ServiceLocatorUtilities.1)
	CALLEE: org.glassfish.hk2.utilities.ServiceLocatorUtilities.PerLookupImpl#<init>(org.glassfish.hk2.utilities.ServiceLocatorUtilities.1)
	CALLEE: org.glassfish.hk2.utilities.ServiceLocatorUtilities.PerThreadImpl#<init>(org.glassfish.hk2.utilities.ServiceLocatorUtilities.1)
	CALLEE: org.glassfish.hk2.utilities.ServiceLocatorUtilities.InheritableThreadImpl#<init>(org.glassfish.hk2.utilities.ServiceLocatorUtilities.1)
	CALLEE: org.glassfish.hk2.utilities.ServiceLocatorUtilities.ImmediateImpl#<init>(org.glassfish.hk2.utilities.ServiceLocatorUtilities.1)
CALLER: static org.glassfish.jersey.internal.inject.Injections#bind(org.glassfish.hk2.api.ServiceLocator,org.glassfish.hk2.utilities.Binder)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#bind(org.glassfish.hk2.api.DynamicConfiguration)
CALLER: static org.glassfish.hk2.internal.ServiceLocatorFactoryImpl#<clinit>()
	CALLEE: org.glassfish.hk2.internal.ServiceLocatorFactoryImpl.1#<init>()
CALLER: org.glassfish.hk2.internal.ServiceLocatorFactoryImpl#<init>()
	CALLEE: org.glassfish.hk2.api.ServiceLocatorFactory#<init>()
CALLER: static org.glassfish.hk2.utilities.binding.BindingBuilderFactory#newBinder(java.lang.Class)
	CALLEE: static org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#create(java.lang.Class,boolean)
CALLER: static org.glassfish.hk2.utilities.binding.BindingBuilderFactory#addBinding(org.glassfish.hk2.utilities.binding.BindingBuilder,org.glassfish.hk2.api.DynamicConfiguration)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#complete(org.glassfish.hk2.api.DynamicConfiguration,org.glassfish.hk2.api.HK2Loader)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#complete(org.glassfish.hk2.api.DynamicConfiguration,org.glassfish.hk2.api.HK2Loader)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#complete(org.glassfish.hk2.api.DynamicConfiguration,org.glassfish.hk2.api.HK2Loader)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#complete(org.glassfish.hk2.api.DynamicConfiguration,org.glassfish.hk2.api.HK2Loader)
CALLER: org.glassfish.jersey.server.ResourceConfig.RuntimeConfig#<init>(org.glassfish.jersey.server.ResourceConfig)
	CALLEE: org.glassfish.jersey.server.ResourceConfig#registerClasses(java.util.Set)
	CALLEE: static jersey.repackaged.com.google.common.collect.Sets#newIdentityHashSet()
	CALLEE: org.glassfish.jersey.server.ResourceConfig#<init>(org.glassfish.jersey.server.ResourceConfig)
	CALLEE: static org.glassfish.jersey.server.ResourceConfig#access$600(org.glassfish.jersey.server.ResourceConfig)
	CALLEE: org.glassfish.jersey.server.ResourceConfig.RuntimeConfig#registerComponentsOf(javax.ws.rs.core.Application)
	CALLEE: org.glassfish.jersey.server.ResourceConfig#getRegisteredClasses()
	CALLEE: org.glassfish.jersey.server.ResourceConfig#getSingletons()
	CALLEE: org.glassfish.jersey.server.ResourceConfig.RuntimeConfig.1#<init>(org.glassfish.jersey.server.ResourceConfig.RuntimeConfig)
	CALLEE: static jersey.repackaged.com.google.common.collect.Sets#filter(java.util.Set,jersey.repackaged.com.google.common.base.Predicate)
	CALLEE: org.glassfish.jersey.server.ResourceConfig#registerInstances(java.util.Set)
	CALLEE: org.glassfish.jersey.server.ResourceConfig#getClasses()
	CALLEE: org.glassfish.jersey.server.ResourceConfig.RuntimeConfig.2#<init>(org.glassfish.jersey.server.ResourceConfig.RuntimeConfig)
CALLER: org.glassfish.jersey.server.ResourceConfig.RuntimeConfig#<init>(javax.ws.rs.core.Application)
	CALLEE: org.glassfish.jersey.server.ResourceConfig#<init>()
	CALLEE: org.glassfish.jersey.server.ResourceConfig#getProperties()
	CALLEE: org.glassfish.jersey.server.ResourceConfig#addProperties(java.util.Map)
	CALLEE: org.glassfish.jersey.server.ResourceConfig.RuntimeConfig#registerComponentsOf(javax.ws.rs.core.Application)
	CALLEE: org.glassfish.jersey.server.ResourceConfig#getRegisteredClasses()
CALLER: static org.glassfish.jersey.internal.inject.Providers#getAllServiceHandles(org.glassfish.hk2.api.ServiceLocator,java.lang.Class)
	CALLEE: static org.glassfish.jersey.internal.inject.Providers#getServiceHandles(org.glassfish.hk2.api.ServiceLocator,java.lang.Class,java.lang.annotation.Annotation[])
CALLER: static org.glassfish.jersey.internal.inject.Providers#getClasses(java.util.Collection)
	CALLEE: static jersey.repackaged.com.google.common.collect.Sets#newLinkedHashSet()
	CALLEE: org.glassfish.jersey.internal.inject.ProviderToService#<init>()
	CALLEE: static jersey.repackaged.com.google.common.collect.Collections2#transform(java.util.Collection,jersey.repackaged.com.google.common.base.Function)
	CALLEE: static jersey.repackaged.com.google.common.collect.Sets#newLinkedHashSet(java.lang.Iterable)
CALLER: static org.glassfish.jersey.internal.util.PropertiesHelper#getValue(java.util.Map,javax.ws.rs.RuntimeType,java.lang.String,java.lang.Class,java.util.Map)
	CALLEE: static org.glassfish.jersey.internal.util.PropertiesHelper#getPropertyNameForRuntime(java.lang.String,javax.ws.rs.RuntimeType)
	CALLEE: static org.glassfish.jersey.internal.util.PropertiesHelper#getLegacyFallbackValue(java.util.Map,java.util.Map,java.lang.String)
	CALLEE: static org.glassfish.jersey.internal.util.PropertiesHelper#convertValue(java.lang.Object,java.lang.Class)
CALLER: static org.h2.store.fs.FilePath#get(java.lang.String)
	CALLEE: static org.h2.store.fs.FilePath#registerDefaultProviders()
CALLER: static org.h2.util.Utils#loadResource(java.lang.String)
	CALLEE: static org.h2.util.IOUtils#readBytesAndClose(java.io.InputStream,int)
	CALLEE: static org.h2.util.IOUtils#copy(java.io.InputStream,java.io.OutputStream)
CALLER: static org.h2.message.DbException#get(int,java.lang.String[])
	CALLEE: org.h2.message.DbException#<init>(java.sql.SQLException)
	CALLEE: static org.h2.message.DbException#getJdbcSQLException(int,java.lang.Throwable,java.lang.String[])
CALLER: org.h2.message.DbException#<init>(java.sql.SQLException)
	CALLEE: org.h2.jdbc.JdbcSQLException#getMessage()
CALLER: static org.h2.message.DbException#convertInvocation(java.lang.reflect.InvocationTargetException,java.lang.String)
	CALLEE: static org.h2.message.DbException#convert(java.lang.Throwable)
	CALLEE: static org.h2.message.DbException#get(int,java.lang.Throwable,java.lang.String[])
CALLER: static org.h2.message.DbException#get(int,java.lang.Throwable,java.lang.String[])
	CALLEE: org.h2.message.DbException#<init>(java.sql.SQLException)
	CALLEE: static org.h2.message.DbException#getJdbcSQLException(int,java.lang.Throwable,java.lang.String[])
CALLER: org.eclipse.jetty.io.ChannelEndPoint#<init>(org.eclipse.jetty.util.thread.Scheduler,java.nio.channels.SocketChannel)
	CALLEE: org.eclipse.jetty.io.AbstractEndPoint#<init>(org.eclipse.jetty.util.thread.Scheduler,java.net.InetSocketAddress,java.net.InetSocketAddress)
CALLER: org.eclipse.jetty.io.IdleTimeout#setIdleTimeout(long)
	CALLEE: org.eclipse.jetty.io.IdleTimeout#deactivate()
	CALLEE: org.eclipse.jetty.io.SelectChannelEndPoint#isOpen()
	CALLEE: org.eclipse.jetty.io.IdleTimeout#activate()
CALLER: org.eclipse.jetty.servlet.Holder.HolderConfig#getInitParameterNames()
	CALLEE: org.eclipse.jetty.servlet.Holder#getInitParameterNames()
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableRESOURCE_CONFIG_ERROR_NULL_APPLICATIONCLASS()
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: org.glassfish.jersey.server.ResourceConfig#registerResources(java.util.Set)
	CALLEE: org.glassfish.jersey.server.ResourceConfig.State#registerResources(java.util.Set)
	CALLEE: org.glassfish.jersey.server.ResourceConfig.ImmutableState#registerResources(java.util.Set)
CALLER: org.glassfish.jersey.server.ResourceConfig#setApplicationName(java.lang.String)
	CALLEE: org.glassfish.jersey.server.ResourceConfig.State#setApplicationName(java.lang.String)
CALLER: org.glassfish.jersey.server.ResourceConfig#setClassLoader(java.lang.ClassLoader)
	CALLEE: org.glassfish.jersey.server.ResourceConfig.State#setClassLoader(java.lang.ClassLoader)
	CALLEE: org.glassfish.jersey.server.ResourceConfig.ImmutableState#setClassLoader(java.lang.ClassLoader)
CALLER: org.glassfish.jersey.internal.OsgiRegistry.OsgiServiceFinder#<init>(org.glassfish.jersey.internal.OsgiRegistry,org.glassfish.jersey.internal.OsgiRegistry.1)
	CALLEE: org.glassfish.jersey.internal.OsgiRegistry.OsgiServiceFinder#<init>(org.glassfish.jersey.internal.OsgiRegistry)
CALLER: static org.glassfish.jersey.internal.ServiceFinder#setIteratorProvider(org.glassfish.jersey.internal.ServiceFinder.ServiceIteratorProvider)
	CALLEE: static org.glassfish.jersey.internal.ServiceFinder.ServiceIteratorProvider#access$000(org.glassfish.jersey.internal.ServiceFinder.ServiceIteratorProvider)
CALLER: org.glassfish.jersey.internal.OsgiRegistry#register(org.osgi.framework.Bundle)
	CALLEE: static org.glassfish.jersey.internal.OsgiRegistry#findEntries(org.osgi.framework.Bundle,java.lang.String,java.lang.String,boolean)
	CALLEE: org.glassfish.jersey.internal.OsgiRegistry.BundleSpiProvidersLoader#<init>(java.lang.String,java.net.URL,org.osgi.framework.Bundle)
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#localizableCOMPONENT_CANNOT_BE_NULL()
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.hk2.internal.PerThreadContext#<clinit>()
	CALLEE: org.glassfish.hk2.internal.PerThreadContext.1#<init>()
CALLER: static org.glassfish.hk2.utilities.ServiceLocatorUtilities#addClasses(org.glassfish.hk2.api.ServiceLocator,boolean,java.lang.Class[])
	CALLEE: static org.glassfish.hk2.utilities.BuilderHelper#createDescriptorFilter(org.glassfish.hk2.api.Descriptor,boolean)
CALLER: org.glassfish.hk2.utilities.ServiceLocatorUtilities.SingletonImpl#<init>(org.glassfish.hk2.utilities.ServiceLocatorUtilities.1)
	CALLEE: org.glassfish.hk2.utilities.ServiceLocatorUtilities.SingletonImpl#<init>()
CALLER: org.glassfish.hk2.utilities.ServiceLocatorUtilities.PerLookupImpl#<init>(org.glassfish.hk2.utilities.ServiceLocatorUtilities.1)
	CALLEE: org.glassfish.hk2.utilities.ServiceLocatorUtilities.PerLookupImpl#<init>()
CALLER: org.glassfish.hk2.utilities.ServiceLocatorUtilities.PerThreadImpl#<init>(org.glassfish.hk2.utilities.ServiceLocatorUtilities.1)
	CALLEE: org.glassfish.hk2.utilities.ServiceLocatorUtilities.PerThreadImpl#<init>()
CALLER: org.glassfish.hk2.utilities.ServiceLocatorUtilities.InheritableThreadImpl#<init>(org.glassfish.hk2.utilities.ServiceLocatorUtilities.1)
	CALLEE: org.glassfish.hk2.utilities.ServiceLocatorUtilities.InheritableThreadImpl#<init>()
CALLER: org.glassfish.hk2.utilities.ServiceLocatorUtilities.ImmediateImpl#<init>(org.glassfish.hk2.utilities.ServiceLocatorUtilities.1)
	CALLEE: org.glassfish.hk2.utilities.ServiceLocatorUtilities.ImmediateImpl#<init>()
CALLER: org.glassfish.hk2.utilities.binding.AbstractBinder#bind(org.glassfish.hk2.api.DynamicConfiguration)
	CALLEE: org.glassfish.jersey.server.internal.JerseyResourceContext.Binder#configure()
	CALLEE: org.glassfish.jersey.server.internal.MappableExceptionWrapperInterceptor.Binder#configure()
	CALLEE: org.glassfish.jersey.server.internal.monitoring.MonitoringContainerListener.Binder#configure()
	CALLEE: org.glassfish.jersey.servlet.WebComponent.WebComponentBinder#configure()
	CALLEE: org.glassfish.jersey.server.ServerBinder#configure()
	CALLEE: org.glassfish.jersey.server.ApplicationHandler.ApplicationBinder#configure()
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#complete()
	CALLEE: org.glassfish.jersey.servlet.internal.PersistenceUnitBinder#configure()
	CALLEE: org.glassfish.jersey.internal.ServiceFinderBinder#configure()
	CALLEE: org.glassfish.jersey.process.internal.RequestScope.Binder#configure()
	CALLEE: org.glassfish.jersey.internal.JerseyErrorService.Binder#configure()
	CALLEE: org.glassfish.jersey.server.internal.process.ServerProcessingBinder#configure()
	CALLEE: org.glassfish.jersey.internal.inject.ContextInjectionResolver.Binder#configure()
	CALLEE: org.glassfish.jersey.server.internal.inject.ParameterInjectionBinder#configure()
	CALLEE: org.glassfish.jersey.internal.inject.JerseyClassAnalyzer.Binder#configure()
	CALLEE: org.glassfish.jersey.message.internal.MessagingBinders.MessageBodyProviders#configure()
	CALLEE: org.glassfish.jersey.message.internal.MessageBodyFactory.Binder#configure()
	CALLEE: org.glassfish.jersey.internal.ExceptionMapperFactory.Binder#configure()
	CALLEE: org.glassfish.jersey.internal.ContextResolverFactory.Binder#configure()
	CALLEE: org.glassfish.jersey.internal.JaxrsProviders.Binder#configure()
	CALLEE: org.glassfish.jersey.server.internal.ProcessingProviders.Binder#configure()
	CALLEE: org.glassfish.jersey.server.model.internal.ResourceModelBinder#configure()
CALLER: static org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#create(java.lang.Class,boolean)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#<init>(java.lang.Class,java.lang.reflect.Type)
CALLER: org.glassfish.jersey.server.ResourceConfig#<init>(org.glassfish.jersey.server.ResourceConfig)
	CALLEE: javax.ws.rs.core.Application#<init>()
	CALLEE: org.glassfish.jersey.server.ResourceConfig.State#<init>(org.glassfish.jersey.server.ResourceConfig.State)
CALLER: static org.glassfish.jersey.server.ResourceConfig#access$600(org.glassfish.jersey.server.ResourceConfig)
	CALLEE: static org.glassfish.jersey.server.ResourceConfig#unwrapCustomRootApplication(org.glassfish.jersey.server.ResourceConfig)
CALLER: org.glassfish.jersey.server.ResourceConfig.RuntimeConfig#registerComponentsOf(javax.ws.rs.core.Application)
	CALLEE: org.glassfish.jersey.server.ResourceConfig.RuntimeConfig.3#<init>(org.glassfish.jersey.server.ResourceConfig.RuntimeConfig,javax.ws.rs.core.Application)
	CALLEE: static org.glassfish.jersey.internal.Errors#processWithException(java.lang.Runnable)
CALLER: org.glassfish.jersey.server.ResourceConfig#getRegisteredClasses()
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig#getComponentBag()
	CALLEE: org.glassfish.jersey.model.internal.ComponentBag#getRegistrations()
CALLER: org.glassfish.jersey.server.ResourceConfig#getSingletons()
	CALLEE: org.glassfish.jersey.server.ResourceConfig#_getSingletons()
	CALLEE: org.glassfish.jersey.server.ResourceConfig.WrappingResourceConfig#_getSingletons()
	CALLEE: org.glassfish.jersey.server.ResourceConfig.RuntimeConfig#_getSingletons()
CALLER: static jersey.repackaged.com.google.common.collect.Sets#filter(java.util.Set,jersey.repackaged.com.google.common.base.Predicate)
	CALLEE: static jersey.repackaged.com.google.common.base.Preconditions#checkNotNull(java.lang.Object)
	CALLEE: static jersey.repackaged.com.google.common.collect.Sets#filter(java.util.SortedSet,jersey.repackaged.com.google.common.base.Predicate)
	CALLEE: static jersey.repackaged.com.google.common.base.Predicates#and(jersey.repackaged.com.google.common.base.Predicate,jersey.repackaged.com.google.common.base.Predicate)
	CALLEE: jersey.repackaged.com.google.common.collect.Sets.FilteredSet#<init>(java.util.Set,jersey.repackaged.com.google.common.base.Predicate)
CALLER: org.glassfish.jersey.server.ResourceConfig#registerInstances(java.util.Set)
	CALLEE: org.glassfish.jersey.server.ResourceConfig#register(java.lang.Object)
	CALLEE: jersey.repackaged.com.google.common.collect.Collections2.FilteredCollection#iterator()
	CALLEE: jersey.repackaged.com.google.common.collect.AbstractIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.AbstractIterator#hasNext()
CALLER: org.glassfish.jersey.server.ResourceConfig#getClasses()
	CALLEE: org.glassfish.jersey.server.ResourceConfig#_getClasses()
	CALLEE: org.glassfish.jersey.server.ResourceConfig.WrappingResourceConfig#_getClasses()
	CALLEE: org.glassfish.jersey.server.ResourceConfig.RuntimeConfig#_getClasses()
CALLER: static org.glassfish.jersey.internal.inject.CustomAnnotationLiteral#<clinit>()
	CALLEE: org.glassfish.jersey.internal.inject.CustomAnnotationLiteral#<init>()
CALLER: static jersey.repackaged.com.google.common.collect.Collections2#transform(java.util.Collection,jersey.repackaged.com.google.common.base.Function)
	CALLEE: jersey.repackaged.com.google.common.collect.Collections2.TransformedCollection#<init>(java.util.Collection,jersey.repackaged.com.google.common.base.Function)
CALLER: static jersey.repackaged.com.google.common.collect.Sets#newLinkedHashSet(java.lang.Iterable)
	CALLEE: static jersey.repackaged.com.google.common.collect.Sets#newLinkedHashSet()
	CALLEE: static jersey.repackaged.com.google.common.collect.Collections2#cast(java.lang.Iterable)
	CALLEE: static jersey.repackaged.com.google.common.collect.Iterables#addAll(java.util.Collection,java.lang.Iterable)
CALLER: static org.glassfish.jersey.internal.util.PropertiesHelper#getPropertyNameForRuntime(java.lang.String,javax.ws.rs.RuntimeType)
	CALLEE: static javax.ws.rs.RuntimeType#values()
CALLER: static org.glassfish.jersey.internal.util.PropertiesHelper#getLegacyFallbackValue(java.util.Map,java.util.Map,java.lang.String)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#PROPERTIES_HELPER_DEPRECATED_PROPERTY_NAME(java.lang.Object,java.lang.Object)
CALLER: static org.glassfish.jersey.internal.util.PropertiesHelper#convertValue(java.lang.Object,java.lang.Class)
	CALLEE: static org.glassfish.jersey.internal.util.ReflectionHelper#getStringConstructorPA(java.lang.Class)
	CALLEE: static org.glassfish.jersey.internal.util.ReflectionHelper#getValueOfStringMethodPA(java.lang.Class)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#PROPERTIES_HELPER_GET_VALUE_NO_TRANSFORM(java.lang.Object,java.lang.Object,java.lang.Object)
CALLER: static org.h2.store.fs.FilePath#registerDefaultProviders()
	CALLEE: static org.h2.util.New#hashMap()
CALLER: static org.h2.util.IOUtils#readBytesAndClose(java.io.InputStream,int)
	CALLEE: static org.h2.util.IOUtils#copy(java.io.InputStream,java.io.OutputStream,long)
	CALLEE: static org.h2.message.DbException#convertToIOException(java.lang.Throwable)
CALLER: static org.h2.util.IOUtils#copy(java.io.InputStream,java.io.OutputStream)
	CALLEE: static org.h2.util.IOUtils#copy(java.io.InputStream,java.io.OutputStream,long)
CALLER: static org.h2.message.DbException#getJdbcSQLException(int,java.lang.Throwable,java.lang.String[])
	CALLEE: static org.h2.api.ErrorCode#getState(int)
	CALLEE: static org.h2.message.DbException#translate(java.lang.String,java.lang.String[])
	CALLEE: org.h2.jdbc.JdbcSQLException#<init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Throwable,java.lang.String)
CALLER: org.eclipse.jetty.io.AbstractEndPoint#<init>(org.eclipse.jetty.util.thread.Scheduler,java.net.InetSocketAddress,java.net.InetSocketAddress)
	CALLEE: org.eclipse.jetty.io.IdleTimeout#<init>(org.eclipse.jetty.util.thread.Scheduler)
	CALLEE: org.eclipse.jetty.io.AbstractEndPoint.1#<init>(org.eclipse.jetty.io.AbstractEndPoint)
	CALLEE: org.eclipse.jetty.io.AbstractEndPoint.2#<init>(org.eclipse.jetty.io.AbstractEndPoint,org.eclipse.jetty.io.EndPoint)
CALLER: org.eclipse.jetty.io.IdleTimeout#activate()
	CALLEE: org.eclipse.jetty.io.IdleTimeout.1#run()
CALLER: org.glassfish.jersey.internal.OsgiRegistry.OsgiServiceFinder#<init>(org.glassfish.jersey.internal.OsgiRegistry)
	CALLEE: org.glassfish.jersey.internal.ServiceFinder.ServiceIteratorProvider#<init>()
	CALLEE: org.glassfish.jersey.internal.ServiceFinder.DefaultServiceIteratorProvider#<init>()
CALLER: static org.glassfish.jersey.internal.ServiceFinder.ServiceIteratorProvider#access$000(org.glassfish.jersey.internal.ServiceFinder.ServiceIteratorProvider)
	CALLEE: static org.glassfish.jersey.internal.ServiceFinder.ServiceIteratorProvider#setInstance(org.glassfish.jersey.internal.ServiceFinder.ServiceIteratorProvider)
CALLER: static org.glassfish.hk2.utilities.BuilderHelper#createDescriptorFilter(org.glassfish.hk2.api.Descriptor,boolean)
	CALLEE: org.glassfish.hk2.utilities.DescriptorImpl#<init>(org.glassfish.hk2.api.Descriptor)
	CALLEE: org.glassfish.hk2.utilities.BuilderHelper.2#<init>(org.glassfish.hk2.api.Descriptor)
CALLER: org.glassfish.hk2.utilities.ServiceLocatorUtilities.SingletonImpl#<init>()
	CALLEE: org.glassfish.hk2.api.AnnotationLiteral#<init>()
CALLER: org.glassfish.hk2.utilities.ServiceLocatorUtilities.PerLookupImpl#<init>()
	CALLEE: org.glassfish.hk2.api.AnnotationLiteral#<init>()
CALLER: org.glassfish.hk2.utilities.ServiceLocatorUtilities.PerThreadImpl#<init>()
	CALLEE: org.glassfish.hk2.api.AnnotationLiteral#<init>()
CALLER: org.glassfish.hk2.utilities.ServiceLocatorUtilities.InheritableThreadImpl#<init>()
	CALLEE: org.glassfish.hk2.api.AnnotationLiteral#<init>()
CALLER: org.glassfish.hk2.utilities.ServiceLocatorUtilities.ImmediateImpl#<init>()
	CALLEE: org.glassfish.hk2.api.AnnotationLiteral#<init>()
CALLER: org.glassfish.jersey.servlet.WebComponent.WebComponentBinder#configure()
	CALLEE: org.eclipse.jetty.servlet.Holder.HolderConfig#getInitParameterNames()
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#to(org.glassfish.hk2.api.TypeLiteral)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#to(org.glassfish.hk2.api.TypeLiteral)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#proxy(boolean)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#proxy(boolean)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#proxy(boolean)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#proxy(boolean)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#proxyForSameScope(boolean)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#proxyForSameScope(boolean)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#proxyForSameScope(boolean)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#proxyForSameScope(boolean)
	CALLEE: org.glassfish.jersey.servlet.WebServletConfig#getConfigType()
	CALLEE: static org.glassfish.jersey.servlet.WebComponent#access$300(org.glassfish.jersey.servlet.WebComponent)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#bindFactory(java.lang.Class)
	CALLEE: static org.glassfish.jersey.internal.inject.ReferencingFactory#referenceFactory()
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#bindFactory(org.glassfish.hk2.api.Factory)
	CALLEE: org.glassfish.jersey.servlet.WebComponent.WebComponentBinder.1#<init>(org.glassfish.jersey.servlet.WebComponent.WebComponentBinder)
	CALLEE: org.glassfish.jersey.servlet.WebComponent.WebComponentBinder.2#<init>(org.glassfish.jersey.servlet.WebComponent.WebComponentBinder)
	CALLEE: org.glassfish.jersey.servlet.WebComponent.WebComponentBinder.3#<init>(org.glassfish.jersey.servlet.WebComponent.WebComponentBinder)
	CALLEE: org.glassfish.jersey.servlet.WebServletConfig#getServletConfig()
	CALLEE: org.glassfish.jersey.servlet.WebComponent.WebComponentBinder.4#<init>(org.glassfish.jersey.servlet.WebComponent.WebComponentBinder,javax.servlet.ServletConfig)
	CALLEE: org.glassfish.jersey.servlet.internal.PersistenceUnitBinder#<init>()
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#install(org.glassfish.hk2.utilities.Binder[])
	CALLEE: org.glassfish.jersey.servlet.WebComponent.WebComponentBinder.5#<init>(org.glassfish.jersey.servlet.WebComponent.WebComponentBinder)
	CALLEE: org.glassfish.jersey.servlet.WebComponent.WebComponentBinder.6#<init>(org.glassfish.jersey.servlet.WebComponent.WebComponentBinder)
	CALLEE: org.glassfish.jersey.internal.ServiceFinderBinder#<init>(java.lang.Class,java.util.Map,javax.ws.rs.RuntimeType)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#to(org.glassfish.hk2.api.TypeLiteral)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#to(org.glassfish.hk2.api.TypeLiteral)
CALLER: org.glassfish.jersey.server.ServerBinder#configure()
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#install(org.glassfish.hk2.utilities.Binder[])
	CALLEE: org.glassfish.jersey.internal.ServiceFinderBinder#<init>(java.lang.Class,java.util.Map,javax.ws.rs.RuntimeType)
	CALLEE: org.glassfish.jersey.process.internal.RequestScope.Binder#<init>()
	CALLEE: org.glassfish.jersey.internal.JerseyErrorService.Binder#<init>()
	CALLEE: org.glassfish.jersey.server.internal.process.ServerProcessingBinder#<init>()
	CALLEE: org.glassfish.jersey.internal.inject.ContextInjectionResolver.Binder#<init>()
	CALLEE: org.glassfish.jersey.server.internal.inject.ParameterInjectionBinder#<init>()
	CALLEE: org.glassfish.jersey.internal.inject.JerseyClassAnalyzer.Binder#<init>()
	CALLEE: org.glassfish.jersey.message.internal.MessagingBinders.MessageBodyProviders#<init>(java.util.Map,javax.ws.rs.RuntimeType)
	CALLEE: org.glassfish.jersey.message.internal.MessageBodyFactory.Binder#<init>()
	CALLEE: org.glassfish.jersey.internal.ExceptionMapperFactory.Binder#<init>()
	CALLEE: org.glassfish.jersey.internal.ContextResolverFactory.Binder#<init>()
	CALLEE: org.glassfish.jersey.internal.JaxrsProviders.Binder#<init>()
	CALLEE: org.glassfish.jersey.server.internal.ProcessingProviders.Binder#<init>()
	CALLEE: org.glassfish.jersey.server.model.internal.ResourceModelBinder#<init>()
	CALLEE: org.glassfish.jersey.server.internal.JerseyResourceContext.Binder#<init>()
	CALLEE: org.glassfish.jersey.server.internal.MappableExceptionWrapperInterceptor.Binder#<init>()
	CALLEE: org.glassfish.jersey.server.internal.monitoring.MonitoringContainerListener.Binder#<init>()
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#bind(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#to(java.lang.Class)
CALLER: org.glassfish.jersey.server.ApplicationHandler.ApplicationBinder#configure()
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#bindFactory(org.glassfish.hk2.api.Factory)
	CALLEE: org.glassfish.jersey.server.ApplicationHandler.ApplicationBinder.RuntimeConfigProvider#<init>(org.glassfish.jersey.server.ApplicationHandler.ApplicationBinder,org.glassfish.jersey.server.ApplicationHandler.1)
	CALLEE: org.glassfish.jersey.server.ApplicationHandler.ApplicationBinder.JaxrsApplicationProvider#<init>(org.glassfish.jersey.server.ApplicationHandler.ApplicationBinder,org.glassfish.jersey.server.ApplicationHandler.1)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#bind(java.lang.Object)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#in(java.lang.Class)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBinder#complete()
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#resetBuilder(org.glassfish.hk2.utilities.binding.AbstractBindingBuilder)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#<init>(java.lang.Class,java.lang.reflect.Type)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#<init>()
CALLER: org.glassfish.jersey.server.ResourceConfig.State#<init>(org.glassfish.jersey.server.ResourceConfig.State)
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig#<init>(org.glassfish.jersey.model.internal.CommonConfig)
	CALLEE: static jersey.repackaged.com.google.common.collect.Sets#newHashSet(java.lang.Iterable)
CALLER: static org.glassfish.jersey.server.ResourceConfig#unwrapCustomRootApplication(org.glassfish.jersey.server.ResourceConfig)
	CALLEE: org.glassfish.jersey.server.ResourceConfig#getApplication()
CALLER: static org.glassfish.jersey.internal.Errors#processWithException(java.lang.Runnable)
	CALLEE: static org.glassfish.jersey.internal.Errors#process(org.glassfish.jersey.internal.util.Producer,boolean)
	CALLEE: org.glassfish.jersey.internal.Errors.2#<init>(java.lang.Runnable)
CALLER: org.glassfish.jersey.server.ResourceConfig#_getSingletons()
	CALLEE: static jersey.repackaged.com.google.common.collect.Sets#newHashSet()
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig#getInstances()
CALLER: static jersey.repackaged.com.google.common.collect.Sets#filter(java.util.SortedSet,jersey.repackaged.com.google.common.base.Predicate)
	CALLEE: static jersey.repackaged.com.google.common.collect.Platform#setsFilterSortedSet(java.util.SortedSet,jersey.repackaged.com.google.common.base.Predicate)
CALLER: static jersey.repackaged.com.google.common.base.Predicates#and(jersey.repackaged.com.google.common.base.Predicate,jersey.repackaged.com.google.common.base.Predicate)
	CALLEE: static jersey.repackaged.com.google.common.base.Preconditions#checkNotNull(java.lang.Object)
	CALLEE: static jersey.repackaged.com.google.common.base.Predicates#asList(jersey.repackaged.com.google.common.base.Predicate,jersey.repackaged.com.google.common.base.Predicate)
	CALLEE: jersey.repackaged.com.google.common.base.Predicates.AndPredicate#<init>(java.util.List,jersey.repackaged.com.google.common.base.Predicates.1)
CALLER: jersey.repackaged.com.google.common.collect.Sets.FilteredSet#<init>(java.util.Set,jersey.repackaged.com.google.common.base.Predicate)
	CALLEE: jersey.repackaged.com.google.common.collect.Collections2.FilteredCollection#<init>(java.util.Collection,jersey.repackaged.com.google.common.base.Predicate)
CALLER: org.glassfish.jersey.server.ResourceConfig#_getClasses()
	CALLEE: org.glassfish.jersey.server.ResourceConfig#scanClasses()
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig#getClasses()
CALLER: org.glassfish.jersey.internal.inject.CustomAnnotationLiteral#<init>()
	CALLEE: org.glassfish.hk2.api.AnnotationLiteral#<init>()
CALLER: jersey.repackaged.com.google.common.collect.Collections2.TransformedCollection#<init>(java.util.Collection,jersey.repackaged.com.google.common.base.Function)
	CALLEE: static jersey.repackaged.com.google.common.base.Preconditions#checkNotNull(java.lang.Object)
CALLER: static jersey.repackaged.com.google.common.collect.Iterables#addAll(java.util.Collection,java.lang.Iterable)
	CALLEE: jersey.repackaged.com.google.common.collect.Lists.TransformingRandomAccessList#iterator()
	CALLEE: com.fasterxml.jackson.databind.JsonNode#iterator()
	CALLEE: static jersey.repackaged.com.google.common.base.Preconditions#checkNotNull(java.lang.Object)
	CALLEE: static jersey.repackaged.com.google.common.collect.Collections2#cast(java.lang.Iterable)
	CALLEE: static jersey.repackaged.com.google.common.collect.Iterators#addAll(java.util.Collection,java.util.Iterator)
	CALLEE: jersey.repackaged.com.google.common.collect.Collections2.FilteredCollection#iterator()
	CALLEE: jersey.repackaged.com.google.common.collect.Collections2.TransformedCollection#iterator()
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#PROPERTIES_HELPER_DEPRECATED_PROPERTY_NAME(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#localizablePROPERTIES_HELPER_DEPRECATED_PROPERTY_NAME(java.lang.Object,java.lang.Object)
CALLER: static org.glassfish.jersey.internal.util.ReflectionHelper#getStringConstructorPA(java.lang.Class)
	CALLEE: org.glassfish.jersey.internal.util.ReflectionHelper.15#<init>(java.lang.Class)
CALLER: static org.glassfish.jersey.internal.util.ReflectionHelper#getValueOfStringMethodPA(java.lang.Class)
	CALLEE: static org.glassfish.jersey.internal.util.ReflectionHelper#getStringToObjectMethodPA(java.lang.Class,java.lang.String)
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#PROPERTIES_HELPER_GET_VALUE_NO_TRANSFORM(java.lang.Object,java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#localizablePROPERTIES_HELPER_GET_VALUE_NO_TRANSFORM(java.lang.Object,java.lang.Object,java.lang.Object)
CALLER: static org.h2.util.IOUtils#copy(java.io.InputStream,java.io.OutputStream,long)
	CALLEE: static org.h2.message.DbException#convertToIOException(java.lang.Throwable)
CALLER: static org.h2.message.DbException#convertToIOException(java.lang.Throwable)
	CALLEE: org.eclipse.jetty.util.MultiException#toString()
	CALLEE: org.h2.jdbc.JdbcSQLException#toString()
	CALLEE: org.h2.jdbc.JdbcSQLException#getOriginalCause()
	CALLEE: org.eclipse.jetty.util.ConstantThrowable#toString()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#toString()
	CALLEE: org.glassfish.hk2.api.MultiException#toString()
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#toString()
CALLER: static org.h2.message.DbException#translate(java.lang.String,java.lang.String[])
	CALLEE: static org.h2.util.StringUtils#quoteIdentifier(java.lang.String)
CALLER: org.h2.jdbc.JdbcSQLException#<init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Throwable,java.lang.String)
	CALLEE: org.h2.jdbc.JdbcSQLException#setSQL(java.lang.String)
	CALLEE: org.h2.jdbc.JdbcSQLException#buildMessage()
CALLER: org.eclipse.jetty.io.IdleTimeout#<init>(org.eclipse.jetty.util.thread.Scheduler)
	CALLEE: org.eclipse.jetty.io.IdleTimeout.1#<init>(org.eclipse.jetty.io.IdleTimeout)
CALLER: static org.eclipse.jetty.io.FillInterest#<clinit>()
	CALLEE: static org.eclipse.jetty.util.log.Log#getLogger(java.lang.Class)
CALLER: org.eclipse.jetty.io.AbstractEndPoint.1#<init>(org.eclipse.jetty.io.AbstractEndPoint)
	CALLEE: org.eclipse.jetty.io.FillInterest#<init>()
CALLER: static org.eclipse.jetty.io.WriteFlusher#<clinit>()
	CALLEE: static org.eclipse.jetty.util.log.Log#getLogger(java.lang.Class)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#isDebugEnabled()
	CALLEE: org.eclipse.jetty.io.WriteFlusher.IdleState#<init>(org.eclipse.jetty.io.WriteFlusher.1)
	CALLEE: org.eclipse.jetty.io.WriteFlusher.WritingState#<init>(org.eclipse.jetty.io.WriteFlusher.1)
	CALLEE: org.eclipse.jetty.io.WriteFlusher.CompletingState#<init>(org.eclipse.jetty.io.WriteFlusher.1)
CALLER: org.eclipse.jetty.io.AbstractEndPoint.2#<init>(org.eclipse.jetty.io.AbstractEndPoint,org.eclipse.jetty.io.EndPoint)
	CALLEE: org.eclipse.jetty.io.WriteFlusher#<init>(org.eclipse.jetty.io.EndPoint)
CALLER: org.glassfish.jersey.internal.ServiceFinder.DefaultServiceIteratorProvider#<init>()
	CALLEE: org.glassfish.jersey.internal.ServiceFinder.ServiceIteratorProvider#<init>()
CALLER: org.glassfish.hk2.utilities.DescriptorImpl#<init>(org.glassfish.hk2.api.Descriptor)
	CALLEE: static org.glassfish.hk2.utilities.reflection.ReflectionHelper#deepCopyMetadata(java.util.Map)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBinder#bindFactory(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#resetBuilder(org.glassfish.hk2.utilities.binding.AbstractBindingBuilder)
	CALLEE: static org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#createFactoryBinder(java.lang.Class,java.lang.Class)
CALLER: static org.glassfish.jersey.internal.inject.ReferencingFactory#referenceFactory()
	CALLEE: org.glassfish.jersey.internal.inject.ReferencingFactory.EmptyReferenceFactory#<init>(org.glassfish.jersey.internal.inject.ReferencingFactory.1)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBinder#bindFactory(org.glassfish.hk2.api.Factory)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#resetBuilder(org.glassfish.hk2.utilities.binding.AbstractBindingBuilder)
	CALLEE: static org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#createFactoryBinder(org.glassfish.hk2.api.Factory)
CALLER: org.glassfish.jersey.servlet.WebComponent.WebComponentBinder.1#<init>(org.glassfish.jersey.servlet.WebComponent.WebComponentBinder)
	CALLEE: org.glassfish.hk2.api.TypeLiteral#<init>()
CALLER: org.glassfish.jersey.servlet.WebComponent.WebComponentBinder.2#<init>(org.glassfish.jersey.servlet.WebComponent.WebComponentBinder)
	CALLEE: org.glassfish.hk2.api.TypeLiteral#<init>()
CALLER: org.glassfish.jersey.servlet.WebServletConfig#getServletConfig()
	CALLEE: javax.servlet.GenericServlet#getServletConfig()
CALLER: org.glassfish.jersey.servlet.internal.PersistenceUnitBinder#<init>()
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#<init>()
CALLER: org.glassfish.hk2.utilities.binding.AbstractBinder#install(org.glassfish.hk2.utilities.Binder[])
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#bind(org.glassfish.hk2.api.DynamicConfiguration)
CALLER: org.glassfish.jersey.internal.ServiceFinderBinder#<init>(java.lang.Class,java.util.Map,javax.ws.rs.RuntimeType)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#<init>()
CALLER: org.glassfish.jersey.process.internal.RequestScope.Binder#<init>()
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#<init>()
CALLER: org.glassfish.jersey.internal.JerseyErrorService.Binder#<init>()
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#<init>()
CALLER: org.glassfish.jersey.server.internal.process.ServerProcessingBinder#<init>()
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#<init>()
CALLER: org.glassfish.jersey.internal.inject.ContextInjectionResolver.Binder#<init>()
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#<init>()
CALLER: org.glassfish.jersey.server.internal.inject.ParameterInjectionBinder#<init>()
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#<init>()
CALLER: org.glassfish.jersey.internal.inject.JerseyClassAnalyzer.Binder#<init>()
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#<init>()
CALLER: org.glassfish.jersey.message.internal.MessagingBinders.MessageBodyProviders#<init>(java.util.Map,javax.ws.rs.RuntimeType)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#<init>()
CALLER: org.glassfish.jersey.message.internal.MessageBodyFactory.Binder#<init>()
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#<init>()
CALLER: org.glassfish.jersey.internal.ExceptionMapperFactory.Binder#<init>()
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#<init>()
CALLER: org.glassfish.jersey.internal.ContextResolverFactory.Binder#<init>()
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#<init>()
CALLER: org.glassfish.jersey.internal.JaxrsProviders.Binder#<init>()
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#<init>()
CALLER: org.glassfish.jersey.server.internal.ProcessingProviders.Binder#<init>()
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#<init>()
CALLER: org.glassfish.jersey.server.model.internal.ResourceModelBinder#<init>()
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#<init>()
CALLER: org.glassfish.jersey.server.internal.JerseyResourceContext.Binder#<init>()
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#<init>()
CALLER: org.glassfish.jersey.server.internal.MappableExceptionWrapperInterceptor.Binder#<init>()
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#<init>()
CALLER: org.glassfish.jersey.server.internal.monitoring.MonitoringContainerListener.Binder#<init>()
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#<init>()
CALLER: org.glassfish.hk2.utilities.binding.AbstractBinder#bind(java.lang.Class)
	CALLEE: static org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#create(java.lang.Class,boolean)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#resetBuilder(org.glassfish.hk2.utilities.binding.AbstractBindingBuilder)
CALLER: static org.glassfish.jersey.server.internal.JsonWithPaddingInterceptor#<clinit>()
	CALLEE: static jersey.repackaged.com.google.common.collect.Sets#newHashSet(java.lang.Object[])
	CALLEE: static jersey.repackaged.com.google.common.collect.Maps#newHashMapWithExpectedSize(int)
CALLER: org.glassfish.jersey.server.ApplicationHandler.ApplicationBinder.RuntimeConfigProvider#<init>(org.glassfish.jersey.server.ApplicationHandler.ApplicationBinder,org.glassfish.jersey.server.ApplicationHandler.1)
	CALLEE: org.glassfish.jersey.server.ApplicationHandler.ApplicationBinder.RuntimeConfigProvider#<init>(org.glassfish.jersey.server.ApplicationHandler.ApplicationBinder)
CALLER: org.glassfish.jersey.server.ApplicationHandler.ApplicationBinder.JaxrsApplicationProvider#<init>(org.glassfish.jersey.server.ApplicationHandler.ApplicationBinder,org.glassfish.jersey.server.ApplicationHandler.1)
	CALLEE: org.glassfish.jersey.server.ApplicationHandler.ApplicationBinder.JaxrsApplicationProvider#<init>(org.glassfish.jersey.server.ApplicationHandler.ApplicationBinder)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBinder#bind(java.lang.Object)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#resetBuilder(org.glassfish.hk2.utilities.binding.AbstractBindingBuilder)
	CALLEE: static org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#create(java.lang.Object)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBinder#resetBuilder(org.glassfish.hk2.utilities.binding.AbstractBindingBuilder)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#configuration()
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#getDefaultBinderLoader()
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#complete(org.glassfish.hk2.api.DynamicConfiguration,org.glassfish.hk2.api.HK2Loader)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#complete(org.glassfish.hk2.api.DynamicConfiguration,org.glassfish.hk2.api.HK2Loader)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#complete(org.glassfish.hk2.api.DynamicConfiguration,org.glassfish.hk2.api.HK2Loader)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#complete(org.glassfish.hk2.api.DynamicConfiguration,org.glassfish.hk2.api.HK2Loader)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#<init>()
	CALLEE: org.jvnet.hk2.component.MultiMap#<init>()
CALLER: org.glassfish.jersey.model.internal.CommonConfig#<init>(org.glassfish.jersey.model.internal.CommonConfig)
	CALLEE: static jersey.repackaged.com.google.common.collect.Sets#newHashSet()
	CALLEE: static jersey.repackaged.com.google.common.collect.Sets#newIdentityHashSet()
	CALLEE: org.glassfish.jersey.model.internal.ComponentBag#copy()
	CALLEE: static jersey.repackaged.com.google.common.collect.Lists#newLinkedList()
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig#copy(org.glassfish.jersey.model.internal.CommonConfig,boolean)
CALLER: static jersey.repackaged.com.google.common.collect.Sets#newHashSet(java.lang.Iterable)
	CALLEE: static jersey.repackaged.com.google.common.collect.Collections2#cast(java.lang.Iterable)
	CALLEE: static jersey.repackaged.com.google.common.collect.Sets#newHashSet(java.util.Iterator)
CALLER: org.glassfish.jersey.server.ResourceConfig#getApplication()
	CALLEE: org.glassfish.jersey.server.ResourceConfig#_getApplication()
	CALLEE: org.glassfish.jersey.server.ResourceConfig.WrappingResourceConfig#_getApplication()
	CALLEE: org.glassfish.jersey.server.ResourceConfig.RuntimeConfig#_getApplication()
CALLER: org.glassfish.jersey.model.internal.CommonConfig#getInstances()
	CALLEE: org.glassfish.jersey.model.internal.ComponentBag#getInstances()
CALLER: static jersey.repackaged.com.google.common.collect.Platform#setsFilterSortedSet(java.util.SortedSet,jersey.repackaged.com.google.common.base.Predicate)
	CALLEE: static jersey.repackaged.com.google.common.collect.Sets#filter(java.util.NavigableSet,jersey.repackaged.com.google.common.base.Predicate)
	CALLEE: static jersey.repackaged.com.google.common.collect.Sets#filterSortedIgnoreNavigable(java.util.SortedSet,jersey.repackaged.com.google.common.base.Predicate)
CALLER: jersey.repackaged.com.google.common.base.Predicates.AndPredicate#<init>(java.util.List,jersey.repackaged.com.google.common.base.Predicates.1)
	CALLEE: jersey.repackaged.com.google.common.base.Predicates.AndPredicate#<init>(java.util.List)
CALLER: org.glassfish.jersey.server.ResourceConfig#scanClasses()
	CALLEE: org.glassfish.jersey.server.internal.scanning.JarFileScanner#hasNext()
	CALLEE: org.glassfish.jersey.server.internal.scanning.JarFileScanner#open()
	CALLEE: org.glassfish.jersey.servlet.WebAppResourcesScanner#hasNext()
	CALLEE: org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener#getAnnotatedClasses()
	CALLEE: org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener#process(java.lang.String,java.io.InputStream)
	CALLEE: org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener#accept(java.lang.String)
	CALLEE: org.glassfish.jersey.servlet.WebAppResourcesScanner.1#hasNext()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FilesScanner.1#hasNext()
	CALLEE: org.glassfish.jersey.servlet.WebAppResourcesScanner.1#open()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FilesScanner.1#open()
	CALLEE: org.glassfish.jersey.servlet.WebAppResourcesScanner.1#next()
	CALLEE: org.glassfish.jersey.server.internal.scanning.JarFileScanner#next()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FilesScanner.1#next()
	CALLEE: org.glassfish.jersey.server.internal.scanning.JarFileScanner.1#close()
	CALLEE: org.eclipse.jetty.util.resource.JarResource.1#close()
	CALLEE: static jersey.repackaged.com.google.common.collect.Sets#newHashSet()
	CALLEE: org.glassfish.jersey.server.internal.scanning.PackageNamesScanner#<init>(java.lang.String[],boolean)
	CALLEE: static org.glassfish.jersey.internal.util.PropertiesHelper#isProperty(java.lang.Object)
	CALLEE: static jersey.repackaged.com.google.common.collect.Sets#newHashSet(java.lang.Iterable)
	CALLEE: org.glassfish.jersey.server.ResourceConfig.State#getResourceFinders()
	CALLEE: org.glassfish.jersey.server.ResourceConfig#parsePropertyValue(java.lang.String)
	CALLEE: org.glassfish.jersey.server.ResourceConfig.State#getClassLoader()
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#UNABLE_TO_LOAD_CLASS(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.ResourceConfig#getProperty(java.lang.String)
	CALLEE: org.glassfish.jersey.server.internal.scanning.FilesScanner#<init>(java.lang.String[],boolean)
	CALLEE: static org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener#newJaxrsResourceAndProviderListener(java.lang.ClassLoader)
	CALLEE: org.glassfish.jersey.server.internal.scanning.PackageNamesScanner#hasNext()
	CALLEE: org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.VfsResourceFinder#hasNext()
	CALLEE: org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.JarZipSchemeScanner#hasNext()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeScanner#hasNext()
	CALLEE: org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory.BundleSchemeScanner#hasNext()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeScanner.1#hasNext()
	CALLEE: org.glassfish.jersey.server.internal.scanning.PackageNamesScanner#next()
	CALLEE: org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.VfsResourceFinder#next()
	CALLEE: org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.JarZipSchemeScanner#next()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeScanner#next()
	CALLEE: org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory.BundleSchemeScanner#next()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeScanner.1#next()
	CALLEE: org.glassfish.jersey.server.internal.scanning.PackageNamesScanner#open()
	CALLEE: org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.VfsResourceFinder#open()
	CALLEE: org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.JarZipSchemeScanner#open()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeScanner#open()
	CALLEE: org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory.BundleSchemeScanner#open()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeScanner.1#open()
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#RESOURCE_CONFIG_UNABLE_TO_PROCESS(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.internal.scanning.FilesScanner#open()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FilesScanner#next()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FilesScanner#hasNext()
	CALLEE: org.glassfish.jersey.servlet.WebAppResourcesScanner#open()
	CALLEE: org.glassfish.jersey.servlet.WebAppResourcesScanner#next()
CALLER: org.glassfish.jersey.model.internal.CommonConfig#getClasses()
	CALLEE: org.glassfish.jersey.model.internal.ComponentBag#getClasses()
CALLER: static jersey.repackaged.com.google.common.collect.Iterators#addAll(java.util.Collection,java.util.Iterator)
	CALLEE: com.fasterxml.jackson.databind.util.EmptyIterator#next()
	CALLEE: com.fasterxml.jackson.databind.util.EmptyIterator#hasNext()
	CALLEE: static jersey.repackaged.com.google.common.base.Preconditions#checkNotNull(java.lang.Object)
	CALLEE: jersey.repackaged.com.google.common.collect.AbstractIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.AbstractIterator#hasNext()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
CALLER: static jersey.repackaged.com.google.common.collect.Iterators#<clinit>()
	CALLEE: jersey.repackaged.com.google.common.collect.Iterators.1#<init>()
	CALLEE: jersey.repackaged.com.google.common.collect.Iterators.2#<init>()
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#localizablePROPERTIES_HELPER_DEPRECATED_PROPERTY_NAME(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.internal.util.ReflectionHelper#getStringToObjectMethodPA(java.lang.Class,java.lang.String)
	CALLEE: org.glassfish.jersey.internal.util.ReflectionHelper.14#<init>(java.lang.Class,java.lang.String)
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#localizablePROPERTIES_HELPER_GET_VALUE_NO_TRANSFORM(java.lang.Object,java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: org.h2.jdbc.JdbcSQLException#setSQL(java.lang.String)
	CALLEE: org.h2.jdbc.JdbcSQLException#buildMessage()
CALLER: static org.eclipse.jetty.io.WriteFlusher.StateType#<clinit>()
	CALLEE: org.eclipse.jetty.io.WriteFlusher.StateType#<init>(java.lang.String,int)
CALLER: org.eclipse.jetty.io.WriteFlusher.IdleState#<init>(org.eclipse.jetty.io.WriteFlusher.1)
	CALLEE: org.eclipse.jetty.io.WriteFlusher.IdleState#<init>()
CALLER: org.eclipse.jetty.io.WriteFlusher.WritingState#<init>(org.eclipse.jetty.io.WriteFlusher.1)
	CALLEE: org.eclipse.jetty.io.WriteFlusher.WritingState#<init>()
CALLER: org.eclipse.jetty.io.WriteFlusher.CompletingState#<init>(org.eclipse.jetty.io.WriteFlusher.1)
	CALLEE: org.eclipse.jetty.io.WriteFlusher.CompletingState#<init>()
CALLER: static org.glassfish.hk2.api.DescriptorType#<clinit>()
	CALLEE: org.glassfish.hk2.api.DescriptorType#<init>(java.lang.String,int)
CALLER: static org.glassfish.hk2.api.DescriptorVisibility#<clinit>()
	CALLEE: org.glassfish.hk2.api.DescriptorVisibility#<init>(java.lang.String,int)
CALLER: static org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#createFactoryBinder(java.lang.Class,java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#<init>(java.lang.Class,java.lang.Class)
CALLER: org.glassfish.jersey.internal.inject.ReferencingFactory.EmptyReferenceFactory#<init>(org.glassfish.jersey.internal.inject.ReferencingFactory.1)
	CALLEE: org.glassfish.jersey.internal.inject.ReferencingFactory.EmptyReferenceFactory#<init>()
CALLER: static org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#createFactoryBinder(org.glassfish.hk2.api.Factory)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#<init>(org.glassfish.hk2.api.Factory)
CALLER: static jersey.repackaged.com.google.common.collect.Maps#newHashMapWithExpectedSize(int)
	CALLEE: static jersey.repackaged.com.google.common.collect.Maps#capacity(int)
CALLER: static org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#create(java.lang.Object)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#<init>(java.lang.Object)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBinder#getDefaultBinderLoader()
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder.1#<init>(org.glassfish.hk2.utilities.binding.AbstractBinder)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder.2#<init>(org.glassfish.hk2.utilities.binding.AbstractBinder,java.lang.ClassLoader)
CALLER: static org.jvnet.hk2.component.MultiMap#<clinit>()
	CALLEE: org.jvnet.hk2.component.MultiMap.1#<init>()
CALLER: org.glassfish.jersey.model.internal.ComponentBag#copy()
	CALLEE: static jersey.repackaged.com.google.common.collect.Sets#newLinkedHashSet(java.lang.Iterable)
	CALLEE: org.glassfish.jersey.model.internal.ComponentBag#<init>(jersey.repackaged.com.google.common.base.Predicate,java.util.Set,java.util.Set,java.util.Map)
CALLER: org.glassfish.jersey.model.internal.CommonConfig#copy(org.glassfish.jersey.model.internal.CommonConfig,boolean)
	CALLEE: org.glassfish.jersey.model.internal.ComponentBag#loadFrom(org.glassfish.jersey.model.internal.ComponentBag)
CALLER: static jersey.repackaged.com.google.common.collect.Sets#newHashSet(java.util.Iterator)
	CALLEE: static jersey.repackaged.com.google.common.collect.Sets#newHashSet()
	CALLEE: static jersey.repackaged.com.google.common.collect.Iterators#addAll(java.util.Collection,java.util.Iterator)
CALLER: static jersey.repackaged.com.google.common.collect.Sets#filter(java.util.NavigableSet,jersey.repackaged.com.google.common.base.Predicate)
	CALLEE: static jersey.repackaged.com.google.common.base.Preconditions#checkNotNull(java.lang.Object)
	CALLEE: static jersey.repackaged.com.google.common.base.Predicates#and(jersey.repackaged.com.google.common.base.Predicate,jersey.repackaged.com.google.common.base.Predicate)
	CALLEE: jersey.repackaged.com.google.common.collect.Sets.FilteredNavigableSet#<init>(java.util.NavigableSet,jersey.repackaged.com.google.common.base.Predicate)
CALLER: static jersey.repackaged.com.google.common.collect.Sets#filterSortedIgnoreNavigable(java.util.SortedSet,jersey.repackaged.com.google.common.base.Predicate)
	CALLEE: static jersey.repackaged.com.google.common.base.Preconditions#checkNotNull(java.lang.Object)
	CALLEE: static jersey.repackaged.com.google.common.base.Predicates#and(jersey.repackaged.com.google.common.base.Predicate,jersey.repackaged.com.google.common.base.Predicate)
	CALLEE: jersey.repackaged.com.google.common.collect.Sets.FilteredSortedSet#<init>(java.util.SortedSet,jersey.repackaged.com.google.common.base.Predicate)
CALLER: org.glassfish.jersey.server.ResourceConfig#parsePropertyValue(java.lang.String)
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig#getProperties()
	CALLEE: static org.glassfish.jersey.internal.util.Tokenizer#tokenize(java.lang.String)
	CALLEE: static org.glassfish.jersey.internal.util.Tokenizer#tokenize(java.lang.String[])
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#UNABLE_TO_LOAD_CLASS(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableUNABLE_TO_LOAD_CLASS(java.lang.Object)
CALLER: org.glassfish.jersey.server.ResourceConfig#getProperty(java.lang.String)
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig#getProperty(java.lang.String)
CALLER: org.glassfish.jersey.server.internal.scanning.FilesScanner#<init>(java.lang.String[],boolean)
	CALLEE: static org.glassfish.jersey.internal.util.Tokenizer#tokenize(java.lang.String[],java.lang.String)
	CALLEE: org.glassfish.jersey.server.internal.AbstractResourceFinderAdapter#<init>()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FilesScanner#init()
CALLER: static org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener#newJaxrsResourceAndProviderListener(java.lang.ClassLoader)
	CALLEE: org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener#<init>(java.lang.ClassLoader,java.lang.Class[])
CALLER: org.glassfish.jersey.server.internal.scanning.PackageNamesScanner#hasNext()
	CALLEE: org.glassfish.jersey.server.internal.scanning.CompositeResourceFinder#hasNext()
CALLER: org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.VfsResourceFinder#hasNext()
	CALLEE: org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.VfsResourceFinder#advance()
CALLER: org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.JarZipSchemeScanner#hasNext()
	CALLEE: org.glassfish.jersey.server.internal.scanning.JarFileScanner#hasNext()
CALLER: org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeScanner#hasNext()
	CALLEE: org.glassfish.jersey.server.internal.scanning.CompositeResourceFinder#hasNext()
CALLER: org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeScanner.1#hasNext()
	CALLEE: static org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeScanner#access$100(org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeScanner)
	CALLEE: static org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeScanner#access$200(org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeScanner,java.io.File)
CALLER: org.glassfish.jersey.server.internal.scanning.PackageNamesScanner#next()
	CALLEE: org.glassfish.jersey.server.internal.scanning.PackageNamesScanner#next()
CALLER: org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.VfsResourceFinder#next()
	CALLEE: org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.VfsResourceFinder#next()
CALLER: org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.JarZipSchemeScanner#next()
	CALLEE: org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.JarZipSchemeScanner#next()
CALLER: org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeScanner#next()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeScanner#next()
CALLER: org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory.BundleSchemeScanner#next()
	CALLEE: org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory.BundleSchemeScanner#next()
CALLER: org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeScanner.1#next()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeScanner.1#next()
CALLER: org.glassfish.jersey.server.internal.scanning.PackageNamesScanner#open()
	CALLEE: org.glassfish.jersey.server.internal.scanning.CompositeResourceFinder#open()
CALLER: org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.VfsResourceFinder#open()
	CALLEE: org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.VfsResourceFinder#invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Class)
CALLER: org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.JarZipSchemeScanner#open()
	CALLEE: org.glassfish.jersey.server.internal.scanning.JarFileScanner#open()
CALLER: org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeScanner#open()
	CALLEE: org.glassfish.jersey.server.internal.scanning.CompositeResourceFinder#open()
CALLER: org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory.BundleSchemeScanner#open()
	CALLEE: org.glassfish.jersey.server.internal.scanning.ResourceFinderException#<init>(java.lang.Throwable)
CALLER: org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeScanner.1#open()
	CALLEE: org.glassfish.jersey.server.internal.scanning.ResourceFinderException#<init>(java.lang.Throwable)
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#RESOURCE_CONFIG_UNABLE_TO_PROCESS(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableRESOURCE_CONFIG_UNABLE_TO_PROCESS(java.lang.Object)
CALLER: jersey.repackaged.com.google.common.collect.Iterators.1#<init>()
	CALLEE: jersey.repackaged.com.google.common.collect.UnmodifiableListIterator#<init>()
CALLER: org.eclipse.jetty.io.WriteFlusher.IdleState#<init>()
	CALLEE: org.eclipse.jetty.io.WriteFlusher.State#<init>(org.eclipse.jetty.io.WriteFlusher.StateType,org.eclipse.jetty.io.WriteFlusher.1)
CALLER: org.eclipse.jetty.io.WriteFlusher.WritingState#<init>()
	CALLEE: org.eclipse.jetty.io.WriteFlusher.State#<init>(org.eclipse.jetty.io.WriteFlusher.StateType,org.eclipse.jetty.io.WriteFlusher.1)
CALLER: org.eclipse.jetty.io.WriteFlusher.CompletingState#<init>()
	CALLEE: org.eclipse.jetty.io.WriteFlusher.State#<init>(org.eclipse.jetty.io.WriteFlusher.StateType,org.eclipse.jetty.io.WriteFlusher.1)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#<init>(java.lang.Class,java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#<init>()
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#<init>(org.glassfish.hk2.api.Factory)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#<init>()
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#<init>(java.lang.Object)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#<init>()
CALLER: jersey.repackaged.com.google.common.collect.Sets.FilteredNavigableSet#<init>(java.util.NavigableSet,jersey.repackaged.com.google.common.base.Predicate)
	CALLEE: jersey.repackaged.com.google.common.collect.Sets.FilteredSortedSet#<init>(java.util.SortedSet,jersey.repackaged.com.google.common.base.Predicate)
CALLER: jersey.repackaged.com.google.common.collect.Sets.FilteredSortedSet#<init>(java.util.SortedSet,jersey.repackaged.com.google.common.base.Predicate)
	CALLEE: jersey.repackaged.com.google.common.collect.Sets.FilteredSet#<init>(java.util.Set,jersey.repackaged.com.google.common.base.Predicate)
CALLER: static org.glassfish.jersey.internal.util.Tokenizer#tokenize(java.lang.String)
	CALLEE: static org.glassfish.jersey.internal.util.Tokenizer#tokenize(java.lang.String,java.lang.String)
CALLER: static org.glassfish.jersey.internal.util.Tokenizer#tokenize(java.lang.String[])
	CALLEE: static org.glassfish.jersey.internal.util.Tokenizer#tokenize(java.lang.String[],java.lang.String)
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableUNABLE_TO_LOAD_CLASS(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: org.glassfish.jersey.server.internal.scanning.FilesScanner#init()
	CALLEE: org.glassfish.jersey.server.internal.scanning.CompositeResourceFinder#<init>()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FilesScanner#processFile(java.io.File)
CALLER: org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener#<init>(java.lang.ClassLoader,java.lang.Class[])
	CALLEE: org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener#getAnnotationSet(java.lang.Class[])
	CALLEE: org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.AnnotatedClassVisitor#<init>(org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener,org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.1)
CALLER: org.glassfish.jersey.server.internal.scanning.CompositeResourceFinder#hasNext()
	CALLEE: org.glassfish.jersey.server.internal.scanning.PackageNamesScanner#hasNext()
	CALLEE: org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.VfsResourceFinder#hasNext()
	CALLEE: org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.JarZipSchemeScanner#hasNext()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeScanner#hasNext()
	CALLEE: org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory.BundleSchemeScanner#hasNext()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeScanner.1#hasNext()
	CALLEE: org.glassfish.jersey.server.internal.scanning.CompositeResourceFinder#hasNext()
	CALLEE: org.glassfish.jersey.server.internal.scanning.JarFileScanner#hasNext()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FilesScanner#hasNext()
	CALLEE: org.glassfish.jersey.servlet.WebAppResourcesScanner#hasNext()
	CALLEE: org.glassfish.jersey.servlet.WebAppResourcesScanner.1#hasNext()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FilesScanner.1#hasNext()
CALLER: org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.VfsResourceFinder#advance()
	CALLEE: org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.VfsResourceFinder#invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Class)
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
CALLER: org.glassfish.jersey.server.internal.scanning.JarFileScanner#hasNext()
	CALLEE: org.glassfish.jersey.server.internal.scanning.JarFileScanner#close()
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#JAR_SCANNER_UNABLE_TO_READ_ENTRY()
CALLER: static org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeScanner#access$200(org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeScanner,java.io.File)
	CALLEE: org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeScanner#processFile(java.io.File)
CALLER: org.glassfish.jersey.server.internal.scanning.PackageNamesScanner#next()
	CALLEE: org.glassfish.jersey.server.internal.scanning.CompositeResourceFinder#next()
CALLER: org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.VfsResourceFinder#next()
	CALLEE: org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.VfsResourceFinder#invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Class)
	CALLEE: org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.VfsResourceFinder#hasNext()
CALLER: org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.JarZipSchemeScanner#next()
	CALLEE: org.glassfish.jersey.server.internal.scanning.JarFileScanner#next()
CALLER: org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeScanner#next()
	CALLEE: org.glassfish.jersey.server.internal.scanning.CompositeResourceFinder#next()
CALLER: org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory.BundleSchemeScanner#next()
	CALLEE: org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory.BundleSchemeScanner#hasNext()
CALLER: org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeScanner.1#next()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeScanner.1#hasNext()
CALLER: org.glassfish.jersey.server.internal.scanning.CompositeResourceFinder#open()
	CALLEE: org.glassfish.jersey.server.internal.scanning.PackageNamesScanner#open()
	CALLEE: org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.VfsResourceFinder#open()
	CALLEE: org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.JarZipSchemeScanner#open()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeScanner#open()
	CALLEE: org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory.BundleSchemeScanner#open()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeScanner.1#open()
	CALLEE: org.glassfish.jersey.server.internal.scanning.JarFileScanner#open()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FilesScanner#open()
	CALLEE: org.glassfish.jersey.servlet.WebAppResourcesScanner#open()
	CALLEE: org.glassfish.jersey.servlet.WebAppResourcesScanner.1#open()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FilesScanner.1#open()
CALLER: org.glassfish.jersey.server.internal.scanning.JarFileScanner#open()
	CALLEE: org.glassfish.jersey.server.internal.scanning.JarFileScanner.1#<init>(org.glassfish.jersey.server.internal.scanning.JarFileScanner)
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableRESOURCE_CONFIG_UNABLE_TO_PROCESS(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: jersey.repackaged.com.google.common.collect.UnmodifiableListIterator#<init>()
	CALLEE: jersey.repackaged.com.google.common.collect.UnmodifiableIterator#<init>()
CALLER: org.eclipse.jetty.io.WriteFlusher.State#<init>(org.eclipse.jetty.io.WriteFlusher.StateType,org.eclipse.jetty.io.WriteFlusher.1)
	CALLEE: org.eclipse.jetty.io.WriteFlusher.State#<init>(org.eclipse.jetty.io.WriteFlusher.StateType)
CALLER: static org.glassfish.jersey.internal.util.Tokenizer#tokenize(java.lang.String,java.lang.String)
	CALLEE: static org.glassfish.jersey.internal.util.Tokenizer#tokenize(java.lang.String,java.lang.String,java.util.Collection)
CALLER: org.glassfish.jersey.server.internal.scanning.FilesScanner#processFile(java.io.File)
	CALLEE: org.glassfish.jersey.server.internal.scanning.CompositeResourceFinder#push(org.glassfish.jersey.server.ResourceFinder)
	CALLEE: org.glassfish.jersey.server.internal.scanning.ResourceFinderException#<init>(java.lang.Throwable)
	CALLEE: org.glassfish.jersey.server.internal.scanning.JarFileScanner#<init>(java.io.InputStream,java.lang.String,boolean)
	CALLEE: org.glassfish.jersey.server.internal.scanning.FilesScanner.1#<init>(org.glassfish.jersey.server.internal.scanning.FilesScanner,java.io.File)
CALLER: org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.AnnotatedClassVisitor#<init>(org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener,org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.1)
	CALLEE: org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.AnnotatedClassVisitor#<init>(org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener)
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#JAR_SCANNER_UNABLE_TO_READ_ENTRY()
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableJAR_SCANNER_UNABLE_TO_READ_ENTRY()
CALLER: org.glassfish.jersey.server.internal.scanning.CompositeResourceFinder#next()
	CALLEE: org.glassfish.jersey.server.internal.scanning.PackageNamesScanner#next()
	CALLEE: org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.VfsResourceFinder#next()
	CALLEE: org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.JarZipSchemeScanner#next()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeScanner#next()
	CALLEE: org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory.BundleSchemeScanner#next()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeScanner.1#next()
	CALLEE: org.glassfish.jersey.server.internal.scanning.CompositeResourceFinder#hasNext()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FilesScanner#next()
	CALLEE: org.glassfish.jersey.servlet.WebAppResourcesScanner#next()
	CALLEE: org.glassfish.jersey.servlet.WebAppResourcesScanner.1#next()
	CALLEE: org.glassfish.jersey.server.internal.scanning.JarFileScanner#next()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FilesScanner.1#next()
CALLER: org.glassfish.jersey.server.internal.scanning.JarFileScanner#next()
	CALLEE: org.glassfish.jersey.server.internal.scanning.JarFileScanner#hasNext()
CALLER: org.glassfish.jersey.server.internal.scanning.FilesScanner.1#<init>(org.glassfish.jersey.server.internal.scanning.FilesScanner,java.io.File)
	CALLEE: org.glassfish.jersey.server.internal.AbstractResourceFinderAdapter#<init>()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FilesScanner.1.1#<init>(org.glassfish.jersey.server.internal.scanning.FilesScanner.1)
CALLER: org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.AnnotatedClassVisitor#<init>(org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassVisitor#<init>(int)
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableJAR_SCANNER_UNABLE_TO_READ_ENTRY()
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: jersey.repackaged.org.objectweb.asm.ClassVisitor#<init>(int)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassVisitor#<init>(int,jersey.repackaged.org.objectweb.asm.ClassVisitor)
CALLER: org.eclipse.jetty.servlet.ServletContextHandler#doStop()
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#doStop()
CALLER: org.eclipse.jetty.webapp.WebAppContext#doStop()
	CALLEE: org.eclipse.jetty.webapp.MetaData#<init>()
	CALLEE: org.eclipse.jetty.servlet.ServletContextHandler#doStop()
	CALLEE: org.eclipse.jetty.webapp.MetaData#clear()
	CALLEE: org.eclipse.jetty.webapp.WebAppContext#setClassLoader(java.lang.ClassLoader)
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#setAvailable(boolean)
CALLER: org.glassfish.jersey.servlet.internal.PersistenceUnitBinder#configure()
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#bind(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#to(org.glassfish.hk2.api.TypeLiteral)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#to(org.glassfish.hk2.api.TypeLiteral)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#to(org.glassfish.hk2.api.TypeLiteral)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#to(org.glassfish.hk2.api.TypeLiteral)
	CALLEE: org.glassfish.jersey.servlet.internal.PersistenceUnitBinder.1#<init>(org.glassfish.jersey.servlet.internal.PersistenceUnitBinder)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#in(java.lang.Class)
CALLER: org.glassfish.jersey.internal.ServiceFinderBinder#configure()
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#bind(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#to(java.lang.Class)
	CALLEE: static org.glassfish.jersey.CommonProperties#getValue(java.util.Map,javax.ws.rs.RuntimeType,java.lang.String,java.lang.Object,java.lang.Class)
	CALLEE: static org.glassfish.jersey.internal.ServiceFinder#find(java.lang.Class,boolean)
	CALLEE: org.glassfish.jersey.internal.ServiceFinder#toClassArray()
CALLER: org.glassfish.jersey.process.internal.RequestScope.Binder#configure()
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#bind(java.lang.Object)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.jersey.process.internal.RequestScope#<init>()
CALLER: org.glassfish.jersey.internal.JerseyErrorService.Binder#configure()
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#bind(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#in(java.lang.Class)
CALLER: org.glassfish.jersey.server.internal.process.ServerProcessingBinder#configure()
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#qualifiedBy(java.lang.annotation.Annotation)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#qualifiedBy(java.lang.annotation.Annotation)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#qualifiedBy(java.lang.annotation.Annotation)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#qualifiedBy(java.lang.annotation.Annotation)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#proxyForSameScope(boolean)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#proxyForSameScope(boolean)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#proxyForSameScope(boolean)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#proxyForSameScope(boolean)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#bindFactory(java.lang.Class)
	CALLEE: static org.glassfish.jersey.internal.inject.ReferencingFactory#referenceFactory()
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#bindFactory(org.glassfish.hk2.api.Factory)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#bind(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#to(org.glassfish.hk2.api.TypeLiteral)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#to(org.glassfish.hk2.api.TypeLiteral)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#to(org.glassfish.hk2.api.TypeLiteral)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#to(org.glassfish.hk2.api.TypeLiteral)
	CALLEE: org.glassfish.jersey.server.internal.process.ServerProcessingBinder.1#<init>(org.glassfish.jersey.server.internal.process.ServerProcessingBinder)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#bindAsContract(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#proxy(boolean)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#proxy(boolean)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#proxy(boolean)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#proxy(boolean)
CALLER: org.glassfish.jersey.internal.inject.ContextInjectionResolver.Binder#configure()
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#bind(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#to(org.glassfish.hk2.api.TypeLiteral)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#to(org.glassfish.hk2.api.TypeLiteral)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#to(org.glassfish.hk2.api.TypeLiteral)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#to(org.glassfish.hk2.api.TypeLiteral)
	CALLEE: org.glassfish.jersey.internal.inject.ContextInjectionResolver.Binder.1#<init>(org.glassfish.jersey.internal.inject.ContextInjectionResolver.Binder)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#in(java.lang.Class)
CALLER: org.glassfish.jersey.server.internal.inject.ParameterInjectionBinder#configure()
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#bind(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#to(org.glassfish.hk2.api.TypeLiteral)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#to(org.glassfish.hk2.api.TypeLiteral)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#to(org.glassfish.hk2.api.TypeLiteral)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#to(org.glassfish.hk2.api.TypeLiteral)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#bindAsContract(java.lang.Class)
	CALLEE: org.glassfish.jersey.server.internal.inject.ParameterInjectionBinder.1#<init>(org.glassfish.jersey.server.internal.inject.ParameterInjectionBinder)
	CALLEE: org.glassfish.jersey.server.internal.inject.ParameterInjectionBinder.2#<init>(org.glassfish.jersey.server.internal.inject.ParameterInjectionBinder)
	CALLEE: org.glassfish.jersey.server.internal.inject.ParameterInjectionBinder.3#<init>(org.glassfish.jersey.server.internal.inject.ParameterInjectionBinder)
	CALLEE: org.glassfish.jersey.server.internal.inject.ParameterInjectionBinder.4#<init>(org.glassfish.jersey.server.internal.inject.ParameterInjectionBinder)
	CALLEE: org.glassfish.jersey.server.internal.inject.ParameterInjectionBinder.5#<init>(org.glassfish.jersey.server.internal.inject.ParameterInjectionBinder)
	CALLEE: org.glassfish.jersey.server.internal.inject.ParameterInjectionBinder.6#<init>(org.glassfish.jersey.server.internal.inject.ParameterInjectionBinder)
	CALLEE: org.glassfish.jersey.server.internal.inject.ParameterInjectionBinder.7#<init>(org.glassfish.jersey.server.internal.inject.ParameterInjectionBinder)
	CALLEE: org.glassfish.jersey.server.internal.inject.ParameterInjectionBinder.8#<init>(org.glassfish.jersey.server.internal.inject.ParameterInjectionBinder)
	CALLEE: org.glassfish.jersey.server.internal.inject.ParameterInjectionBinder.9#<init>(org.glassfish.jersey.server.internal.inject.ParameterInjectionBinder)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#in(java.lang.Class)
CALLER: org.glassfish.jersey.internal.inject.JerseyClassAnalyzer.Binder#configure()
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#bind(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#analyzeWith(java.lang.String)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#analyzeWith(java.lang.String)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#analyzeWith(java.lang.String)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#analyzeWith(java.lang.String)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#named(java.lang.String)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#named(java.lang.String)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#named(java.lang.String)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#named(java.lang.String)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#in(java.lang.Class)
CALLER: org.glassfish.jersey.message.internal.MessagingBinders.MessageBodyProviders#configure()
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#install(org.glassfish.hk2.utilities.Binder[])
	CALLEE: org.glassfish.jersey.internal.ServiceFinderBinder#<init>(java.lang.Class,java.util.Map,javax.ws.rs.RuntimeType)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#bind(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.jersey.message.internal.MessagingBinders.MessageBodyProviders#bindSingletonWorker(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#in(java.lang.Class)
CALLER: org.glassfish.jersey.message.internal.MessageBodyFactory.Binder#configure()
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#bindAsContract(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#in(java.lang.Class)
CALLER: org.glassfish.jersey.internal.ExceptionMapperFactory.Binder#configure()
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#bindAsContract(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#in(java.lang.Class)
CALLER: org.glassfish.jersey.internal.ContextResolverFactory.Binder#configure()
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#bindAsContract(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#in(java.lang.Class)
CALLER: org.glassfish.jersey.internal.JaxrsProviders.Binder#configure()
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#bind(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#in(java.lang.Class)
CALLER: org.glassfish.jersey.server.internal.ProcessingProviders.Binder#configure()
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#bindFactory(java.lang.Class)
	CALLEE: static org.glassfish.jersey.internal.inject.ReferencingFactory#referenceFactory()
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#bindFactory(org.glassfish.hk2.api.Factory)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#to(org.glassfish.hk2.api.TypeLiteral)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#to(org.glassfish.hk2.api.TypeLiteral)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#to(org.glassfish.hk2.api.TypeLiteral)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#to(org.glassfish.hk2.api.TypeLiteral)
	CALLEE: org.glassfish.jersey.server.internal.ProcessingProviders.Binder.1#<init>(org.glassfish.jersey.server.internal.ProcessingProviders.Binder)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#in(java.lang.Class)
CALLER: org.glassfish.jersey.server.model.internal.ResourceModelBinder#configure()
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#bind(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#bindAsContract(java.lang.Class)
CALLER: org.glassfish.jersey.server.internal.JerseyResourceContext.Binder#configure()
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#bindAsContract(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#in(java.lang.Class)
CALLER: org.glassfish.jersey.server.internal.MappableExceptionWrapperInterceptor.Binder#configure()
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#bind(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#in(java.lang.Class)
CALLER: org.glassfish.jersey.server.internal.monitoring.MonitoringContainerListener.Binder#configure()
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#bindAsContract(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#in(java.lang.Class)
CALLER: org.glassfish.jersey.server.ApplicationHandler.3#call()
	CALLEE: org.glassfish.jersey.server.ApplicationHandler.3#call()
CALLER: org.glassfish.jersey.internal.Errors.2#call()
	CALLEE: org.glassfish.jersey.internal.Errors.2#call()
CALLER: com.zaxxer.hikari.pool.HikariPool.2#run()
	CALLEE: static com.zaxxer.hikari.pool.HikariPool#access$200(com.zaxxer.hikari.pool.HikariPool,com.zaxxer.hikari.pool.PoolEntry,java.lang.String,boolean)
CALLER: org.h2.jdbc.JdbcSQLException#printStackTrace()
	CALLEE: org.h2.jdbc.JdbcSQLException#printStackTrace(java.io.PrintStream)
CALLER: org.slf4j.helpers.MarkerIgnoringBase#getName()
	CALLEE: org.slf4j.helpers.NamedLoggerBase#getName()
CALLER: org.slf4j.impl.SimpleLogger#warn(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.impl.SimpleLogger#formatAndLog(int,java.lang.String,java.lang.Object,java.lang.Object)
CALLER: org.slf4j.impl.SimpleLogger#warn(java.lang.String,java.lang.Object)
	CALLEE: org.slf4j.impl.SimpleLogger#formatAndLog(int,java.lang.String,java.lang.Object,java.lang.Object)
CALLER: org.slf4j.impl.SimpleLogger#error(java.lang.String,java.lang.Object[])
	CALLEE: org.slf4j.impl.SimpleLogger#formatAndLog(int,java.lang.String,java.lang.Object[])
CALLER: org.slf4j.impl.SimpleLogger#error(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.impl.SimpleLogger#formatAndLog(int,java.lang.String,java.lang.Object,java.lang.Object)
CALLER: org.slf4j.impl.SimpleLogger#isDebugEnabled()
	CALLEE: org.slf4j.impl.SimpleLogger#isLevelEnabled(int)
CALLER: org.slf4j.impl.SimpleLogger#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.slf4j.impl.SimpleLogger#formatAndLog(int,java.lang.String,java.lang.Object[])
CALLER: org.slf4j.impl.SimpleLogger#info(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.impl.SimpleLogger#formatAndLog(int,java.lang.String,java.lang.Object,java.lang.Object)
CALLER: org.slf4j.impl.SimpleLogger#warn(java.lang.String,java.lang.Object[])
	CALLEE: org.slf4j.impl.SimpleLogger#formatAndLog(int,java.lang.String,java.lang.Object[])
CALLER: org.slf4j.impl.SimpleLogger#error(java.lang.String,java.lang.Throwable)
	CALLEE: org.slf4j.impl.SimpleLogger#log(int,java.lang.String,java.lang.Throwable)
CALLER: org.slf4j.impl.SimpleLogger#info(java.lang.String,java.lang.Object)
	CALLEE: org.slf4j.impl.SimpleLogger#formatAndLog(int,java.lang.String,java.lang.Object,java.lang.Object)
CALLER: org.slf4j.impl.SimpleLogger#debug(java.lang.String)
	CALLEE: org.slf4j.impl.SimpleLogger#log(int,java.lang.String,java.lang.Throwable)
CALLER: org.slf4j.impl.SimpleLogger#debug(java.lang.String,java.lang.Object)
	CALLEE: org.slf4j.impl.SimpleLogger#formatAndLog(int,java.lang.String,java.lang.Object,java.lang.Object)
CALLER: org.slf4j.impl.SimpleLogger#error(java.lang.String,java.lang.Object)
	CALLEE: org.slf4j.impl.SimpleLogger#formatAndLog(int,java.lang.String,java.lang.Object,java.lang.Object)
CALLER: org.slf4j.impl.SimpleLogger#debug(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.impl.SimpleLogger#formatAndLog(int,java.lang.String,java.lang.Object,java.lang.Object)
CALLER: org.slf4j.impl.SimpleLogger#isErrorEnabled()
	CALLEE: org.slf4j.impl.SimpleLogger#isLevelEnabled(int)
CALLER: org.eclipse.jetty.server.ShutdownMonitor.ShutdownMonitorRunnable#run()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#isStarted()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#stop()
	CALLEE: org.eclipse.jetty.util.MultiException#toString()
	CALLEE: org.eclipse.jetty.server.handler.HandlerCollection#destroy()
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#destroy()
	CALLEE: org.eclipse.jetty.server.handler.AbstractHandler#destroy()
	CALLEE: org.eclipse.jetty.server.handler.HandlerWrapper#destroy()
	CALLEE: org.eclipse.jetty.webapp.WebAppContext#destroy()
	CALLEE: org.h2.jdbc.JdbcSQLException#toString()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#toString()
	CALLEE: org.glassfish.hk2.api.MultiException#toString()
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#toString()
	CALLEE: static org.eclipse.jetty.server.ShutdownMonitor#access$100(org.eclipse.jetty.server.ShutdownMonitor)
	CALLEE: static org.eclipse.jetty.server.ShutdownMonitor#access$200(org.eclipse.jetty.server.ShutdownMonitor)
	CALLEE: static org.eclipse.jetty.server.ShutdownMonitor#access$300(org.eclipse.jetty.server.ShutdownMonitor,java.lang.String,java.lang.Object[])
	CALLEE: static org.eclipse.jetty.server.ShutdownMonitor#access$600(org.eclipse.jetty.server.ShutdownMonitor,java.lang.Throwable)
	CALLEE: static org.eclipse.jetty.server.ShutdownMonitor#access$700(org.eclipse.jetty.server.ShutdownMonitor,java.net.Socket)
	CALLEE: static org.eclipse.jetty.server.ShutdownMonitor#access$400(org.eclipse.jetty.server.ShutdownMonitor)
	CALLEE: static org.eclipse.jetty.util.thread.ShutdownThread#isRegistered(org.eclipse.jetty.util.component.LifeCycle)
	CALLEE: static org.eclipse.jetty.server.ShutdownMonitor#access$500(org.eclipse.jetty.server.ShutdownMonitor)
	CALLEE: org.eclipse.jetty.server.ShutdownMonitor.ShutdownMonitorRunnable#stopInput(java.net.Socket)
	CALLEE: org.eclipse.jetty.server.ShutdownMonitor.ShutdownMonitorRunnable#informClient(java.io.OutputStream,java.lang.String)
	CALLEE: org.eclipse.jetty.server.ShutdownMonitor.ShutdownMonitorRunnable#stopOutput(java.net.Socket)
	CALLEE: org.eclipse.jetty.server.ShutdownMonitor.ShutdownMonitorRunnable#stopLifeCycles(boolean)
CALLER: liquibase.database.jvm.JdbcConnection#commit()
	CALLEE: liquibase.exception.DatabaseException#<init>(java.lang.Throwable)
CALLER: org.slf4j.event.EventRecodingLogger#warn(java.lang.String,java.lang.Object)
	CALLEE: org.slf4j.event.EventRecodingLogger#recordEvent(org.slf4j.event.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)
CALLER: org.eclipse.jetty.server.handler.ContextHandler.NoContext#log(java.lang.String,java.lang.Throwable)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#warn(java.lang.String,java.lang.Throwable)
	CALLEE: static org.eclipse.jetty.server.handler.ContextHandler#access$100()
CALLER: org.slf4j.impl.SimpleLogger#info(java.lang.String)
	CALLEE: org.slf4j.impl.SimpleLogger#log(int,java.lang.String,java.lang.Throwable)
CALLER: org.eclipse.jetty.util.AttributesMap#getAttribute(java.lang.String)
	CALLEE: org.eclipse.jetty.util.AttributesMap#map()
CALLER: org.slf4j.event.EventRecodingLogger#info(java.lang.String)
	CALLEE: org.slf4j.event.EventRecodingLogger#recordEvent(org.slf4j.event.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)
CALLER: org.eclipse.jetty.server.HttpConnectionFactory#newConnection(org.eclipse.jetty.server.Connector,org.eclipse.jetty.io.EndPoint)
	CALLEE: org.eclipse.jetty.server.HttpConnection#<init>(org.eclipse.jetty.server.HttpConfiguration,org.eclipse.jetty.server.Connector,org.eclipse.jetty.io.EndPoint)
	CALLEE: org.eclipse.jetty.server.AbstractConnectionFactory#configure(org.eclipse.jetty.io.AbstractConnection,org.eclipse.jetty.server.Connector,org.eclipse.jetty.io.EndPoint)
CALLER: org.glassfish.jersey.internal.ServiceFinder#toArray()
	CALLEE: org.glassfish.jersey.internal.ServiceFinder#iterator()
	CALLEE: org.glassfish.jersey.internal.OsgiRegistry.OsgiServiceFinder.1#next()
	CALLEE: org.glassfish.jersey.internal.ServiceFinder.LazyObjectIterator#next()
	CALLEE: org.glassfish.jersey.internal.OsgiRegistry.OsgiServiceFinder.1#hasNext()
	CALLEE: org.glassfish.jersey.internal.ServiceFinder.LazyObjectIterator#hasNext()
CALLER: org.slf4j.event.EventRecodingLogger#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.slf4j.event.EventRecodingLogger#recordEvent(org.slf4j.event.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)
CALLER: org.slf4j.event.EventRecodingLogger#info(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.event.EventRecodingLogger#recordEvent(org.slf4j.event.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)
CALLER: org.slf4j.event.EventRecodingLogger#debug(java.lang.String)
	CALLEE: org.slf4j.event.EventRecodingLogger#recordEvent(org.slf4j.event.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)
CALLER: org.slf4j.event.EventRecodingLogger#debug(java.lang.String,java.lang.Object)
	CALLEE: org.slf4j.event.EventRecodingLogger#recordEvent(org.slf4j.event.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)
CALLER: org.slf4j.event.EventRecodingLogger#debug(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.event.EventRecodingLogger#recordEvent(org.slf4j.event.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)
CALLER: com.fasterxml.jackson.databind.ObjectMapper#readValue(java.lang.String,java.lang.Class)
	CALLEE: com.fasterxml.jackson.core.JsonFactory#createParser(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#constructType(java.lang.reflect.Type)
	CALLEE: com.fasterxml.jackson.databind.ObjectMapper#_readMapAndClose(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType)
CALLER: org.slf4j.event.EventRecodingLogger#error(java.lang.String,java.lang.Object[])
	CALLEE: org.slf4j.event.EventRecodingLogger#recordEvent(org.slf4j.event.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)
CALLER: org.slf4j.event.EventRecodingLogger#warn(java.lang.String,java.lang.Object[])
	CALLEE: org.slf4j.event.EventRecodingLogger#recordEvent(org.slf4j.event.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)
CALLER: org.slf4j.event.EventRecodingLogger#info(java.lang.String,java.lang.Object)
	CALLEE: org.slf4j.event.EventRecodingLogger#recordEvent(org.slf4j.event.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)
CALLER: org.slf4j.event.EventRecodingLogger#warn(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.event.EventRecodingLogger#recordEvent(org.slf4j.event.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)
CALLER: org.slf4j.event.EventRecodingLogger#error(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.event.EventRecodingLogger#recordEvent(org.slf4j.event.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)
CALLER: org.slf4j.event.EventRecodingLogger#error(java.lang.String,java.lang.Throwable)
	CALLEE: org.slf4j.event.EventRecodingLogger#recordEvent(org.slf4j.event.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)
CALLER: org.glassfish.jersey.internal.util.collection.Values.LazyValueImpl#get()
	CALLEE: org.glassfish.jersey.internal.util.collection.Values.1#get()
	CALLEE: org.glassfish.jersey.server.ApplicationHandler.4#get()
	CALLEE: static org.glassfish.jersey.internal.util.collection.Values#of(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.util.collection.Values.InstanceValue#get()
	CALLEE: org.glassfish.jersey.server.model.ResourceModel.1#get()
	CALLEE: org.glassfish.jersey.server.model.Resource.2#get()
	CALLEE: org.glassfish.jersey.server.internal.routing.RuntimeModelBuilder.1#get()
CALLER: org.glassfish.hk2.internal.ServiceLocatorFactoryImpl#create(java.lang.String,org.glassfish.hk2.api.ServiceLocator,org.glassfish.hk2.extension.ServiceLocatorGenerator,org.glassfish.hk2.api.ServiceLocatorFactory.CreatePolicy)
	CALLEE: static org.glassfish.hk2.utilities.reflection.Logger#getLogger()
	CALLEE: static org.glassfish.hk2.internal.ServiceLocatorFactoryImpl#getGeneratedName()
	CALLEE: org.glassfish.hk2.internal.ServiceLocatorFactoryImpl#internalCreate(java.lang.String,org.glassfish.hk2.api.ServiceLocator,org.glassfish.hk2.extension.ServiceLocatorGenerator)
	CALLEE: org.glassfish.hk2.internal.ServiceLocatorFactoryImpl#callListenerAdded(org.glassfish.hk2.api.ServiceLocator)
	CALLEE: org.glassfish.hk2.internal.ServiceLocatorFactoryImpl#destroy(org.glassfish.hk2.api.ServiceLocator)
	CALLEE: org.glassfish.hk2.utilities.reflection.Logger#debug(java.lang.String,java.lang.Throwable)
	CALLEE: org.glassfish.hk2.utilities.reflection.Logger#debug(java.lang.String)
CALLER: org.eclipse.jetty.io.SelectChannelEndPoint#onOpen()
	CALLEE: org.eclipse.jetty.io.AbstractEndPoint#onOpen()
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#complete(org.glassfish.hk2.api.DynamicConfiguration,org.glassfish.hk2.api.HK2Loader)
	CALLEE: org.glassfish.hk2.internal.ActiveDescriptorBuilderImpl#analyzeWith(java.lang.String)
	CALLEE: org.glassfish.hk2.internal.ActiveDescriptorBuilderImpl#build()
	CALLEE: org.glassfish.hk2.internal.ActiveDescriptorBuilderImpl#proxyForSameScope(boolean)
	CALLEE: org.glassfish.hk2.internal.ActiveDescriptorBuilderImpl#proxy(boolean)
	CALLEE: org.glassfish.hk2.internal.ActiveDescriptorBuilderImpl#to(java.lang.reflect.Type)
	CALLEE: org.glassfish.hk2.internal.ActiveDescriptorBuilderImpl#qualifiedBy(java.lang.annotation.Annotation)
	CALLEE: org.glassfish.hk2.internal.ActiveDescriptorBuilderImpl#has(java.lang.String,java.lang.String)
	CALLEE: org.glassfish.hk2.internal.ActiveDescriptorBuilderImpl#ofRank(int)
	CALLEE: org.glassfish.hk2.internal.ActiveDescriptorBuilderImpl#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.internal.ActiveDescriptorBuilderImpl#in(java.lang.annotation.Annotation)
	CALLEE: static org.glassfish.hk2.utilities.BuilderHelper#activeLink(java.lang.Class)
	CALLEE: org.jvnet.hk2.component.MultiMap#keySet()
	CALLEE: org.jvnet.hk2.component.MultiMap#get(java.lang.Object)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#bind(org.glassfish.hk2.api.Descriptor,boolean)
	CALLEE: org.glassfish.hk2.internal.ActiveDescriptorBuilderImpl#named(java.lang.String)
	CALLEE: org.glassfish.hk2.internal.ActiveDescriptorBuilderImpl#andLoadWith(org.glassfish.hk2.api.HK2Loader)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#complete(org.glassfish.hk2.api.DynamicConfiguration,org.glassfish.hk2.api.HK2Loader)
	CALLEE: org.glassfish.hk2.utilities.DescriptorImpl#addMetadata(java.lang.String,java.lang.String)
	CALLEE: org.glassfish.hk2.utilities.AbstractActiveDescriptor#addQualifierAnnotation(java.lang.annotation.Annotation)
	CALLEE: org.glassfish.hk2.utilities.AbstractActiveDescriptor#addContractType(java.lang.reflect.Type)
	CALLEE: org.glassfish.hk2.utilities.DescriptorImpl#setLoader(org.glassfish.hk2.api.HK2Loader)
	CALLEE: org.glassfish.hk2.internal.ActiveDescriptorBuilderImpl#andLoadWith(org.glassfish.hk2.api.HK2Loader)
	CALLEE: org.glassfish.hk2.internal.ActiveDescriptorBuilderImpl#analyzeWith(java.lang.String)
	CALLEE: org.glassfish.hk2.internal.ActiveDescriptorBuilderImpl#proxyForSameScope(boolean)
	CALLEE: org.glassfish.hk2.internal.ActiveDescriptorBuilderImpl#proxy(boolean)
	CALLEE: org.glassfish.hk2.internal.ActiveDescriptorBuilderImpl#to(java.lang.reflect.Type)
	CALLEE: org.glassfish.hk2.internal.ActiveDescriptorBuilderImpl#qualifiedBy(java.lang.annotation.Annotation)
	CALLEE: org.glassfish.hk2.internal.ActiveDescriptorBuilderImpl#has(java.lang.String,java.lang.String)
	CALLEE: org.glassfish.hk2.internal.ActiveDescriptorBuilderImpl#ofRank(int)
	CALLEE: org.glassfish.hk2.internal.ActiveDescriptorBuilderImpl#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.internal.ActiveDescriptorBuilderImpl#buildProvideMethod()
	CALLEE: static org.glassfish.hk2.utilities.BuilderHelper#activeLink(java.lang.Class)
	CALLEE: org.jvnet.hk2.component.MultiMap#keySet()
	CALLEE: org.jvnet.hk2.component.MultiMap#get(java.lang.Object)
	CALLEE: static org.glassfish.hk2.utilities.BuilderHelper#createConstantDescriptor(java.lang.Object)
	CALLEE: org.glassfish.hk2.utilities.reflection.ParameterizedTypeImpl#<init>(java.lang.reflect.Type,java.lang.reflect.Type[])
	CALLEE: org.glassfish.hk2.utilities.FactoryDescriptorsImpl#<init>(org.glassfish.hk2.api.Descriptor,org.glassfish.hk2.api.Descriptor)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#bind(org.glassfish.hk2.api.FactoryDescriptors)
	CALLEE: org.glassfish.hk2.internal.ActiveDescriptorBuilderImpl#named(java.lang.String)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#complete(org.glassfish.hk2.api.DynamicConfiguration,org.glassfish.hk2.api.HK2Loader)
	CALLEE: org.glassfish.hk2.utilities.DescriptorImpl#setRanking(int)
	CALLEE: org.glassfish.hk2.utilities.AbstractActiveDescriptor#setName(java.lang.String)
	CALLEE: org.glassfish.hk2.utilities.DescriptorImpl#setScope(java.lang.String)
	CALLEE: org.glassfish.hk2.utilities.DescriptorImpl#setClassAnalysisName(java.lang.String)
	CALLEE: org.glassfish.hk2.utilities.DescriptorImpl#addMetadata(java.lang.String,java.lang.String)
	CALLEE: org.glassfish.hk2.utilities.DescriptorImpl#setLoader(org.glassfish.hk2.api.HK2Loader)
	CALLEE: org.jvnet.hk2.component.MultiMap#keySet()
	CALLEE: org.jvnet.hk2.component.MultiMap#get(java.lang.Object)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#bind(org.glassfish.hk2.api.Descriptor,boolean)
	CALLEE: static org.glassfish.hk2.utilities.BuilderHelper#createConstantDescriptor(java.lang.Object)
	CALLEE: org.glassfish.hk2.utilities.DescriptorImpl#setProxiable(java.lang.Boolean)
	CALLEE: org.glassfish.hk2.utilities.DescriptorImpl#setProxyForSameScope(java.lang.Boolean)
	CALLEE: org.glassfish.hk2.utilities.AbstractActiveDescriptor#addQualifierAnnotation(java.lang.annotation.Annotation)
	CALLEE: org.glassfish.hk2.utilities.AbstractActiveDescriptor#addContractType(java.lang.reflect.Type)
CALLER: org.glassfish.jersey.server.internal.scanning.FilesScanner#reset()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FilesScanner#init()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FilesScanner#close()
CALLER: org.glassfish.jersey.server.internal.scanning.FilesScanner#open()
	CALLEE: org.glassfish.jersey.server.internal.scanning.CompositeResourceFinder#open()
CALLER: org.glassfish.jersey.server.internal.scanning.FilesScanner#next()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FilesScanner#next()
CALLER: org.glassfish.jersey.server.internal.scanning.FilesScanner#hasNext()
	CALLEE: org.glassfish.jersey.server.internal.scanning.CompositeResourceFinder#hasNext()
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#complete(org.glassfish.hk2.api.DynamicConfiguration,org.glassfish.hk2.api.HK2Loader)
	CALLEE: org.glassfish.hk2.internal.ActiveDescriptorBuilderImpl#andLoadWith(org.glassfish.hk2.api.HK2Loader)
	CALLEE: org.glassfish.hk2.internal.ActiveDescriptorBuilderImpl#analyzeWith(java.lang.String)
	CALLEE: org.glassfish.hk2.internal.ActiveDescriptorBuilderImpl#build()
	CALLEE: org.glassfish.hk2.internal.ActiveDescriptorBuilderImpl#proxyForSameScope(boolean)
	CALLEE: org.glassfish.hk2.internal.ActiveDescriptorBuilderImpl#proxy(boolean)
	CALLEE: org.glassfish.hk2.internal.ActiveDescriptorBuilderImpl#to(java.lang.reflect.Type)
	CALLEE: org.glassfish.hk2.internal.ActiveDescriptorBuilderImpl#qualifiedBy(java.lang.annotation.Annotation)
	CALLEE: org.glassfish.hk2.internal.ActiveDescriptorBuilderImpl#has(java.lang.String,java.lang.String)
	CALLEE: org.glassfish.hk2.internal.ActiveDescriptorBuilderImpl#ofRank(int)
	CALLEE: org.glassfish.hk2.internal.ActiveDescriptorBuilderImpl#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.internal.ActiveDescriptorBuilderImpl#buildProvideMethod()
	CALLEE: static org.glassfish.hk2.utilities.BuilderHelper#activeLink(java.lang.Class)
	CALLEE: org.jvnet.hk2.component.MultiMap#keySet()
	CALLEE: org.jvnet.hk2.component.MultiMap#get(java.lang.Object)
	CALLEE: org.glassfish.hk2.utilities.reflection.ParameterizedTypeImpl#<init>(java.lang.reflect.Type,java.lang.reflect.Type[])
	CALLEE: org.glassfish.hk2.utilities.FactoryDescriptorsImpl#<init>(org.glassfish.hk2.api.Descriptor,org.glassfish.hk2.api.Descriptor)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#bind(org.glassfish.hk2.api.FactoryDescriptors)
	CALLEE: org.glassfish.hk2.internal.ActiveDescriptorBuilderImpl#named(java.lang.String)
CALLER: org.glassfish.jersey.model.internal.ComponentBag#loadFrom(org.glassfish.jersey.model.internal.ComponentBag)
	CALLEE: org.glassfish.jersey.model.internal.ComponentBag#clear()
CALLER: org.glassfish.jersey.servlet.WebAppResourcesScanner#reset()
	CALLEE: org.glassfish.jersey.server.internal.scanning.CompositeResourceFinder#<init>()
	CALLEE: org.glassfish.jersey.servlet.WebAppResourcesScanner#processPaths(java.lang.String[])
CALLER: org.glassfish.jersey.servlet.WebAppResourcesScanner#open()
	CALLEE: org.glassfish.jersey.server.internal.scanning.CompositeResourceFinder#open()
CALLER: org.glassfish.jersey.servlet.WebAppResourcesScanner#next()
	CALLEE: org.glassfish.jersey.servlet.WebAppResourcesScanner#next()
CALLER: org.glassfish.jersey.servlet.WebAppResourcesScanner#hasNext()
	CALLEE: org.glassfish.jersey.server.internal.scanning.CompositeResourceFinder#hasNext()
CALLER: org.glassfish.jersey.server.ResourceConfig.WrappingResourceConfig#_setApplication(javax.ws.rs.core.Application)
	CALLEE: org.glassfish.jersey.server.ResourceConfig.WrappingResourceConfig#mergeApplications(javax.ws.rs.core.Application)
CALLER: org.glassfish.jersey.server.ResourceConfig.WrappingResourceConfig#_getSingletons()
	CALLEE: org.glassfish.jersey.server.ResourceConfig#getSingletons()
	CALLEE: javax.ws.rs.core.Application#getSingletons()
CALLER: org.glassfish.jersey.server.ResourceConfig.RuntimeConfig#_getSingletons()
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig#getInstances()
	CALLEE: static org.glassfish.jersey.server.ResourceConfig#access$000(org.glassfish.jersey.server.ResourceConfig)
CALLER: org.glassfish.jersey.server.ResourceConfig.WrappingResourceConfig#_getClasses()
	CALLEE: static jersey.repackaged.com.google.common.collect.Sets#newHashSet()
	CALLEE: org.glassfish.jersey.server.ResourceConfig#getSingletons()
	CALLEE: org.glassfish.jersey.server.ResourceConfig#getClasses()
	CALLEE: org.glassfish.jersey.server.ResourceConfig#_getClasses()
	CALLEE: javax.ws.rs.core.Application#getClasses()
CALLER: org.glassfish.jersey.server.ResourceConfig.RuntimeConfig#_getClasses()
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig#getClasses()
	CALLEE: static org.glassfish.jersey.server.ResourceConfig#access$000(org.glassfish.jersey.server.ResourceConfig)
CALLER: org.glassfish.jersey.servlet.WebAppResourcesScanner#close()
	CALLEE: org.glassfish.jersey.server.internal.scanning.CompositeResourceFinder#close()
CALLER: org.glassfish.jersey.server.internal.scanning.FilesScanner#close()
	CALLEE: org.glassfish.jersey.server.internal.scanning.CompositeResourceFinder#close()
CALLER: org.apache.log4j.helpers.AppenderAttachableImpl#removeAllAppenders()
	CALLEE: org.apache.log4j.WriterAppender#close()
	CALLEE: org.apache.log4j.varia.NullAppender#close()
CALLER: org.eclipse.jetty.util.resource.URLResource#getFile()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#ignore(java.lang.Throwable)
	CALLEE: org.eclipse.jetty.util.resource.URLResource#checkConnection()
	CALLEE: org.eclipse.jetty.util.resource.JarFileResource#checkConnection()
	CALLEE: org.eclipse.jetty.util.resource.JarResource#checkConnection()
CALLER: org.eclipse.jetty.servlet.Holder.HolderConfig#getInitParameter(java.lang.String)
	CALLEE: org.eclipse.jetty.servlet.Holder#getInitParameter(java.lang.String)
CALLER: org.eclipse.jetty.servlet.Holder.HolderConfig#getServletContext()
	CALLEE: org.eclipse.jetty.servlet.ServletHandler#getServletContext()
CALLER: org.glassfish.jersey.server.ApplicationHandler#onShutdown(org.glassfish.jersey.server.spi.Container)
	CALLEE: org.glassfish.jersey.server.ApplicationHandler#onShutdown(org.glassfish.jersey.server.spi.Container)
	CALLEE: static org.glassfish.jersey.server.ResourceConfig#unwrapApplication(javax.ws.rs.core.Application)
	CALLEE: static org.glassfish.jersey.internal.inject.Injections#shutdownLocator(org.glassfish.hk2.api.ServiceLocator)
CALLER: org.glassfish.jersey.server.ApplicationHandler#onStartup(org.glassfish.jersey.server.spi.Container)
	CALLEE: org.glassfish.jersey.server.ApplicationHandler#onStartup(org.glassfish.jersey.server.spi.Container)
CALLER: org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener#process(java.lang.String,java.io.InputStream)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#<init>(java.io.InputStream)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#accept(jersey.repackaged.org.objectweb.asm.ClassVisitor,int)
CALLER: com.zaxxer.hikari.pool.PoolEntry#close()
	CALLEE: org.slf4j.helpers.NOPLogger#warn(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.helpers.SubstituteLogger#warn(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.impl.SimpleLogger#warn(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: com.zaxxer.hikari.pool.PoolEntry#getPoolName()
CALLER: org.apache.log4j.AppenderSkeleton#doAppend(org.apache.log4j.spi.LoggingEvent)
	CALLEE: static org.apache.log4j.helpers.LogLog#error(java.lang.String)
	CALLEE: org.apache.log4j.spi.LoggingEvent#getLevel()
	CALLEE: org.apache.log4j.AppenderSkeleton#isAsSevereAsThreshold(org.apache.log4j.Priority)
	CALLEE: org.apache.log4j.WriterAppender#append(org.apache.log4j.spi.LoggingEvent)
	CALLEE: org.apache.log4j.varia.NullAppender#append(org.apache.log4j.spi.LoggingEvent)
CALLER: com.zaxxer.hikari.pool.PoolEntry#toString()
	CALLEE: com.zaxxer.hikari.util.ClockSource.MillisecondClockSource#currentTime()
	CALLEE: com.zaxxer.hikari.util.ClockSource.NanosecondClockSource#currentTime()
	CALLEE: com.zaxxer.hikari.util.ClockSource.NanosecondClockSource#elapsedDisplayString(long,long)
	CALLEE: com.zaxxer.hikari.pool.PoolEntry#stateToString()
CALLER: com.zaxxer.hikari.pool.PoolEntry#createProxyConnection(com.zaxxer.hikari.pool.ProxyLeakTask,long)
	CALLEE: static com.zaxxer.hikari.pool.ProxyFactory#getProxyConnection(com.zaxxer.hikari.pool.PoolEntry,java.sql.Connection,com.zaxxer.hikari.util.FastList,com.zaxxer.hikari.pool.ProxyLeakTask,long,boolean,boolean)
CALLER: jersey.repackaged.com.google.common.collect.Collections2.FilteredCollection#iterator()
	CALLEE: jersey.repackaged.com.google.common.collect.Collections2.FilteredCollection#iterator()
	CALLEE: jersey.repackaged.com.google.common.collect.Collections2.TransformedCollection#iterator()
	CALLEE: static jersey.repackaged.com.google.common.collect.Iterators#filter(java.util.Iterator,jersey.repackaged.com.google.common.base.Predicate)
	CALLEE: jersey.repackaged.com.google.common.collect.Lists.TransformingRandomAccessList#iterator()
CALLER: org.glassfish.jersey.servlet.WebAppResourcesScanner.1#hasNext()
	CALLEE: org.glassfish.jersey.server.internal.scanning.CompositeResourceFinder#push(org.glassfish.jersey.server.ResourceFinder)
	CALLEE: org.glassfish.jersey.server.internal.scanning.ResourceFinderException#<init>(java.lang.Throwable)
	CALLEE: org.glassfish.jersey.server.internal.scanning.JarFileScanner#<init>(java.io.InputStream,java.lang.String,boolean)
	CALLEE: static org.glassfish.jersey.servlet.WebAppResourcesScanner#access$000(org.glassfish.jersey.servlet.WebAppResourcesScanner,java.lang.String[])
	CALLEE: static org.glassfish.jersey.servlet.WebAppResourcesScanner#access$200(org.glassfish.jersey.servlet.WebAppResourcesScanner)
	CALLEE: static org.glassfish.jersey.servlet.WebAppResourcesScanner#access$100(org.glassfish.jersey.servlet.WebAppResourcesScanner)
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler.NoContext#getResourceAsStream(java.lang.String)
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler.Context#getResourceAsStream(java.lang.String)
CALLER: org.glassfish.jersey.server.internal.scanning.FilesScanner.1#hasNext()
	CALLEE: static org.glassfish.jersey.server.internal.scanning.FilesScanner#access$000(org.glassfish.jersey.server.internal.scanning.FilesScanner)
	CALLEE: static org.glassfish.jersey.server.internal.scanning.FilesScanner#access$100(org.glassfish.jersey.server.internal.scanning.FilesScanner,java.io.File)
CALLER: org.glassfish.jersey.servlet.WebAppResourcesScanner.1#open()
	CALLEE: static org.glassfish.jersey.servlet.WebAppResourcesScanner#access$100(org.glassfish.jersey.servlet.WebAppResourcesScanner)
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler.NoContext#getResourceAsStream(java.lang.String)
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler.Context#getResourceAsStream(java.lang.String)
CALLER: org.glassfish.jersey.server.internal.scanning.FilesScanner.1#open()
	CALLEE: org.glassfish.jersey.server.internal.scanning.ResourceFinderException#<init>(java.lang.Throwable)
CALLER: org.glassfish.jersey.servlet.WebAppResourcesScanner.1#next()
	CALLEE: org.glassfish.jersey.servlet.WebAppResourcesScanner.1#next()
CALLER: org.glassfish.jersey.server.internal.scanning.JarFileScanner#next()
	CALLEE: org.glassfish.jersey.server.internal.scanning.JarFileScanner#next()
CALLER: org.glassfish.jersey.server.internal.scanning.FilesScanner.1#next()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FilesScanner.1#next()
CALLER: org.glassfish.jersey.server.internal.scanning.JarFileScanner.1#close()
	CALLEE: static org.glassfish.jersey.server.internal.scanning.JarFileScanner#access$000(org.glassfish.jersey.server.internal.scanning.JarFileScanner)
CALLER: org.eclipse.jetty.io.SelectChannelEndPoint#toString()
	CALLEE: org.eclipse.jetty.io.AbstractEndPoint#toString()
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#to(java.lang.Class)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#to(java.lang.Class)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#to(java.lang.Class)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#to(java.lang.Class)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#to(java.lang.Class)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#to(java.lang.Class)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#to(java.lang.Class)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#to(java.lang.Class)
CALLER: org.slf4j.event.EventRecodingLogger#error(java.lang.String,java.lang.Object)
	CALLEE: org.slf4j.event.EventRecodingLogger#recordEvent(org.slf4j.event.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#to(org.glassfish.hk2.api.TypeLiteral)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#to(org.glassfish.hk2.api.TypeLiteral)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#to(org.glassfish.hk2.api.TypeLiteral)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#to(org.glassfish.hk2.api.TypeLiteral)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#to(org.glassfish.hk2.api.TypeLiteral)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#to(org.glassfish.hk2.api.TypeLiteral)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#to(org.glassfish.hk2.api.TypeLiteral)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#to(org.glassfish.hk2.api.TypeLiteral)
CALLER: org.eclipse.jetty.io.IdleTimeout.1#run()
	CALLEE: org.eclipse.jetty.io.IdleTimeout#checkIdleTimeout()
	CALLEE: org.eclipse.jetty.io.IdleTimeout#getIdleTimeout()
	CALLEE: static org.eclipse.jetty.io.IdleTimeout#access$000(org.eclipse.jetty.io.IdleTimeout,long)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#to(java.lang.reflect.Type)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#to(java.lang.reflect.Type)
CALLER: jersey.repackaged.com.google.common.collect.Collections2.TransformedCollection#size()
	CALLEE: jersey.repackaged.com.google.common.collect.Collections2.TransformedCollection#size()
	CALLEE: jersey.repackaged.com.google.common.collect.Collections2.FilteredCollection#size()
	CALLEE: jersey.repackaged.com.google.common.collect.Lists.TransformingRandomAccessList#size()
	CALLEE: jersey.repackaged.com.google.common.collect.Lists.TransformingSequentialList#size()
CALLER: jersey.repackaged.com.google.common.collect.Collections2.TransformedCollection#iterator()
	CALLEE: jersey.repackaged.com.google.common.collect.Collections2.FilteredCollection#iterator()
	CALLEE: jersey.repackaged.com.google.common.collect.Collections2.TransformedCollection#iterator()
	CALLEE: static jersey.repackaged.com.google.common.collect.Iterators#transform(java.util.Iterator,jersey.repackaged.com.google.common.base.Function)
	CALLEE: jersey.repackaged.com.google.common.collect.Lists.TransformingRandomAccessList#iterator()
CALLER: org.h2.server.web.WebServer#stop()
	CALLEE: static org.h2.message.DbException#traceThrowable(java.lang.Throwable)
	CALLEE: org.h2.server.web.WebServer#traceError(java.lang.Throwable)
	CALLEE: static org.h2.util.New#arrayList(java.util.Collection)
CALLER: org.eclipse.jetty.server.ClassLoaderDump#dump(java.lang.Appendable,java.lang.String)
	CALLEE: org.eclipse.jetty.server.ClassLoaderDump#<init>(java.lang.ClassLoader)
	CALLEE: static org.eclipse.jetty.util.component.ContainerLifeCycle#dump(java.lang.Appendable,java.lang.String,java.util.Collection[])
	CALLEE: static org.eclipse.jetty.util.TypeUtil#asList(java.lang.Object[])
CALLER: org.eclipse.jetty.util.FutureCallback#get(long,java.util.concurrent.TimeUnit)
	CALLEE: org.eclipse.jetty.util.FutureCallback#get(long,java.util.concurrent.TimeUnit)
CALLER: liquibase.changelog.OfflineChangeLogHistoryService#supports(liquibase.database.Database)
	CALLEE: liquibase.database.AbstractJdbcDatabase#getConnection()
CALLER: org.eclipse.jetty.server.handler.ContextHandler#doStop()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#info(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#removeEventListener(java.util.EventListener)
	CALLEE: org.eclipse.jetty.webapp.WebAppContext#removeEventListener(java.util.EventListener)
	CALLEE: org.eclipse.jetty.util.AttributesMap#clearAttributes()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#stop()
	CALLEE: org.eclipse.jetty.server.handler.AbstractHandler#doStop()
	CALLEE: javax.servlet.ServletContextEvent#<init>(javax.servlet.ServletContext)
	CALLEE: org.eclipse.jetty.servlet.ServletContextHandler#callContextDestroyed(javax.servlet.ServletContextListener,javax.servlet.ServletContextEvent)
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#setEventListeners(java.util.EventListener[])
	CALLEE: org.eclipse.jetty.webapp.WebAppContext#setEventListeners(java.util.EventListener[])
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler.Context#getAttributeNames()
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#checkManagedAttribute(java.lang.String,java.lang.Object)
CALLER: org.eclipse.jetty.webapp.WebAppContext#setClassLoader(java.lang.ClassLoader)
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#setClassLoader(java.lang.ClassLoader)
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#getDisplayName()
CALLER: org.eclipse.jetty.server.handler.ContextHandler#setAvailable(boolean)
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#isRunning()
CALLER: org.glassfish.jersey.servlet.internal.PersistenceUnitBinder.1#<init>(org.glassfish.jersey.servlet.internal.PersistenceUnitBinder)
	CALLEE: org.glassfish.hk2.api.TypeLiteral#<init>()
CALLER: static org.glassfish.jersey.CommonProperties#getValue(java.util.Map,javax.ws.rs.RuntimeType,java.lang.String,java.lang.Object,java.lang.Class)
	CALLEE: static org.glassfish.jersey.internal.util.PropertiesHelper#getValue(java.util.Map,javax.ws.rs.RuntimeType,java.lang.String,java.lang.Object,java.lang.Class,java.util.Map)
CALLER: static org.glassfish.jersey.internal.ServiceFinder#find(java.lang.Class,boolean)
	CALLEE: static org.glassfish.jersey.internal.ServiceFinder#_getContextClassLoader()
	CALLEE: static org.glassfish.jersey.internal.ServiceFinder#find(java.lang.Class,java.lang.ClassLoader,boolean)
CALLER: static org.glassfish.jersey.process.internal.RequestScope#<clinit>()
	CALLEE: org.glassfish.jersey.internal.util.ExtendedLogger#<init>(java.util.logging.Logger,java.util.logging.Level)
CALLER: org.glassfish.jersey.server.internal.process.ServerProcessingBinder.1#<init>(org.glassfish.jersey.server.internal.process.ServerProcessingBinder)
	CALLEE: org.glassfish.hk2.api.TypeLiteral#<init>()
CALLER: static org.glassfish.jersey.server.ContainerRequest#<clinit>()
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#ERROR_REQUEST_SET_ENTITY_STREAM_IN_RESPONSE_PHASE()
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#ERROR_REQUEST_SET_SECURITY_CONTEXT_IN_RESPONSE_PHASE()
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#ERROR_REQUEST_ABORT_IN_RESPONSE_PHASE()
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#METHOD_PARAMETER_CANNOT_BE_NULL_OR_EMPTY(java.lang.Object)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#METHOD_PARAMETER_CANNOT_BE_NULL(java.lang.Object)
CALLER: static org.glassfish.jersey.message.internal.InboundMessageContext#<clinit>()
	CALLEE: org.glassfish.jersey.message.internal.InboundMessageContext.1#<init>()
CALLER: static org.glassfish.jersey.spi.AbstractThreadPoolProvider#<clinit>()
	CALLEE: org.glassfish.jersey.internal.util.ExtendedLogger#<init>(java.util.logging.Logger,java.util.logging.Level)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBinder#bindAsContract(java.lang.Class)
	CALLEE: static org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#create(java.lang.Class,boolean)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#resetBuilder(org.glassfish.hk2.utilities.binding.AbstractBindingBuilder)
CALLER: org.glassfish.jersey.internal.inject.ContextInjectionResolver.Binder.1#<init>(org.glassfish.jersey.internal.inject.ContextInjectionResolver.Binder)
	CALLEE: org.glassfish.hk2.api.TypeLiteral#<init>()
CALLER: static org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider#<clinit>()
	CALLEE: org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider.2#<init>()
	CALLEE: org.glassfish.hk2.utilities.cache.Cache#<init>(org.glassfish.hk2.utilities.cache.Computable)
CALLER: org.glassfish.jersey.server.internal.inject.ParameterInjectionBinder.1#<init>(org.glassfish.jersey.server.internal.inject.ParameterInjectionBinder)
	CALLEE: org.glassfish.hk2.api.TypeLiteral#<init>()
CALLER: org.glassfish.jersey.server.internal.inject.ParameterInjectionBinder.2#<init>(org.glassfish.jersey.server.internal.inject.ParameterInjectionBinder)
	CALLEE: org.glassfish.hk2.api.TypeLiteral#<init>()
CALLER: org.glassfish.jersey.server.internal.inject.ParameterInjectionBinder.3#<init>(org.glassfish.jersey.server.internal.inject.ParameterInjectionBinder)
	CALLEE: org.glassfish.hk2.api.TypeLiteral#<init>()
CALLER: org.glassfish.jersey.server.internal.inject.ParameterInjectionBinder.4#<init>(org.glassfish.jersey.server.internal.inject.ParameterInjectionBinder)
	CALLEE: org.glassfish.hk2.api.TypeLiteral#<init>()
CALLER: org.glassfish.jersey.server.internal.inject.ParameterInjectionBinder.5#<init>(org.glassfish.jersey.server.internal.inject.ParameterInjectionBinder)
	CALLEE: org.glassfish.hk2.api.TypeLiteral#<init>()
CALLER: org.glassfish.jersey.server.internal.inject.ParameterInjectionBinder.6#<init>(org.glassfish.jersey.server.internal.inject.ParameterInjectionBinder)
	CALLEE: org.glassfish.hk2.api.TypeLiteral#<init>()
CALLER: org.glassfish.jersey.server.internal.inject.ParameterInjectionBinder.7#<init>(org.glassfish.jersey.server.internal.inject.ParameterInjectionBinder)
	CALLEE: org.glassfish.hk2.api.TypeLiteral#<init>()
CALLER: org.glassfish.jersey.server.internal.inject.ParameterInjectionBinder.8#<init>(org.glassfish.jersey.server.internal.inject.ParameterInjectionBinder)
	CALLEE: org.glassfish.hk2.api.TypeLiteral#<init>()
CALLER: org.glassfish.jersey.server.internal.inject.ParameterInjectionBinder.9#<init>(org.glassfish.jersey.server.internal.inject.ParameterInjectionBinder)
	CALLEE: org.glassfish.hk2.api.TypeLiteral#<init>()
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#analyzeWith(java.lang.String)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#analyzeWith(java.lang.String)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#analyzeWith(java.lang.String)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#analyzeWith(java.lang.String)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#analyzeWith(java.lang.String)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#analyzeWith(java.lang.String)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#analyzeWith(java.lang.String)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#analyzeWith(java.lang.String)
CALLER: org.glassfish.jersey.message.internal.MessagingBinders.MessageBodyProviders#bindSingletonWorker(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#bind(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#in(java.lang.Class)
CALLER: static org.glassfish.jersey.message.internal.RenderedImageProvider#<clinit>()
	CALLEE: javax.ws.rs.core.MediaType#<init>(java.lang.String,java.lang.String)
CALLER: static org.glassfish.jersey.message.internal.MessageBodyFactory#<clinit>()
	CALLEE: org.glassfish.jersey.message.internal.MessageBodyFactory.1#<init>()
	CALLEE: org.glassfish.jersey.message.internal.MessageBodyFactory.2#<init>()
	CALLEE: org.glassfish.jersey.message.internal.MessageBodyFactory.3#<init>()
	CALLEE: org.glassfish.jersey.message.internal.MessageBodyFactory.4#<init>()
CALLER: static org.glassfish.jersey.internal.ContextResolverFactory#<clinit>()
	CALLEE: org.glassfish.jersey.internal.ContextResolverFactory.NullContextResolverAdapter#<init>(org.glassfish.jersey.internal.ContextResolverFactory.1)
CALLER: org.glassfish.jersey.server.internal.ProcessingProviders.Binder.1#<init>(org.glassfish.jersey.server.internal.ProcessingProviders.Binder)
	CALLEE: org.glassfish.hk2.api.TypeLiteral#<init>()
CALLER: static org.glassfish.jersey.server.model.internal.ResourceMethodInvocationHandlerFactory#<clinit>()
	CALLEE: org.glassfish.jersey.server.model.internal.ResourceMethodInvocationHandlerFactory.1#<init>()
CALLER: org.glassfish.jersey.server.ApplicationHandler.3#call()
	CALLEE: org.glassfish.jersey.internal.util.collection.Values.LazyValueImpl#get()
	CALLEE: org.glassfish.jersey.internal.util.collection.Values.1#get()
	CALLEE: static org.glassfish.jersey.server.ApplicationHandler#access$500(org.glassfish.jersey.server.ApplicationHandler,java.lang.Iterable)
CALLER: org.glassfish.jersey.internal.Errors.2#call()
	CALLEE: org.glassfish.jersey.server.ResourceConfig.RuntimeConfig.3#run()
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder.1#run()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethodValidator.1#run()
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder.3#run()
CALLER: static com.zaxxer.hikari.pool.HikariPool#access$200(com.zaxxer.hikari.pool.HikariPool,com.zaxxer.hikari.pool.PoolEntry,java.lang.String,boolean)
	CALLEE: com.zaxxer.hikari.pool.HikariPool#softEvictConnection(com.zaxxer.hikari.pool.PoolEntry,java.lang.String,boolean)
CALLER: org.slf4j.impl.SimpleLogger#formatAndLog(int,java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.impl.SimpleLogger#isLevelEnabled(int)
	CALLEE: org.slf4j.impl.SimpleLogger#log(int,java.lang.String,java.lang.Throwable)
	CALLEE: static org.slf4j.helpers.MessageFormatter#format(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.helpers.FormattingTuple#getThrowable()
	CALLEE: org.slf4j.helpers.FormattingTuple#getMessage()
CALLER: org.slf4j.impl.SimpleLogger#formatAndLog(int,java.lang.String,java.lang.Object[])
	CALLEE: org.slf4j.impl.SimpleLogger#isLevelEnabled(int)
	CALLEE: org.slf4j.impl.SimpleLogger#log(int,java.lang.String,java.lang.Throwable)
	CALLEE: static org.slf4j.helpers.MessageFormatter#arrayFormat(java.lang.String,java.lang.Object[])
	CALLEE: org.slf4j.helpers.FormattingTuple#getThrowable()
	CALLEE: org.slf4j.helpers.FormattingTuple#getMessage()
CALLER: org.slf4j.impl.SimpleLogger#log(int,java.lang.String,java.lang.Throwable)
	CALLEE: org.slf4j.impl.SimpleLogger#isLevelEnabled(int)
	CALLEE: org.slf4j.impl.SimpleLogger#getFormattedDate()
	CALLEE: org.slf4j.impl.SimpleLogger#computeShortName()
	CALLEE: org.slf4j.impl.SimpleLogger#write(java.lang.StringBuilder,java.lang.Throwable)
CALLER: static org.eclipse.jetty.server.ShutdownMonitor#access$700(org.eclipse.jetty.server.ShutdownMonitor,java.net.Socket)
	CALLEE: org.eclipse.jetty.server.ShutdownMonitor#close(java.net.Socket)
CALLER: org.eclipse.jetty.server.ShutdownMonitor.ShutdownMonitorRunnable#stopInput(java.net.Socket)
	CALLEE: static org.eclipse.jetty.server.ShutdownMonitor#access$102(org.eclipse.jetty.server.ShutdownMonitor,java.net.ServerSocket)
	CALLEE: static org.eclipse.jetty.server.ShutdownMonitor#access$100(org.eclipse.jetty.server.ShutdownMonitor)
	CALLEE: static org.eclipse.jetty.server.ShutdownMonitor#access$800(org.eclipse.jetty.server.ShutdownMonitor,java.net.ServerSocket)
	CALLEE: static org.eclipse.jetty.server.ShutdownMonitor#access$900(org.eclipse.jetty.server.ShutdownMonitor,java.net.Socket)
CALLER: org.eclipse.jetty.server.ShutdownMonitor.ShutdownMonitorRunnable#stopOutput(java.net.Socket)
	CALLEE: static org.eclipse.jetty.server.ShutdownMonitor#access$102(org.eclipse.jetty.server.ShutdownMonitor,java.net.ServerSocket)
	CALLEE: static org.eclipse.jetty.server.ShutdownMonitor#access$300(org.eclipse.jetty.server.ShutdownMonitor,java.lang.String,java.lang.Object[])
	CALLEE: static org.eclipse.jetty.server.ShutdownMonitor#access$700(org.eclipse.jetty.server.ShutdownMonitor,java.net.Socket)
CALLER: org.eclipse.jetty.server.ShutdownMonitor.ShutdownMonitorRunnable#stopLifeCycles(boolean)
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#isStarted()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#stop()
	CALLEE: org.eclipse.jetty.server.handler.HandlerCollection#destroy()
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#destroy()
	CALLEE: org.eclipse.jetty.server.handler.AbstractHandler#destroy()
	CALLEE: org.eclipse.jetty.server.handler.HandlerWrapper#destroy()
	CALLEE: org.eclipse.jetty.webapp.WebAppContext#destroy()
	CALLEE: static org.eclipse.jetty.server.ShutdownMonitor#access$600(org.eclipse.jetty.server.ShutdownMonitor,java.lang.Throwable)
	CALLEE: static org.eclipse.jetty.server.ShutdownMonitor#access$400(org.eclipse.jetty.server.ShutdownMonitor)
CALLER: static org.slf4j.event.Level#<clinit>()
	CALLEE: org.slf4j.event.Level#<init>(java.lang.String,int,int,java.lang.String)
CALLER: org.slf4j.event.EventRecodingLogger#recordEvent(org.slf4j.event.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)
	CALLEE: org.slf4j.event.EventRecodingLogger#recordEvent(org.slf4j.event.Level,org.slf4j.Marker,java.lang.String,java.lang.Object[],java.lang.Throwable)
CALLER: static org.eclipse.jetty.server.HttpConnection#<clinit>()
	CALLEE: static org.eclipse.jetty.util.log.Log#getLogger(java.lang.Class)
CALLER: static org.eclipse.jetty.io.AbstractConnection#<clinit>()
	CALLEE: static org.eclipse.jetty.util.log.Log#getLogger(java.lang.Class)
	CALLEE: org.eclipse.jetty.io.AbstractConnection.IdleState#<init>(org.eclipse.jetty.io.AbstractConnection.1)
	CALLEE: org.eclipse.jetty.io.AbstractConnection.FillInterestedState#<init>(org.eclipse.jetty.io.AbstractConnection.1)
	CALLEE: org.eclipse.jetty.io.AbstractConnection.FillingState#<init>(org.eclipse.jetty.io.AbstractConnection.1)
	CALLEE: org.eclipse.jetty.io.AbstractConnection.RefillingState#<init>(org.eclipse.jetty.io.AbstractConnection.1)
	CALLEE: org.eclipse.jetty.io.AbstractConnection.FillingFillInterestedState#<init>(java.lang.String,org.eclipse.jetty.io.AbstractConnection.1)
CALLER: org.eclipse.jetty.server.HttpConnection#<init>(org.eclipse.jetty.server.HttpConfiguration,org.eclipse.jetty.server.Connector,org.eclipse.jetty.io.EndPoint)
	CALLEE: org.eclipse.jetty.server.AbstractConnector#getExecutor()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#isDebugEnabled()
	CALLEE: org.eclipse.jetty.io.AbstractConnection#<init>(org.eclipse.jetty.io.EndPoint,java.util.concurrent.Executor,boolean)
	CALLEE: org.eclipse.jetty.server.HttpConnection.SendCallback#<init>(org.eclipse.jetty.server.HttpConnection,org.eclipse.jetty.server.HttpConnection.1)
	CALLEE: org.eclipse.jetty.server.AbstractConnector#getByteBufferPool()
	CALLEE: org.eclipse.jetty.server.HttpConnection#newHttpGenerator()
	CALLEE: org.eclipse.jetty.server.HttpConnection#newHttpInput()
	CALLEE: org.eclipse.jetty.server.HttpConnection#newHttpChannel(org.eclipse.jetty.server.HttpInput)
	CALLEE: org.eclipse.jetty.server.HttpConnection#newHttpParser()
CALLER: org.eclipse.jetty.server.AbstractConnectionFactory#configure(org.eclipse.jetty.io.AbstractConnection,org.eclipse.jetty.server.Connector,org.eclipse.jetty.io.EndPoint)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#getBeans(java.lang.Class)
	CALLEE: org.eclipse.jetty.server.AbstractConnectionFactory#getInputBufferSize()
	CALLEE: org.eclipse.jetty.io.AbstractConnection#setInputBufferSize(int)
	CALLEE: org.eclipse.jetty.io.AbstractConnection#addListener(org.eclipse.jetty.io.Connection.Listener)
CALLER: org.glassfish.jersey.internal.ServiceFinder#iterator()
	CALLEE: static org.glassfish.jersey.internal.ServiceFinder.ServiceIteratorProvider#access$100()
	CALLEE: org.glassfish.jersey.internal.OsgiRegistry.OsgiServiceFinder#createIterator(java.lang.Class,java.lang.String,java.lang.ClassLoader,boolean)
	CALLEE: org.glassfish.jersey.internal.ServiceFinder.DefaultServiceIteratorProvider#createIterator(java.lang.Class,java.lang.String,java.lang.ClassLoader,boolean)
CALLER: com.fasterxml.jackson.core.JsonFactory#createParser(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.JsonFactory#canUseCharArrays()
	CALLEE: com.fasterxml.jackson.core.JsonFactory#createParser(java.io.Reader)
	CALLEE: com.fasterxml.jackson.core.JsonFactory#_createContext(java.lang.Object,boolean)
	CALLEE: com.fasterxml.jackson.core.JsonFactory#_createParser(char[],int,int,com.fasterxml.jackson.core.io.IOContext,boolean)
	CALLEE: com.fasterxml.jackson.core.io.IOContext#allocTokenBuffer(int)
CALLER: com.fasterxml.jackson.databind.type.TypeFactory#constructType(java.lang.reflect.Type)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#_constructType(java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings)
CALLER: com.fasterxml.jackson.databind.ObjectMapper#_readMapAndClose(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.ObjectMapper#_initForReading(com.fasterxml.jackson.core.JsonParser)
	CALLEE: com.fasterxml.jackson.databind.ObjectMapper#getDeserializationConfig()
	CALLEE: com.fasterxml.jackson.databind.ObjectMapper#createDeserializationContext(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationConfig)
	CALLEE: com.fasterxml.jackson.databind.ObjectMapper#_findRootDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.ObjectMapper#_unwrapAndDeserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.DeserializationConfig#useRootWrapping()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#close()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#clearCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext#checkUnresolvedObjectId()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.NoClassDefFoundDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ByteDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ShortDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.FloatDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.DoubleDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.BooleanDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.CharDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.IntDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.LongDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.LongDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.CharacterDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ByteDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ShortDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.FloatDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigDecimalDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.PrimitiveOrWrapperDeserializer#getNullValue()
CALLER: org.glassfish.jersey.server.ApplicationHandler.4#get()
	CALLEE: org.glassfish.jersey.server.ApplicationHandler.4#get()
CALLER: static org.glassfish.jersey.internal.util.collection.Values#of(java.lang.Object)
	CALLEE: static org.glassfish.jersey.internal.util.collection.Values#empty()
	CALLEE: org.glassfish.jersey.internal.util.collection.Values.InstanceValue#<init>(java.lang.Object)
CALLER: static org.glassfish.hk2.utilities.reflection.Logger#<clinit>()
	CALLEE: org.glassfish.hk2.utilities.reflection.Logger#<init>()
	CALLEE: org.glassfish.hk2.utilities.reflection.Logger.1#<init>()
CALLER: org.glassfish.hk2.internal.ServiceLocatorFactoryImpl#internalCreate(java.lang.String,org.glassfish.hk2.api.ServiceLocator,org.glassfish.hk2.extension.ServiceLocatorGenerator)
	CALLEE: static org.glassfish.hk2.internal.ServiceLocatorFactoryImpl.DefaultGeneratorInitializer#access$200()
CALLER: org.glassfish.hk2.internal.ServiceLocatorFactoryImpl#callListenerAdded(org.glassfish.hk2.api.ServiceLocator)
	CALLEE: static org.glassfish.hk2.utilities.reflection.Logger#getLogger()
	CALLEE: org.glassfish.hk2.utilities.reflection.Logger#debug(java.lang.String,java.lang.String,java.lang.Throwable)
CALLER: org.glassfish.hk2.internal.ServiceLocatorFactoryImpl#destroy(org.glassfish.hk2.api.ServiceLocator)
	CALLEE: org.glassfish.hk2.internal.ServiceLocatorFactoryImpl#destroy(java.lang.String,org.glassfish.hk2.api.ServiceLocator)
CALLER: org.eclipse.jetty.io.AbstractEndPoint#onOpen()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#isDebugEnabled()
	CALLEE: org.eclipse.jetty.io.IdleTimeout#onOpen()
CALLER: static org.glassfish.hk2.utilities.BuilderHelper#activeLink(java.lang.Class)
	CALLEE: org.glassfish.hk2.internal.ActiveDescriptorBuilderImpl#<init>(java.lang.Class)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBinder#bind(org.glassfish.hk2.api.Descriptor,boolean)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#configuration()
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#bind(org.glassfish.hk2.api.Descriptor,boolean)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#setLoader(org.glassfish.hk2.api.Descriptor)
CALLER: static org.glassfish.hk2.utilities.BuilderHelper#createConstantDescriptor(java.lang.Object)
	CALLEE: static org.glassfish.hk2.utilities.reflection.ReflectionHelper#getAdvertisedTypesFromObject(java.lang.Object,java.lang.Class)
	CALLEE: static org.glassfish.hk2.utilities.reflection.ReflectionHelper#getName(java.lang.Class)
	CALLEE: static org.glassfish.hk2.utilities.BuilderHelper#createConstantDescriptor(java.lang.Object,java.lang.String,java.lang.reflect.Type[])
CALLER: org.glassfish.hk2.utilities.FactoryDescriptorsImpl#<init>(org.glassfish.hk2.api.Descriptor,org.glassfish.hk2.api.Descriptor)
	CALLEE: org.glassfish.hk2.utilities.DescriptorImpl#getAdvertisedContracts()
	CALLEE: org.glassfish.hk2.utilities.DescriptorImpl#getDescriptorType()
CALLER: org.glassfish.hk2.utilities.binding.AbstractBinder#bind(org.glassfish.hk2.api.FactoryDescriptors)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#bind(org.glassfish.hk2.api.FactoryDescriptors,boolean)
CALLER: org.glassfish.jersey.server.internal.scanning.FilesScanner#next()
	CALLEE: org.glassfish.jersey.server.internal.scanning.CompositeResourceFinder#next()
CALLER: org.glassfish.jersey.servlet.WebAppResourcesScanner#next()
	CALLEE: org.glassfish.jersey.server.internal.scanning.CompositeResourceFinder#next()
CALLER: org.eclipse.jetty.util.resource.URLResource#checkConnection()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#ignore(java.lang.Throwable)
CALLER: org.eclipse.jetty.util.resource.JarFileResource#checkConnection()
	CALLEE: org.eclipse.jetty.util.resource.JarResource#checkConnection()
CALLER: org.eclipse.jetty.util.resource.JarResource#checkConnection()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#ignore(java.lang.Throwable)
	CALLEE: org.eclipse.jetty.util.resource.URLResource#checkConnection()
	CALLEE: org.eclipse.jetty.util.resource.JarFileResource#newConnection()
	CALLEE: org.eclipse.jetty.util.resource.JarResource#newConnection()
CALLER: static org.glassfish.jersey.server.ResourceConfig#unwrapApplication(javax.ws.rs.core.Application)
	CALLEE: org.glassfish.jersey.server.ResourceConfig#getApplication()
CALLER: static org.glassfish.jersey.internal.inject.Injections#shutdownLocator(org.glassfish.hk2.api.ServiceLocator)
	CALLEE: org.glassfish.hk2.internal.ServiceLocatorFactoryImpl#find(java.lang.String)
	CALLEE: org.glassfish.hk2.internal.ServiceLocatorFactoryImpl#destroy(java.lang.String)
CALLER: jersey.repackaged.org.objectweb.asm.ClassReader#<init>(java.io.InputStream)
	CALLEE: static jersey.repackaged.org.objectweb.asm.ClassReader#readClass(java.io.InputStream,boolean)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#<init>(byte[])
CALLER: jersey.repackaged.org.objectweb.asm.ClassReader#accept(jersey.repackaged.org.objectweb.asm.ClassVisitor,int)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#accept(jersey.repackaged.org.objectweb.asm.ClassVisitor,jersey.repackaged.org.objectweb.asm.Attribute[],int)
CALLER: com.zaxxer.hikari.pool.PoolEntry#getPoolName()
	CALLEE: com.zaxxer.hikari.pool.HikariPool#toString()
CALLER: org.apache.log4j.AppenderSkeleton#isAsSevereAsThreshold(org.apache.log4j.Priority)
	CALLEE: org.apache.log4j.Priority#isGreaterOrEqual(org.apache.log4j.Priority)
CALLER: org.apache.log4j.WriterAppender#append(org.apache.log4j.spi.LoggingEvent)
	CALLEE: org.apache.log4j.WriterAppender#checkEntryConditions()
	CALLEE: org.apache.log4j.DailyRollingFileAppender#subAppend(org.apache.log4j.spi.LoggingEvent)
CALLER: static com.zaxxer.hikari.pool.ProxyFactory#getProxyConnection(com.zaxxer.hikari.pool.PoolEntry,java.sql.Connection,com.zaxxer.hikari.util.FastList,com.zaxxer.hikari.pool.ProxyLeakTask,long,boolean,boolean)
	CALLEE: com.zaxxer.hikari.pool.HikariProxyConnection#<init>(com.zaxxer.hikari.pool.PoolEntry,java.sql.Connection,com.zaxxer.hikari.util.FastList,com.zaxxer.hikari.pool.ProxyLeakTask,long,boolean,boolean)
CALLER: static jersey.repackaged.com.google.common.collect.Iterators#filter(java.util.Iterator,jersey.repackaged.com.google.common.base.Predicate)
	CALLEE: static jersey.repackaged.com.google.common.base.Preconditions#checkNotNull(java.lang.Object)
	CALLEE: jersey.repackaged.com.google.common.collect.Iterators.7#<init>(java.util.Iterator,jersey.repackaged.com.google.common.base.Predicate)
CALLER: static org.glassfish.jersey.servlet.WebAppResourcesScanner#access$000(org.glassfish.jersey.servlet.WebAppResourcesScanner,java.lang.String[])
	CALLEE: org.glassfish.jersey.servlet.WebAppResourcesScanner#processPaths(java.lang.String[])
CALLER: static org.glassfish.jersey.server.internal.scanning.FilesScanner#access$100(org.glassfish.jersey.server.internal.scanning.FilesScanner,java.io.File)
	CALLEE: org.glassfish.jersey.server.internal.scanning.FilesScanner#processFile(java.io.File)
CALLER: org.glassfish.jersey.servlet.WebAppResourcesScanner.1#next()
	CALLEE: org.glassfish.jersey.servlet.WebAppResourcesScanner.1#hasNext()
CALLER: org.glassfish.jersey.server.internal.scanning.FilesScanner.1#next()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FilesScanner.1#hasNext()
CALLER: org.eclipse.jetty.io.AbstractEndPoint#toString()
	CALLEE: org.eclipse.jetty.io.SelectChannelEndPoint#isOpen()
	CALLEE: org.eclipse.jetty.io.IdleTimeout#getIdleTimeout()
	CALLEE: org.eclipse.jetty.io.AbstractEndPoint#getRemoteAddress()
	CALLEE: org.eclipse.jetty.io.AbstractEndPoint#getLocalAddress()
	CALLEE: org.eclipse.jetty.io.ChannelEndPoint#isInputShutdown()
	CALLEE: org.eclipse.jetty.io.ChannelEndPoint#isOutputShutdown()
	CALLEE: org.eclipse.jetty.io.FillInterest#isInterested()
	CALLEE: org.eclipse.jetty.io.WriteFlusher#isInProgress()
	CALLEE: org.eclipse.jetty.io.IdleTimeout#getIdleFor()
	CALLEE: org.eclipse.jetty.io.AbstractEndPoint#getConnection()
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#to(org.glassfish.hk2.api.TypeLiteral)
	CALLEE: org.glassfish.hk2.api.TypeLiteral#getType()
CALLER: org.eclipse.jetty.io.IdleTimeout#checkIdleTimeout()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#isDebugEnabled()
	CALLEE: org.eclipse.jetty.io.SelectChannelEndPoint#isOpen()
	CALLEE: org.eclipse.jetty.io.IdleTimeout#getIdleTimeout()
	CALLEE: org.eclipse.jetty.io.IdleTimeout#getIdleTimestamp()
	CALLEE: org.eclipse.jetty.io.AbstractEndPoint#onIdleExpired(java.util.concurrent.TimeoutException)
	CALLEE: org.eclipse.jetty.io.IdleTimeout#notIdle()
CALLER: static org.eclipse.jetty.io.IdleTimeout#access$000(org.eclipse.jetty.io.IdleTimeout,long)
	CALLEE: org.eclipse.jetty.io.IdleTimeout#scheduleIdleTimeout(long)
CALLER: static jersey.repackaged.com.google.common.collect.Iterators#transform(java.util.Iterator,jersey.repackaged.com.google.common.base.Function)
	CALLEE: static jersey.repackaged.com.google.common.base.Preconditions#checkNotNull(java.lang.Object)
	CALLEE: jersey.repackaged.com.google.common.collect.Iterators.8#<init>(java.util.Iterator,jersey.repackaged.com.google.common.base.Function)
CALLER: static org.eclipse.jetty.server.handler.ContextHandler.Availability#<clinit>()
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler.Availability#<init>(java.lang.String,int)
CALLER: org.eclipse.jetty.servlet.ServletContextHandler#callContextDestroyed(javax.servlet.ServletContextListener,javax.servlet.ServletContextEvent)
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#callContextDestroyed(javax.servlet.ServletContextListener,javax.servlet.ServletContextEvent)
CALLER: org.eclipse.jetty.server.handler.ContextHandler#setEventListeners(java.util.EventListener[])
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#addEventListener(java.util.EventListener)
	CALLEE: org.eclipse.jetty.webapp.WebAppContext#addEventListener(java.util.EventListener)
CALLER: org.eclipse.jetty.webapp.WebAppContext#setEventListeners(java.util.EventListener[])
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#setEventListeners(java.util.EventListener[])
	CALLEE: org.eclipse.jetty.server.session.SessionHandler#clearEventListeners()
CALLER: org.eclipse.jetty.server.handler.ContextHandler.Context#getAttributeNames()
	CALLEE: org.eclipse.jetty.util.AttributesMap#getAttributeNames()
	CALLEE: static org.eclipse.jetty.server.handler.ContextHandler#access$300(org.eclipse.jetty.server.handler.ContextHandler)
CALLER: org.eclipse.jetty.server.handler.ContextHandler#checkManagedAttribute(java.lang.String,java.lang.Object)
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#setManagedAttribute(java.lang.String,java.lang.Object)
CALLER: org.eclipse.jetty.webapp.WebAppContext#removeEventListener(java.util.EventListener)
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#removeEventListener(java.util.EventListener)
	CALLEE: org.eclipse.jetty.server.session.SessionHandler#removeEventListener(java.util.EventListener)
CALLER: org.eclipse.jetty.util.AttributesMap#clearAttributes()
	CALLEE: org.eclipse.jetty.util.AttributesMap#map()
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#ERROR_REQUEST_SET_ENTITY_STREAM_IN_RESPONSE_PHASE()
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableERROR_REQUEST_SET_ENTITY_STREAM_IN_RESPONSE_PHASE()
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#ERROR_REQUEST_SET_SECURITY_CONTEXT_IN_RESPONSE_PHASE()
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableERROR_REQUEST_SET_SECURITY_CONTEXT_IN_RESPONSE_PHASE()
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#ERROR_REQUEST_ABORT_IN_RESPONSE_PHASE()
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableERROR_REQUEST_ABORT_IN_RESPONSE_PHASE()
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#METHOD_PARAMETER_CANNOT_BE_NULL_OR_EMPTY(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableMETHOD_PARAMETER_CANNOT_BE_NULL_OR_EMPTY(java.lang.Object)
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#METHOD_PARAMETER_CANNOT_BE_NULL(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableMETHOD_PARAMETER_CANNOT_BE_NULL(java.lang.Object)
CALLER: static org.glassfish.jersey.message.internal.MediaTypes#<clinit>()
	CALLEE: static javax.ws.rs.core.MediaType#valueOf(java.lang.String)
	CALLEE: org.glassfish.jersey.message.internal.MediaTypes.1#<init>()
	CALLEE: org.glassfish.jersey.message.internal.MediaTypes.2#<init>()
	CALLEE: org.glassfish.jersey.message.internal.AcceptableMediaType#<init>(java.lang.String,java.lang.String)
	CALLEE: org.glassfish.jersey.message.internal.QualitySourceMediaType#<init>(java.lang.String,java.lang.String)
	CALLEE: org.glassfish.jersey.message.internal.MediaTypes.3#<init>()
	CALLEE: org.glassfish.jersey.message.internal.MediaTypes.4#<init>()
CALLER: static org.glassfish.hk2.utilities.cache.Cache#<clinit>()
	CALLEE: org.glassfish.hk2.utilities.cache.Cache.1#<init>()
CALLER: org.glassfish.hk2.utilities.cache.Cache#<init>(org.glassfish.hk2.utilities.cache.Computable)
	CALLEE: org.glassfish.hk2.utilities.cache.Cache#<init>(org.glassfish.hk2.utilities.cache.Computable,org.glassfish.hk2.utilities.cache.Cache.CycleHandler)
CALLER: static org.glassfish.jersey.message.internal.ReaderWriter#<clinit>()
	CALLEE: static org.glassfish.jersey.message.internal.ReaderWriter#getBufferSize()
CALLER: static javax.ws.rs.core.MediaType#<clinit>()
	CALLEE: javax.ws.rs.core.MediaType#<init>(java.lang.String,java.lang.String)
	CALLEE: javax.ws.rs.core.MediaType#<init>()
CALLER: javax.ws.rs.core.MediaType#<init>(java.lang.String,java.lang.String)
	CALLEE: javax.ws.rs.core.MediaType#<init>(java.lang.String,java.lang.String,java.lang.String,java.util.Map)
CALLER: org.glassfish.jersey.internal.ContextResolverFactory.NullContextResolverAdapter#<init>(org.glassfish.jersey.internal.ContextResolverFactory.1)
	CALLEE: org.glassfish.jersey.internal.ContextResolverFactory.NullContextResolverAdapter#<init>()
CALLER: static org.glassfish.jersey.server.ApplicationHandler#access$500(org.glassfish.jersey.server.ApplicationHandler,java.lang.Iterable)
	CALLEE: org.glassfish.jersey.server.ApplicationHandler#initialize(java.lang.Iterable)
CALLER: org.glassfish.jersey.server.ResourceConfig.RuntimeConfig.3#run()
	CALLEE: org.glassfish.jersey.server.ResourceConfig#registerClasses(java.util.Set)
	CALLEE: org.glassfish.jersey.server.ResourceConfig#getSingletons()
	CALLEE: static jersey.repackaged.com.google.common.collect.Sets#filter(java.util.Set,jersey.repackaged.com.google.common.base.Predicate)
	CALLEE: org.glassfish.jersey.server.ResourceConfig#registerInstances(java.util.Set)
	CALLEE: org.glassfish.jersey.server.ResourceConfig#getClasses()
	CALLEE: javax.ws.rs.core.Application#getSingletons()
	CALLEE: javax.ws.rs.core.Application#getClasses()
	CALLEE: org.glassfish.jersey.server.ResourceConfig.RuntimeConfig.3.1#<init>(org.glassfish.jersey.server.ResourceConfig.RuntimeConfig.3)
	CALLEE: org.glassfish.jersey.server.ResourceConfig.RuntimeConfig.3.2#<init>(org.glassfish.jersey.server.ResourceConfig.RuntimeConfig.3)
CALLER: static org.slf4j.helpers.MessageFormatter#format(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: static org.slf4j.helpers.MessageFormatter#arrayFormat(java.lang.String,java.lang.Object[])
CALLER: static org.slf4j.helpers.MessageFormatter#arrayFormat(java.lang.String,java.lang.Object[])
	CALLEE: static org.slf4j.helpers.MessageFormatter#getThrowableCandidate(java.lang.Object[])
	CALLEE: static org.slf4j.helpers.MessageFormatter#trimmedCopy(java.lang.Object[])
	CALLEE: static org.slf4j.helpers.MessageFormatter#arrayFormat(java.lang.String,java.lang.Object[],java.lang.Throwable)
CALLER: org.slf4j.impl.SimpleLogger#write(java.lang.StringBuilder,java.lang.Throwable)
	CALLEE: org.h2.jdbc.JdbcSQLException#printStackTrace(java.io.PrintStream)
	CALLEE: org.glassfish.hk2.api.MultiException#printStackTrace(java.io.PrintStream)
CALLER: org.eclipse.jetty.server.ShutdownMonitor#close(java.net.Socket)
	CALLEE: org.eclipse.jetty.server.ShutdownMonitor#debug(java.lang.Throwable)
CALLER: static org.eclipse.jetty.server.ShutdownMonitor#access$800(org.eclipse.jetty.server.ShutdownMonitor,java.net.ServerSocket)
	CALLEE: org.eclipse.jetty.server.ShutdownMonitor#close(java.net.ServerSocket)
CALLER: static org.eclipse.jetty.server.ShutdownMonitor#access$900(org.eclipse.jetty.server.ShutdownMonitor,java.net.Socket)
	CALLEE: org.eclipse.jetty.server.ShutdownMonitor#shutdownInput(java.net.Socket)
CALLER: org.slf4j.event.EventRecodingLogger#recordEvent(org.slf4j.event.Level,org.slf4j.Marker,java.lang.String,java.lang.Object[],java.lang.Throwable)
	CALLEE: org.slf4j.event.SubstituteLoggingEvent#<init>()
	CALLEE: org.slf4j.event.SubstituteLoggingEvent#setTimeStamp(long)
	CALLEE: org.slf4j.event.SubstituteLoggingEvent#setLevel(org.slf4j.event.Level)
	CALLEE: org.slf4j.event.SubstituteLoggingEvent#setLogger(org.slf4j.helpers.SubstituteLogger)
	CALLEE: org.slf4j.event.SubstituteLoggingEvent#setLoggerName(java.lang.String)
	CALLEE: org.slf4j.event.SubstituteLoggingEvent#setMessage(java.lang.String)
	CALLEE: org.slf4j.event.SubstituteLoggingEvent#setArgumentArray(java.lang.Object[])
	CALLEE: org.slf4j.event.SubstituteLoggingEvent#setThrowable(java.lang.Throwable)
	CALLEE: org.slf4j.event.SubstituteLoggingEvent#setThreadName(java.lang.String)
CALLER: org.eclipse.jetty.io.AbstractConnection.IdleState#<init>(org.eclipse.jetty.io.AbstractConnection.1)
	CALLEE: org.eclipse.jetty.io.AbstractConnection.IdleState#<init>()
CALLER: org.eclipse.jetty.io.AbstractConnection.FillInterestedState#<init>(org.eclipse.jetty.io.AbstractConnection.1)
	CALLEE: org.eclipse.jetty.io.AbstractConnection.FillInterestedState#<init>()
CALLER: org.eclipse.jetty.io.AbstractConnection.FillingState#<init>(org.eclipse.jetty.io.AbstractConnection.1)
	CALLEE: org.eclipse.jetty.io.AbstractConnection.FillingState#<init>()
CALLER: org.eclipse.jetty.io.AbstractConnection.RefillingState#<init>(org.eclipse.jetty.io.AbstractConnection.1)
	CALLEE: org.eclipse.jetty.io.AbstractConnection.RefillingState#<init>()
CALLER: org.eclipse.jetty.io.AbstractConnection.FillingFillInterestedState#<init>(java.lang.String,org.eclipse.jetty.io.AbstractConnection.1)
	CALLEE: org.eclipse.jetty.io.AbstractConnection.FillingFillInterestedState#<init>(java.lang.String)
CALLER: org.eclipse.jetty.io.AbstractConnection#<init>(org.eclipse.jetty.io.EndPoint,java.util.concurrent.Executor,boolean)
	CALLEE: org.eclipse.jetty.io.AbstractConnection.2#<init>(org.eclipse.jetty.io.AbstractConnection)
	CALLEE: org.eclipse.jetty.io.AbstractConnection.ReadCallback#<init>(org.eclipse.jetty.io.AbstractConnection,org.eclipse.jetty.io.AbstractConnection.1)
CALLER: org.eclipse.jetty.server.HttpConnection.SendCallback#<init>(org.eclipse.jetty.server.HttpConnection,org.eclipse.jetty.server.HttpConnection.1)
	CALLEE: org.eclipse.jetty.server.HttpConnection.SendCallback#<init>(org.eclipse.jetty.server.HttpConnection)
CALLER: org.eclipse.jetty.server.HttpConnection#newHttpGenerator()
	CALLEE: org.eclipse.jetty.server.HttpConfiguration#getSendServerVersion()
	CALLEE: org.eclipse.jetty.server.HttpConfiguration#getSendXPoweredBy()
	CALLEE: org.eclipse.jetty.http.HttpGenerator#<init>(boolean,boolean)
CALLER: org.eclipse.jetty.server.HttpConnection#newHttpInput()
	CALLEE: org.eclipse.jetty.server.HttpInputOverHTTP#<init>(org.eclipse.jetty.server.HttpConnection)
CALLER: org.eclipse.jetty.server.HttpConnection#newHttpChannel(org.eclipse.jetty.server.HttpInput)
	CALLEE: org.eclipse.jetty.io.AbstractConnection#getEndPoint()
	CALLEE: org.eclipse.jetty.server.HttpConnection.HttpChannelOverHttp#<init>(org.eclipse.jetty.server.HttpConnection,org.eclipse.jetty.server.Connector,org.eclipse.jetty.server.HttpConfiguration,org.eclipse.jetty.io.EndPoint,org.eclipse.jetty.server.HttpTransport,org.eclipse.jetty.server.HttpInput)
CALLER: org.eclipse.jetty.server.HttpConnection#newHttpParser()
	CALLEE: org.eclipse.jetty.server.HttpConnection#newRequestHandler()
	CALLEE: org.eclipse.jetty.server.HttpConnection#getHttpConfiguration()
	CALLEE: org.eclipse.jetty.http.HttpParser#<init>(org.eclipse.jetty.http.HttpParser.RequestHandler,int)
	CALLEE: org.eclipse.jetty.server.HttpConfiguration#getRequestHeaderSize()
CALLER: static org.glassfish.jersey.internal.ServiceFinder.ServiceIteratorProvider#access$100()
	CALLEE: static org.glassfish.jersey.internal.ServiceFinder.ServiceIteratorProvider#getInstance()
CALLER: com.fasterxml.jackson.core.JsonFactory#createParser(java.io.Reader)
	CALLEE: com.fasterxml.jackson.core.JsonFactory#_createContext(java.lang.Object,boolean)
	CALLEE: com.fasterxml.jackson.core.JsonFactory#_decorate(java.io.Reader,com.fasterxml.jackson.core.io.IOContext)
	CALLEE: com.fasterxml.jackson.core.JsonFactory#_createParser(java.io.Reader,com.fasterxml.jackson.core.io.IOContext)
CALLER: com.fasterxml.jackson.core.JsonFactory#_createContext(java.lang.Object,boolean)
	CALLEE: com.fasterxml.jackson.core.JsonFactory#_getBufferRecycler()
	CALLEE: com.fasterxml.jackson.core.io.IOContext#<init>(com.fasterxml.jackson.core.util.BufferRecycler,java.lang.Object,boolean)
CALLER: com.fasterxml.jackson.core.JsonFactory#_createParser(char[],int,int,com.fasterxml.jackson.core.io.IOContext,boolean)
	CALLEE: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer#makeChild(int)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#<init>(com.fasterxml.jackson.core.io.IOContext,int,java.io.Reader,com.fasterxml.jackson.core.ObjectCodec,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer,char[],int,int,boolean)
CALLER: com.fasterxml.jackson.databind.type.TypeFactory#_constructType(java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#_fromClass(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#_fromParamType(java.lang.reflect.ParameterizedType,com.fasterxml.jackson.databind.type.TypeBindings)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#_fromArrayType(java.lang.reflect.GenericArrayType,com.fasterxml.jackson.databind.type.TypeBindings)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#_fromVariable(java.lang.reflect.TypeVariable,com.fasterxml.jackson.databind.type.TypeBindings)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#_fromWildcard(java.lang.reflect.WildcardType,com.fasterxml.jackson.databind.type.TypeBindings)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#isContainerType()
CALLER: com.fasterxml.jackson.databind.ObjectMapper#_initForReading(com.fasterxml.jackson.core.JsonParser)
	CALLEE: com.fasterxml.jackson.databind.DeserializationConfig#initialize(com.fasterxml.jackson.core.JsonParser)
	CALLEE: static com.fasterxml.jackson.databind.JsonMappingException#from(com.fasterxml.jackson.core.JsonParser,java.lang.String)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
CALLER: static com.fasterxml.jackson.core.JsonToken#<clinit>()
	CALLEE: com.fasterxml.jackson.core.JsonToken#<init>(java.lang.String,int,java.lang.String,int)
CALLER: com.fasterxml.jackson.databind.ObjectMapper#createDeserializationContext(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationConfig)
	CALLEE: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl#createInstance(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.InjectableValues)
CALLER: com.fasterxml.jackson.databind.ObjectMapper#_findRootDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#<init>(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#findRootValueDeserializer(com.fasterxml.jackson.databind.JavaType)
CALLER: com.fasterxml.jackson.databind.ObjectMapper#_unwrapAndDeserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: static com.fasterxml.jackson.databind.JsonMappingException#from(com.fasterxml.jackson.core.JsonParser,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.RootNameLookup#findRootName(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.cfg.MapperConfig)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfigBase#getRootName()
	CALLEE: com.fasterxml.jackson.databind.PropertyName#getSimpleName()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.NoClassDefFoundDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ByteDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ShortDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.FloatDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.DoubleDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.BooleanDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.CharDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.IntDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.LongDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.LongDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.CharacterDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ByteDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ShortDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.FloatDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigDecimalDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: org.glassfish.jersey.server.ApplicationHandler.4#get()
	CALLEE: static org.glassfish.jersey.server.ApplicationHandler#access$600()
	CALLEE: org.glassfish.jersey.model.internal.RankedProvider#getProvider()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
CALLER: static org.glassfish.hk2.internal.ServiceLocatorFactoryImpl.DefaultGeneratorInitializer#<clinit>()
	CALLEE: static org.glassfish.hk2.internal.ServiceLocatorFactoryImpl#access$000()
CALLER: org.glassfish.hk2.internal.ServiceLocatorFactoryImpl#destroy(java.lang.String,org.glassfish.hk2.api.ServiceLocator)
	CALLEE: static org.glassfish.hk2.utilities.reflection.Logger#getLogger()
	CALLEE: org.glassfish.hk2.utilities.reflection.Logger#debug(java.lang.String,java.lang.Throwable)
	CALLEE: org.glassfish.hk2.utilities.reflection.Logger#debug(java.lang.String,java.lang.String,java.lang.Throwable)
CALLER: org.eclipse.jetty.io.IdleTimeout#onOpen()
	CALLEE: org.eclipse.jetty.io.IdleTimeout#activate()
CALLER: org.glassfish.hk2.utilities.binding.AbstractBinder#setLoader(org.glassfish.hk2.api.Descriptor)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#getDefaultBinderLoader()
	CALLEE: org.glassfish.hk2.utilities.DescriptorImpl#setLoader(org.glassfish.hk2.api.HK2Loader)
	CALLEE: org.glassfish.hk2.utilities.DescriptorImpl#getLoader()
CALLER: static org.glassfish.hk2.utilities.reflection.ReflectionHelper#getAdvertisedTypesFromObject(java.lang.Object,java.lang.Class)
	CALLEE: static org.glassfish.hk2.utilities.reflection.ReflectionHelper#getAdvertisedTypesFromClass(java.lang.reflect.Type,java.lang.Class)
CALLER: static org.glassfish.hk2.utilities.reflection.ReflectionHelper#getName(java.lang.Class)
	CALLEE: static org.glassfish.hk2.utilities.reflection.ReflectionHelper#getNamedName(javax.inject.Named,java.lang.Class)
CALLER: static org.glassfish.hk2.utilities.BuilderHelper#createConstantDescriptor(java.lang.Object,java.lang.String,java.lang.reflect.Type[])
	CALLEE: static org.glassfish.hk2.utilities.reflection.ReflectionHelper#getAdvertisedTypesFromObject(java.lang.Object,java.lang.Class)
	CALLEE: static org.glassfish.hk2.utilities.reflection.ReflectionHelper#getScopeAnnotationFromObject(java.lang.Object)
	CALLEE: static org.glassfish.hk2.utilities.reflection.ReflectionHelper#getQualifiersFromObject(java.lang.Object)
	CALLEE: static org.glassfish.hk2.utilities.BuilderHelper#getMetadataValues(java.lang.annotation.Annotation,java.util.Map)
	CALLEE: static org.glassfish.hk2.utilities.BuilderHelper#getRank(java.lang.Class)
	CALLEE: org.glassfish.hk2.internal.ConstantActiveDescriptor#<init>(java.lang.Object,java.util.Set,java.lang.Class,java.lang.String,java.util.Set,org.glassfish.hk2.api.DescriptorVisibility,java.lang.Boolean,java.lang.Boolean,java.lang.String,java.util.Map,int)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBinder#bind(org.glassfish.hk2.api.FactoryDescriptors,boolean)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#configuration()
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#setLoader(org.glassfish.hk2.api.Descriptor)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#bind(org.glassfish.hk2.api.FactoryDescriptors,boolean)
	CALLEE: org.glassfish.hk2.utilities.FactoryDescriptorsImpl#getFactoryAsAService()
	CALLEE: org.glassfish.hk2.utilities.FactoryDescriptorsImpl#getFactoryAsAFactory()
CALLER: org.eclipse.jetty.util.resource.JarFileResource#newConnection()
	CALLEE: org.eclipse.jetty.util.resource.JarResource#newConnection()
CALLER: org.glassfish.hk2.internal.ServiceLocatorFactoryImpl#destroy(java.lang.String)
	CALLEE: org.glassfish.hk2.internal.ServiceLocatorFactoryImpl#destroy(java.lang.String,org.glassfish.hk2.api.ServiceLocator)
CALLER: static jersey.repackaged.org.objectweb.asm.ClassReader#readClass(java.io.InputStream,boolean)
	CALLEE: org.glassfish.jersey.server.internal.scanning.JarFileScanner.1#close()
	CALLEE: org.glassfish.jersey.server.internal.scanning.JarFileScanner.1#available()
	CALLEE: org.glassfish.jersey.server.internal.scanning.JarFileScanner.1#read(byte[],int,int)
	CALLEE: org.glassfish.jersey.server.internal.scanning.JarFileScanner.1#read()
	CALLEE: org.eclipse.jetty.util.resource.JarResource.1#close()
CALLER: jersey.repackaged.org.objectweb.asm.ClassReader#<init>(byte[])
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#<init>(byte[],int,int)
CALLER: jersey.repackaged.org.objectweb.asm.ClassReader#accept(jersey.repackaged.org.objectweb.asm.ClassVisitor,jersey.repackaged.org.objectweb.asm.Attribute[],int)
	CALLEE: jersey.repackaged.org.objectweb.asm.Context#<init>()
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readUnsignedShort(int)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readClass(int,char[])
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#getAttributes()
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readUTF8(int,char[])
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readInt(int)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readUTF(int,int,char[])
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readAttribute(jersey.repackaged.org.objectweb.asm.Attribute[],java.lang.String,int,int,char[],int,jersey.repackaged.org.objectweb.asm.Label[])
	CALLEE: org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.AnnotatedClassVisitor#visit(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])
	CALLEE: org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.AnnotatedClassVisitor#visitSource(java.lang.String,java.lang.String)
	CALLEE: org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.AnnotatedClassVisitor#visitOuterClass(java.lang.String,java.lang.String,java.lang.String)
	CALLEE: org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.AnnotatedClassVisitor#visitAnnotation(java.lang.String,boolean)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readAnnotationValues(int,char[],boolean,jersey.repackaged.org.objectweb.asm.AnnotationVisitor)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readAnnotationTarget(jersey.repackaged.org.objectweb.asm.Context,int)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassVisitor#visitTypeAnnotation(int,jersey.repackaged.org.objectweb.asm.TypePath,java.lang.String,boolean)
	CALLEE: org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.AnnotatedClassVisitor#visitAttribute(jersey.repackaged.org.objectweb.asm.Attribute)
	CALLEE: org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.AnnotatedClassVisitor#visitInnerClass(java.lang.String,java.lang.String,java.lang.String,int)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readField(jersey.repackaged.org.objectweb.asm.ClassVisitor,jersey.repackaged.org.objectweb.asm.Context,int)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readMethod(jersey.repackaged.org.objectweb.asm.ClassVisitor,jersey.repackaged.org.objectweb.asm.Context,int)
	CALLEE: org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.AnnotatedClassVisitor#visitEnd()
CALLER: org.apache.log4j.WriterAppender#checkEntryConditions()
	CALLEE: static org.apache.log4j.helpers.LogLog#warn(java.lang.String)
	CALLEE: org.apache.log4j.helpers.OnlyOnceErrorHandler#error(java.lang.String)
CALLER: org.apache.log4j.DailyRollingFileAppender#subAppend(org.apache.log4j.spi.LoggingEvent)
	CALLEE: static org.apache.log4j.helpers.LogLog#error(java.lang.String,java.lang.Throwable)
	CALLEE: org.apache.log4j.RollingCalendar#getNextCheckMillis(java.util.Date)
	CALLEE: org.apache.log4j.DailyRollingFileAppender#rollOver()
	CALLEE: org.apache.log4j.WriterAppender#subAppend(org.apache.log4j.spi.LoggingEvent)
CALLER: static com.zaxxer.hikari.pool.ProxyConnection#<clinit>()
	CALLEE: static org.slf4j.LoggerFactory#getLogger(java.lang.Class)
CALLER: com.zaxxer.hikari.pool.HikariProxyConnection#<init>(com.zaxxer.hikari.pool.PoolEntry,java.sql.Connection,com.zaxxer.hikari.util.FastList,com.zaxxer.hikari.pool.ProxyLeakTask,long,boolean,boolean)
	CALLEE: com.zaxxer.hikari.pool.ProxyConnection#<init>(com.zaxxer.hikari.pool.PoolEntry,java.sql.Connection,com.zaxxer.hikari.util.FastList,com.zaxxer.hikari.pool.ProxyLeakTask,long,boolean,boolean)
CALLER: jersey.repackaged.com.google.common.collect.Iterators.7#<init>(java.util.Iterator,jersey.repackaged.com.google.common.base.Predicate)
	CALLEE: jersey.repackaged.com.google.common.collect.AbstractIterator#<init>()
CALLER: org.eclipse.jetty.io.WriteFlusher#isInProgress()
	CALLEE: org.eclipse.jetty.io.WriteFlusher.State#getType()
CALLER: org.eclipse.jetty.io.IdleTimeout#getIdleFor()
	CALLEE: org.eclipse.jetty.io.IdleTimeout#getIdleTimestamp()
CALLER: org.eclipse.jetty.io.AbstractEndPoint#onIdleExpired(java.util.concurrent.TimeoutException)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.io.SelectChannelEndPoint#isOpen()
	CALLEE: org.eclipse.jetty.io.ChannelEndPoint#isInputShutdown()
	CALLEE: org.eclipse.jetty.io.ChannelEndPoint#isOutputShutdown()
	CALLEE: org.eclipse.jetty.io.FillInterest#onFail(java.lang.Throwable)
	CALLEE: org.eclipse.jetty.io.WriteFlusher#onFail(java.lang.Throwable)
	CALLEE: org.eclipse.jetty.io.SelectChannelEndPoint#close()
CALLER: org.eclipse.jetty.io.IdleTimeout#scheduleIdleTimeout(long)
	CALLEE: org.eclipse.jetty.util.thread.ScheduledExecutorScheduler#schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)
	CALLEE: org.eclipse.jetty.io.SelectChannelEndPoint#isOpen()
CALLER: jersey.repackaged.com.google.common.collect.Iterators.8#<init>(java.util.Iterator,jersey.repackaged.com.google.common.base.Function)
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#<init>(java.util.Iterator)
CALLER: org.eclipse.jetty.server.handler.ContextHandler#callContextDestroyed(javax.servlet.ServletContextListener,javax.servlet.ServletContextEvent)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#isDebugEnabled()
CALLER: org.eclipse.jetty.server.handler.ContextHandler#addEventListener(java.util.EventListener)
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#isStarted()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#isStarting()
CALLER: org.eclipse.jetty.webapp.WebAppContext#addEventListener(java.util.EventListener)
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#addEventListener(java.util.EventListener)
	CALLEE: org.eclipse.jetty.server.session.SessionHandler#addEventListener(java.util.EventListener)
CALLER: org.eclipse.jetty.server.session.SessionHandler#clearEventListeners()
	CALLEE: org.eclipse.jetty.server.session.AbstractSessionManager#clearEventListeners()
CALLER: org.eclipse.jetty.util.AttributesMap#getAttributeNames()
	CALLEE: org.eclipse.jetty.util.AttributesMap#getAttributeNameSet()
CALLER: org.eclipse.jetty.server.handler.ContextHandler#setManagedAttribute(java.lang.String,java.lang.Object)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#updateBean(java.lang.Object,java.lang.Object)
CALLER: org.eclipse.jetty.server.session.SessionHandler#removeEventListener(java.util.EventListener)
	CALLEE: org.eclipse.jetty.server.session.AbstractSessionManager#removeEventListener(java.util.EventListener)
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableERROR_REQUEST_SET_ENTITY_STREAM_IN_RESPONSE_PHASE()
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableERROR_REQUEST_SET_SECURITY_CONTEXT_IN_RESPONSE_PHASE()
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableERROR_REQUEST_ABORT_IN_RESPONSE_PHASE()
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableMETHOD_PARAMETER_CANNOT_BE_NULL_OR_EMPTY(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableMETHOD_PARAMETER_CANNOT_BE_NULL(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static javax.ws.rs.core.MediaType#valueOf(java.lang.String)
	CALLEE: static javax.ws.rs.ext.RuntimeDelegate#getInstance()
CALLER: static org.glassfish.jersey.message.internal.AcceptableMediaType#<clinit>()
	CALLEE: org.glassfish.jersey.message.internal.AcceptableMediaType.1#<init>()
CALLER: org.glassfish.jersey.message.internal.AcceptableMediaType#<init>(java.lang.String,java.lang.String)
	CALLEE: javax.ws.rs.core.MediaType#<init>(java.lang.String,java.lang.String)
CALLER: static org.glassfish.jersey.message.internal.QualitySourceMediaType#<clinit>()
	CALLEE: org.glassfish.jersey.message.internal.QualitySourceMediaType.1#<init>()
CALLER: org.glassfish.jersey.message.internal.QualitySourceMediaType#<init>(java.lang.String,java.lang.String)
	CALLEE: javax.ws.rs.core.MediaType#<init>(java.lang.String,java.lang.String)
CALLER: org.glassfish.jersey.message.internal.MediaTypes.3#<init>()
	CALLEE: javax.ws.rs.core.MediaType#<init>(java.lang.String,java.lang.String)
CALLER: static org.glassfish.jersey.message.internal.ReaderWriter#getBufferSize()
	CALLEE: static org.glassfish.jersey.internal.util.PropertiesHelper#getSystemProperty(java.lang.String)
CALLER: javax.ws.rs.core.MediaType#<init>()
	CALLEE: javax.ws.rs.core.MediaType#<init>(java.lang.String,java.lang.String,java.lang.String,java.util.Map)
CALLER: javax.ws.rs.core.MediaType#<init>(java.lang.String,java.lang.String,java.lang.String,java.util.Map)
	CALLEE: javax.ws.rs.core.MediaType.2#<init>(javax.ws.rs.core.MediaType)
CALLER: org.glassfish.jersey.server.ApplicationHandler#initialize(java.lang.Iterable)
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: org.glassfish.jersey.server.internal.routing.Routing.Builder#configuration(javax.ws.rs.core.Configuration)
	CALLEE: org.glassfish.jersey.server.internal.routing.Routing.Builder#entityProviders(org.glassfish.jersey.message.MessageBodyWorkers)
	CALLEE: org.glassfish.jersey.server.internal.routing.Routing.Builder#processingProviders(org.glassfish.jersey.server.internal.ProcessingProviders)
	CALLEE: org.glassfish.jersey.server.internal.routing.Routing.Builder#buildStage()
	CALLEE: org.glassfish.jersey.server.ResourceConfig#getProperties()
	CALLEE: static org.glassfish.jersey.server.ServerProperties#getValue(java.util.Map,java.lang.String,java.lang.Object,java.lang.Class)
	CALLEE: static org.glassfish.jersey.internal.inject.Injections#getConfiguration(org.glassfish.hk2.api.ServiceLocator)
	CALLEE: static org.glassfish.jersey.internal.inject.Injections#addBinding(org.glassfish.hk2.utilities.binding.BindingBuilder,org.glassfish.hk2.api.DynamicConfiguration)
	CALLEE: org.glassfish.jersey.server.ResourceConfig#getSingletons()
	CALLEE: org.glassfish.jersey.server.ResourceConfig#getClasses()
	CALLEE: org.glassfish.jersey.model.internal.ComponentBag#getRegistrations()
	CALLEE: jersey.repackaged.com.google.common.collect.Collections2.FilteredCollection#iterator()
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#to(java.lang.Class)
	CALLEE: jersey.repackaged.com.google.common.collect.Collections2.TransformedCollection#iterator()
	CALLEE: static org.glassfish.jersey.CommonProperties#getValue(java.util.Map,javax.ws.rs.RuntimeType,java.lang.String,java.lang.Object,java.lang.Class)
	CALLEE: static org.glassfish.jersey.internal.ServiceFinder#find(java.lang.Class,boolean)
	CALLEE: static org.glassfish.jersey.internal.Version#getBuildId()
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#INIT_MSG(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.ResourceConfig#lock()
	CALLEE: static org.glassfish.jersey.internal.Errors#mark()
	CALLEE: org.glassfish.jersey.server.ResourceConfig#configureAutoDiscoverableProviders(org.glassfish.hk2.api.ServiceLocator)
	CALLEE: org.glassfish.jersey.server.ResourceConfig#configureForcedAutoDiscoverableProviders(org.glassfish.hk2.api.ServiceLocator)
	CALLEE: org.glassfish.jersey.server.ResourceConfig#configureMetaProviders(org.glassfish.hk2.api.ServiceLocator)
	CALLEE: org.glassfish.jersey.server.ResourceBag.Builder#<init>()
	CALLEE: org.glassfish.jersey.server.ResourceConfig#getResources()
	CALLEE: org.glassfish.jersey.server.ResourceBag.Builder#registerProgrammaticResource(org.glassfish.jersey.server.model.Resource)
	CALLEE: static org.glassfish.jersey.server.model.Resource#from(java.lang.Class,boolean)
	CALLEE: org.glassfish.jersey.server.ResourceBag.Builder#registerResource(java.lang.Class,org.glassfish.jersey.server.model.Resource)
	CALLEE: org.glassfish.jersey.server.ResourceBag.Builder#registerResource(java.lang.Object,org.glassfish.jersey.server.model.Resource)
	CALLEE: org.glassfish.jersey.server.ResourceBag.Builder#build()
	CALLEE: org.glassfish.jersey.server.ResourceConfig#getComponentBag()
	CALLEE: org.glassfish.jersey.internal.ServiceFinder#toClassArray()
	CALLEE: org.glassfish.jersey.server.ApplicationHandler.5#<init>(org.glassfish.jersey.server.ApplicationHandler)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#WARNING_TOO_MANY_EXTERNAL_REQ_SCOPES(java.lang.Object)
	CALLEE: static org.glassfish.jersey.internal.inject.Injections#newBinder(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.ApplicationHandler#bindProvidersAndResources(java.lang.Iterable,org.glassfish.jersey.model.internal.ComponentBag,java.util.Collection,java.util.Collection)
	CALLEE: org.glassfish.jersey.model.internal.RankedComparator#<init>()
	CALLEE: static org.glassfish.jersey.internal.inject.Providers#getAllProviders(org.glassfish.hk2.api.ServiceLocator,java.lang.Class,org.glassfish.jersey.model.internal.RankedComparator)
	CALLEE: org.glassfish.jersey.server.internal.monitoring.CompositeApplicationEventListener#<init>(java.lang.Iterable)
	CALLEE: org.glassfish.jersey.server.internal.monitoring.ApplicationEventImpl#<init>(org.glassfish.jersey.server.monitoring.ApplicationEvent.Type,org.glassfish.jersey.server.ResourceConfig,java.util.Set,java.util.Set,java.util.Set,org.glassfish.jersey.server.model.ResourceModel)
	CALLEE: org.glassfish.jersey.server.internal.monitoring.CompositeApplicationEventListener#onEvent(org.glassfish.jersey.server.monitoring.ApplicationEvent)
	CALLEE: org.glassfish.jersey.server.ApplicationHandler#getProcessingProviders(org.glassfish.jersey.model.internal.ComponentBag)
	CALLEE: org.glassfish.jersey.server.ApplicationHandler.6#<init>(org.glassfish.jersey.server.ApplicationHandler)
	CALLEE: javax.ws.rs.core.GenericType#getType()
	CALLEE: org.glassfish.jersey.server.model.ResourceModel.Builder#<init>(java.util.List,boolean)
	CALLEE: org.glassfish.jersey.server.model.ResourceModel.Builder#build()
	CALLEE: org.glassfish.jersey.server.ApplicationHandler#processResourceModel(org.glassfish.jersey.server.model.ResourceModel)
	CALLEE: org.glassfish.jersey.server.model.ComponentModelValidator#<init>(org.glassfish.hk2.api.ServiceLocator)
	CALLEE: org.glassfish.jersey.server.model.ComponentModelValidator#validate(org.glassfish.jersey.server.model.ResourceModelComponent)
	CALLEE: static org.glassfish.jersey.internal.Errors#fatalIssuesFound()
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#RESOURCE_MODEL_VALIDATION_FAILED_AT_INIT()
	CALLEE: static org.glassfish.jersey.server.model.internal.ModelErrors#getErrorsAsResourceModelIssues(boolean)
	CALLEE: org.glassfish.jersey.server.model.ModelValidationException#<init>(java.lang.String,java.util.List)
	CALLEE: static org.glassfish.jersey.internal.Errors#logErrors(boolean)
	CALLEE: static org.glassfish.jersey.internal.Errors#reset()
	CALLEE: static org.glassfish.jersey.internal.Errors#unmark()
	CALLEE: org.glassfish.jersey.server.ApplicationHandler#bindEnhancingResourceClasses(org.glassfish.jersey.server.model.ResourceModel,org.glassfish.jersey.server.ResourceBag,java.lang.Iterable)
	CALLEE: static org.glassfish.jersey.process.internal.ExecutorProviders#createInjectionBindings(org.glassfish.hk2.api.ServiceLocator)
	CALLEE: org.glassfish.jersey.server.ContainerFilteringStage#<init>(java.lang.Iterable,java.lang.Iterable)
	CALLEE: static org.glassfish.jersey.server.internal.routing.Routing#forModel(org.glassfish.jersey.server.model.RuntimeResourceModel)
	CALLEE: static org.glassfish.jersey.process.internal.Stages#chain(jersey.repackaged.com.google.common.base.Function)
	CALLEE: static org.glassfish.jersey.server.internal.routing.Routing#matchedEndpointExtractor()
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#CLEARING_HK_2_CACHE(java.lang.Object,java.lang.Object)
	CALLEE: static org.glassfish.jersey.server.ApplicationHandler#logApplicationInitConfiguration(org.glassfish.hk2.api.ServiceLocator,org.glassfish.jersey.server.ResourceBag,org.glassfish.jersey.server.internal.ProcessingProviders)
	CALLEE: org.glassfish.jersey.model.internal.ComponentBag#getInstances(jersey.repackaged.com.google.common.base.Predicate)
	CALLEE: org.glassfish.jersey.process.internal.Stages.StageChainBuilder#to(org.glassfish.jersey.process.internal.ChainableStage)
	CALLEE: org.glassfish.jersey.server.internal.routing.Routing.Builder#locator(org.glassfish.hk2.api.ServiceLocator)
	CALLEE: org.glassfish.jersey.server.internal.ProcessingProviders#getGlobalRequestFilters()
	CALLEE: org.glassfish.jersey.server.internal.ProcessingProviders#getGlobalResponseFilters()
	CALLEE: org.glassfish.jersey.server.internal.ProcessingProviders#getPreMatchFilters()
	CALLEE: org.glassfish.jersey.server.ResourceBag#getRootResources()
	CALLEE: org.glassfish.jersey.server.model.ResourceModel#getRuntimeResourceModel()
	CALLEE: jersey.repackaged.com.google.common.collect.AbstractIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.AbstractIterator#hasNext()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: org.glassfish.jersey.process.internal.Stages.StageChainBuilder#build(org.glassfish.jersey.process.internal.Stage)
	CALLEE: org.glassfish.jersey.server.internal.routing.Routing.Builder#resourceContext(org.glassfish.jersey.server.internal.JerseyResourceContext)
CALLER: static org.slf4j.helpers.MessageFormatter#arrayFormat(java.lang.String,java.lang.Object[],java.lang.Throwable)
	CALLEE: org.slf4j.helpers.FormattingTuple#<init>(java.lang.String,java.lang.Object[],java.lang.Throwable)
	CALLEE: org.slf4j.helpers.FormattingTuple#<init>(java.lang.String)
	CALLEE: static org.slf4j.helpers.MessageFormatter#isEscapedDelimeter(java.lang.String,int)
	CALLEE: static org.slf4j.helpers.MessageFormatter#isDoubleEscaped(java.lang.String,int)
	CALLEE: static org.slf4j.helpers.MessageFormatter#deeplyAppendParameter(java.lang.StringBuilder,java.lang.Object,java.util.Map)
CALLER: org.eclipse.jetty.server.ShutdownMonitor#close(java.net.ServerSocket)
	CALLEE: org.eclipse.jetty.server.ShutdownMonitor#debug(java.lang.Throwable)
CALLER: org.eclipse.jetty.server.ShutdownMonitor#shutdownInput(java.net.Socket)
	CALLEE: org.eclipse.jetty.server.ShutdownMonitor#debug(java.lang.Throwable)
CALLER: org.eclipse.jetty.io.AbstractConnection.IdleState#<init>()
	CALLEE: org.eclipse.jetty.io.AbstractConnection.State#<init>(java.lang.String)
CALLER: org.eclipse.jetty.io.AbstractConnection.FillInterestedState#<init>()
	CALLEE: org.eclipse.jetty.io.AbstractConnection.State#<init>(java.lang.String)
CALLER: org.eclipse.jetty.io.AbstractConnection.FillingState#<init>()
	CALLEE: org.eclipse.jetty.io.AbstractConnection.State#<init>(java.lang.String)
CALLER: org.eclipse.jetty.io.AbstractConnection.RefillingState#<init>()
	CALLEE: org.eclipse.jetty.io.AbstractConnection.State#<init>(java.lang.String)
CALLER: org.eclipse.jetty.io.AbstractConnection.FillingFillInterestedState#<init>(java.lang.String)
	CALLEE: org.eclipse.jetty.io.AbstractConnection.State#<init>(java.lang.String)
CALLER: org.eclipse.jetty.io.AbstractConnection.ReadCallback#<init>(org.eclipse.jetty.io.AbstractConnection,org.eclipse.jetty.io.AbstractConnection.1)
	CALLEE: org.eclipse.jetty.io.AbstractConnection.ReadCallback#<init>(org.eclipse.jetty.io.AbstractConnection)
CALLER: org.eclipse.jetty.server.HttpConnection.SendCallback#<init>(org.eclipse.jetty.server.HttpConnection)
	CALLEE: org.eclipse.jetty.util.IteratingCallback#<init>(boolean)
CALLER: static org.eclipse.jetty.server.HttpInputOverHTTP#<clinit>()
	CALLEE: static org.eclipse.jetty.util.log.Log#getLogger(java.lang.Class)
CALLER: static org.eclipse.jetty.server.HttpInput#<clinit>()
	CALLEE: static org.eclipse.jetty.util.log.Log#getLogger(java.lang.Class)
	CALLEE: org.eclipse.jetty.server.HttpInput.1#<init>()
	CALLEE: org.eclipse.jetty.server.HttpInput.2#<init>()
	CALLEE: org.eclipse.jetty.server.HttpInput.3#<init>()
	CALLEE: org.eclipse.jetty.server.HttpInput.4#<init>()
CALLER: org.eclipse.jetty.server.HttpInputOverHTTP#<init>(org.eclipse.jetty.server.HttpConnection)
	CALLEE: org.eclipse.jetty.server.HttpInput#<init>()
	CALLEE: org.eclipse.jetty.util.SharedBlockingCallback#<init>()
CALLER: static org.eclipse.jetty.server.HttpChannel#<clinit>()
	CALLEE: static org.eclipse.jetty.util.log.Log#getLogger(java.lang.Class)
CALLER: org.eclipse.jetty.server.HttpConnection.HttpChannelOverHttp#<init>(org.eclipse.jetty.server.HttpConnection,org.eclipse.jetty.server.Connector,org.eclipse.jetty.server.HttpConfiguration,org.eclipse.jetty.io.EndPoint,org.eclipse.jetty.server.HttpTransport,org.eclipse.jetty.server.HttpInput)
	CALLEE: org.eclipse.jetty.server.HttpChannel#<init>(org.eclipse.jetty.server.Connector,org.eclipse.jetty.server.HttpConfiguration,org.eclipse.jetty.io.EndPoint,org.eclipse.jetty.server.HttpTransport,org.eclipse.jetty.server.HttpInput)
CALLER: static org.eclipse.jetty.http.HttpParser#<clinit>()
	CALLEE: static org.eclipse.jetty.util.log.Log#getLogger(java.lang.Class)
	CALLEE: org.eclipse.jetty.util.ArrayTrie#<init>(int)
	CALLEE: org.eclipse.jetty.http.HttpGenerator.CachedHttpField#<init>(org.eclipse.jetty.http.HttpHeader,java.lang.String)
	CALLEE: static org.eclipse.jetty.http.HttpHeader#values()
	CALLEE: org.eclipse.jetty.http.HttpField#<init>(org.eclipse.jetty.http.HttpHeader,java.lang.String)
	CALLEE: org.eclipse.jetty.http.HttpField#<init>(org.eclipse.jetty.http.HttpHeader,org.eclipse.jetty.http.HttpHeaderValue)
	CALLEE: org.eclipse.jetty.util.AbstractTrie#put(java.lang.Object)
CALLER: org.eclipse.jetty.http.HttpParser#<init>(org.eclipse.jetty.http.HttpParser.RequestHandler,int)
	CALLEE: org.eclipse.jetty.http.HttpParser#<init>(org.eclipse.jetty.http.HttpParser.RequestHandler,int,boolean)
CALLER: static org.glassfish.jersey.internal.ServiceFinder.ServiceIteratorProvider#getInstance()
	CALLEE: org.glassfish.jersey.internal.ServiceFinder.DefaultServiceIteratorProvider#<init>()
CALLER: com.fasterxml.jackson.core.JsonFactory#_createParser(java.io.Reader,com.fasterxml.jackson.core.io.IOContext)
	CALLEE: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer#makeChild(int)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#<init>(com.fasterxml.jackson.core.io.IOContext,int,java.io.Reader,com.fasterxml.jackson.core.ObjectCodec,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer)
CALLER: com.fasterxml.jackson.core.JsonFactory#_getBufferRecycler()
	CALLEE: com.fasterxml.jackson.core.util.BufferRecycler#<init>()
CALLER: static com.fasterxml.jackson.core.json.ReaderBasedJsonParser#<clinit>()
	CALLEE: static com.fasterxml.jackson.core.io.CharTypes#getInputCodeLatin1()
CALLER: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer#makeChild(int)
	CALLEE: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer#<init>(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer,int,java.lang.String[],com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.Bucket[],int,int,int)
CALLER: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#<init>(com.fasterxml.jackson.core.io.IOContext,int,java.io.Reader,com.fasterxml.jackson.core.ObjectCodec,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer,char[],int,int,boolean)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#<init>(com.fasterxml.jackson.core.io.IOContext,int)
	CALLEE: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer#hashSeed()
CALLER: com.fasterxml.jackson.databind.type.TypeFactory#_fromClass(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#<init>(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#_constructType(java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings)
	CALLEE: com.fasterxml.jackson.databind.type.ClassKey#<init>(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.util.LRUMap#get(java.lang.Object)
	CALLEE: static com.fasterxml.jackson.databind.type.ArrayType#construct(com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#_mapType(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#_collectionType(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#findTypeParameters(java.lang.Class,java.lang.Class)
	CALLEE: static com.fasterxml.jackson.databind.type.TypeFactory#unknownType()
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#constructSimpleType(java.lang.Class,java.lang.Class,com.fasterxml.jackson.databind.JavaType[])
	CALLEE: com.fasterxml.jackson.databind.util.LRUMap#put(java.lang.Object,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.type.TypeFactory#_fromParamType(java.lang.reflect.ParameterizedType,com.fasterxml.jackson.databind.type.TypeBindings)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#<init>(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#_constructType(java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#constructSimpleType(java.lang.Class,java.lang.Class,com.fasterxml.jackson.databind.JavaType[])
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#findTypeParameters(com.fasterxml.jackson.databind.JavaType,java.lang.Class)
	CALLEE: static com.fasterxml.jackson.databind.type.MapType#construct(java.lang.Class,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)
	CALLEE: static com.fasterxml.jackson.databind.type.CollectionType#construct(java.lang.Class,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#constructSimpleType(java.lang.Class,com.fasterxml.jackson.databind.JavaType[])
CALLER: com.fasterxml.jackson.databind.type.TypeFactory#_fromArrayType(java.lang.reflect.GenericArrayType,com.fasterxml.jackson.databind.type.TypeBindings)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#_constructType(java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings)
	CALLEE: static com.fasterxml.jackson.databind.type.ArrayType#construct(com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.type.TypeFactory#_fromVariable(java.lang.reflect.TypeVariable,com.fasterxml.jackson.databind.type.TypeBindings)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#_constructType(java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings)
	CALLEE: com.fasterxml.jackson.databind.type.TypeBindings#<init>(com.fasterxml.jackson.databind.type.TypeFactory,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.TypeBindings#_addPlaceholder(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.type.TypeBindings#findType(java.lang.String,boolean)
CALLER: com.fasterxml.jackson.databind.type.TypeFactory#_fromWildcard(java.lang.reflect.WildcardType,com.fasterxml.jackson.databind.type.TypeBindings)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#_constructType(java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings)
CALLER: com.fasterxml.jackson.databind.DeserializationConfig#initialize(com.fasterxml.jackson.core.JsonParser)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#setFeatureMask(int)
	CALLEE: com.fasterxml.jackson.core.JsonParser#getFeatureMask()
CALLER: static com.fasterxml.jackson.databind.JsonMappingException#from(com.fasterxml.jackson.core.JsonParser,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#<init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getTokenLocation()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getTokenLocation()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getTokenLocation()
CALLER: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl#createInstance(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.InjectableValues)
	CALLEE: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl#<init>(com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.InjectableValues)
CALLER: com.fasterxml.jackson.databind.JsonMappingException#<init>(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#<init>(java.lang.String)
CALLER: com.fasterxml.jackson.databind.util.RootNameLookup#findRootName(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.cfg.MapperConfig)
	CALLEE: com.fasterxml.jackson.databind.util.RootNameLookup#findRootName(java.lang.Class,com.fasterxml.jackson.databind.cfg.MapperConfig)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
CALLER: static org.glassfish.jersey.server.ApplicationHandler#access$600()
	CALLEE: static org.glassfish.jersey.server.ApplicationHandler#getRankedComponentProviders()
CALLER: static org.glassfish.hk2.internal.ServiceLocatorFactoryImpl#access$000()
	CALLEE: static org.glassfish.hk2.internal.ServiceLocatorFactoryImpl#getGeneratorSecure()
CALLER: static org.glassfish.hk2.utilities.reflection.ReflectionHelper#getAdvertisedTypesFromClass(java.lang.reflect.Type,java.lang.Class)
	CALLEE: static org.glassfish.hk2.utilities.reflection.ReflectionHelper#getRawClass(java.lang.reflect.Type)
	CALLEE: static org.glassfish.hk2.utilities.reflection.ReflectionHelper#getAllContractsFromInterfaces(java.lang.Class,java.lang.Class,java.util.Set,java.util.Set)
CALLER: static org.glassfish.hk2.utilities.reflection.ReflectionHelper#getNamedName(javax.inject.Named,java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.NamedImpl#value()
CALLER: static org.glassfish.hk2.utilities.reflection.ReflectionHelper#getScopeAnnotationFromObject(java.lang.Object)
	CALLEE: static org.glassfish.hk2.utilities.reflection.ReflectionHelper#getScopeAnnotationFromClass(java.lang.Class)
CALLER: static org.glassfish.hk2.utilities.reflection.ReflectionHelper#getQualifiersFromObject(java.lang.Object)
	CALLEE: static org.glassfish.hk2.utilities.reflection.ReflectionHelper#getQualifierAnnotations(java.lang.reflect.AnnotatedElement)
CALLER: static org.glassfish.hk2.utilities.BuilderHelper#getMetadataValues(java.lang.annotation.Annotation,java.util.Map)
	CALLEE: org.glassfish.hk2.utilities.BuilderHelper.3#<init>(java.lang.Class)
	CALLEE: static org.glassfish.hk2.utilities.reflection.ReflectionHelper#invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],boolean)
	CALLEE: org.glassfish.hk2.api.MultiException#<init>(java.lang.Throwable)
	CALLEE: static org.glassfish.hk2.utilities.reflection.ReflectionHelper#addMetadata(java.util.Map,java.lang.String,java.lang.String)
CALLER: org.glassfish.hk2.internal.ConstantActiveDescriptor#<init>(java.lang.Object,java.util.Set,java.lang.Class,java.lang.String,java.util.Set,org.glassfish.hk2.api.DescriptorVisibility,java.lang.Boolean,java.lang.Boolean,java.lang.String,java.util.Map,int)
	CALLEE: org.glassfish.hk2.utilities.AbstractActiveDescriptor#<init>(java.util.Set,java.lang.Class,java.lang.String,java.util.Set,org.glassfish.hk2.api.DescriptorType,org.glassfish.hk2.api.DescriptorVisibility,int,java.lang.Boolean,java.lang.Boolean,java.lang.String,java.util.Map)
CALLER: org.glassfish.jersey.server.internal.scanning.JarFileScanner.1#available()
	CALLEE: static org.glassfish.jersey.server.internal.scanning.JarFileScanner#access$000(org.glassfish.jersey.server.internal.scanning.JarFileScanner)
CALLER: org.glassfish.jersey.server.internal.scanning.JarFileScanner.1#read(byte[],int,int)
	CALLEE: static org.glassfish.jersey.server.internal.scanning.JarFileScanner#access$000(org.glassfish.jersey.server.internal.scanning.JarFileScanner)
CALLER: org.glassfish.jersey.server.internal.scanning.JarFileScanner.1#read()
	CALLEE: static org.glassfish.jersey.server.internal.scanning.JarFileScanner#access$000(org.glassfish.jersey.server.internal.scanning.JarFileScanner)
CALLER: jersey.repackaged.org.objectweb.asm.ClassReader#<init>(byte[],int,int)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readUnsignedShort(int)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readShort(int)
CALLER: jersey.repackaged.org.objectweb.asm.ClassReader#readClass(int,char[])
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readUnsignedShort(int)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readUTF8(int,char[])
CALLER: jersey.repackaged.org.objectweb.asm.ClassReader#getAttributes()
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readUnsignedShort(int)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readInt(int)
CALLER: jersey.repackaged.org.objectweb.asm.ClassReader#readUTF8(int,char[])
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readUnsignedShort(int)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readUTF(int,int,char[])
CALLER: jersey.repackaged.org.objectweb.asm.ClassReader#readAttribute(jersey.repackaged.org.objectweb.asm.Attribute[],java.lang.String,int,int,char[],int,jersey.repackaged.org.objectweb.asm.Label[])
	CALLEE: jersey.repackaged.org.objectweb.asm.Attribute#<init>(java.lang.String)
	CALLEE: jersey.repackaged.org.objectweb.asm.Attribute#read(jersey.repackaged.org.objectweb.asm.ClassReader,int,int,char[],int,jersey.repackaged.org.objectweb.asm.Label[])
CALLER: org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.AnnotatedClassVisitor#visitAnnotation(java.lang.String,boolean)
	CALLEE: static org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener#access$100(org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener)
CALLER: jersey.repackaged.org.objectweb.asm.ClassReader#readAnnotationValues(int,char[],boolean,jersey.repackaged.org.objectweb.asm.AnnotationVisitor)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readUnsignedShort(int)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readUTF8(int,char[])
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readAnnotationValue(int,char[],java.lang.String,jersey.repackaged.org.objectweb.asm.AnnotationVisitor)
CALLER: jersey.repackaged.org.objectweb.asm.ClassReader#readAnnotationTarget(jersey.repackaged.org.objectweb.asm.Context,int)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readUnsignedShort(int)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readInt(int)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readLabel(int,jersey.repackaged.org.objectweb.asm.Label[])
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readByte(int)
	CALLEE: jersey.repackaged.org.objectweb.asm.TypePath#<init>(byte[],int)
CALLER: jersey.repackaged.org.objectweb.asm.ClassReader#readField(jersey.repackaged.org.objectweb.asm.ClassVisitor,jersey.repackaged.org.objectweb.asm.Context,int)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readUnsignedShort(int)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readUTF8(int,char[])
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readInt(int)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readAttribute(jersey.repackaged.org.objectweb.asm.Attribute[],java.lang.String,int,int,char[],int,jersey.repackaged.org.objectweb.asm.Label[])
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readAnnotationValues(int,char[],boolean,jersey.repackaged.org.objectweb.asm.AnnotationVisitor)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readAnnotationTarget(jersey.repackaged.org.objectweb.asm.Context,int)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readConst(int,char[])
	CALLEE: org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.AnnotatedClassVisitor#visitField(int,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)
CALLER: jersey.repackaged.org.objectweb.asm.ClassReader#readMethod(jersey.repackaged.org.objectweb.asm.ClassVisitor,jersey.repackaged.org.objectweb.asm.Context,int)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readUnsignedShort(int)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readClass(int,char[])
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readUTF8(int,char[])
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readInt(int)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readAttribute(jersey.repackaged.org.objectweb.asm.Attribute[],java.lang.String,int,int,char[],int,jersey.repackaged.org.objectweb.asm.Label[])
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readAnnotationValues(int,char[],boolean,jersey.repackaged.org.objectweb.asm.AnnotationVisitor)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readAnnotationTarget(jersey.repackaged.org.objectweb.asm.Context,int)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readAnnotationValue(int,char[],java.lang.String,jersey.repackaged.org.objectweb.asm.AnnotationVisitor)
	CALLEE: org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.AnnotatedClassVisitor#visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readParameterAnnotations(jersey.repackaged.org.objectweb.asm.MethodVisitor,jersey.repackaged.org.objectweb.asm.Context,int,boolean)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readCode(jersey.repackaged.org.objectweb.asm.MethodVisitor,jersey.repackaged.org.objectweb.asm.Context,int)
CALLER: org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.AnnotatedClassVisitor#visitEnd()
	CALLEE: static org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener#access$200(org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener)
	CALLEE: org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.AnnotatedClassVisitor#getClassForName(java.lang.String)
CALLER: org.apache.log4j.helpers.OnlyOnceErrorHandler#error(java.lang.String)
	CALLEE: static org.apache.log4j.helpers.LogLog#error(java.lang.String)
CALLER: org.apache.log4j.DailyRollingFileAppender#rollOver()
	CALLEE: static org.apache.log4j.helpers.LogLog#debug(java.lang.String)
	CALLEE: org.apache.log4j.FileAppender#setFile(java.lang.String,boolean,boolean,int)
	CALLEE: static org.apache.log4j.helpers.LogLog#error(java.lang.String)
	CALLEE: org.apache.log4j.FileAppender#closeFile()
	CALLEE: org.apache.log4j.helpers.OnlyOnceErrorHandler#error(java.lang.String)
CALLER: org.apache.log4j.WriterAppender#subAppend(org.apache.log4j.spi.LoggingEvent)
	CALLEE: org.apache.log4j.helpers.QuietWriter#write(java.lang.String)
	CALLEE: org.apache.log4j.PatternLayout#format(org.apache.log4j.spi.LoggingEvent)
	CALLEE: org.apache.log4j.PatternLayout#ignoresThrowable()
	CALLEE: org.apache.log4j.spi.LoggingEvent#getThrowableStrRep()
	CALLEE: org.apache.log4j.WriterAppender#shouldFlush(org.apache.log4j.spi.LoggingEvent)
	CALLEE: org.apache.log4j.helpers.QuietWriter#flush()
CALLER: jersey.repackaged.com.google.common.collect.AbstractIterator#<init>()
	CALLEE: jersey.repackaged.com.google.common.collect.UnmodifiableIterator#<init>()
CALLER: static org.eclipse.jetty.io.WriteFlusher.1#<clinit>()
	CALLEE: static org.eclipse.jetty.io.WriteFlusher.StateType#values()
CALLER: org.eclipse.jetty.io.FillInterest#onFail(java.lang.Throwable)
	CALLEE: org.eclipse.jetty.util.FutureCallback#failed(java.lang.Throwable)
CALLER: org.eclipse.jetty.io.WriteFlusher#onFail(java.lang.Throwable)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.io.WriteFlusher.State#getType()
	CALLEE: org.eclipse.jetty.io.WriteFlusher#updateState(org.eclipse.jetty.io.WriteFlusher.State,org.eclipse.jetty.io.WriteFlusher.State)
	CALLEE: org.eclipse.jetty.io.WriteFlusher.FailedState#<init>(java.lang.Throwable,org.eclipse.jetty.io.WriteFlusher.1)
CALLER: org.eclipse.jetty.io.SelectChannelEndPoint#close()
	CALLEE: org.eclipse.jetty.io.ChannelEndPoint#close()
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector#destroyEndPoint(org.eclipse.jetty.io.EndPoint)
CALLER: jersey.repackaged.com.google.common.collect.TransformedIterator#<init>(java.util.Iterator)
	CALLEE: static jersey.repackaged.com.google.common.base.Preconditions#checkNotNull(java.lang.Object)
CALLER: org.eclipse.jetty.server.session.SessionHandler#addEventListener(java.util.EventListener)
	CALLEE: org.eclipse.jetty.server.session.AbstractSessionManager#addEventListener(java.util.EventListener)
CALLER: org.eclipse.jetty.server.session.AbstractSessionManager#clearEventListeners()
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#removeBean(java.lang.Object)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#getBeans(java.lang.Class)
CALLER: org.eclipse.jetty.util.AttributesMap#getAttributeNameSet()
	CALLEE: org.eclipse.jetty.util.AttributesMap#keySet()
CALLER: org.eclipse.jetty.server.session.AbstractSessionManager#removeEventListener(java.util.EventListener)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#removeBean(java.lang.Object)
CALLER: static javax.ws.rs.ext.RuntimeDelegate#getInstance()
	CALLEE: static javax.ws.rs.ext.RuntimeDelegate#findDelegate()
CALLER: static org.glassfish.jersey.internal.util.PropertiesHelper#getSystemProperty(java.lang.String)
	CALLEE: org.glassfish.jersey.internal.util.PropertiesHelper.2#<init>(java.lang.String)
CALLER: static org.glassfish.jersey.internal.Version#<clinit>()
	CALLEE: static org.glassfish.jersey.internal.Version#_initiateProperties()
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#INIT_MSG(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableINIT_MSG(java.lang.Object)
CALLER: org.glassfish.jersey.server.ResourceConfig#lock()
	CALLEE: org.glassfish.jersey.server.ResourceConfig#setupApplicationName()
	CALLEE: org.glassfish.jersey.server.ResourceConfig.ImmutableState#<init>(org.glassfish.jersey.server.ResourceConfig.State,org.glassfish.jersey.server.ResourceConfig.1)
CALLER: static org.glassfish.jersey.internal.Errors#mark()
	CALLEE: static org.glassfish.jersey.internal.Errors#getInstance()
	CALLEE: org.glassfish.jersey.internal.Errors#_mark()
CALLER: org.glassfish.jersey.server.ResourceConfig#configureAutoDiscoverableProviders(org.glassfish.hk2.api.ServiceLocator)
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig#configureAutoDiscoverableProviders(org.glassfish.hk2.api.ServiceLocator,boolean)
	CALLEE: org.glassfish.jersey.server.ResourceConfig.ImmutableState#configureAutoDiscoverableProviders(org.glassfish.hk2.api.ServiceLocator,boolean)
CALLER: org.glassfish.jersey.server.ResourceConfig#configureForcedAutoDiscoverableProviders(org.glassfish.hk2.api.ServiceLocator)
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig#configureAutoDiscoverableProviders(org.glassfish.hk2.api.ServiceLocator,boolean)
	CALLEE: org.glassfish.jersey.server.ResourceConfig.ImmutableState#configureAutoDiscoverableProviders(org.glassfish.hk2.api.ServiceLocator,boolean)
CALLER: org.glassfish.jersey.server.ResourceConfig#configureMetaProviders(org.glassfish.hk2.api.ServiceLocator)
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig#configureMetaProviders(org.glassfish.hk2.api.ServiceLocator)
	CALLEE: org.glassfish.jersey.server.ResourceConfig.ImmutableState#configureMetaProviders(org.glassfish.hk2.api.ServiceLocator)
CALLER: org.glassfish.jersey.server.ResourceBag.Builder#<init>()
	CALLEE: static jersey.repackaged.com.google.common.collect.Sets#newIdentityHashSet()
CALLER: org.glassfish.jersey.server.ResourceConfig#getResources()
	CALLEE: org.glassfish.jersey.server.ResourceConfig.State#getResources()
CALLER: org.glassfish.jersey.server.ResourceBag.Builder#registerProgrammaticResource(org.glassfish.jersey.server.model.Resource)
	CALLEE: org.glassfish.jersey.server.ResourceBag.Builder#registerModel(org.glassfish.jersey.server.model.Resource)
	CALLEE: org.glassfish.jersey.server.model.Resource#getHandlerClasses()
	CALLEE: org.glassfish.jersey.server.model.Resource#getHandlerInstances()
CALLER: static org.glassfish.jersey.server.model.Resource#from(java.lang.Class,boolean)
	CALLEE: org.glassfish.jersey.server.model.IntrospectionModeller#<init>(java.lang.Class,boolean)
	CALLEE: org.glassfish.jersey.server.model.IntrospectionModeller#createResourceBuilder()
	CALLEE: static org.glassfish.jersey.server.model.Resource.Builder#access$1800(org.glassfish.jersey.server.model.Resource.Builder)
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#build()
CALLER: org.glassfish.jersey.server.ResourceBag.Builder#registerResource(java.lang.Class,org.glassfish.jersey.server.model.Resource)
	CALLEE: org.glassfish.jersey.server.ResourceBag.Builder#registerModel(org.glassfish.jersey.server.model.Resource)
CALLER: org.glassfish.jersey.server.ResourceBag.Builder#registerResource(java.lang.Object,org.glassfish.jersey.server.model.Resource)
	CALLEE: org.glassfish.jersey.server.ResourceBag.Builder#registerModel(org.glassfish.jersey.server.model.Resource)
CALLER: org.glassfish.jersey.server.ResourceBag.Builder#build()
	CALLEE: org.glassfish.jersey.server.ResourceBag#<init>(java.util.Set,java.util.Set,java.util.List,org.glassfish.jersey.server.ResourceBag.1)
CALLER: org.glassfish.jersey.server.ResourceConfig#getComponentBag()
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig#getComponentBag()
CALLER: org.glassfish.jersey.internal.ServiceFinder#toClassArray()
	CALLEE: static org.glassfish.jersey.internal.ServiceFinder.ServiceIteratorProvider#access$100()
	CALLEE: org.glassfish.jersey.internal.OsgiRegistry.OsgiServiceFinder#createClassIterator(java.lang.Class,java.lang.String,java.lang.ClassLoader,boolean)
	CALLEE: org.glassfish.jersey.internal.ServiceFinder.DefaultServiceIteratorProvider#createClassIterator(java.lang.Class,java.lang.String,java.lang.ClassLoader,boolean)
	CALLEE: org.glassfish.jersey.internal.OsgiRegistry.OsgiServiceFinder.2#next()
	CALLEE: org.glassfish.jersey.internal.ServiceFinder.LazyClassIterator#next()
	CALLEE: org.glassfish.jersey.internal.OsgiRegistry.OsgiServiceFinder.2#hasNext()
	CALLEE: org.glassfish.jersey.internal.ServiceFinder.AbstractLazyIterator#hasNext()
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#WARNING_TOO_MANY_EXTERNAL_REQ_SCOPES(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableWARNING_TOO_MANY_EXTERNAL_REQ_SCOPES(java.lang.Object)
CALLER: static org.glassfish.jersey.server.ServerRuntime#<clinit>()
	CALLEE: org.glassfish.jersey.server.ServerRuntime.1#<init>()
CALLER: static org.glassfish.jersey.internal.inject.Injections#newBinder(java.lang.Object)
	CALLEE: static org.glassfish.hk2.utilities.binding.BindingBuilderFactory#newBinder(java.lang.Object)
CALLER: org.glassfish.jersey.server.ApplicationHandler#bindProvidersAndResources(java.lang.Iterable,org.glassfish.jersey.model.internal.ComponentBag,java.util.Collection,java.util.Collection)
	CALLEE: org.glassfish.jersey.model.internal.ComponentBag#getModel(java.lang.Class)
	CALLEE: static org.glassfish.jersey.internal.inject.ProviderBinder#bindProvider(java.lang.Object,org.glassfish.jersey.model.ContractProvider,org.glassfish.hk2.api.DynamicConfiguration)
	CALLEE: org.glassfish.jersey.model.internal.ComponentBag#getInstances(jersey.repackaged.com.google.common.base.Predicate)
	CALLEE: org.glassfish.jersey.model.internal.ComponentBag#getClasses(jersey.repackaged.com.google.common.base.Predicate)
	CALLEE: static jersey.repackaged.com.google.common.collect.Sets#newHashSet()
	CALLEE: static jersey.repackaged.com.google.common.collect.Sets#newIdentityHashSet()
	CALLEE: static org.glassfish.jersey.internal.inject.Injections#getConfiguration(org.glassfish.hk2.api.ServiceLocator)
	CALLEE: static jersey.repackaged.com.google.common.collect.Sets#filter(java.util.Set,jersey.repackaged.com.google.common.base.Predicate)
	CALLEE: org.glassfish.jersey.server.ResourceConfig.RuntimeConfig#getRegisteredClasses()
	CALLEE: org.glassfish.jersey.server.ApplicationHandler.8#<init>(org.glassfish.jersey.server.ApplicationHandler,org.glassfish.jersey.model.internal.ComponentBag,java.util.Set,java.util.Collection)
	CALLEE: org.glassfish.jersey.server.ApplicationHandler#bindWithComponentProvider(java.lang.Class,org.glassfish.jersey.model.ContractProvider,java.lang.Iterable)
	CALLEE: static org.glassfish.jersey.server.model.Resource#isAcceptable(java.lang.Class)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#NON_INSTANTIABLE_COMPONENT(java.lang.Object)
	CALLEE: static org.glassfish.jersey.internal.inject.Providers#checkProviderRuntime(java.lang.Class,org.glassfish.jersey.model.ContractProvider,javax.ws.rs.RuntimeType,boolean,boolean)
	CALLEE: static org.glassfish.jersey.internal.inject.ProviderBinder#bindProvider(java.lang.Class,org.glassfish.jersey.model.ContractProvider,org.glassfish.hk2.api.DynamicConfiguration)
	CALLEE: org.glassfish.jersey.server.ApplicationHandler.9#<init>(org.glassfish.jersey.server.ApplicationHandler,org.glassfish.jersey.model.internal.ComponentBag,java.util.Set,java.util.Collection)
CALLER: org.glassfish.jersey.model.internal.RankedComparator#<init>()
	CALLEE: org.glassfish.jersey.model.internal.RankedComparator#<init>(org.glassfish.jersey.model.internal.RankedComparator.Order)
CALLER: static org.glassfish.jersey.internal.inject.Providers#getAllProviders(org.glassfish.hk2.api.ServiceLocator,java.lang.Class,org.glassfish.jersey.model.internal.RankedComparator)
	CALLEE: static org.glassfish.jersey.internal.inject.Providers#getAllRankedProviders(org.glassfish.hk2.api.ServiceLocator,java.lang.Class)
	CALLEE: static org.glassfish.jersey.internal.inject.Providers#sortRankedProviders(org.glassfish.jersey.model.internal.RankedComparator,java.lang.Iterable)
CALLER: static org.glassfish.jersey.server.monitoring.ApplicationEvent.Type#<clinit>()
	CALLEE: org.glassfish.jersey.server.monitoring.ApplicationEvent.Type#<init>(java.lang.String,int)
CALLER: org.glassfish.jersey.server.internal.monitoring.CompositeApplicationEventListener#onEvent(org.glassfish.jersey.server.monitoring.ApplicationEvent)
	CALLEE: jersey.repackaged.com.google.common.collect.Collections2.TransformedCollection#iterator()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
CALLER: org.glassfish.jersey.server.ApplicationHandler#getProcessingProviders(org.glassfish.jersey.model.internal.ComponentBag)
	CALLEE: static org.glassfish.jersey.internal.inject.Providers#getAllProviders(org.glassfish.hk2.api.ServiceLocator,java.lang.Class)
	CALLEE: static org.glassfish.jersey.server.ResourceConfig#unwrapApplication(javax.ws.rs.core.Application)
	CALLEE: static org.glassfish.jersey.internal.inject.Providers#getAllRankedProviders(org.glassfish.hk2.api.ServiceLocator,java.lang.Class)
	CALLEE: static org.glassfish.jersey.internal.util.ReflectionHelper#getAnnotationTypes(java.lang.reflect.AnnotatedElement,java.lang.Class)
	CALLEE: javax.ws.rs.core.MultivaluedHashMap#<init>()
	CALLEE: static org.glassfish.jersey.server.ApplicationHandler#filterNameBound(java.lang.Iterable,java.util.Collection,org.glassfish.jersey.model.internal.ComponentBag,java.util.Collection,javax.ws.rs.core.MultivaluedMap)
	CALLEE: static jersey.repackaged.com.google.common.collect.Lists#newArrayList()
	CALLEE: org.glassfish.jersey.server.internal.ProcessingProviders#<init>(javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap,java.lang.Iterable,java.util.List,java.lang.Iterable,java.lang.Iterable,java.lang.Iterable,java.lang.Iterable)
CALLER: org.glassfish.jersey.server.ApplicationHandler.6#<init>(org.glassfish.jersey.server.ApplicationHandler)
	CALLEE: javax.ws.rs.core.GenericType#<init>()
CALLER: org.glassfish.jersey.server.model.ResourceModel.Builder#build()
	CALLEE: org.glassfish.jersey.server.model.Resource#getPath()
	CALLEE: static jersey.repackaged.com.google.common.collect.Sets#newIdentityHashSet()
	CALLEE: static jersey.repackaged.com.google.common.collect.Lists#newArrayList()
	CALLEE: static jersey.repackaged.com.google.common.collect.Maps#newLinkedHashMap()
	CALLEE: static org.glassfish.jersey.server.model.Resource#builder(org.glassfish.jersey.server.model.Resource)
	CALLEE: org.glassfish.jersey.server.model.ResourceModel#<init>(java.util.List,java.util.List,org.glassfish.jersey.server.model.ResourceModel.1)
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#mergeWith(org.glassfish.jersey.server.model.Resource)
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#build()
CALLER: org.glassfish.jersey.server.ApplicationHandler#processResourceModel(org.glassfish.jersey.server.model.ResourceModel)
	CALLEE: jersey.repackaged.com.google.common.collect.Collections2.TransformedCollection#iterator()
	CALLEE: org.glassfish.jersey.model.internal.RankedComparator#<init>()
	CALLEE: static org.glassfish.jersey.internal.inject.Providers#getAllRankedProviders(org.glassfish.hk2.api.ServiceLocator,java.lang.Class)
	CALLEE: static org.glassfish.jersey.internal.inject.Providers#sortRankedProviders(org.glassfish.jersey.model.internal.RankedComparator,java.lang.Iterable)
	CALLEE: org.glassfish.jersey.server.ApplicationHandler#getConfiguration()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
CALLER: org.glassfish.jersey.server.model.ComponentModelValidator#<init>(org.glassfish.hk2.api.ServiceLocator)
	CALLEE: static jersey.repackaged.com.google.common.collect.Lists#newLinkedList()
	CALLEE: static jersey.repackaged.com.google.common.collect.Lists#newArrayList()
	CALLEE: org.glassfish.jersey.server.model.ResourceValidator#<init>()
	CALLEE: org.glassfish.jersey.server.model.RuntimeResourceModelValidator#<init>(org.glassfish.jersey.message.MessageBodyWorkers)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethodValidator#<init>(org.glassfish.hk2.api.ServiceLocator)
	CALLEE: org.glassfish.jersey.server.model.InvocableValidator#<init>()
CALLER: org.glassfish.jersey.server.model.ComponentModelValidator#validate(org.glassfish.jersey.server.model.ResourceModelComponent)
	CALLEE: org.glassfish.jersey.server.model.ComponentModelValidator.1#<init>(org.glassfish.jersey.server.model.ComponentModelValidator,org.glassfish.jersey.server.model.ResourceModelComponent)
	CALLEE: static org.glassfish.jersey.internal.Errors#process(java.lang.Runnable)
CALLER: static org.glassfish.jersey.internal.Errors#fatalIssuesFound()
	CALLEE: static org.glassfish.jersey.internal.Errors#getInstance()
	CALLEE: org.glassfish.jersey.internal.Errors.ErrorMessage#getSeverity()
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#RESOURCE_MODEL_VALIDATION_FAILED_AT_INIT()
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableRESOURCE_MODEL_VALIDATION_FAILED_AT_INIT()
CALLER: static org.glassfish.jersey.server.model.internal.ModelErrors#getErrorsAsResourceModelIssues(boolean)
	CALLEE: static org.glassfish.jersey.internal.Errors#getErrorMessages(boolean)
	CALLEE: org.glassfish.jersey.server.model.internal.ModelErrors.1#<init>()
	CALLEE: static jersey.repackaged.com.google.common.collect.Lists#transform(java.util.List,jersey.repackaged.com.google.common.base.Function)
CALLER: static org.glassfish.jersey.internal.Errors#logErrors(boolean)
	CALLEE: static org.glassfish.jersey.internal.Errors#logErrors(java.util.Collection)
	CALLEE: static org.glassfish.jersey.internal.Errors#getInstance()
	CALLEE: org.glassfish.jersey.internal.Errors#_getErrorMessages(boolean)
CALLER: static org.glassfish.jersey.internal.Errors#reset()
	CALLEE: static org.glassfish.jersey.internal.Errors#getInstance()
	CALLEE: org.glassfish.jersey.internal.Errors#_reset()
CALLER: static org.glassfish.jersey.internal.Errors#unmark()
	CALLEE: static org.glassfish.jersey.internal.Errors#getInstance()
	CALLEE: org.glassfish.jersey.internal.Errors#_unmark()
CALLER: org.glassfish.jersey.server.ApplicationHandler#bindEnhancingResourceClasses(org.glassfish.jersey.server.model.ResourceModel,org.glassfish.jersey.server.ResourceBag,java.lang.Iterable)
	CALLEE: static jersey.repackaged.com.google.common.collect.Sets#newHashSet()
	CALLEE: static org.glassfish.jersey.model.internal.ComponentBag#newInstance(jersey.repackaged.com.google.common.base.Predicate)
	CALLEE: org.glassfish.jersey.server.ApplicationHandler#bindProvidersAndResources(java.lang.Iterable,org.glassfish.jersey.model.internal.ComponentBag,java.util.Collection,java.util.Collection)
	CALLEE: org.glassfish.jersey.server.ApplicationHandler.7#<init>(org.glassfish.jersey.server.ApplicationHandler)
	CALLEE: org.glassfish.jersey.server.model.ResourceModel#getRootResources()
	CALLEE: org.glassfish.jersey.server.model.Resource#getHandlerClasses()
	CALLEE: org.glassfish.jersey.server.model.Resource#getHandlerInstances()
CALLER: static org.glassfish.jersey.process.internal.ExecutorProviders#createInjectionBindings(org.glassfish.hk2.api.ServiceLocator)
	CALLEE: static org.glassfish.jersey.internal.inject.Injections#getConfiguration(org.glassfish.hk2.api.ServiceLocator)
	CALLEE: static org.glassfish.jersey.internal.inject.Injections#addBinding(org.glassfish.hk2.utilities.binding.BindingBuilder,org.glassfish.hk2.api.DynamicConfiguration)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#to(java.lang.Class)
	CALLEE: static org.glassfish.jersey.process.internal.ExecutorProviders#getQualifierToProviderMap(org.glassfish.hk2.api.ServiceLocator,java.lang.Class)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#USING_EXECUTOR_PROVIDER(java.lang.Object,java.lang.Object)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#IGNORED_EXECUTOR_PROVIDERS(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.process.internal.ExecutorProviders.ExecutorServiceFactory#<init>(org.glassfish.jersey.spi.ExecutorServiceProvider,org.glassfish.jersey.process.internal.ExecutorProviders.1)
	CALLEE: static org.glassfish.jersey.internal.inject.Injections#newFactoryBinder(org.glassfish.hk2.api.Factory)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#USING_SCHEDULER_PROVIDER(java.lang.Object,java.lang.Object)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#IGNORED_SCHEDULER_PROVIDERS(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.process.internal.ExecutorProviders.ScheduledExecutorServiceFactory#<init>(org.glassfish.jersey.spi.ScheduledExecutorServiceProvider,org.glassfish.jersey.process.internal.ExecutorProviders.1)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.jersey.internal.util.ExtendedLogger#isLoggable(java.util.logging.Level)
	CALLEE: org.glassfish.jersey.internal.util.ExtendedLogger#config(java.lang.String)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#qualifiedBy(java.lang.annotation.Annotation)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#qualifiedBy(java.lang.annotation.Annotation)
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#named(java.lang.String)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#qualifiedBy(java.lang.annotation.Annotation)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#qualifiedBy(java.lang.annotation.Annotation)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#named(java.lang.String)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#named(java.lang.String)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#named(java.lang.String)
CALLER: static org.glassfish.jersey.process.internal.ExecutorProviders#<clinit>()
	CALLEE: org.glassfish.jersey.internal.util.ExtendedLogger#<init>(java.util.logging.Logger,java.util.logging.Level)
CALLER: org.glassfish.jersey.server.ContainerFilteringStage#<init>(java.lang.Iterable,java.lang.Iterable)
	CALLEE: org.glassfish.jersey.process.internal.AbstractChainableStage#<init>()
CALLER: static org.glassfish.jersey.server.internal.routing.Routing#forModel(org.glassfish.jersey.server.model.RuntimeResourceModel)
	CALLEE: org.glassfish.jersey.server.internal.routing.Routing.Builder#<init>(org.glassfish.jersey.server.model.RuntimeResourceModel,org.glassfish.jersey.server.internal.routing.Routing.1)
CALLER: static org.glassfish.jersey.process.internal.Stages#chain(jersey.repackaged.com.google.common.base.Function)
	CALLEE: org.glassfish.jersey.process.internal.Stages.StageChainBuilder#<init>(jersey.repackaged.com.google.common.base.Function,org.glassfish.jersey.process.internal.Stages.1)
CALLER: static org.glassfish.jersey.process.internal.Stages#<clinit>()
	CALLEE: org.glassfish.jersey.process.internal.Stages.1#<init>()
CALLER: static org.glassfish.jersey.server.internal.routing.Routing#matchedEndpointExtractor()
	CALLEE: org.glassfish.jersey.server.internal.routing.MatchedEndpointExtractorStage#<init>()
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#CLEARING_HK_2_CACHE(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableCLEARING_HK_2_CACHE(java.lang.Object,java.lang.Object)
CALLER: static org.glassfish.jersey.server.ApplicationHandler#logApplicationInitConfiguration(org.glassfish.hk2.api.ServiceLocator,org.glassfish.jersey.server.ResourceBag,org.glassfish.jersey.server.internal.ProcessingProviders)
	CALLEE: static org.glassfish.jersey.internal.inject.Providers#getAllProviders(org.glassfish.hk2.api.ServiceLocator,java.lang.Class)
	CALLEE: static jersey.repackaged.com.google.common.collect.Collections2#transform(java.util.Collection,jersey.repackaged.com.google.common.base.Function)
	CALLEE: static jersey.repackaged.com.google.common.collect.Sets#newHashSet(java.lang.Iterable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#LOGGING_APPLICATION_INITIALIZED()
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#LOGGING_ROOT_RESOURCE_CLASSES()
	CALLEE: static org.glassfish.jersey.internal.inject.Providers#getCustomProviders(org.glassfish.hk2.api.ServiceLocator,java.lang.Class)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#LOGGING_PRE_MATCH_FILTERS()
	CALLEE: static org.glassfish.jersey.server.ApplicationHandler#printProviders(java.lang.String,java.lang.Iterable,java.lang.StringBuilder)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#LOGGING_GLOBAL_REQUEST_FILTERS()
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#LOGGING_GLOBAL_RESPONSE_FILTERS()
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#LOGGING_GLOBAL_READER_INTERCEPTORS()
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#LOGGING_GLOBAL_WRITER_INTERCEPTORS()
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#LOGGING_NAME_BOUND_REQUEST_FILTERS()
	CALLEE: static org.glassfish.jersey.server.ApplicationHandler#printNameBoundProviders(java.lang.String,java.util.Map,java.lang.StringBuilder)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#LOGGING_NAME_BOUND_RESPONSE_FILTERS()
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#LOGGING_NAME_BOUND_READER_INTERCEPTORS()
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#LOGGING_NAME_BOUND_WRITER_INTERCEPTORS()
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#LOGGING_DYNAMIC_FEATURES()
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#LOGGING_MESSAGE_BODY_READERS()
	CALLEE: org.glassfish.jersey.server.ApplicationHandler.WorkersToStringTransform#<init>(org.glassfish.jersey.server.ApplicationHandler.1)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#LOGGING_MESSAGE_BODY_WRITERS()
	CALLEE: org.glassfish.jersey.server.internal.ProcessingProviders#getGlobalRequestFilters()
	CALLEE: org.glassfish.jersey.server.internal.ProcessingProviders#getGlobalResponseFilters()
	CALLEE: org.glassfish.jersey.server.internal.ProcessingProviders#getPreMatchFilters()
	CALLEE: org.glassfish.jersey.server.internal.ProcessingProviders#getDynamicFeatures()
	CALLEE: org.glassfish.jersey.server.internal.ProcessingProviders#getNameBoundWriterInterceptors()
	CALLEE: org.glassfish.jersey.server.internal.ProcessingProviders#getNameBoundReaderInterceptors()
	CALLEE: org.glassfish.jersey.server.internal.ProcessingProviders#getNameBoundResponseFilters()
	CALLEE: org.glassfish.jersey.server.internal.ProcessingProviders#getNameBoundRequestFilters()
	CALLEE: org.glassfish.jersey.server.internal.ProcessingProviders#getGlobalWriterInterceptors()
	CALLEE: org.glassfish.jersey.server.internal.ProcessingProviders#getGlobalReaderInterceptors()
	CALLEE: org.glassfish.jersey.server.ResourceBag#getRootResources()
	CALLEE: org.glassfish.jersey.server.model.Resource#getHandlerClasses()
CALLER: static org.slf4j.helpers.FormattingTuple#<clinit>()
	CALLEE: org.slf4j.helpers.FormattingTuple#<init>(java.lang.String)
CALLER: org.slf4j.helpers.FormattingTuple#<init>(java.lang.String)
	CALLEE: org.slf4j.helpers.FormattingTuple#<init>(java.lang.String,java.lang.Object[],java.lang.Throwable)
CALLER: static org.slf4j.helpers.MessageFormatter#deeplyAppendParameter(java.lang.StringBuilder,java.lang.Object,java.util.Map)
	CALLEE: static org.slf4j.helpers.MessageFormatter#safeObjectAppend(java.lang.StringBuilder,java.lang.Object)
	CALLEE: static org.slf4j.helpers.MessageFormatter#booleanArrayAppend(java.lang.StringBuilder,boolean[])
	CALLEE: static org.slf4j.helpers.MessageFormatter#byteArrayAppend(java.lang.StringBuilder,byte[])
	CALLEE: static org.slf4j.helpers.MessageFormatter#charArrayAppend(java.lang.StringBuilder,char[])
	CALLEE: static org.slf4j.helpers.MessageFormatter#shortArrayAppend(java.lang.StringBuilder,short[])
	CALLEE: static org.slf4j.helpers.MessageFormatter#intArrayAppend(java.lang.StringBuilder,int[])
	CALLEE: static org.slf4j.helpers.MessageFormatter#longArrayAppend(java.lang.StringBuilder,long[])
	CALLEE: static org.slf4j.helpers.MessageFormatter#floatArrayAppend(java.lang.StringBuilder,float[])
	CALLEE: static org.slf4j.helpers.MessageFormatter#doubleArrayAppend(java.lang.StringBuilder,double[])
	CALLEE: static org.slf4j.helpers.MessageFormatter#objectArrayAppend(java.lang.StringBuilder,java.lang.Object[],java.util.Map)
CALLER: static org.eclipse.jetty.http.HttpGenerator.State#<clinit>()
	CALLEE: org.eclipse.jetty.http.HttpGenerator.State#<init>(java.lang.String,int)
CALLER: static org.eclipse.jetty.http.HttpTokens.EndOfContent#<clinit>()
	CALLEE: org.eclipse.jetty.http.HttpTokens.EndOfContent#<init>(java.lang.String,int)
CALLER: org.eclipse.jetty.server.HttpInput.1#<init>()
	CALLEE: org.eclipse.jetty.server.HttpInput.State#<init>()
CALLER: org.eclipse.jetty.server.HttpInput.2#<init>()
	CALLEE: org.eclipse.jetty.server.HttpInput.State#<init>()
CALLER: org.eclipse.jetty.server.HttpInput.3#<init>()
	CALLEE: org.eclipse.jetty.server.HttpInput.State#<init>()
CALLER: org.eclipse.jetty.server.HttpInput.4#<init>()
	CALLEE: org.eclipse.jetty.server.HttpInput.State#<init>()
CALLER: org.eclipse.jetty.server.HttpInput#<init>()
	CALLEE: org.eclipse.jetty.server.HttpInput#<init>(java.lang.Object)
CALLER: static org.eclipse.jetty.util.SharedBlockingCallback#<clinit>()
	CALLEE: static org.eclipse.jetty.util.log.Log#getLogger(java.lang.Class)
	CALLEE: org.eclipse.jetty.util.ConstantThrowable#<init>(java.lang.String)
CALLER: org.eclipse.jetty.util.SharedBlockingCallback#<init>()
	CALLEE: org.eclipse.jetty.util.SharedBlockingCallback.Blocker#<init>(org.eclipse.jetty.util.SharedBlockingCallback)
CALLER: org.eclipse.jetty.server.HttpChannel#<init>(org.eclipse.jetty.server.Connector,org.eclipse.jetty.server.HttpConfiguration,org.eclipse.jetty.io.EndPoint,org.eclipse.jetty.server.HttpTransport,org.eclipse.jetty.server.HttpInput)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#isDebugEnabled()
	CALLEE: org.eclipse.jetty.io.AbstractEndPoint#getConnection()
	CALLEE: org.eclipse.jetty.http.HttpURI#<init>(java.nio.charset.Charset)
	CALLEE: org.eclipse.jetty.server.HttpChannelState#<init>(org.eclipse.jetty.server.HttpChannel)
	CALLEE: org.eclipse.jetty.server.Request#<init>(org.eclipse.jetty.server.HttpChannel,org.eclipse.jetty.server.HttpInput)
	CALLEE: org.eclipse.jetty.server.HttpOutput#<init>(org.eclipse.jetty.server.HttpChannel)
	CALLEE: org.eclipse.jetty.server.Response#<init>(org.eclipse.jetty.server.HttpChannel,org.eclipse.jetty.server.HttpOutput)
	CALLEE: org.eclipse.jetty.server.HttpInput#init(org.eclipse.jetty.server.HttpChannelState)
CALLER: org.eclipse.jetty.http.HttpField#<init>(org.eclipse.jetty.http.HttpHeader,org.eclipse.jetty.http.HttpHeaderValue)
	CALLEE: org.eclipse.jetty.http.HttpField#<init>(org.eclipse.jetty.http.HttpHeader,java.lang.String,java.lang.String)
	CALLEE: org.eclipse.jetty.http.HttpHeader#asString()
	CALLEE: org.eclipse.jetty.http.HttpHeaderValue#asString()
CALLER: org.eclipse.jetty.util.AbstractTrie#put(java.lang.Object)
	CALLEE: org.eclipse.jetty.util.ArrayTrie#put(java.lang.String,java.lang.Object)
	CALLEE: org.eclipse.jetty.http.HttpField#toString()
CALLER: org.eclipse.jetty.http.HttpParser#<init>(org.eclipse.jetty.http.HttpParser.RequestHandler,int,boolean)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#isDebugEnabled()
CALLER: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#<init>(com.fasterxml.jackson.core.io.IOContext,int,java.io.Reader,com.fasterxml.jackson.core.ObjectCodec,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#<init>(com.fasterxml.jackson.core.io.IOContext,int)
	CALLEE: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer#hashSeed()
	CALLEE: com.fasterxml.jackson.core.io.IOContext#allocTokenBuffer()
CALLER: com.fasterxml.jackson.core.util.BufferRecycler#<init>()
	CALLEE: com.fasterxml.jackson.core.util.BufferRecycler#<init>(int,int)
CALLER: com.fasterxml.jackson.core.base.ParserBase#<init>(com.fasterxml.jackson.core.io.IOContext,int)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#<init>()
	CALLEE: com.fasterxml.jackson.core.JsonParser.Feature#enabledIn(int)
	CALLEE: static com.fasterxml.jackson.core.json.DupDetector#rootDetector(com.fasterxml.jackson.core.JsonParser)
	CALLEE: static com.fasterxml.jackson.core.json.JsonReadContext#createRootContext(com.fasterxml.jackson.core.json.DupDetector)
	CALLEE: com.fasterxml.jackson.core.io.IOContext#constructTextBuffer()
CALLER: static com.fasterxml.jackson.databind.type.ArrayType#construct(com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#<init>(com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,java.lang.Object,boolean)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
CALLER: com.fasterxml.jackson.databind.type.TypeFactory#_mapType(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#findTypeParameters(java.lang.Class,java.lang.Class)
	CALLEE: static com.fasterxml.jackson.databind.type.MapType#construct(java.lang.Class,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#_unknownType()
CALLER: com.fasterxml.jackson.databind.type.TypeFactory#_collectionType(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#findTypeParameters(java.lang.Class,java.lang.Class)
	CALLEE: static com.fasterxml.jackson.databind.type.CollectionType#construct(java.lang.Class,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#_unknownType()
CALLER: com.fasterxml.jackson.databind.type.TypeFactory#findTypeParameters(java.lang.Class,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.TypeBindings#<init>(com.fasterxml.jackson.databind.type.TypeFactory,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#findTypeParameters(java.lang.Class,java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings)
CALLER: static com.fasterxml.jackson.databind.type.TypeFactory#unknownType()
	CALLEE: static com.fasterxml.jackson.databind.type.TypeFactory#defaultInstance()
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#_unknownType()
CALLER: com.fasterxml.jackson.databind.type.TypeFactory#constructSimpleType(java.lang.Class,java.lang.Class,com.fasterxml.jackson.databind.JavaType[])
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#<init>(java.lang.Class,java.lang.String[],com.fasterxml.jackson.databind.JavaType[],java.lang.Object,java.lang.Object,boolean,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.util.LRUMap#put(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.LRUMap#clear()
CALLER: com.fasterxml.jackson.databind.type.TypeFactory#findTypeParameters(com.fasterxml.jackson.databind.JavaType,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#findTypeParameters(java.lang.Class,java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings)
	CALLEE: com.fasterxml.jackson.databind.type.TypeBindings#<init>(com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#containedType(int)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#containedTypeCount()
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#getParameterSource()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#containedTypeCount()
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#containedTypeCount()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#containedTypeCount()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#containedType(int)
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#containedType(int)
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#containedType(int)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#getParameterSource()
	CALLEE: com.fasterxml.jackson.databind.type.MapType#getParameterSource()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#getParameterSource()
CALLER: static com.fasterxml.jackson.databind.type.MapType#construct(java.lang.Class,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.type.MapType#<init>(java.lang.Class,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean)
CALLER: static com.fasterxml.jackson.databind.type.CollectionType#construct(java.lang.Class,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#<init>(java.lang.Class,com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean)
CALLER: com.fasterxml.jackson.databind.type.TypeFactory#constructSimpleType(java.lang.Class,com.fasterxml.jackson.databind.JavaType[])
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#constructSimpleType(java.lang.Class,java.lang.Class,com.fasterxml.jackson.databind.JavaType[])
CALLER: static com.fasterxml.jackson.databind.type.TypeBindings#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.type.TypeBindings#<init>(com.fasterxml.jackson.databind.type.TypeFactory,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.TypeBindings#<init>(com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.type.TypeBindings,java.lang.Class,com.fasterxml.jackson.databind.JavaType)
CALLER: com.fasterxml.jackson.databind.JsonMappingException#<init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation)
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#<init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation)
CALLER: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl#<init>(com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.InjectableValues)
	CALLEE: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext#<init>(com.fasterxml.jackson.databind.deser.DefaultDeserializationContext,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.InjectableValues)
CALLER: com.fasterxml.jackson.databind.util.RootNameLookup#findRootName(java.lang.Class,com.fasterxml.jackson.databind.cfg.MapperConfig)
	CALLEE: com.fasterxml.jackson.databind.PropertyName#<init>(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.type.ClassKey#<init>(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.util.LRUMap#get(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.LRUMap#put(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.DeserializationConfig#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#introspectClassAnnotations(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findRootName(com.fasterxml.jackson.databind.introspect.AnnotatedClass)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findRootName(com.fasterxml.jackson.databind.introspect.AnnotatedClass)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#getClassInfo()
	CALLEE: com.fasterxml.jackson.databind.PropertyName#hasSimpleName()
	CALLEE: com.fasterxml.jackson.databind.SerializationConfig#getAnnotationIntrospector()
CALLER: static org.glassfish.jersey.server.ApplicationHandler#getRankedComponentProviders()
	CALLEE: static org.glassfish.jersey.internal.ServiceFinder#find(java.lang.Class)
	CALLEE: org.glassfish.jersey.internal.ServiceFinder#iterator()
	CALLEE: org.glassfish.jersey.model.internal.RankedComparator#<init>(org.glassfish.jersey.model.internal.RankedComparator.Order)
	CALLEE: org.glassfish.jersey.model.internal.RankedProvider#<init>(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.OsgiRegistry.OsgiServiceFinder.1#next()
	CALLEE: org.glassfish.jersey.internal.ServiceFinder.LazyObjectIterator#next()
	CALLEE: org.glassfish.jersey.internal.OsgiRegistry.OsgiServiceFinder.1#hasNext()
	CALLEE: org.glassfish.jersey.internal.ServiceFinder.LazyObjectIterator#hasNext()
CALLER: static org.glassfish.hk2.internal.ServiceLocatorFactoryImpl#getGeneratorSecure()
	CALLEE: org.glassfish.hk2.internal.ServiceLocatorFactoryImpl.2#<init>()
CALLER: static org.glassfish.hk2.utilities.reflection.ReflectionHelper#getRawClass(java.lang.reflect.Type)
	CALLEE: static org.glassfish.hk2.utilities.reflection.ReflectionHelper#getRawClass(java.lang.reflect.Type)
	CALLEE: org.glassfish.hk2.utilities.reflection.ParameterizedTypeImpl#getRawType()
CALLER: static org.glassfish.hk2.utilities.reflection.ReflectionHelper#getAllContractsFromInterfaces(java.lang.Class,java.lang.Class,java.util.Set,java.util.Set)
	CALLEE: static org.glassfish.hk2.utilities.reflection.ReflectionHelper#getRawClass(java.lang.reflect.Type)
	CALLEE: static org.glassfish.hk2.utilities.reflection.ReflectionHelper#getAllContractsFromInterfaces(java.lang.Class,java.lang.Class,java.util.Set,java.util.Set)
CALLER: static org.glassfish.hk2.utilities.reflection.ReflectionHelper#getQualifierAnnotations(java.lang.reflect.AnnotatedElement)
	CALLEE: org.glassfish.hk2.utilities.reflection.ReflectionHelper.1#<init>(java.lang.reflect.AnnotatedElement)
CALLER: static org.glassfish.hk2.utilities.reflection.ReflectionHelper#invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],boolean)
	CALLEE: static org.glassfish.hk2.utilities.reflection.Logger#getLogger()
	CALLEE: static org.glassfish.hk2.utilities.reflection.ReflectionHelper#isStatic(java.lang.reflect.Member)
	CALLEE: static org.glassfish.hk2.utilities.reflection.ReflectionHelper#setAccessible(java.lang.reflect.AccessibleObject)
	CALLEE: static org.glassfish.hk2.utilities.reflection.ReflectionHelper#getCurrentContextClassLoader()
	CALLEE: static org.glassfish.hk2.utilities.reflection.ReflectionHelper#setContextClassLoader(java.lang.Thread,java.lang.ClassLoader)
	CALLEE: org.glassfish.hk2.utilities.reflection.Logger#debug(java.lang.String,java.lang.String,java.lang.Throwable)
CALLER: org.glassfish.hk2.api.MultiException#<init>(java.lang.Throwable)
	CALLEE: org.glassfish.hk2.api.MultiException#<init>(java.lang.Throwable,boolean)
CALLER: org.glassfish.hk2.utilities.AbstractActiveDescriptor#<init>(java.util.Set,java.lang.Class,java.lang.String,java.util.Set,org.glassfish.hk2.api.DescriptorType,org.glassfish.hk2.api.DescriptorVisibility,int,java.lang.Boolean,java.lang.Boolean,java.lang.String,java.util.Map)
	CALLEE: org.glassfish.hk2.utilities.DescriptorImpl#addMetadata(java.lang.String,java.lang.String)
	CALLEE: org.glassfish.hk2.api.AnnotationLiteral#annotationType()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: static org.glassfish.hk2.utilities.reflection.ReflectionHelper#getRawClass(java.lang.reflect.Type)
	CALLEE: org.glassfish.hk2.utilities.DescriptorImpl#<init>()
	CALLEE: org.glassfish.hk2.utilities.DescriptorImpl#setRanking(int)
	CALLEE: org.glassfish.hk2.utilities.DescriptorImpl#setDescriptorType(org.glassfish.hk2.api.DescriptorType)
	CALLEE: org.glassfish.hk2.utilities.DescriptorImpl#setDescriptorVisibility(org.glassfish.hk2.api.DescriptorVisibility)
	CALLEE: org.glassfish.hk2.utilities.AbstractActiveDescriptor#setName(java.lang.String)
	CALLEE: org.glassfish.hk2.utilities.DescriptorImpl#setProxiable(java.lang.Boolean)
	CALLEE: org.glassfish.hk2.utilities.DescriptorImpl#setProxyForSameScope(java.lang.Boolean)
	CALLEE: org.glassfish.hk2.utilities.DescriptorImpl#setScope(java.lang.String)
	CALLEE: org.glassfish.hk2.utilities.DescriptorImpl#addAdvertisedContract(java.lang.String)
	CALLEE: org.glassfish.hk2.utilities.DescriptorImpl#addQualifier(java.lang.String)
	CALLEE: org.glassfish.hk2.utilities.DescriptorImpl#setClassAnalysisName(java.lang.String)
CALLER: jersey.repackaged.org.objectweb.asm.Attribute#read(jersey.repackaged.org.objectweb.asm.ClassReader,int,int,char[],int,jersey.repackaged.org.objectweb.asm.Label[])
	CALLEE: jersey.repackaged.org.objectweb.asm.Attribute#<init>(java.lang.String)
CALLER: jersey.repackaged.org.objectweb.asm.ClassReader#readAnnotationValue(int,char[],java.lang.String,jersey.repackaged.org.objectweb.asm.AnnotationVisitor)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readUnsignedShort(int)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readUTF8(int,char[])
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readInt(int)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readAnnotationValues(int,char[],boolean,jersey.repackaged.org.objectweb.asm.AnnotationVisitor)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readConst(int,char[])
	CALLEE: static jersey.repackaged.org.objectweb.asm.Type#getType(java.lang.String)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readLong(int)
CALLER: jersey.repackaged.org.objectweb.asm.ClassReader#readLabel(int,jersey.repackaged.org.objectweb.asm.Label[])
	CALLEE: jersey.repackaged.org.objectweb.asm.Label#<init>()
CALLER: jersey.repackaged.org.objectweb.asm.ClassReader#readConst(int,char[])
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readUnsignedShort(int)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readClass(int,char[])
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readUTF8(int,char[])
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readInt(int)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readByte(int)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readLong(int)
	CALLEE: static jersey.repackaged.org.objectweb.asm.Type#getObjectType(java.lang.String)
	CALLEE: static jersey.repackaged.org.objectweb.asm.Type#getMethodType(java.lang.String)
	CALLEE: jersey.repackaged.org.objectweb.asm.Handle#<init>(int,java.lang.String,java.lang.String,java.lang.String)
CALLER: jersey.repackaged.org.objectweb.asm.ClassReader#readParameterAnnotations(jersey.repackaged.org.objectweb.asm.MethodVisitor,jersey.repackaged.org.objectweb.asm.Context,int,boolean)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readUnsignedShort(int)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readUTF8(int,char[])
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readAnnotationValues(int,char[],boolean,jersey.repackaged.org.objectweb.asm.AnnotationVisitor)
	CALLEE: static jersey.repackaged.org.objectweb.asm.Type#getArgumentTypes(java.lang.String)
CALLER: jersey.repackaged.org.objectweb.asm.ClassReader#readCode(jersey.repackaged.org.objectweb.asm.MethodVisitor,jersey.repackaged.org.objectweb.asm.Context,int)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readUnsignedShort(int)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readClass(int,char[])
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readUTF8(int,char[])
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readInt(int)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readAnnotationValues(int,char[],boolean,jersey.repackaged.org.objectweb.asm.AnnotationVisitor)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readAnnotationTarget(jersey.repackaged.org.objectweb.asm.Context,int)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readShort(int)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readLabel(int,jersey.repackaged.org.objectweb.asm.Label[])
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readByte(int)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readConst(int,char[])
	CALLEE: jersey.repackaged.org.objectweb.asm.Label#<init>()
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readTypeAnnotations(jersey.repackaged.org.objectweb.asm.MethodVisitor,jersey.repackaged.org.objectweb.asm.Context,int,boolean)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#getImplicitFrame(jersey.repackaged.org.objectweb.asm.Context)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readFrame(int,boolean,boolean,jersey.repackaged.org.objectweb.asm.Context)
CALLER: org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.AnnotatedClassVisitor#getClassForName(java.lang.String)
	CALLEE: static org.glassfish.jersey.internal.util.ReflectionHelper#getOsgiRegistryInstance()
	CALLEE: static org.glassfish.jersey.internal.util.ReflectionHelper#classForNameWithExceptionPEA(java.lang.String,java.lang.ClassLoader)
	CALLEE: org.glassfish.jersey.internal.OsgiRegistry#classForNameWithException(java.lang.String)
	CALLEE: static org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener#access$300(org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#ERROR_SCANNING_CLASS_NOT_FOUND(java.lang.Object)
CALLER: org.apache.log4j.PatternLayout#format(org.apache.log4j.spi.LoggingEvent)
	CALLEE: org.apache.log4j.helpers.PatternParser.LiteralPatternConverter#format(java.lang.StringBuffer,org.apache.log4j.spi.LoggingEvent)
	CALLEE: org.apache.log4j.helpers.PatternConverter#format(java.lang.StringBuffer,org.apache.log4j.spi.LoggingEvent)
CALLER: org.apache.log4j.spi.LoggingEvent#getThrowableStrRep()
	CALLEE: org.apache.log4j.spi.ThrowableInformation#getThrowableStrRep()
CALLER: org.apache.log4j.helpers.QuietWriter#flush()
	CALLEE: org.apache.log4j.helpers.OnlyOnceErrorHandler#error(java.lang.String,java.lang.Exception,int)
CALLER: static jersey.repackaged.com.google.common.collect.AbstractIterator.State#<clinit>()
	CALLEE: jersey.repackaged.com.google.common.collect.AbstractIterator.State#<init>(java.lang.String,int)
CALLER: org.eclipse.jetty.io.WriteFlusher#updateState(org.eclipse.jetty.io.WriteFlusher.State,org.eclipse.jetty.io.WriteFlusher.State)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.io.WriteFlusher#isTransitionAllowed(org.eclipse.jetty.io.WriteFlusher.State,org.eclipse.jetty.io.WriteFlusher.State)
CALLER: org.eclipse.jetty.io.WriteFlusher.FailedState#<init>(java.lang.Throwable,org.eclipse.jetty.io.WriteFlusher.1)
	CALLEE: org.eclipse.jetty.io.WriteFlusher.FailedState#<init>(java.lang.Throwable)
CALLER: org.eclipse.jetty.io.ChannelEndPoint#close()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.Throwable)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#isDebugEnabled()
	CALLEE: org.eclipse.jetty.io.AbstractEndPoint#close()
CALLER: org.eclipse.jetty.io.SelectorManager.ManagedSelector#destroyEndPoint(org.eclipse.jetty.io.EndPoint)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#isDebugEnabled()
	CALLEE: org.eclipse.jetty.io.AbstractEndPoint#getConnection()
	CALLEE: org.eclipse.jetty.io.SelectorManager#connectionClosed(org.eclipse.jetty.io.Connection)
	CALLEE: org.eclipse.jetty.server.ServerConnector.ServerConnectorManager#endPointClosed(org.eclipse.jetty.io.EndPoint)
CALLER: org.eclipse.jetty.server.session.AbstractSessionManager#addEventListener(java.util.EventListener)
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle#addBean(java.lang.Object,boolean)
CALLER: org.eclipse.jetty.util.AttributesMap#keySet()
	CALLEE: org.eclipse.jetty.util.AttributesMap#map()
CALLER: static javax.ws.rs.ext.RuntimeDelegate#findDelegate()
	CALLEE: static javax.ws.rs.ext.FactoryFinder#find(java.lang.String,java.lang.String)
CALLER: static org.glassfish.jersey.internal.Version#_initiateProperties()
	CALLEE: static org.glassfish.jersey.internal.Version#getIntputStream()
	CALLEE: static org.glassfish.jersey.internal.Version#close(java.io.InputStream)
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableINIT_MSG(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: org.glassfish.jersey.server.ResourceConfig#setupApplicationName()
	CALLEE: org.glassfish.jersey.server.ResourceConfig#getProperties()
	CALLEE: static org.glassfish.jersey.server.ServerProperties#getValue(java.util.Map,java.lang.String,java.lang.Object,java.lang.Class)
	CALLEE: org.glassfish.jersey.server.ResourceConfig#setApplicationName(java.lang.String)
	CALLEE: org.glassfish.jersey.server.ResourceConfig#getApplicationName()
CALLER: org.glassfish.jersey.server.ResourceConfig.ImmutableState#<init>(org.glassfish.jersey.server.ResourceConfig.State,org.glassfish.jersey.server.ResourceConfig.1)
	CALLEE: org.glassfish.jersey.server.ResourceConfig.ImmutableState#<init>(org.glassfish.jersey.server.ResourceConfig.State)
CALLER: org.glassfish.jersey.model.internal.CommonConfig#configureAutoDiscoverableProviders(org.glassfish.hk2.api.ServiceLocator,boolean)
	CALLEE: static org.glassfish.jersey.internal.ServiceFinder#find(java.lang.Class,boolean)
	CALLEE: org.glassfish.jersey.internal.ServiceFinder#toClassArray()
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig.2#<init>(org.glassfish.jersey.model.internal.CommonConfig)
	CALLEE: static org.glassfish.jersey.internal.inject.Providers#getProviders(org.glassfish.hk2.api.ServiceLocator,java.lang.Class)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#AUTODISCOVERABLE_CONFIGURATION_FAILED(java.lang.Object)
CALLER: org.glassfish.jersey.server.ResourceConfig.ImmutableState#configureAutoDiscoverableProviders(org.glassfish.hk2.api.ServiceLocator,boolean)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#RC_NOT_MODIFIABLE()
CALLER: org.glassfish.jersey.model.internal.CommonConfig#configureMetaProviders(org.glassfish.hk2.api.ServiceLocator)
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig#configureBinders(org.glassfish.hk2.api.ServiceLocator,java.util.Set)
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig#registerManagedObjectsFinalizer(org.glassfish.hk2.api.ServiceLocator)
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig#resetRegistrations()
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig#configureFeatures(org.glassfish.hk2.api.ServiceLocator,java.util.Set,java.util.List)
CALLER: org.glassfish.jersey.server.ResourceConfig.ImmutableState#configureMetaProviders(org.glassfish.hk2.api.ServiceLocator)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#RC_NOT_MODIFIABLE()
CALLER: org.glassfish.jersey.server.ResourceBag.Builder#registerModel(org.glassfish.jersey.server.model.Resource)
	CALLEE: static org.glassfish.jersey.server.model.Resource#builder(org.glassfish.jersey.server.model.Resource)
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#mergeWith(org.glassfish.jersey.server.model.Resource)
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#build()
	CALLEE: org.glassfish.jersey.server.model.Resource#getPath()
CALLER: org.glassfish.jersey.server.model.IntrospectionModeller#createResourceBuilder()
	CALLEE: static org.glassfish.jersey.internal.Errors#processWithException(org.glassfish.jersey.internal.util.Producer)
	CALLEE: org.glassfish.jersey.server.model.IntrospectionModeller.1#<init>(org.glassfish.jersey.server.model.IntrospectionModeller)
CALLER: static org.glassfish.jersey.server.model.Resource.Builder#access$1800(org.glassfish.jersey.server.model.Resource.Builder)
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#isEmpty()
CALLER: org.glassfish.jersey.server.ResourceBag#<init>(java.util.Set,java.util.Set,java.util.List,org.glassfish.jersey.server.ResourceBag.1)
	CALLEE: org.glassfish.jersey.server.ResourceBag#<init>(java.util.Set,java.util.Set,java.util.List)
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableWARNING_TOO_MANY_EXTERNAL_REQ_SCOPES(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.hk2.utilities.binding.BindingBuilderFactory#newBinder(java.lang.Object)
	CALLEE: static org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#create(java.lang.Object)
CALLER: org.glassfish.jersey.server.ApplicationHandler#bindWithComponentProvider(java.lang.Class,org.glassfish.jersey.model.ContractProvider,java.lang.Iterable)
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: org.glassfish.jersey.model.ContractProvider#getContracts()
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#NON_INSTANTIABLE_COMPONENT(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableNON_INSTANTIABLE_COMPONENT(java.lang.Object)
CALLER: static org.glassfish.jersey.internal.inject.Providers#checkProviderRuntime(java.lang.Class,org.glassfish.jersey.model.ContractProvider,javax.ws.rs.RuntimeType,boolean,boolean)
	CALLEE: static org.glassfish.jersey.internal.inject.Providers#getContractConstraint(java.lang.Class,javax.ws.rs.RuntimeType)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#WARNING_PROVIDER_CONSTRAINED_TO_WRONG_PACKAGE(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#ERROR_PROVIDER_CONSTRAINED_TO_WRONG_PACKAGE(java.lang.Object,java.lang.Object)
	CALLEE: static org.glassfish.jersey.internal.inject.Providers#logProviderSkipped(java.lang.StringBuilder,java.lang.Class,boolean)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#ERROR_PROVIDER_CONSTRAINED_TO_WRONG_RUNTIME(java.lang.Object,java.lang.Object,java.lang.Object)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#ERROR_PROVIDER_REGISTERED_WRONG_RUNTIME(java.lang.Object,java.lang.Object)
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: org.glassfish.jersey.model.ContractProvider#getContracts()
CALLER: static org.glassfish.jersey.internal.inject.ProviderBinder#bindProvider(java.lang.Class,org.glassfish.jersey.model.ContractProvider,org.glassfish.hk2.api.DynamicConfiguration)
	CALLEE: static org.glassfish.jersey.internal.inject.Injections#newBinder(java.lang.Class)
	CALLEE: static org.glassfish.jersey.internal.inject.Injections#addBinding(org.glassfish.hk2.utilities.binding.BindingBuilder,org.glassfish.hk2.api.DynamicConfiguration)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#qualifiedBy(java.lang.annotation.Annotation)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#qualifiedBy(java.lang.annotation.Annotation)
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#qualifiedBy(java.lang.annotation.Annotation)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#qualifiedBy(java.lang.annotation.Annotation)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#ranked(int)
	CALLEE: org.glassfish.jersey.model.ContractProvider#getPriority(java.lang.Class)
	CALLEE: org.glassfish.jersey.model.ContractProvider#getContracts()
	CALLEE: org.glassfish.jersey.model.ContractProvider#getScope()
CALLER: static org.glassfish.jersey.internal.inject.ProviderBinder#bindProvider(java.lang.Object,org.glassfish.jersey.model.ContractProvider,org.glassfish.hk2.api.DynamicConfiguration)
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: static org.glassfish.jersey.internal.inject.Injections#addBinding(org.glassfish.hk2.utilities.binding.BindingBuilder,org.glassfish.hk2.api.DynamicConfiguration)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#to(java.lang.Class)
	CALLEE: static org.glassfish.jersey.internal.inject.Injections#newBinder(java.lang.Object)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#qualifiedBy(java.lang.annotation.Annotation)
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#ranked(int)
	CALLEE: org.glassfish.jersey.model.ContractProvider#getPriority(java.lang.Class)
	CALLEE: org.glassfish.jersey.model.ContractProvider#getContracts()
CALLER: static org.glassfish.jersey.model.internal.RankedComparator.Order#<clinit>()
	CALLEE: org.glassfish.jersey.model.internal.RankedComparator.Order#<init>(java.lang.String,int,int)
CALLER: static org.glassfish.jersey.internal.inject.Providers#getAllRankedProviders(org.glassfish.hk2.api.ServiceLocator,java.lang.Class)
	CALLEE: static org.glassfish.jersey.internal.inject.Providers#getServiceHandles(org.glassfish.hk2.api.ServiceLocator,java.lang.Class,java.lang.annotation.Annotation[])
	CALLEE: org.glassfish.jersey.model.internal.RankedProvider#<init>(java.lang.Object,int,java.util.Set)
CALLER: static org.glassfish.jersey.internal.inject.Providers#sortRankedProviders(org.glassfish.jersey.model.internal.RankedComparator,java.lang.Iterable)
	CALLEE: static jersey.repackaged.com.google.common.collect.Collections2#transform(java.util.Collection,jersey.repackaged.com.google.common.base.Function)
	CALLEE: static jersey.repackaged.com.google.common.collect.Lists#newArrayList(java.lang.Iterable)
	CALLEE: org.glassfish.jersey.internal.inject.Providers.2#<init>()
CALLER: static org.glassfish.jersey.internal.util.ReflectionHelper#getAnnotationTypes(java.lang.reflect.AnnotatedElement,java.lang.Class)
	CALLEE: static jersey.repackaged.com.google.common.collect.Sets#newIdentityHashSet()
CALLER: javax.ws.rs.core.MultivaluedHashMap#<init>()
	CALLEE: javax.ws.rs.core.AbstractMultivaluedMap#<init>(java.util.Map)
CALLER: static org.glassfish.jersey.server.ApplicationHandler#filterNameBound(java.lang.Iterable,java.util.Collection,org.glassfish.jersey.model.internal.ComponentBag,java.util.Collection,javax.ws.rs.core.MultivaluedMap)
	CALLEE: org.glassfish.jersey.model.internal.ComponentBag#getModel(java.lang.Class)
	CALLEE: javax.ws.rs.core.MultivaluedHashMap#<init>()
	CALLEE: static org.glassfish.jersey.internal.util.ReflectionHelper#theMostSpecificTypeOf(java.util.Set)
	CALLEE: static org.glassfish.jersey.model.internal.ComponentBag#modelFor(java.lang.Class)
	CALLEE: org.glassfish.jersey.model.internal.RankedProvider#<init>(java.lang.Object,int)
	CALLEE: javax.ws.rs.core.AbstractMultivaluedMap#add(java.lang.Object,java.lang.Object)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#PREMATCHING_ALSO_NAME_BOUND(java.lang.Object)
	CALLEE: org.glassfish.jersey.model.internal.RankedProvider#getProvider()
	CALLEE: org.glassfish.jersey.model.internal.RankedProvider#getContractTypes()
	CALLEE: org.glassfish.jersey.model.ContractProvider#getNameBindings()
	CALLEE: org.glassfish.jersey.model.ContractProvider#isNameBound()
	CALLEE: org.glassfish.jersey.model.ContractProvider#getPriority(java.lang.Class)
CALLER: org.glassfish.jersey.server.internal.ProcessingProviders#<init>(javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap,java.lang.Iterable,java.util.List,java.lang.Iterable,java.lang.Iterable,java.lang.Iterable,java.lang.Iterable)
	CALLEE: org.glassfish.jersey.model.internal.RankedComparator#<init>()
	CALLEE: static org.glassfish.jersey.internal.inject.Providers#sortRankedProviders(org.glassfish.jersey.model.internal.RankedComparator,java.lang.Iterable)
CALLER: javax.ws.rs.core.GenericType#<init>()
	CALLEE: static javax.ws.rs.core.GenericType#getTypeArgument(java.lang.Class,java.lang.Class)
	CALLEE: static javax.ws.rs.core.GenericType#getClass(java.lang.reflect.Type)
CALLER: static org.glassfish.jersey.server.model.Resource#builder(org.glassfish.jersey.server.model.Resource)
	CALLEE: static org.glassfish.jersey.server.model.Resource#builder(org.glassfish.jersey.server.model.Resource.Data)
CALLER: org.glassfish.jersey.server.model.ResourceModel#<init>(java.util.List,java.util.List,org.glassfish.jersey.server.model.ResourceModel.1)
	CALLEE: org.glassfish.jersey.server.model.ResourceModel#<init>(java.util.List,java.util.List)
CALLER: org.glassfish.jersey.server.model.ResourceValidator#<init>()
	CALLEE: org.glassfish.jersey.server.model.AbstractResourceModelVisitor#<init>()
CALLER: static org.glassfish.jersey.server.model.RuntimeResourceModelValidator#<clinit>()
	CALLEE: javax.ws.rs.core.MediaType#<init>(java.lang.String,java.lang.String)
CALLER: org.glassfish.jersey.server.model.RuntimeResourceModelValidator#<init>(org.glassfish.jersey.message.MessageBodyWorkers)
	CALLEE: org.glassfish.jersey.server.model.AbstractResourceModelVisitor#<init>()
CALLER: static org.glassfish.jersey.server.model.ResourceMethodValidator#<clinit>()
	CALLEE: static org.glassfish.jersey.server.model.ResourceMethodValidator#createParamAnnotationSet()
CALLER: org.glassfish.jersey.server.model.ResourceMethodValidator#<init>(org.glassfish.hk2.api.ServiceLocator)
	CALLEE: org.glassfish.jersey.server.model.AbstractResourceModelVisitor#<init>()
CALLER: static org.glassfish.jersey.server.model.InvocableValidator#<clinit>()
	CALLEE: static org.glassfish.jersey.server.model.InvocableValidator#getScopeAnnotations()
CALLER: org.glassfish.jersey.server.model.InvocableValidator#<init>()
	CALLEE: org.glassfish.jersey.server.model.AbstractResourceModelVisitor#<init>()
CALLER: static org.glassfish.jersey.internal.Errors#process(java.lang.Runnable)
	CALLEE: static org.glassfish.jersey.internal.Errors#process(org.glassfish.jersey.internal.util.Producer,boolean)
	CALLEE: org.glassfish.jersey.internal.Errors.1#<init>(java.lang.Runnable)
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableRESOURCE_MODEL_VALIDATION_FAILED_AT_INIT()
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.internal.Errors#getErrorMessages(boolean)
	CALLEE: static org.glassfish.jersey.internal.Errors#getInstance()
	CALLEE: org.glassfish.jersey.internal.Errors#_getErrorMessages(boolean)
CALLER: static jersey.repackaged.com.google.common.collect.Lists#transform(java.util.List,jersey.repackaged.com.google.common.base.Function)
	CALLEE: jersey.repackaged.com.google.common.collect.Lists.TransformingRandomAccessList#<init>(java.util.List,jersey.repackaged.com.google.common.base.Function)
	CALLEE: jersey.repackaged.com.google.common.collect.Lists.TransformingSequentialList#<init>(java.util.List,jersey.repackaged.com.google.common.base.Function)
CALLER: static org.glassfish.jersey.process.internal.ExecutorProviders#getQualifierToProviderMap(org.glassfish.hk2.api.ServiceLocator,java.lang.Class)
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: static org.glassfish.jersey.internal.util.ReflectionHelper#getAnnotationTypes(java.lang.reflect.AnnotatedElement,java.lang.Class)
	CALLEE: static org.glassfish.jersey.internal.inject.Providers#getCustomProviders(org.glassfish.hk2.api.ServiceLocator,java.lang.Class)
	CALLEE: static org.glassfish.jersey.internal.inject.Providers#getProviders(org.glassfish.hk2.api.ServiceLocator,java.lang.Class)
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#USING_EXECUTOR_PROVIDER(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#localizableUSING_EXECUTOR_PROVIDER(java.lang.Object,java.lang.Object)
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#IGNORED_EXECUTOR_PROVIDERS(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#localizableIGNORED_EXECUTOR_PROVIDERS(java.lang.Object,java.lang.Object)
CALLER: org.glassfish.jersey.process.internal.ExecutorProviders.ExecutorServiceFactory#<init>(org.glassfish.jersey.spi.ExecutorServiceProvider,org.glassfish.jersey.process.internal.ExecutorProviders.1)
	CALLEE: org.glassfish.jersey.process.internal.ExecutorProviders.ExecutorServiceFactory#<init>(org.glassfish.jersey.spi.ExecutorServiceProvider)
CALLER: static org.glassfish.jersey.internal.inject.Injections#newFactoryBinder(org.glassfish.hk2.api.Factory)
	CALLEE: static org.glassfish.hk2.utilities.binding.BindingBuilderFactory#newFactoryBinder(org.glassfish.hk2.api.Factory)
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#USING_SCHEDULER_PROVIDER(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#localizableUSING_SCHEDULER_PROVIDER(java.lang.Object,java.lang.Object)
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#IGNORED_SCHEDULER_PROVIDERS(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#localizableIGNORED_SCHEDULER_PROVIDERS(java.lang.Object,java.lang.Object)
CALLER: org.glassfish.jersey.process.internal.ExecutorProviders.ScheduledExecutorServiceFactory#<init>(org.glassfish.jersey.spi.ScheduledExecutorServiceProvider,org.glassfish.jersey.process.internal.ExecutorProviders.1)
	CALLEE: org.glassfish.jersey.process.internal.ExecutorProviders.ScheduledExecutorServiceFactory#<init>(org.glassfish.jersey.spi.ScheduledExecutorServiceProvider)
CALLER: org.glassfish.jersey.process.internal.AbstractChainableStage#<init>()
	CALLEE: org.glassfish.jersey.process.internal.AbstractChainableStage#<init>(org.glassfish.jersey.process.internal.Stage)
CALLER: org.glassfish.jersey.server.internal.routing.Routing.Builder#<init>(org.glassfish.jersey.server.model.RuntimeResourceModel,org.glassfish.jersey.server.internal.routing.Routing.1)
	CALLEE: org.glassfish.jersey.server.internal.routing.Routing.Builder#<init>(org.glassfish.jersey.server.model.RuntimeResourceModel)
CALLER: org.glassfish.jersey.process.internal.Stages.StageChainBuilder#<init>(jersey.repackaged.com.google.common.base.Function,org.glassfish.jersey.process.internal.Stages.1)
	CALLEE: org.glassfish.jersey.process.internal.Stages.StageChainBuilder#<init>(jersey.repackaged.com.google.common.base.Function)
CALLER: org.glassfish.jersey.process.internal.Stages.1#<init>()
	CALLEE: org.glassfish.jersey.process.internal.AbstractChainableStage#<init>()
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableCLEARING_HK_2_CACHE(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#LOGGING_APPLICATION_INITIALIZED()
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableLOGGING_APPLICATION_INITIALIZED()
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#LOGGING_ROOT_RESOURCE_CLASSES()
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableLOGGING_ROOT_RESOURCE_CLASSES()
CALLER: static org.glassfish.jersey.internal.inject.Providers#getCustomProviders(org.glassfish.hk2.api.ServiceLocator,java.lang.Class)
	CALLEE: static org.glassfish.jersey.internal.inject.Providers#getClasses(java.util.Collection)
	CALLEE: static org.glassfish.jersey.internal.inject.Providers#getServiceHandles(org.glassfish.hk2.api.ServiceLocator,java.lang.Class,java.lang.annotation.Annotation[])
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#LOGGING_PRE_MATCH_FILTERS()
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableLOGGING_PRE_MATCH_FILTERS()
CALLER: static org.glassfish.jersey.server.ApplicationHandler#printProviders(java.lang.String,java.lang.Iterable,java.lang.StringBuilder)
	CALLEE: jersey.repackaged.com.google.common.collect.Collections2.TransformedCollection#iterator()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#LOGGING_GLOBAL_REQUEST_FILTERS()
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableLOGGING_GLOBAL_REQUEST_FILTERS()
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#LOGGING_GLOBAL_RESPONSE_FILTERS()
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableLOGGING_GLOBAL_RESPONSE_FILTERS()
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#LOGGING_GLOBAL_READER_INTERCEPTORS()
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableLOGGING_GLOBAL_READER_INTERCEPTORS()
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#LOGGING_GLOBAL_WRITER_INTERCEPTORS()
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableLOGGING_GLOBAL_WRITER_INTERCEPTORS()
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#LOGGING_NAME_BOUND_REQUEST_FILTERS()
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableLOGGING_NAME_BOUND_REQUEST_FILTERS()
CALLER: static org.glassfish.jersey.server.ApplicationHandler#printNameBoundProviders(java.lang.String,java.util.Map,java.lang.StringBuilder)
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#LOGGING_PROVIDER_BOUND(java.lang.Object,java.lang.Object)
	CALLEE: javax.ws.rs.core.AbstractMultivaluedMap#entrySet()
	CALLEE: javax.ws.rs.core.AbstractMultivaluedMap#isEmpty()
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#LOGGING_NAME_BOUND_RESPONSE_FILTERS()
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableLOGGING_NAME_BOUND_RESPONSE_FILTERS()
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#LOGGING_NAME_BOUND_READER_INTERCEPTORS()
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableLOGGING_NAME_BOUND_READER_INTERCEPTORS()
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#LOGGING_NAME_BOUND_WRITER_INTERCEPTORS()
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableLOGGING_NAME_BOUND_WRITER_INTERCEPTORS()
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#LOGGING_DYNAMIC_FEATURES()
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableLOGGING_DYNAMIC_FEATURES()
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#LOGGING_MESSAGE_BODY_READERS()
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableLOGGING_MESSAGE_BODY_READERS()
CALLER: org.glassfish.jersey.server.ApplicationHandler.WorkersToStringTransform#<init>(org.glassfish.jersey.server.ApplicationHandler.1)
	CALLEE: org.glassfish.jersey.server.ApplicationHandler.WorkersToStringTransform#<init>()
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#LOGGING_MESSAGE_BODY_WRITERS()
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableLOGGING_MESSAGE_BODY_WRITERS()
CALLER: static org.slf4j.helpers.MessageFormatter#safeObjectAppend(java.lang.StringBuilder,java.lang.Object)
	CALLEE: static org.slf4j.helpers.Util#report(java.lang.String,java.lang.Throwable)
	CALLEE: org.eclipse.jetty.util.MultiException#toString()
	CALLEE: org.h2.jdbc.JdbcSQLException#toString()
	CALLEE: com.zaxxer.hikari.pool.PoolEntry#toString()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#toString()
	CALLEE: org.glassfish.hk2.api.MultiException#toString()
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#toString()
CALLER: static org.slf4j.helpers.MessageFormatter#objectArrayAppend(java.lang.StringBuilder,java.lang.Object[],java.util.Map)
	CALLEE: static org.slf4j.helpers.MessageFormatter#deeplyAppendParameter(java.lang.StringBuilder,java.lang.Object,java.util.Map)
CALLER: static org.eclipse.jetty.util.IteratingCallback.State#<clinit>()
	CALLEE: org.eclipse.jetty.util.IteratingCallback.State#<init>(java.lang.String,int)
CALLER: org.eclipse.jetty.server.HttpInput#<init>(java.lang.Object)
	CALLEE: javax.servlet.ServletInputStream#<init>()
CALLER: org.eclipse.jetty.util.SharedBlockingCallback.Blocker#<init>(org.eclipse.jetty.util.SharedBlockingCallback)
	CALLEE: static org.eclipse.jetty.util.SharedBlockingCallback#access$000()
CALLER: static org.eclipse.jetty.server.HttpChannelState#<clinit>()
	CALLEE: static org.eclipse.jetty.util.log.Log#getLogger(java.lang.Class)
CALLER: org.eclipse.jetty.server.HttpChannelState#<init>(org.eclipse.jetty.server.HttpChannel)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#isDebugEnabled()
CALLER: static org.eclipse.jetty.server.Request#<clinit>()
	CALLEE: static org.eclipse.jetty.util.log.Log#getLogger(java.lang.Class)
CALLER: org.eclipse.jetty.server.Request#<init>(org.eclipse.jetty.server.HttpChannel,org.eclipse.jetty.server.HttpInput)
	CALLEE: org.eclipse.jetty.http.HttpFields#<init>()
CALLER: static org.eclipse.jetty.server.Response#<clinit>()
	CALLEE: static org.eclipse.jetty.util.log.Log#getLogger(java.lang.Class)
	CALLEE: static org.eclipse.jetty.http.DateGenerator#formatCookieDate(long)
	CALLEE: org.eclipse.jetty.server.Response.1#<init>()
CALLER: static org.eclipse.jetty.server.HttpOutput#<clinit>()
	CALLEE: static org.eclipse.jetty.util.log.Log#getLogger(java.lang.Class)
CALLER: org.eclipse.jetty.server.HttpOutput#<init>(org.eclipse.jetty.server.HttpChannel)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#warn(java.lang.String,java.lang.Object[])
	CALLEE: javax.servlet.ServletOutputStream#<init>()
	CALLEE: org.eclipse.jetty.server.HttpOutput.1#<init>(org.eclipse.jetty.server.HttpOutput)
	CALLEE: org.eclipse.jetty.server.HttpChannel#getHttpConfiguration()
	CALLEE: org.eclipse.jetty.server.HttpConfiguration#getOutputAggregationSize()
	CALLEE: org.eclipse.jetty.server.HttpConfiguration#getOutputBufferSize()
CALLER: org.eclipse.jetty.server.Response#<init>(org.eclipse.jetty.server.HttpChannel,org.eclipse.jetty.server.HttpOutput)
	CALLEE: org.eclipse.jetty.http.HttpFields#<init>()
CALLER: static org.eclipse.jetty.http.HttpParser.State#<clinit>()
	CALLEE: org.eclipse.jetty.http.HttpParser.State#<init>(java.lang.String,int)
CALLER: com.fasterxml.jackson.core.base.ParserMinimalBase#<init>()
	CALLEE: com.fasterxml.jackson.core.JsonParser#<init>()
CALLER: static com.fasterxml.jackson.core.json.DupDetector#rootDetector(com.fasterxml.jackson.core.JsonParser)
	CALLEE: com.fasterxml.jackson.core.json.DupDetector#<init>(java.lang.Object)
CALLER: static com.fasterxml.jackson.core.json.JsonReadContext#createRootContext(com.fasterxml.jackson.core.json.DupDetector)
	CALLEE: com.fasterxml.jackson.core.json.JsonReadContext#<init>(com.fasterxml.jackson.core.json.JsonReadContext,com.fasterxml.jackson.core.json.DupDetector,int,int,int)
CALLER: com.fasterxml.jackson.databind.type.ArrayType#<init>(com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,java.lang.Object,boolean)
	CALLEE: com.fasterxml.jackson.databind.type.TypeBase#<init>(java.lang.Class,int,java.lang.Object,java.lang.Object,boolean)
	CALLEE: com.fasterxml.jackson.databind.JavaType#hashCode()
CALLER: com.fasterxml.jackson.databind.type.TypeFactory#_unknownType()
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.type.TypeFactory#findTypeParameters(java.lang.Class,java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#_constructType(java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings)
	CALLEE: com.fasterxml.jackson.databind.type.TypeBindings#<init>(com.fasterxml.jackson.databind.type.TypeFactory,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#_findSuperTypeChain(java.lang.Class,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.TypeBindings#addBinding(java.lang.String,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.type.TypeBindings#typesAsArray()
	CALLEE: com.fasterxml.jackson.databind.type.HierarchicType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.type.HierarchicType#isGeneric()
	CALLEE: com.fasterxml.jackson.databind.type.HierarchicType#getSuperType()
	CALLEE: com.fasterxml.jackson.databind.type.HierarchicType#asGeneric()
CALLER: com.fasterxml.jackson.databind.type.TypeBindings#<init>(com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.type.TypeBindings#<init>(com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.type.TypeBindings,java.lang.Class,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
CALLER: com.fasterxml.jackson.databind.type.MapType#<init>(java.lang.Class,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean)
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#<init>(java.lang.Class,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean)
CALLER: com.fasterxml.jackson.databind.type.CollectionType#<init>(java.lang.Class,com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean)
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#<init>(java.lang.Class,com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean)
CALLER: com.fasterxml.jackson.core.JsonProcessingException#<init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation)
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#<init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable)
CALLER: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext#<init>(com.fasterxml.jackson.databind.deser.DefaultDeserializationContext,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.InjectableValues)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#<init>(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.InjectableValues)
CALLER: org.glassfish.jersey.model.internal.RankedProvider#<init>(java.lang.Object)
	CALLEE: org.glassfish.jersey.model.internal.RankedProvider#computeRank(java.lang.Object,int)
CALLER: static org.glassfish.hk2.utilities.reflection.ReflectionHelper#setAccessible(java.lang.reflect.AccessibleObject)
	CALLEE: org.glassfish.hk2.utilities.reflection.ReflectionHelper.3#<init>(java.lang.reflect.AccessibleObject)
CALLER: static org.glassfish.hk2.utilities.reflection.ReflectionHelper#getCurrentContextClassLoader()
	CALLEE: org.glassfish.hk2.utilities.reflection.ReflectionHelper.4#<init>()
CALLER: static org.glassfish.hk2.utilities.reflection.ReflectionHelper#setContextClassLoader(java.lang.Thread,java.lang.ClassLoader)
	CALLEE: org.glassfish.hk2.utilities.reflection.ReflectionHelper.2#<init>(java.lang.Thread,java.lang.ClassLoader)
CALLER: org.glassfish.hk2.api.MultiException#<init>(java.lang.Throwable,boolean)
	CALLEE: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference#getMessage()
	CALLEE: org.h2.jdbc.JdbcSQLException#getMessage()
	CALLEE: org.glassfish.hk2.api.HK2RuntimeException#<init>(java.lang.String,java.lang.Throwable)
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#getMessage()
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#getMessage()
CALLER: org.glassfish.hk2.utilities.AbstractActiveDescriptor#setName(java.lang.String)
	CALLEE: org.glassfish.hk2.utilities.DescriptorImpl#setName(java.lang.String)
	CALLEE: org.glassfish.hk2.utilities.AbstractActiveDescriptor#removeNamedQualifier()
	CALLEE: org.glassfish.hk2.utilities.NamedImpl#<init>(java.lang.String)
	CALLEE: org.glassfish.hk2.utilities.AbstractActiveDescriptor#addQualifierAnnotation(java.lang.annotation.Annotation)
CALLER: org.glassfish.hk2.utilities.DescriptorImpl#addMetadata(java.lang.String,java.lang.String)
	CALLEE: static org.glassfish.hk2.utilities.reflection.ReflectionHelper#addMetadata(java.util.Map,java.lang.String,java.lang.String)
CALLER: static jersey.repackaged.org.objectweb.asm.Type#getType(java.lang.String)
	CALLEE: static jersey.repackaged.org.objectweb.asm.Type#getType(char[],int)
CALLER: static jersey.repackaged.org.objectweb.asm.Type#<clinit>()
	CALLEE: jersey.repackaged.org.objectweb.asm.Type#<init>(int,char[],int,int)
CALLER: jersey.repackaged.org.objectweb.asm.ClassReader#readLong(int)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readInt(int)
CALLER: static jersey.repackaged.org.objectweb.asm.Type#getObjectType(java.lang.String)
	CALLEE: jersey.repackaged.org.objectweb.asm.Type#<init>(int,char[],int,int)
CALLER: static jersey.repackaged.org.objectweb.asm.Type#getMethodType(java.lang.String)
	CALLEE: static jersey.repackaged.org.objectweb.asm.Type#getType(char[],int)
CALLER: static jersey.repackaged.org.objectweb.asm.Type#getArgumentTypes(java.lang.String)
	CALLEE: static jersey.repackaged.org.objectweb.asm.Type#getType(char[],int)
CALLER: jersey.repackaged.org.objectweb.asm.ClassReader#readTypeAnnotations(jersey.repackaged.org.objectweb.asm.MethodVisitor,jersey.repackaged.org.objectweb.asm.Context,int,boolean)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readUnsignedShort(int)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readUTF8(int,char[])
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readInt(int)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readAnnotationValues(int,char[],boolean,jersey.repackaged.org.objectweb.asm.AnnotationVisitor)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readLabel(int,jersey.repackaged.org.objectweb.asm.Label[])
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readByte(int)
	CALLEE: jersey.repackaged.org.objectweb.asm.TypePath#<init>(byte[],int)
CALLER: jersey.repackaged.org.objectweb.asm.ClassReader#getImplicitFrame(jersey.repackaged.org.objectweb.asm.Context)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readClass(int,char[])
CALLER: jersey.repackaged.org.objectweb.asm.ClassReader#readFrame(int,boolean,boolean,jersey.repackaged.org.objectweb.asm.Context)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readUnsignedShort(int)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readLabel(int,jersey.repackaged.org.objectweb.asm.Label[])
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readFrameType(java.lang.Object[],int,int,char[],jersey.repackaged.org.objectweb.asm.Label[])
CALLER: org.glassfish.jersey.internal.OsgiRegistry#classForNameWithException(java.lang.String)
	CALLEE: static org.glassfish.jersey.internal.OsgiRegistry#loadClass(org.osgi.framework.Bundle,java.lang.String)
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#ERROR_SCANNING_CLASS_NOT_FOUND(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableERROR_SCANNING_CLASS_NOT_FOUND(java.lang.Object)
CALLER: org.apache.log4j.helpers.PatternConverter#format(java.lang.StringBuffer,org.apache.log4j.spi.LoggingEvent)
	CALLEE: org.apache.log4j.helpers.PatternParser.LiteralPatternConverter#convert(org.apache.log4j.spi.LoggingEvent)
	CALLEE: org.apache.log4j.helpers.PatternParser.NamedPatternConverter#convert(org.apache.log4j.spi.LoggingEvent)
	CALLEE: org.apache.log4j.helpers.PatternParser.DatePatternConverter#convert(org.apache.log4j.spi.LoggingEvent)
	CALLEE: org.apache.log4j.helpers.PatternParser.LocationPatternConverter#convert(org.apache.log4j.spi.LoggingEvent)
	CALLEE: org.apache.log4j.helpers.PatternParser.BasicPatternConverter#convert(org.apache.log4j.spi.LoggingEvent)
	CALLEE: org.apache.log4j.helpers.PatternParser.MDCPatternConverter#convert(org.apache.log4j.spi.LoggingEvent)
	CALLEE: org.apache.log4j.helpers.PatternConverter#spacePad(java.lang.StringBuffer,int)
CALLER: org.apache.log4j.spi.ThrowableInformation#getThrowableStrRep()
	CALLEE: org.apache.log4j.Category#getLoggerRepository()
	CALLEE: static org.apache.log4j.DefaultThrowableRenderer#render(java.lang.Throwable)
	CALLEE: org.apache.log4j.Hierarchy#getThrowableRenderer()
CALLER: org.eclipse.jetty.io.WriteFlusher#isTransitionAllowed(org.eclipse.jetty.io.WriteFlusher.State,org.eclipse.jetty.io.WriteFlusher.State)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#warn(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.io.WriteFlusher.State#getType()
CALLER: org.eclipse.jetty.io.WriteFlusher.FailedState#<init>(java.lang.Throwable)
	CALLEE: org.eclipse.jetty.io.WriteFlusher.State#<init>(org.eclipse.jetty.io.WriteFlusher.StateType,org.eclipse.jetty.io.WriteFlusher.1)
CALLER: org.eclipse.jetty.io.AbstractEndPoint#close()
	CALLEE: org.eclipse.jetty.io.AbstractEndPoint#onClose()
CALLER: org.eclipse.jetty.io.SelectorManager#connectionClosed(org.eclipse.jetty.io.Connection)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Throwable)
	CALLEE: org.eclipse.jetty.server.HttpConnection#onClose()
CALLER: org.eclipse.jetty.server.ServerConnector.ServerConnectorManager#endPointClosed(org.eclipse.jetty.io.EndPoint)
	CALLEE: org.eclipse.jetty.server.AbstractConnector#onEndPointClosed(org.eclipse.jetty.io.EndPoint)
	CALLEE: org.eclipse.jetty.io.SelectorManager#endPointClosed(org.eclipse.jetty.io.EndPoint)
CALLER: static javax.ws.rs.ext.FactoryFinder#find(java.lang.String,java.lang.String)
	CALLEE: static javax.ws.rs.ext.FactoryFinder#getContextClassLoader()
	CALLEE: static javax.ws.rs.ext.FactoryFinder#newInstance(java.lang.String,java.lang.ClassLoader)
CALLER: org.glassfish.jersey.server.ResourceConfig#getApplicationName()
	CALLEE: static org.glassfish.jersey.server.ResourceConfig.State#access$300(org.glassfish.jersey.server.ResourceConfig.State)
CALLER: org.glassfish.jersey.server.ResourceConfig.ImmutableState#<init>(org.glassfish.jersey.server.ResourceConfig.State)
	CALLEE: org.glassfish.jersey.server.ResourceConfig.State#<init>(org.glassfish.jersey.server.ResourceConfig.State)
CALLER: static org.glassfish.jersey.internal.inject.Providers#getProviders(org.glassfish.hk2.api.ServiceLocator,java.lang.Class)
	CALLEE: static org.glassfish.jersey.internal.inject.Providers#getClasses(java.util.Collection)
	CALLEE: static org.glassfish.jersey.internal.inject.Providers#getServiceHandles(org.glassfish.hk2.api.ServiceLocator,java.lang.Class,java.lang.annotation.Annotation[])
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#AUTODISCOVERABLE_CONFIGURATION_FAILED(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#localizableAUTODISCOVERABLE_CONFIGURATION_FAILED(java.lang.Object)
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#RC_NOT_MODIFIABLE()
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableRC_NOT_MODIFIABLE()
CALLER: org.glassfish.jersey.model.internal.CommonConfig#configureBinders(org.glassfish.hk2.api.ServiceLocator,java.util.Set)
	CALLEE: static jersey.repackaged.com.google.common.collect.Sets#newIdentityHashSet()
	CALLEE: static org.glassfish.jersey.internal.inject.Injections#getConfiguration(org.glassfish.hk2.api.ServiceLocator)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBinder#bind(org.glassfish.hk2.api.DynamicConfiguration)
	CALLEE: jersey.repackaged.com.google.common.collect.Collections2.FilteredCollection#iterator()
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig#getBinders(java.util.Set)
	CALLEE: jersey.repackaged.com.google.common.collect.Collections2.FilteredCollection#isEmpty()
	CALLEE: jersey.repackaged.com.google.common.collect.AbstractIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.AbstractIterator#hasNext()
CALLER: org.glassfish.jersey.model.internal.CommonConfig#registerManagedObjectsFinalizer(org.glassfish.hk2.api.ServiceLocator)
	CALLEE: static org.glassfish.jersey.internal.inject.Injections#getConfiguration(org.glassfish.hk2.api.ServiceLocator)
	CALLEE: static org.glassfish.jersey.internal.inject.Injections#newBinder(java.lang.Class)
	CALLEE: static org.glassfish.jersey.internal.inject.Injections#addBinding(org.glassfish.hk2.utilities.binding.BindingBuilder,org.glassfish.hk2.api.DynamicConfiguration)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#in(java.lang.Class)
CALLER: org.glassfish.jersey.model.internal.CommonConfig#configureFeatures(org.glassfish.hk2.api.ServiceLocator,java.util.Set,java.util.List)
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig#resetRegistrations()
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig#configureFeatures(org.glassfish.hk2.api.ServiceLocator,java.util.Set,java.util.List)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#FEATURE_HAS_ALREADY_BEEN_PROCESSED(java.lang.Object)
	CALLEE: org.glassfish.jersey.model.internal.FeatureContextWrapper#<init>(javax.ws.rs.core.FeatureContext,org.glassfish.hk2.api.ServiceLocator)
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig.FeatureRegistration#getFeatureClass()
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig.FeatureRegistration#getFeature()
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableNON_INSTANTIABLE_COMPONENT(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.internal.inject.Providers#getContractConstraint(java.lang.Class,javax.ws.rs.RuntimeType)
	CALLEE: org.glassfish.jersey.internal.inject.Providers.ProviderRuntime#getRuntime()
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#WARNING_PROVIDER_CONSTRAINED_TO_WRONG_PACKAGE(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#localizableWARNING_PROVIDER_CONSTRAINED_TO_WRONG_PACKAGE(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#ERROR_PROVIDER_CONSTRAINED_TO_WRONG_PACKAGE(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#localizableERROR_PROVIDER_CONSTRAINED_TO_WRONG_PACKAGE(java.lang.Object,java.lang.Object)
CALLER: static org.glassfish.jersey.internal.inject.Providers#logProviderSkipped(java.lang.StringBuilder,java.lang.Class,boolean)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#ERROR_PROVIDER_AND_RESOURCE_CONSTRAINED_TO_IGNORED(java.lang.Object)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#ERROR_PROVIDER_CONSTRAINED_TO_IGNORED(java.lang.Object)
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#ERROR_PROVIDER_CONSTRAINED_TO_WRONG_RUNTIME(java.lang.Object,java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#localizableERROR_PROVIDER_CONSTRAINED_TO_WRONG_RUNTIME(java.lang.Object,java.lang.Object,java.lang.Object)
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#ERROR_PROVIDER_REGISTERED_WRONG_RUNTIME(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#localizableERROR_PROVIDER_REGISTERED_WRONG_RUNTIME(java.lang.Object,java.lang.Object)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#in(java.lang.Class)
CALLER: org.glassfish.jersey.model.internal.RankedProvider#<init>(java.lang.Object,int,java.util.Set)
	CALLEE: org.glassfish.jersey.model.internal.RankedProvider#computeRank(java.lang.Object,int)
CALLER: static jersey.repackaged.com.google.common.collect.Lists#newArrayList(java.lang.Iterable)
	CALLEE: static jersey.repackaged.com.google.common.base.Preconditions#checkNotNull(java.lang.Object)
	CALLEE: static jersey.repackaged.com.google.common.collect.Collections2#cast(java.lang.Iterable)
	CALLEE: static jersey.repackaged.com.google.common.collect.Lists#newArrayList(java.util.Iterator)
	CALLEE: jersey.repackaged.com.google.common.collect.Lists.TransformingRandomAccessList#iterator()
CALLER: static org.glassfish.jersey.model.internal.ComponentBag#modelFor(java.lang.Class)
	CALLEE: static org.glassfish.jersey.model.internal.ComponentBag#modelFor(java.lang.Class,int,java.util.Map,org.glassfish.jersey.process.Inflector)
CALLER: org.glassfish.jersey.model.internal.RankedProvider#<init>(java.lang.Object,int)
	CALLEE: org.glassfish.jersey.model.internal.RankedProvider#<init>(java.lang.Object,int,java.util.Set)
CALLER: javax.ws.rs.core.AbstractMultivaluedMap#add(java.lang.Object,java.lang.Object)
	CALLEE: javax.ws.rs.core.AbstractMultivaluedMap#getValues(java.lang.Object)
	CALLEE: javax.ws.rs.core.AbstractMultivaluedMap#addNull(java.util.List)
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#PREMATCHING_ALSO_NAME_BOUND(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizablePREMATCHING_ALSO_NAME_BOUND(java.lang.Object)
CALLER: static javax.ws.rs.core.GenericType#getTypeArgument(java.lang.Class,java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.reflection.ParameterizedTypeImpl#getRawType()
	CALLEE: org.glassfish.hk2.utilities.reflection.ParameterizedTypeImpl#getActualTypeArguments()
CALLER: static javax.ws.rs.core.GenericType#getClass(java.lang.reflect.Type)
	CALLEE: static javax.ws.rs.core.GenericType#getClass(java.lang.reflect.Type)
	CALLEE: static javax.ws.rs.core.GenericType#getArrayClass(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.MapType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#toString()
	CALLEE: org.glassfish.hk2.utilities.reflection.ParameterizedTypeImpl#toString()
	CALLEE: org.glassfish.hk2.utilities.reflection.ParameterizedTypeImpl#getRawType()
CALLER: static org.glassfish.jersey.server.model.Resource#builder(org.glassfish.jersey.server.model.Resource.Data)
	CALLEE: static org.glassfish.jersey.server.model.Resource.Data#access$1000(org.glassfish.jersey.server.model.Resource.Data)
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#<init>(org.glassfish.jersey.server.model.Resource.1)
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#<init>(java.lang.String,org.glassfish.jersey.server.model.Resource.1)
	CALLEE: static org.glassfish.jersey.server.model.Resource.Builder#access$1900(org.glassfish.jersey.server.model.Resource.Builder)
	CALLEE: static org.glassfish.jersey.server.model.Resource.Data#access$300(org.glassfish.jersey.server.model.Resource.Data)
	CALLEE: static org.glassfish.jersey.server.model.Resource.Builder#access$2000(org.glassfish.jersey.server.model.Resource.Builder)
	CALLEE: static org.glassfish.jersey.server.model.Resource.Data#access$400(org.glassfish.jersey.server.model.Resource.Data)
	CALLEE: static org.glassfish.jersey.server.model.Resource.Data#access$500(org.glassfish.jersey.server.model.Resource.Data)
	CALLEE: static org.glassfish.jersey.server.model.Resource.Builder#access$2102(org.glassfish.jersey.server.model.Resource.Builder,org.glassfish.jersey.server.model.ResourceMethod.Data)
	CALLEE: static org.glassfish.jersey.server.model.Resource.Builder#access$2200(org.glassfish.jersey.server.model.Resource.Builder)
	CALLEE: static org.glassfish.jersey.server.model.Resource.Data#access$700(org.glassfish.jersey.server.model.Resource.Data)
	CALLEE: static org.glassfish.jersey.server.model.Resource.Builder#access$2300(org.glassfish.jersey.server.model.Resource.Builder)
	CALLEE: static org.glassfish.jersey.server.model.Resource.Data#access$800(org.glassfish.jersey.server.model.Resource.Data)
	CALLEE: static org.glassfish.jersey.server.model.Resource.Builder#access$2400(org.glassfish.jersey.server.model.Resource.Builder)
	CALLEE: static org.glassfish.jersey.server.model.Resource.Data#access$900(org.glassfish.jersey.server.model.Resource.Data)
CALLER: org.glassfish.jersey.server.model.ResourceModel#<init>(java.util.List,java.util.List)
	CALLEE: static org.glassfish.jersey.internal.util.collection.Values#lazy(org.glassfish.jersey.internal.util.collection.Value)
	CALLEE: org.glassfish.jersey.server.model.ResourceModel.1#<init>(org.glassfish.jersey.server.model.ResourceModel)
CALLER: jersey.repackaged.com.google.common.collect.Lists.TransformingRandomAccessList#<init>(java.util.List,jersey.repackaged.com.google.common.base.Function)
	CALLEE: static jersey.repackaged.com.google.common.base.Preconditions#checkNotNull(java.lang.Object)
CALLER: jersey.repackaged.com.google.common.collect.Lists.TransformingSequentialList#<init>(java.util.List,jersey.repackaged.com.google.common.base.Function)
	CALLEE: static jersey.repackaged.com.google.common.base.Preconditions#checkNotNull(java.lang.Object)
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#localizableUSING_EXECUTOR_PROVIDER(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#localizableIGNORED_EXECUTOR_PROVIDERS(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.hk2.utilities.binding.BindingBuilderFactory#newFactoryBinder(org.glassfish.hk2.api.Factory)
	CALLEE: static org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#createFactoryBinder(org.glassfish.hk2.api.Factory)
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#localizableUSING_SCHEDULER_PROVIDER(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#localizableIGNORED_SCHEDULER_PROVIDERS(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableLOGGING_APPLICATION_INITIALIZED()
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableLOGGING_ROOT_RESOURCE_CLASSES()
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableLOGGING_PRE_MATCH_FILTERS()
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableLOGGING_GLOBAL_REQUEST_FILTERS()
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableLOGGING_GLOBAL_RESPONSE_FILTERS()
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableLOGGING_GLOBAL_READER_INTERCEPTORS()
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableLOGGING_GLOBAL_WRITER_INTERCEPTORS()
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableLOGGING_NAME_BOUND_REQUEST_FILTERS()
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#LOGGING_PROVIDER_BOUND(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableLOGGING_PROVIDER_BOUND(java.lang.Object,java.lang.Object)
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableLOGGING_NAME_BOUND_RESPONSE_FILTERS()
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableLOGGING_NAME_BOUND_READER_INTERCEPTORS()
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableLOGGING_NAME_BOUND_WRITER_INTERCEPTORS()
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableLOGGING_DYNAMIC_FEATURES()
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableLOGGING_MESSAGE_BODY_READERS()
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableLOGGING_MESSAGE_BODY_WRITERS()
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.eclipse.jetty.server.HttpChannelState.State#<clinit>()
	CALLEE: org.eclipse.jetty.server.HttpChannelState.State#<init>(java.lang.String,int)
CALLER: static org.eclipse.jetty.http.DateGenerator#formatCookieDate(long)
	CALLEE: static org.eclipse.jetty.http.DateGenerator#formatCookieDate(java.lang.StringBuilder,long)
CALLER: static org.eclipse.jetty.http.DateGenerator#<clinit>()
	CALLEE: org.eclipse.jetty.http.DateGenerator.1#<init>()
	CALLEE: static org.eclipse.jetty.http.DateGenerator#formatDate(long)
CALLER: org.eclipse.jetty.server.HttpOutput.1#<init>(org.eclipse.jetty.server.HttpOutput)
	CALLEE: org.eclipse.jetty.util.SharedBlockingCallback#<init>()
CALLER: static org.eclipse.jetty.server.HttpOutput.OutputState#<clinit>()
	CALLEE: org.eclipse.jetty.server.HttpOutput.OutputState#<init>(java.lang.String,int)
CALLER: static org.eclipse.jetty.server.Response.OutputType#<clinit>()
	CALLEE: org.eclipse.jetty.server.Response.OutputType#<init>(java.lang.String,int)
CALLER: com.fasterxml.jackson.core.json.JsonReadContext#<init>(com.fasterxml.jackson.core.json.JsonReadContext,com.fasterxml.jackson.core.json.DupDetector,int,int,int)
	CALLEE: com.fasterxml.jackson.core.JsonStreamContext#<init>()
CALLER: com.fasterxml.jackson.databind.type.TypeFactory#_findSuperTypeChain(java.lang.Class,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#_findSuperInterfaceChain(java.lang.reflect.Type,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#_findSuperClassChain(java.lang.reflect.Type,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.type.TypeBindings#typesAsArray()
	CALLEE: com.fasterxml.jackson.databind.type.TypeBindings#_resolve()
CALLER: com.fasterxml.jackson.databind.type.MapLikeType#<init>(java.lang.Class,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean)
	CALLEE: com.fasterxml.jackson.databind.type.TypeBase#<init>(java.lang.Class,int,java.lang.Object,java.lang.Object,boolean)
	CALLEE: com.fasterxml.jackson.databind.JavaType#hashCode()
CALLER: com.fasterxml.jackson.databind.type.CollectionLikeType#<init>(java.lang.Class,com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean)
	CALLEE: com.fasterxml.jackson.databind.type.TypeBase#<init>(java.lang.Class,int,java.lang.Object,java.lang.Object,boolean)
	CALLEE: com.fasterxml.jackson.databind.JavaType#hashCode()
CALLER: com.fasterxml.jackson.databind.DeserializationContext#<init>(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.InjectableValues)
	CALLEE: com.fasterxml.jackson.databind.DatabindContext#<init>()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfigBase#getAttributes()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfigBase#getActiveView()
	CALLEE: com.fasterxml.jackson.databind.DeserializationConfig#getDeserializationFeatures()
CALLER: org.glassfish.hk2.utilities.AbstractActiveDescriptor#removeNamedQualifier()
	CALLEE: org.glassfish.hk2.utilities.AbstractActiveDescriptor#removeQualifierAnnotation(java.lang.annotation.Annotation)
	CALLEE: org.glassfish.hk2.api.AnnotationLiteral#annotationType()
CALLER: org.glassfish.hk2.utilities.NamedImpl#<init>(java.lang.String)
	CALLEE: org.glassfish.hk2.api.AnnotationLiteral#<init>()
CALLER: org.glassfish.hk2.utilities.AbstractActiveDescriptor#addQualifierAnnotation(java.lang.annotation.Annotation)
	CALLEE: org.glassfish.hk2.utilities.DescriptorImpl#addQualifier(java.lang.String)
	CALLEE: org.glassfish.hk2.api.AnnotationLiteral#annotationType()
CALLER: static jersey.repackaged.org.objectweb.asm.Type#getType(char[],int)
	CALLEE: jersey.repackaged.org.objectweb.asm.Type#<init>(int,char[],int,int)
CALLER: jersey.repackaged.org.objectweb.asm.ClassReader#readFrameType(java.lang.Object[],int,int,char[],jersey.repackaged.org.objectweb.asm.Label[])
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readUnsignedShort(int)
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readClass(int,char[])
	CALLEE: jersey.repackaged.org.objectweb.asm.ClassReader#readLabel(int,jersey.repackaged.org.objectweb.asm.Label[])
CALLER: static org.glassfish.jersey.internal.OsgiRegistry#loadClass(org.osgi.framework.Bundle,java.lang.String)
	CALLEE: org.glassfish.jersey.internal.OsgiRegistry.1#<init>(org.osgi.framework.Bundle,java.lang.String)
	CALLEE: javax.ws.rs.ProcessingException#<init>(java.lang.Throwable)
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableERROR_SCANNING_CLASS_NOT_FOUND(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: org.apache.log4j.helpers.PatternParser.NamedPatternConverter#convert(org.apache.log4j.spi.LoggingEvent)
	CALLEE: org.apache.log4j.helpers.PatternParser.CategoryPatternConverter#getFullyQualifiedName(org.apache.log4j.spi.LoggingEvent)
	CALLEE: org.apache.log4j.helpers.PatternParser.ClassNamePatternConverter#getFullyQualifiedName(org.apache.log4j.spi.LoggingEvent)
CALLER: org.apache.log4j.helpers.PatternParser.DatePatternConverter#convert(org.apache.log4j.spi.LoggingEvent)
	CALLEE: static org.apache.log4j.helpers.LogLog#error(java.lang.String,java.lang.Throwable)
CALLER: org.apache.log4j.helpers.PatternParser.LocationPatternConverter#convert(org.apache.log4j.spi.LoggingEvent)
	CALLEE: org.apache.log4j.spi.LoggingEvent#getLocationInformation()
	CALLEE: org.apache.log4j.spi.LocationInfo#getFileName()
	CALLEE: org.apache.log4j.spi.LocationInfo#getLineNumber()
	CALLEE: org.apache.log4j.spi.LocationInfo#getMethodName()
CALLER: org.apache.log4j.helpers.PatternParser.BasicPatternConverter#convert(org.apache.log4j.spi.LoggingEvent)
	CALLEE: org.apache.log4j.Priority#toString()
	CALLEE: org.apache.log4j.spi.LoggingEvent#getLevel()
	CALLEE: static org.apache.log4j.spi.LoggingEvent#getStartTime()
	CALLEE: org.apache.log4j.spi.LoggingEvent#getThreadName()
	CALLEE: org.apache.log4j.spi.LoggingEvent#getNDC()
	CALLEE: org.apache.log4j.spi.LoggingEvent#getRenderedMessage()
CALLER: org.apache.log4j.helpers.PatternParser.MDCPatternConverter#convert(org.apache.log4j.spi.LoggingEvent)
	CALLEE: org.apache.log4j.spi.LoggingEvent#getProperties()
	CALLEE: org.apache.log4j.spi.LoggingEvent#getMDC(java.lang.String)
CALLER: org.eclipse.jetty.io.AbstractEndPoint#onClose()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#isDebugEnabled()
	CALLEE: org.eclipse.jetty.io.IdleTimeout#onClose()
	CALLEE: org.eclipse.jetty.io.WriteFlusher#onClose()
	CALLEE: org.eclipse.jetty.io.FillInterest#onClose()
CALLER: org.eclipse.jetty.io.SelectorManager#endPointClosed(org.eclipse.jetty.io.EndPoint)
	CALLEE: org.eclipse.jetty.io.AbstractEndPoint#onClose()
CALLER: static javax.ws.rs.ext.FactoryFinder#getContextClassLoader()
	CALLEE: javax.ws.rs.ext.FactoryFinder.1#<init>()
CALLER: static org.glassfish.jersey.server.ResourceConfig.State#access$300(org.glassfish.jersey.server.ResourceConfig.State)
	CALLEE: org.glassfish.jersey.server.ResourceConfig.State#getApplicationName()
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#localizableAUTODISCOVERABLE_CONFIGURATION_FAILED(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableRC_NOT_MODIFIABLE()
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: org.glassfish.jersey.model.internal.CommonConfig#getBinders(java.util.Set)
	CALLEE: static jersey.repackaged.com.google.common.collect.Collections2#transform(java.util.Collection,jersey.repackaged.com.google.common.base.Function)
	CALLEE: org.glassfish.jersey.model.internal.ComponentBag#getInstances(jersey.repackaged.com.google.common.base.Predicate)
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig.3#<init>(org.glassfish.jersey.model.internal.CommonConfig,java.util.Set)
	CALLEE: static jersey.repackaged.com.google.common.collect.Collections2#filter(java.util.Collection,jersey.repackaged.com.google.common.base.Predicate)
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#FEATURE_HAS_ALREADY_BEEN_PROCESSED(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#localizableFEATURE_HAS_ALREADY_BEEN_PROCESSED(java.lang.Object)
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#localizableWARNING_PROVIDER_CONSTRAINED_TO_WRONG_PACKAGE(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#localizableERROR_PROVIDER_CONSTRAINED_TO_WRONG_PACKAGE(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#ERROR_PROVIDER_AND_RESOURCE_CONSTRAINED_TO_IGNORED(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#localizableERROR_PROVIDER_AND_RESOURCE_CONSTRAINED_TO_IGNORED(java.lang.Object)
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#ERROR_PROVIDER_CONSTRAINED_TO_IGNORED(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#localizableERROR_PROVIDER_CONSTRAINED_TO_IGNORED(java.lang.Object)
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#localizableERROR_PROVIDER_CONSTRAINED_TO_WRONG_RUNTIME(java.lang.Object,java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#localizableERROR_PROVIDER_REGISTERED_WRONG_RUNTIME(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static jersey.repackaged.com.google.common.collect.Lists#newArrayList(java.util.Iterator)
	CALLEE: static jersey.repackaged.com.google.common.collect.Iterators#addAll(java.util.Collection,java.util.Iterator)
	CALLEE: static jersey.repackaged.com.google.common.collect.Lists#newArrayList()
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizablePREMATCHING_ALSO_NAME_BOUND(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: org.glassfish.jersey.server.model.Resource.Builder#<init>(org.glassfish.jersey.server.model.Resource.1)
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#<init>()
CALLER: org.glassfish.jersey.server.model.Resource.Builder#<init>(java.lang.String,org.glassfish.jersey.server.model.Resource.1)
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#<init>(java.lang.String)
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableLOGGING_PROVIDER_BOUND(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.eclipse.jetty.http.DateGenerator#formatCookieDate(java.lang.StringBuilder,long)
	CALLEE: org.eclipse.jetty.http.DateGenerator#doFormatCookieDate(java.lang.StringBuilder,long)
CALLER: static org.eclipse.jetty.http.DateGenerator#formatDate(long)
	CALLEE: org.eclipse.jetty.http.DateGenerator#doFormatDate(long)
CALLER: com.fasterxml.jackson.databind.type.TypeFactory#_findSuperInterfaceChain(java.lang.reflect.Type,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.HierarchicType#<init>(java.lang.reflect.Type)
	CALLEE: com.fasterxml.jackson.databind.type.HierarchicType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#_hashMapSuperInterfaceChain(com.fasterxml.jackson.databind.type.HierarchicType)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#_arrayListSuperInterfaceChain(com.fasterxml.jackson.databind.type.HierarchicType)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#_doFindSuperInterfaceChain(com.fasterxml.jackson.databind.type.HierarchicType,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.type.TypeFactory#_findSuperClassChain(java.lang.reflect.Type,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#_findSuperClassChain(java.lang.reflect.Type,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.HierarchicType#<init>(java.lang.reflect.Type)
	CALLEE: com.fasterxml.jackson.databind.type.HierarchicType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.type.HierarchicType#setSubType(com.fasterxml.jackson.databind.type.HierarchicType)
	CALLEE: com.fasterxml.jackson.databind.type.HierarchicType#setSuperType(com.fasterxml.jackson.databind.type.HierarchicType)
CALLER: com.fasterxml.jackson.databind.type.TypeBindings#_resolve()
	CALLEE: com.fasterxml.jackson.databind.type.TypeBindings#addBinding(java.lang.String,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.type.TypeBindings#_resolveBindings(java.lang.reflect.Type)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#containedType(int)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#containedTypeCount()
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#containedTypeName(int)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#containedTypeCount()
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#containedTypeCount()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#containedTypeCount()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#containedType(int)
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#containedType(int)
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#containedType(int)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#containedTypeName(int)
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#containedTypeName(int)
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#containedTypeName(int)
CALLER: org.glassfish.hk2.utilities.AbstractActiveDescriptor#removeQualifierAnnotation(java.lang.annotation.Annotation)
	CALLEE: org.glassfish.hk2.api.AnnotationLiteral#annotationType()
	CALLEE: org.glassfish.hk2.utilities.DescriptorImpl#removeQualifier(java.lang.String)
CALLER: org.glassfish.hk2.api.AnnotationLiteral#annotationType()
	CALLEE: static org.glassfish.hk2.api.AnnotationLiteral#getAnnotationLiteralSubclass(java.lang.Class)
	CALLEE: static org.glassfish.hk2.api.AnnotationLiteral#getTypeParameter(java.lang.Class)
CALLER: org.apache.log4j.helpers.PatternParser.CategoryPatternConverter#getFullyQualifiedName(org.apache.log4j.spi.LoggingEvent)
	CALLEE: org.apache.log4j.spi.LoggingEvent#getLoggerName()
CALLER: org.apache.log4j.helpers.PatternParser.ClassNamePatternConverter#getFullyQualifiedName(org.apache.log4j.spi.LoggingEvent)
	CALLEE: org.apache.log4j.spi.LoggingEvent#getLocationInformation()
	CALLEE: org.apache.log4j.spi.LocationInfo#getClassName()
CALLER: org.apache.log4j.spi.LoggingEvent#getLocationInformation()
	CALLEE: org.apache.log4j.spi.LocationInfo#<init>(java.lang.Throwable,java.lang.String)
CALLER: org.apache.log4j.spi.LoggingEvent#getNDC()
	CALLEE: static org.apache.log4j.NDC#get()
CALLER: org.apache.log4j.spi.LoggingEvent#getRenderedMessage()
	CALLEE: org.apache.log4j.Category#getLoggerRepository()
	CALLEE: org.apache.log4j.Hierarchy#getRendererMap()
	CALLEE: org.apache.log4j.or.RendererMap#findAndRender(java.lang.Object)
CALLER: org.apache.log4j.spi.LoggingEvent#getProperties()
	CALLEE: org.apache.log4j.spi.LoggingEvent#getMDCCopy()
CALLER: org.apache.log4j.spi.LoggingEvent#getMDC(java.lang.String)
	CALLEE: static org.apache.log4j.MDC#get(java.lang.String)
CALLER: org.eclipse.jetty.io.IdleTimeout#onClose()
	CALLEE: org.eclipse.jetty.io.IdleTimeout#deactivate()
CALLER: org.eclipse.jetty.io.WriteFlusher#onClose()
	CALLEE: org.eclipse.jetty.io.WriteFlusher#onFail(java.lang.Throwable)
CALLER: org.eclipse.jetty.io.FillInterest#onClose()
	CALLEE: org.eclipse.jetty.util.FutureCallback#failed(java.lang.Throwable)
CALLER: org.glassfish.jersey.model.internal.ComponentBag#getInstances(jersey.repackaged.com.google.common.base.Predicate)
	CALLEE: static jersey.repackaged.com.google.common.collect.Sets#filter(java.util.Set,jersey.repackaged.com.google.common.base.Predicate)
	CALLEE: org.glassfish.jersey.model.internal.ComponentBag.7#<init>(org.glassfish.jersey.model.internal.ComponentBag,jersey.repackaged.com.google.common.base.Predicate)
CALLER: static jersey.repackaged.com.google.common.collect.Collections2#filter(java.util.Collection,jersey.repackaged.com.google.common.base.Predicate)
	CALLEE: static jersey.repackaged.com.google.common.base.Preconditions#checkNotNull(java.lang.Object)
	CALLEE: jersey.repackaged.com.google.common.collect.Collections2.FilteredCollection#<init>(java.util.Collection,jersey.repackaged.com.google.common.base.Predicate)
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#localizableFEATURE_HAS_ALREADY_BEEN_PROCESSED(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#localizableERROR_PROVIDER_AND_RESOURCE_CONSTRAINED_TO_IGNORED(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#localizableERROR_PROVIDER_CONSTRAINED_TO_IGNORED(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: org.glassfish.jersey.server.model.Resource.Builder#<init>()
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#<init>(org.glassfish.jersey.server.model.Resource.Builder)
CALLER: org.glassfish.jersey.server.model.Resource.Builder#<init>(java.lang.String)
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#<init>(org.glassfish.jersey.server.model.Resource.Builder)
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#path(java.lang.String)
CALLER: com.fasterxml.jackson.databind.type.TypeFactory#_hashMapSuperInterfaceChain(com.fasterxml.jackson.databind.type.HierarchicType)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#_doFindSuperInterfaceChain(com.fasterxml.jackson.databind.type.HierarchicType,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.HierarchicType#setSubType(com.fasterxml.jackson.databind.type.HierarchicType)
	CALLEE: com.fasterxml.jackson.databind.type.HierarchicType#setSuperType(com.fasterxml.jackson.databind.type.HierarchicType)
	CALLEE: com.fasterxml.jackson.databind.type.HierarchicType#deepCloneWithoutSubtype()
	CALLEE: com.fasterxml.jackson.databind.type.HierarchicType#getSuperType()
CALLER: com.fasterxml.jackson.databind.type.TypeFactory#_arrayListSuperInterfaceChain(com.fasterxml.jackson.databind.type.HierarchicType)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#_doFindSuperInterfaceChain(com.fasterxml.jackson.databind.type.HierarchicType,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.HierarchicType#setSubType(com.fasterxml.jackson.databind.type.HierarchicType)
	CALLEE: com.fasterxml.jackson.databind.type.HierarchicType#setSuperType(com.fasterxml.jackson.databind.type.HierarchicType)
	CALLEE: com.fasterxml.jackson.databind.type.HierarchicType#deepCloneWithoutSubtype()
	CALLEE: com.fasterxml.jackson.databind.type.HierarchicType#getSuperType()
CALLER: com.fasterxml.jackson.databind.type.TypeFactory#_doFindSuperInterfaceChain(com.fasterxml.jackson.databind.type.HierarchicType,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#_findSuperInterfaceChain(java.lang.reflect.Type,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.HierarchicType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.type.HierarchicType#setSubType(com.fasterxml.jackson.databind.type.HierarchicType)
	CALLEE: com.fasterxml.jackson.databind.type.HierarchicType#setSuperType(com.fasterxml.jackson.databind.type.HierarchicType)
CALLER: com.fasterxml.jackson.databind.type.TypeBindings#_resolveBindings(java.lang.reflect.Type)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#_constructType(java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#findTypeParameters(com.fasterxml.jackson.databind.JavaType,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.TypeBindings#_addPlaceholder(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.type.TypeBindings#_resolveBindings(java.lang.reflect.Type)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
CALLER: static org.glassfish.hk2.api.AnnotationLiteral#getAnnotationLiteralSubclass(java.lang.Class)
	CALLEE: static org.glassfish.hk2.api.AnnotationLiteral#getAnnotationLiteralSubclass(java.lang.Class)
CALLER: static org.apache.log4j.spi.LocationInfo#<clinit>()
	CALLEE: static org.apache.log4j.helpers.LogLog#debug(java.lang.String)
	CALLEE: org.apache.log4j.spi.LocationInfo#<init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
	CALLEE: static org.apache.log4j.spi.LocationInfo#class$(java.lang.String)
CALLER: org.apache.log4j.spi.LocationInfo#<init>(java.lang.Throwable,java.lang.String)
	CALLEE: static org.apache.log4j.helpers.LogLog#debug(java.lang.String,java.lang.Throwable)
CALLER: static org.apache.log4j.NDC#get()
	CALLEE: static org.apache.log4j.NDC#getCurrentStack()
CALLER: org.apache.log4j.spi.LoggingEvent#getMDCCopy()
	CALLEE: static org.apache.log4j.MDC#getContext()
CALLER: static org.apache.log4j.MDC#get(java.lang.String)
	CALLEE: org.apache.log4j.MDC#get0(java.lang.String)
CALLER: static org.apache.log4j.MDC#<clinit>()
	CALLEE: org.apache.log4j.MDC#<init>()
CALLER: org.glassfish.jersey.server.model.Resource.Builder#<init>(org.glassfish.jersey.server.model.Resource.Builder)
	CALLEE: static jersey.repackaged.com.google.common.collect.Sets#newIdentityHashSet()
	CALLEE: static jersey.repackaged.com.google.common.collect.Sets#newLinkedHashSet()
	CALLEE: static jersey.repackaged.com.google.common.collect.Lists#newLinkedList()
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#name(java.lang.String)
CALLER: com.fasterxml.jackson.databind.type.HierarchicType#deepCloneWithoutSubtype()
	CALLEE: com.fasterxml.jackson.databind.type.HierarchicType#setSubType(com.fasterxml.jackson.databind.type.HierarchicType)
	CALLEE: com.fasterxml.jackson.databind.type.HierarchicType#deepCloneWithoutSubtype()
	CALLEE: com.fasterxml.jackson.databind.type.HierarchicType#<init>(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.ParameterizedType,com.fasterxml.jackson.databind.type.HierarchicType,com.fasterxml.jackson.databind.type.HierarchicType)
CALLER: org.apache.log4j.spi.LocationInfo#<init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
	CALLEE: static org.apache.log4j.spi.LocationInfo#appendFragment(java.lang.StringBuffer,java.lang.String)
CALLER: static org.apache.log4j.MDC#getContext()
	CALLEE: org.apache.log4j.MDC#getContext0()
CALLER: org.apache.log4j.MDC#<init>()
	CALLEE: static org.apache.log4j.helpers.Loader#isJava1()
	CALLEE: org.apache.log4j.helpers.ThreadLocalMap#<init>()
	CALLEE: static org.apache.log4j.MDC#class$(java.lang.String)
CALLER: org.glassfish.jersey.server.model.Resource.Builder#name(java.lang.String)
	CALLEE: static jersey.repackaged.com.google.common.collect.Lists#newArrayList(java.lang.Object[])
CALLER: static jersey.repackaged.com.google.common.collect.Lists#newArrayList(java.lang.Object[])
	CALLEE: static jersey.repackaged.com.google.common.base.Preconditions#checkNotNull(java.lang.Object)
	CALLEE: static jersey.repackaged.com.google.common.collect.Lists#computeArrayListCapacity(int)
CALLER: static jersey.repackaged.com.google.common.collect.Lists#computeArrayListCapacity(int)
	CALLEE: static jersey.repackaged.com.google.common.collect.CollectPreconditions#checkNonnegative(int,java.lang.String)
	CALLEE: static jersey.repackaged.com.google.common.primitives.Ints#saturatedCast(long)
CALLER: org.apache.log4j.helpers.DateTimeDateFormat#format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)
	CALLEE: org.apache.log4j.helpers.AbsoluteTimeDateFormat#format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)
CALLER: org.glassfish.jersey.model.internal.ComponentBag.4#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.model.internal.ComponentBag.4#apply(org.glassfish.jersey.model.ContractProvider.Builder)
CALLER: org.glassfish.jersey.model.internal.ComponentBag#getClasses(jersey.repackaged.com.google.common.base.Predicate)
	CALLEE: static jersey.repackaged.com.google.common.collect.Sets#filter(java.util.Set,jersey.repackaged.com.google.common.base.Predicate)
	CALLEE: org.glassfish.jersey.model.internal.ComponentBag.6#<init>(org.glassfish.jersey.model.internal.ComponentBag,jersey.repackaged.com.google.common.base.Predicate)
CALLER: org.glassfish.jersey.internal.Errors.1#call()
	CALLEE: org.glassfish.jersey.internal.Errors.1#call()
CALLER: org.glassfish.jersey.model.internal.RankedComparator#compare(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.model.internal.RankedComparator#compare(org.glassfish.jersey.model.internal.RankedProvider,org.glassfish.jersey.model.internal.RankedProvider)
CALLER: javax.ws.rs.core.MediaType.2#compare(java.lang.Object,java.lang.Object)
	CALLEE: javax.ws.rs.core.MediaType.2#compare(java.lang.String,java.lang.String)
CALLER: org.glassfish.jersey.model.internal.CommonConfig.2#compare(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig.2#compare(org.glassfish.jersey.internal.spi.AutoDiscoverable,org.glassfish.jersey.internal.spi.AutoDiscoverable)
CALLER: org.eclipse.jetty.http.DateGenerator.1#initialValue()
	CALLEE: org.eclipse.jetty.http.DateGenerator.1#initialValue()
CALLER: org.glassfish.jersey.server.ResourceConfig.ImmutableState#register(java.lang.Class)
	CALLEE: org.glassfish.jersey.server.ResourceConfig.ImmutableState#register(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.JsonMappingException#getMessage()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#_buildMessage()
CALLER: com.fasterxml.jackson.databind.type.ClassKey#compareTo(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.ClassKey#compareTo(com.fasterxml.jackson.databind.type.ClassKey)
CALLER: org.eclipse.jetty.server.handler.ContextHandler.Context#getAttribute(java.lang.String)
	CALLEE: org.eclipse.jetty.util.AttributesMap#getAttribute(java.lang.String)
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#getAttribute(java.lang.String)
CALLER: org.eclipse.jetty.server.handler.ContextHandler.Context#getInitParameter(java.lang.String)
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#getInitParameter(java.lang.String)
CALLER: javax.ws.rs.core.MediaType#toString()
	CALLEE: static javax.ws.rs.ext.RuntimeDelegate#getInstance()
CALLER: com.fasterxml.jackson.databind.JsonMappingException#toString()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#getMessage()
	CALLEE: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference#getMessage()
CALLER: org.eclipse.jetty.server.handler.ContextHandler.Context#log(java.lang.String,java.lang.Throwable)
	CALLEE: static org.eclipse.jetty.server.handler.ContextHandler#access$200(org.eclipse.jetty.server.handler.ContextHandler)
CALLER: org.eclipse.jetty.servlet.ServletContextHandler.Context#createServlet(java.lang.Class)
	CALLEE: javax.servlet.ServletException#<init>(java.lang.Throwable)
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler.Context#createInstance(java.lang.Class)
CALLER: org.glassfish.jersey.server.model.IntrospectionModeller.1#call()
	CALLEE: org.glassfish.jersey.server.model.IntrospectionModeller.1#call()
CALLER: org.glassfish.jersey.server.ResourceConfig#getClassLoader()
	CALLEE: org.glassfish.jersey.server.ResourceConfig.State#getClassLoader()
CALLER: org.glassfish.jersey.server.ResourceConfig.ImmutableState#addProperties(java.util.Map)
	CALLEE: org.glassfish.jersey.server.ResourceConfig.ImmutableState#addProperties(java.util.Map)
CALLER: org.glassfish.jersey.server.ResourceConfig.ImmutableState#registerResources(java.util.Set)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#RC_NOT_MODIFIABLE()
CALLER: org.glassfish.jersey.server.ResourceConfig.ImmutableState#setClassLoader(java.lang.ClassLoader)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#RC_NOT_MODIFIABLE()
CALLER: org.glassfish.jersey.model.ContractProvider.Builder#build()
	CALLEE: org.glassfish.jersey.model.ContractProvider#<init>(java.lang.Class,java.util.Map,int,java.util.Set,org.glassfish.jersey.model.ContractProvider.1)
	CALLEE: org.glassfish.jersey.model.ContractProvider.Builder.1#<init>(org.glassfish.jersey.model.ContractProvider.Builder)
	CALLEE: static jersey.repackaged.com.google.common.collect.Maps#transformEntries(java.util.Map,jersey.repackaged.com.google.common.collect.Maps.EntryTransformer)
CALLER: org.glassfish.jersey.server.ResourceConfig.ImmutableState#register(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.ResourceConfig.ImmutableState#register(java.lang.Object)
CALLER: org.glassfish.jersey.server.ResourceConfig.ImmutableState#registerFinder(org.glassfish.jersey.server.ResourceFinder)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#RC_NOT_MODIFIABLE()
CALLER: org.glassfish.jersey.server.ApplicationHandler.7#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.ApplicationHandler.7#apply(org.glassfish.jersey.model.ContractProvider)
CALLER: org.eclipse.jetty.util.AttributesMap#setAttribute(java.lang.String,java.lang.Object)
	CALLEE: org.eclipse.jetty.util.AttributesMap#removeAttribute(java.lang.String)
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler.Context#removeAttribute(java.lang.String)
	CALLEE: org.eclipse.jetty.util.AttributesMap#ensureMap()
CALLER: org.eclipse.jetty.util.AttributesMap#removeAttribute(java.lang.String)
	CALLEE: org.eclipse.jetty.util.AttributesMap#map()
CALLER: org.glassfish.hk2.api.MultiException#toString()
	CALLEE: org.glassfish.hk2.api.MultiException#getMessage()
CALLER: org.eclipse.jetty.server.HttpConnection#onOpen()
	CALLEE: org.eclipse.jetty.io.AbstractConnection#onOpen()
	CALLEE: org.eclipse.jetty.io.AbstractConnection#fillInterested()
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#in(java.lang.Class)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#in(java.lang.Class)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#in(java.lang.Class)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#proxy(boolean)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#proxy(boolean)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#proxy(boolean)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#proxy(boolean)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#proxy(boolean)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#proxy(boolean)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#proxy(boolean)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#proxy(boolean)
CALLER: org.glassfish.jersey.message.internal.QualitySourceMediaType#toString()
	CALLEE: javax.ws.rs.core.MediaType#toString()
CALLER: org.glassfish.jersey.message.internal.QualitySourceMediaType#hashCode()
	CALLEE: javax.ws.rs.core.MediaType#hashCode()
CALLER: com.fasterxml.jackson.databind.DeserializationConfig#useRootWrapping()
	CALLEE: com.fasterxml.jackson.databind.DeserializationConfig#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
CALLER: org.eclipse.jetty.server.HttpInput#init(org.eclipse.jetty.server.HttpChannelState)
	CALLEE: org.eclipse.jetty.server.HttpInput#lock()
CALLER: com.fasterxml.jackson.databind.DeserializationConfig#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#isEnabled(com.fasterxml.jackson.databind.MapperFeature)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#getAnnotationIntrospector()
CALLER: com.fasterxml.jackson.databind.cfg.MapperConfig#introspectClassAnnotations(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#constructType(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.DeserializationConfig#introspectClassAnnotations(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.SerializationConfig#introspectClassAnnotations(com.fasterxml.jackson.databind.JavaType)
CALLER: org.glassfish.jersey.process.internal.Stages.StageChainBuilder#to(org.glassfish.jersey.process.internal.ChainableStage)
	CALLEE: org.glassfish.jersey.process.internal.Stages.StageChainBuilder#addTailStage(org.glassfish.jersey.process.internal.Stage)
CALLER: liquibase.changelog.AbstractChangeLogHistoryService#upgradeChecksums(liquibase.changelog.DatabaseChangeLog,liquibase.Contexts,liquibase.LabelExpression)
	CALLEE: static liquibase.logging.LogFactory#getLogger()
	CALLEE: liquibase.changelog.filter.ContextChangeSetFilter#<init>(liquibase.Contexts)
	CALLEE: liquibase.changelog.filter.DbmsChangeSetFilter#<init>(liquibase.database.Database)
	CALLEE: liquibase.logging.core.DefaultLogger#debug(java.lang.String)
	CALLEE: liquibase.changelog.filter.ContextChangeSetFilter#accepts(liquibase.changelog.ChangeSet)
	CALLEE: liquibase.changelog.filter.DbmsChangeSetFilter#accepts(liquibase.changelog.ChangeSet)
	CALLEE: liquibase.changelog.filter.ChangeSetFilterResult#isAccepted()
	CALLEE: liquibase.changelog.OfflineChangeLogHistoryService#getRanChangeSets()
	CALLEE: liquibase.changelog.AbstractChangeLogHistoryService#getDatabase()
	CALLEE: liquibase.changelog.OfflineChangeLogHistoryService#replaceChecksum(liquibase.changelog.ChangeSet)
	CALLEE: liquibase.changelog.RanChangeSet#getLastCheckSum()
CALLER: liquibase.changelog.OfflineChangeLogHistoryService#init()
	CALLEE: static liquibase.executor.ExecutorService#getInstance()
	CALLEE: liquibase.exception.UnexpectedLiquibaseException#<init>(java.lang.Throwable)
	CALLEE: liquibase.executor.ExecutorService#getExecutor(liquibase.database.Database)
	CALLEE: liquibase.changelog.AbstractChangeLogHistoryService#getDatabase()
	CALLEE: liquibase.changelog.OfflineChangeLogHistoryService#writeHeader(java.io.File)
	CALLEE: liquibase.changelog.OfflineChangeLogHistoryService#isExecuteDdlAgainstDatabase()
	CALLEE: liquibase.statement.core.CreateDatabaseChangeLogTableStatement#<init>()
CALLER: liquibase.changelog.OfflineChangeLogHistoryService#getRanChangeSets()
	CALLEE: liquibase.exception.DatabaseException#<init>(java.lang.Throwable)
	CALLEE: static liquibase.changelog.ChangeSet.ExecType#valueOf(java.lang.String)
	CALLEE: liquibase.changelog.RanChangeSet#<init>(java.lang.String,java.lang.String,java.lang.String,liquibase.change.CheckSum,java.util.Date,java.lang.String,liquibase.changelog.ChangeSet.ExecType,java.lang.String,java.lang.String,liquibase.ContextExpression,liquibase.Labels,java.lang.String)
	CALLEE: static liquibase.configuration.LiquibaseConfiguration#getInstance()
	CALLEE: liquibase.configuration.LiquibaseConfiguration#getConfiguration(java.lang.Class)
	CALLEE: liquibase.exception.DatabaseException#<init>(java.lang.String)
	CALLEE: liquibase.changelog.OfflineChangeLogHistoryService#writeHeader(java.io.File)
	CALLEE: liquibase.util.csv.CSVReader#<init>(java.io.Reader)
	CALLEE: liquibase.util.csv.opencsv.CSVReader#readNext()
	CALLEE: liquibase.ContextExpression#<init>()
	CALLEE: liquibase.ContextExpression#<init>(java.lang.String)
	CALLEE: liquibase.Labels#<init>()
	CALLEE: liquibase.Labels#<init>(java.lang.String)
	CALLEE: static liquibase.change.CheckSum#parse(java.lang.String)
	CALLEE: liquibase.util.ISODateFormat#<init>()
	CALLEE: liquibase.util.ISODateFormat#parse(java.lang.String)
CALLER: liquibase.changelog.OfflineChangeLogHistoryService#setExecType(liquibase.changelog.ChangeSet,liquibase.changelog.ChangeSet.ExecType)
	CALLEE: static liquibase.executor.ExecutorService#getInstance()
	CALLEE: liquibase.executor.ExecutorService#getExecutor(liquibase.database.Database)
	CALLEE: liquibase.database.AbstractJdbcDatabase#commit()
	CALLEE: liquibase.changelog.AbstractChangeLogHistoryService#getDatabase()
	CALLEE: liquibase.changelog.OfflineChangeLogHistoryService#isExecuteDmlAgainstDatabase()
	CALLEE: liquibase.statement.core.MarkChangeSetRanStatement#<init>(liquibase.changelog.ChangeSet,liquibase.changelog.ChangeSet.ExecType)
	CALLEE: liquibase.changelog.OfflineChangeLogHistoryService.2#<init>(liquibase.changelog.OfflineChangeLogHistoryService,liquibase.changelog.ChangeSet,liquibase.changelog.ChangeSet.ExecType)
	CALLEE: liquibase.changelog.OfflineChangeLogHistoryService#replaceChangeSet(liquibase.changelog.ChangeSet,liquibase.changelog.OfflineChangeLogHistoryService.ReplaceChangeSetLogic)
	CALLEE: liquibase.changelog.OfflineChangeLogHistoryService#appendChangeSet(liquibase.changelog.ChangeSet,liquibase.changelog.ChangeSet.ExecType)
CALLER: liquibase.changelog.AbstractChangeLogHistoryService#getRunStatus(liquibase.changelog.ChangeSet)
	CALLEE: static liquibase.logging.LogFactory#getLogger()
	CALLEE: liquibase.logging.core.DefaultLogger#info(java.lang.String)
	CALLEE: liquibase.exception.DatabaseException#<init>(java.lang.Throwable)
	CALLEE: liquibase.changelog.OfflineChangeLogHistoryService#replaceChecksum(liquibase.changelog.ChangeSet)
	CALLEE: liquibase.changelog.AbstractChangeLogHistoryService#getRanChangeSet(liquibase.changelog.ChangeSet)
	CALLEE: liquibase.changelog.RanChangeSet#getLastCheckSum()
	CALLEE: liquibase.change.CheckSum#equals(java.lang.Object)
CALLER: org.eclipse.jetty.server.HttpConnection#onClose()
	CALLEE: org.eclipse.jetty.util.IteratingCallback#close()
	CALLEE: org.eclipse.jetty.io.AbstractConnection#onClose()
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#qualifiedBy(java.lang.annotation.Annotation)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#qualifiedBy(java.lang.annotation.Annotation)
CALLER: jersey.repackaged.com.google.common.collect.Collections2.FilteredCollection#isEmpty()
	CALLEE: static jersey.repackaged.com.google.common.collect.Iterables#any(java.lang.Iterable,jersey.repackaged.com.google.common.base.Predicate)
CALLER: jersey.repackaged.com.google.common.collect.Collections2.FilteredCollection#size()
	CALLEE: jersey.repackaged.com.google.common.collect.Collections2.FilteredCollection#iterator()
	CALLEE: static jersey.repackaged.com.google.common.collect.Iterators#size(java.util.Iterator)
CALLER: org.apache.log4j.or.RendererMap#findAndRender(java.lang.Object)
	CALLEE: org.apache.log4j.or.RendererMap#get(java.lang.Class)
	CALLEE: org.apache.log4j.or.DefaultRenderer#doRender(java.lang.Object)
CALLER: jersey.repackaged.com.google.common.base.Predicates.AndPredicate#toString()
	CALLEE: static jersey.repackaged.com.google.common.base.Predicates#access$800()
	CALLEE: jersey.repackaged.com.google.common.base.Joiner#join(java.lang.Iterable)
CALLER: org.glassfish.hk2.utilities.reflection.Logger#debug(java.lang.String,java.lang.Throwable)
	CALLEE: static org.glassfish.hk2.utilities.reflection.Logger#printThrowable(java.lang.Throwable)
CALLER: org.glassfish.hk2.utilities.reflection.Logger#debug(java.lang.String,java.lang.String,java.lang.Throwable)
	CALLEE: static org.glassfish.hk2.utilities.reflection.Logger#printThrowable(java.lang.Throwable)
CALLER: org.glassfish.jersey.server.ResourceBag#getRootResources()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: org.glassfish.jersey.server.model.Resource#getPath()
CALLER: org.glassfish.jersey.server.model.ResourceModel.1#get()
	CALLEE: org.glassfish.jersey.server.model.ResourceModel.1#get()
CALLER: org.glassfish.jersey.server.model.ResourceModel#getRuntimeResourceModel()
	CALLEE: org.glassfish.jersey.internal.util.collection.Values.LazyValueImpl#get()
	CALLEE: org.glassfish.jersey.internal.util.collection.Values.1#get()
CALLER: org.glassfish.jersey.internal.OsgiRegistry.OsgiServiceFinder#createIterator(java.lang.Class,java.lang.String,java.lang.ClassLoader,boolean)
	CALLEE: org.glassfish.jersey.internal.ServiceFinder.DefaultServiceIteratorProvider#createIterator(java.lang.Class,java.lang.String,java.lang.ClassLoader,boolean)
	CALLEE: static org.glassfish.jersey.internal.OsgiRegistry#access$000(org.glassfish.jersey.internal.OsgiRegistry,java.lang.String)
	CALLEE: org.glassfish.jersey.internal.OsgiRegistry.OsgiServiceFinder.1#<init>(org.glassfish.jersey.internal.OsgiRegistry.OsgiServiceFinder,java.util.List,java.lang.String,java.lang.Class)
CALLER: org.glassfish.jersey.internal.ServiceFinder.DefaultServiceIteratorProvider#createIterator(java.lang.Class,java.lang.String,java.lang.ClassLoader,boolean)
	CALLEE: org.glassfish.jersey.internal.ServiceFinder.LazyObjectIterator#<init>(java.lang.Class,java.lang.String,java.lang.ClassLoader,boolean,org.glassfish.jersey.internal.ServiceFinder.1)
CALLER: org.glassfish.jersey.internal.OsgiRegistry.OsgiServiceFinder#createClassIterator(java.lang.Class,java.lang.String,java.lang.ClassLoader,boolean)
	CALLEE: org.glassfish.jersey.internal.ServiceFinder.DefaultServiceIteratorProvider#createClassIterator(java.lang.Class,java.lang.String,java.lang.ClassLoader,boolean)
	CALLEE: static org.glassfish.jersey.internal.OsgiRegistry#access$000(org.glassfish.jersey.internal.OsgiRegistry,java.lang.String)
	CALLEE: org.glassfish.jersey.internal.OsgiRegistry.OsgiServiceFinder.2#<init>(org.glassfish.jersey.internal.OsgiRegistry.OsgiServiceFinder,java.util.List)
CALLER: org.glassfish.jersey.internal.ServiceFinder.DefaultServiceIteratorProvider#createClassIterator(java.lang.Class,java.lang.String,java.lang.ClassLoader,boolean)
	CALLEE: org.glassfish.jersey.internal.ServiceFinder.LazyClassIterator#<init>(java.lang.Class,java.lang.String,java.lang.ClassLoader,boolean,org.glassfish.jersey.internal.ServiceFinder.1)
CALLER: com.fasterxml.jackson.databind.type.SimpleType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#buildCanonicalName()
CALLER: org.eclipse.jetty.server.HttpConnection#toString()
	CALLEE: org.eclipse.jetty.io.AbstractConnection#toString()
CALLER: com.fasterxml.jackson.core.base.ParserBase#close()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_closeInput()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_releaseBuffers()
CALLER: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_parsePosNumber(int)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_handleOddValue(int)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#close()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_nextAfterName()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_skipString()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_skipWSOrEnd()
	CALLEE: com.fasterxml.jackson.core.JsonStreamContext#inArray()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#_reportMismatchedEndMarker(int,char)
	CALLEE: com.fasterxml.jackson.core.json.JsonReadContext#getParent()
	CALLEE: com.fasterxml.jackson.core.JsonStreamContext#inObject()
	CALLEE: com.fasterxml.jackson.core.json.JsonReadContext#expectComma()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_skipComma(int)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_parseName()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_handleOddName(int)
	CALLEE: com.fasterxml.jackson.core.json.JsonReadContext#setCurrentName(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_skipColon()
	CALLEE: com.fasterxml.jackson.core.json.JsonReadContext#createChildArrayContext(int,int)
	CALLEE: com.fasterxml.jackson.core.json.JsonReadContext#createChildObjectContext(int,int)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_reportUnexpectedChar(int,java.lang.String)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_matchTrue()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_matchFalse()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_matchNull()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_parseNegNumber()
CALLER: com.fasterxml.jackson.core.base.ParserBase#getCurrentName()
	CALLEE: com.fasterxml.jackson.core.json.JsonReadContext#getParent()
	CALLEE: com.fasterxml.jackson.core.json.JsonReadContext#getCurrentName()
CALLER: com.fasterxml.jackson.core.base.ParserBase#setFeatureMask(int)
	CALLEE: com.fasterxml.jackson.core.JsonParser.Feature#enabledIn(int)
	CALLEE: static com.fasterxml.jackson.core.json.DupDetector#rootDetector(com.fasterxml.jackson.core.JsonParser)
	CALLEE: com.fasterxml.jackson.core.json.JsonReadContext#getDupDetector()
	CALLEE: com.fasterxml.jackson.core.json.JsonReadContext#withDupDetector(com.fasterxml.jackson.core.json.DupDetector)
CALLER: com.fasterxml.jackson.core.base.ParserBase#getTokenLocation()
	CALLEE: com.fasterxml.jackson.core.io.IOContext#getSourceReference()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getTokenCharacterOffset()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getTokenLineNr()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getTokenColumnNr()
	CALLEE: com.fasterxml.jackson.core.JsonLocation#<init>(java.lang.Object,long,long,int,int)
CALLER: org.eclipse.jetty.server.HttpChannel#toString()
	CALLEE: org.eclipse.jetty.server.HttpChannelState#getState()
CALLER: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext#checkUnresolvedObjectId()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ReadableObjectId.Referring#getLocation()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ReadableObjectId.Referring#getBeanType()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference#<init>(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference#addUnresolvedId(java.lang.Object,java.lang.Class,com.fasterxml.jackson.core.JsonLocation)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ReadableObjectId#getKey()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ReadableObjectId#referringProperties()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ReadableObjectId#hasReferringProperties()
CALLER: com.fasterxml.jackson.databind.DeserializationContext#findRootValueDeserializer(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.deser.DeserializerCache#findValueDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#findTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#<init>(com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.core.io.IOContext#allocTokenBuffer(int)
	CALLEE: com.fasterxml.jackson.core.io.IOContext#_verifyAlloc(java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.util.BufferRecycler#allocCharBuffer(int,int)
CALLER: com.fasterxml.jackson.core.io.IOContext#allocTokenBuffer()
	CALLEE: com.fasterxml.jackson.core.io.IOContext#_verifyAlloc(java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.util.BufferRecycler#allocCharBuffer(int)
CALLER: com.fasterxml.jackson.core.io.IOContext#constructTextBuffer()
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#<init>(com.fasterxml.jackson.core.util.BufferRecycler)
CALLER: org.glassfish.hk2.utilities.AbstractActiveDescriptor#addContractType(java.lang.reflect.Type)
	CALLEE: static org.glassfish.hk2.utilities.reflection.ReflectionHelper#getRawClass(java.lang.reflect.Type)
	CALLEE: org.glassfish.hk2.utilities.DescriptorImpl#addAdvertisedContract(java.lang.String)
CALLER: com.fasterxml.jackson.databind.type.TypeBindings#findType(java.lang.String,boolean)
	CALLEE: com.fasterxml.jackson.databind.type.TypeBindings#_resolve()
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.MapType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.TypeBindings#findType(java.lang.String)
CALLER: org.glassfish.hk2.api.MultiException#getMessage()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#getMessage()
	CALLEE: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference#getMessage()
	CALLEE: org.apache.log4j.config.PropertySetterException#getMessage()
	CALLEE: org.h2.jdbc.JdbcSQLException#getMessage()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#getMessage()
	CALLEE: org.glassfish.hk2.api.MultiException#getMessage()
	CALLEE: org.glassfish.jersey.server.model.ModelValidationException#getMessage()
	CALLEE: org.glassfish.hk2.api.MultiException#getErrors()
CALLER: org.glassfish.hk2.api.MultiException#printStackTrace(java.io.PrintStream)
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: org.h2.jdbc.JdbcSQLException#printStackTrace(java.io.PrintStream)
	CALLEE: org.glassfish.hk2.api.MultiException#printStackTrace(java.io.PrintStream)
	CALLEE: org.glassfish.hk2.api.MultiException#getErrors()
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#qualifiedBy(java.lang.annotation.Annotation)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#qualifiedBy(java.lang.annotation.Annotation)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#named(java.lang.String)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#named(java.lang.String)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#named(java.lang.String)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#named(java.lang.String)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#named(java.lang.String)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#named(java.lang.String)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#named(java.lang.String)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#named(java.lang.String)
CALLER: org.glassfish.jersey.server.model.Resource.Builder#mergeWith(org.glassfish.jersey.server.model.Resource)
	CALLEE: static org.glassfish.jersey.server.model.Resource#access$200(org.glassfish.jersey.server.model.Resource)
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#mergeWith(org.glassfish.jersey.server.model.Resource.Data)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#qualifiedBy(java.lang.annotation.Annotation)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#qualifiedBy(java.lang.annotation.Annotation)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#qualifiedBy(java.lang.annotation.Annotation)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#qualifiedBy(java.lang.annotation.Annotation)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#qualifiedBy(java.lang.annotation.Annotation)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#qualifiedBy(java.lang.annotation.Annotation)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#qualifiedBy(java.lang.annotation.Annotation)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#qualifiedBy(java.lang.annotation.Annotation)
CALLER: jersey.repackaged.com.google.common.collect.AbstractIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.AbstractIterator#hasNext()
CALLER: jersey.repackaged.com.google.common.collect.AbstractIterator#hasNext()
	CALLEE: static jersey.repackaged.com.google.common.base.Preconditions#checkState(boolean)
	CALLEE: jersey.repackaged.com.google.common.collect.AbstractIterator#tryToComputeNext()
CALLER: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: org.glassfish.jersey.server.internal.scanning.PackageNamesScanner#next()
	CALLEE: org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.VfsResourceFinder#next()
	CALLEE: org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.JarZipSchemeScanner#next()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeScanner#next()
	CALLEE: org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory.BundleSchemeScanner#next()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeScanner.1#next()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FilesScanner#next()
	CALLEE: org.glassfish.jersey.servlet.WebAppResourcesScanner#next()
	CALLEE: org.glassfish.jersey.servlet.WebAppResourcesScanner.1#next()
	CALLEE: org.glassfish.jersey.server.internal.scanning.JarFileScanner#next()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FilesScanner.1#next()
	CALLEE: jersey.repackaged.com.google.common.collect.AbstractIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.Iterators.8#transform(java.lang.Object)
	CALLEE: jersey.repackaged.com.google.common.collect.Lists.TransformingSequentialList.1#transform(java.lang.Object)
	CALLEE: jersey.repackaged.com.google.common.collect.Lists.TransformingRandomAccessList.1#transform(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.EmptyIterator#next()
CALLER: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: com.fasterxml.jackson.databind.util.EmptyIterator#hasNext()
	CALLEE: org.glassfish.jersey.server.internal.scanning.PackageNamesScanner#hasNext()
	CALLEE: org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.VfsResourceFinder#hasNext()
	CALLEE: org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.JarZipSchemeScanner#hasNext()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeScanner#hasNext()
	CALLEE: org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory.BundleSchemeScanner#hasNext()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeScanner.1#hasNext()
	CALLEE: org.glassfish.jersey.server.internal.scanning.JarFileScanner#hasNext()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FilesScanner#hasNext()
	CALLEE: org.glassfish.jersey.servlet.WebAppResourcesScanner#hasNext()
	CALLEE: org.glassfish.jersey.servlet.WebAppResourcesScanner.1#hasNext()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FilesScanner.1#hasNext()
	CALLEE: jersey.repackaged.com.google.common.collect.AbstractIterator#hasNext()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
CALLER: com.zaxxer.hikari.pool.ProxyConnection#close()
	CALLEE: com.zaxxer.hikari.util.ClockSource.MillisecondClockSource#currentTime()
	CALLEE: com.zaxxer.hikari.util.ClockSource.NanosecondClockSource#currentTime()
	CALLEE: org.slf4j.helpers.NOPLogger#debug(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.helpers.SubstituteLogger#debug(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: org.slf4j.impl.SimpleLogger#debug(java.lang.String,java.lang.Object,java.lang.Object)
	CALLEE: com.zaxxer.hikari.pool.PoolEntry#isMarkedEvicted()
	CALLEE: com.zaxxer.hikari.pool.PoolEntry#getPoolName()
	CALLEE: com.zaxxer.hikari.pool.ProxyConnection#closeStatements()
	CALLEE: com.zaxxer.hikari.pool.ProxyLeakTask.1#cancel()
	CALLEE: com.zaxxer.hikari.pool.ProxyLeakTask#cancel()
	CALLEE: com.zaxxer.hikari.pool.PoolEntry#resetConnectionState(com.zaxxer.hikari.pool.ProxyConnection,int)
	CALLEE: com.zaxxer.hikari.pool.PoolEntry#recycle(long)
	CALLEE: com.zaxxer.hikari.pool.ProxyConnection#checkException(java.sql.SQLException)
CALLER: com.zaxxer.hikari.pool.HikariProxyConnection#prepareStatement(java.lang.String)
	CALLEE: com.zaxxer.hikari.pool.ProxyConnection#checkException(java.sql.SQLException)
	CALLEE: com.zaxxer.hikari.pool.ProxyConnection#prepareStatement(java.lang.String)
CALLER: com.zaxxer.hikari.pool.HikariProxyConnection#prepareStatement(java.lang.String,int)
	CALLEE: com.zaxxer.hikari.pool.ProxyConnection#checkException(java.sql.SQLException)
	CALLEE: com.zaxxer.hikari.pool.ProxyConnection#prepareStatement(java.lang.String,int)
CALLER: org.glassfish.hk2.api.AnnotationLiteral#equals(java.lang.Object)
	CALLEE: org.glassfish.hk2.api.AnnotationLiteral#annotationType()
	CALLEE: org.glassfish.hk2.api.AnnotationLiteral#getMembers()
	CALLEE: static org.glassfish.hk2.api.AnnotationLiteral#invoke(java.lang.reflect.Method,java.lang.Object)
CALLER: org.glassfish.hk2.api.AnnotationLiteral#hashCode()
	CALLEE: org.glassfish.hk2.api.AnnotationLiteral#getMembers()
	CALLEE: static org.glassfish.hk2.api.AnnotationLiteral#invoke(java.lang.reflect.Method,java.lang.Object)
CALLER: org.eclipse.jetty.server.handler.ContextHandler.Context#setAttribute(java.lang.String,java.lang.Object)
	CALLEE: org.eclipse.jetty.util.AttributesMap#getAttribute(java.lang.String)
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#checkManagedAttribute(java.lang.String,java.lang.Object)
	CALLEE: org.eclipse.jetty.util.AttributesMap#setAttribute(java.lang.String,java.lang.Object)
	CALLEE: org.eclipse.jetty.util.AttributesMap#removeAttribute(java.lang.String)
	CALLEE: static org.eclipse.jetty.server.handler.ContextHandler#access$400(org.eclipse.jetty.server.handler.ContextHandler)
	CALLEE: javax.servlet.ServletContextAttributeEvent#<init>(javax.servlet.ServletContext,java.lang.String,java.lang.Object)
CALLER: org.eclipse.jetty.server.handler.ContextHandler.Context#removeAttribute(java.lang.String)
	CALLEE: org.eclipse.jetty.util.AttributesMap#getAttribute(java.lang.String)
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#checkManagedAttribute(java.lang.String,java.lang.Object)
	CALLEE: org.eclipse.jetty.util.AttributesMap#removeAttribute(java.lang.String)
	CALLEE: static org.eclipse.jetty.server.handler.ContextHandler#access$400(org.eclipse.jetty.server.handler.ContextHandler)
	CALLEE: javax.servlet.ServletContextAttributeEvent#<init>(javax.servlet.ServletContext,java.lang.String,java.lang.Object)
CALLER: org.eclipse.jetty.server.handler.ContextHandler.Context#getResourcePaths(java.lang.String)
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#getResourcePaths(java.lang.String)
CALLER: org.eclipse.jetty.server.handler.ContextHandler.Context#getResourceAsStream(java.lang.String)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#ignore(java.lang.Throwable)
	CALLEE: static org.eclipse.jetty.util.resource.Resource#newResource(java.net.URL)
	CALLEE: static org.eclipse.jetty.server.handler.ContextHandler#access$100()
	CALLEE: org.eclipse.jetty.webapp.WebAppContext.Context#getResource(java.lang.String)
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler.Context#getResource(java.lang.String)
	CALLEE: org.eclipse.jetty.util.resource.FileResource#getInputStream()
	CALLEE: org.eclipse.jetty.util.resource.BadResource#getInputStream()
	CALLEE: org.eclipse.jetty.util.resource.JarResource#getInputStream()
	CALLEE: org.eclipse.jetty.util.resource.URLResource#getInputStream()
CALLER: com.fasterxml.jackson.databind.type.SimpleType#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#equals(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.type.ArrayType#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#equals(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.type.MapLikeType#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#equals(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.type.CollectionLikeType#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#equals(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.JsonMappingException#getLocalizedMessage()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#_buildMessage()
CALLER: org.glassfish.jersey.message.internal.AcceptableMediaType#hashCode()
	CALLEE: javax.ws.rs.core.MediaType#hashCode()
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#named(java.lang.String)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#named(java.lang.String)
CALLER: org.glassfish.jersey.model.internal.ComponentBag.4#apply(org.glassfish.jersey.model.ContractProvider.Builder)
	CALLEE: org.glassfish.jersey.model.ContractProvider.Builder#build()
CALLER: org.glassfish.jersey.internal.Errors.1#call()
	CALLEE: org.glassfish.jersey.server.model.ComponentModelValidator.1#run()
CALLER: org.glassfish.jersey.model.internal.RankedComparator#compare(org.glassfish.jersey.model.internal.RankedProvider,org.glassfish.jersey.model.internal.RankedProvider)
	CALLEE: org.glassfish.jersey.model.internal.RankedComparator#getPriority(org.glassfish.jersey.model.internal.RankedProvider)
	CALLEE: static org.glassfish.jersey.model.internal.RankedComparator.Order#access$000(org.glassfish.jersey.model.internal.RankedComparator.Order)
CALLER: org.eclipse.jetty.http.DateGenerator.1#initialValue()
	CALLEE: org.eclipse.jetty.http.DateGenerator#<init>()
CALLER: org.glassfish.jersey.server.ResourceConfig.ImmutableState#register(java.lang.Class)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#RC_NOT_MODIFIABLE()
CALLER: com.fasterxml.jackson.databind.JsonMappingException#_buildMessage()
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#getMessage()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#getPathReference(java.lang.StringBuilder)
CALLER: org.eclipse.jetty.server.handler.ContextHandler#getAttribute(java.lang.String)
	CALLEE: org.eclipse.jetty.util.AttributesMap#getAttribute(java.lang.String)
CALLER: org.glassfish.jersey.server.model.IntrospectionModeller.1#call()
	CALLEE: static org.glassfish.jersey.server.model.IntrospectionModeller#access$000(org.glassfish.jersey.server.model.IntrospectionModeller)
CALLER: org.glassfish.jersey.server.ResourceConfig.ImmutableState#addProperties(java.util.Map)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#RC_NOT_MODIFIABLE()
CALLER: static jersey.repackaged.com.google.common.collect.Maps#transformEntries(java.util.Map,jersey.repackaged.com.google.common.collect.Maps.EntryTransformer)
	CALLEE: static jersey.repackaged.com.google.common.collect.Maps#transformEntries(java.util.SortedMap,jersey.repackaged.com.google.common.collect.Maps.EntryTransformer)
	CALLEE: jersey.repackaged.com.google.common.collect.Maps.TransformedEntriesMap#<init>(java.util.Map,jersey.repackaged.com.google.common.collect.Maps.EntryTransformer)
CALLER: org.glassfish.jersey.server.ResourceConfig.ImmutableState#register(java.lang.Object)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#RC_NOT_MODIFIABLE()
CALLER: org.eclipse.jetty.util.AttributesMap#ensureMap()
	CALLEE: org.eclipse.jetty.util.AttributesMap#map()
CALLER: org.eclipse.jetty.io.AbstractConnection#onOpen()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#isDebugEnabled()
CALLER: org.eclipse.jetty.io.AbstractConnection#fillInterested()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#isDebugEnabled()
	CALLEE: org.eclipse.jetty.io.AbstractConnection.IdleState#fillInterested()
	CALLEE: org.eclipse.jetty.io.AbstractConnection#next(org.eclipse.jetty.io.AbstractConnection.State,org.eclipse.jetty.io.AbstractConnection.State)
CALLER: com.fasterxml.jackson.databind.DeserializationConfig#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: com.fasterxml.jackson.databind.DeserializationFeature#getMask()
CALLER: com.fasterxml.jackson.databind.cfg.MapperConfig#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.cfg.BaseSettings#getAnnotationIntrospector()
CALLER: static com.fasterxml.jackson.databind.introspect.NopAnnotationIntrospector#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.introspect.NopAnnotationIntrospector.1#<init>()
CALLER: com.fasterxml.jackson.databind.cfg.MapperConfig#constructType(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#getTypeFactory()
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#constructType(java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings)
CALLER: com.fasterxml.jackson.databind.DeserializationConfig#introspectClassAnnotations(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#getClassIntrospector()
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicClassIntrospector#forClassAnnotations(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver)
CALLER: org.glassfish.jersey.process.internal.Stages.StageChainBuilder#addTailStage(org.glassfish.jersey.process.internal.Stage)
	CALLEE: org.glassfish.jersey.process.internal.Stages.StageChainBuilder#convertTransformations(org.glassfish.jersey.process.internal.Stage)
	CALLEE: org.glassfish.jersey.process.internal.AbstractChainableStage#setDefaultNext(org.glassfish.jersey.process.internal.Stage)
CALLER: liquibase.changelog.OfflineChangeLogHistoryService#replaceChecksum(liquibase.changelog.ChangeSet)
	CALLEE: static liquibase.executor.ExecutorService#getInstance()
	CALLEE: liquibase.executor.ExecutorService#getExecutor(liquibase.database.Database)
	CALLEE: liquibase.changelog.AbstractChangeLogHistoryService#getDatabase()
	CALLEE: liquibase.changelog.OfflineChangeLogHistoryService#isExecuteDmlAgainstDatabase()
	CALLEE: liquibase.changelog.OfflineChangeLogHistoryService#replaceChangeSet(liquibase.changelog.ChangeSet,liquibase.changelog.OfflineChangeLogHistoryService.ReplaceChangeSetLogic)
	CALLEE: liquibase.statement.core.UpdateChangeSetChecksumStatement#<init>(liquibase.changelog.ChangeSet)
	CALLEE: liquibase.changelog.OfflineChangeLogHistoryService.1#<init>(liquibase.changelog.OfflineChangeLogHistoryService,liquibase.changelog.ChangeSet)
CALLER: liquibase.changelog.OfflineChangeLogHistoryService#writeHeader(java.io.File)
	CALLEE: static liquibase.configuration.LiquibaseConfiguration#getInstance()
	CALLEE: liquibase.configuration.LiquibaseConfiguration#getConfiguration(java.lang.Class)
	CALLEE: liquibase.util.csv.CSVWriter#<init>(java.io.Writer)
	CALLEE: liquibase.util.csv.opencsv.CSVWriter#writeNext(java.lang.String[])
CALLER: liquibase.statement.core.CreateDatabaseChangeLogTableStatement#<init>()
	CALLEE: liquibase.statement.AbstractSqlStatement#<init>()
CALLER: liquibase.util.csv.CSVReader#<init>(java.io.Reader)
	CALLEE: liquibase.util.csv.opencsv.CSVReader#<init>(java.io.Reader)
CALLER: liquibase.util.csv.opencsv.CSVReader#readNext()
	CALLEE: liquibase.util.csv.opencsv.CSVReader#getNextLine()
	CALLEE: liquibase.util.csv.opencsv.CSVReader#validateResult(java.lang.String[])
	CALLEE: liquibase.util.csv.opencsv.CSVReader#combineResultsFromMultipleReads(java.lang.String[],java.lang.String[])
	CALLEE: liquibase.util.csv.opencsv.CSVParser#isPending()
	CALLEE: liquibase.util.csv.opencsv.CSVParser#parseLineMulti(java.lang.String)
CALLER: liquibase.ContextExpression#<init>(java.lang.String)
	CALLEE: liquibase.ContextExpression#parseContextString(java.lang.String)
CALLER: liquibase.Labels#<init>(java.lang.String)
	CALLEE: liquibase.Labels#parseLabelString(java.lang.String)
CALLER: static liquibase.change.CheckSum#parse(java.lang.String)
	CALLEE: liquibase.change.CheckSum#<init>(java.lang.String,int)
CALLER: liquibase.statement.core.MarkChangeSetRanStatement#<init>(liquibase.changelog.ChangeSet,liquibase.changelog.ChangeSet.ExecType)
	CALLEE: liquibase.statement.AbstractSqlStatement#<init>()
CALLER: liquibase.changelog.OfflineChangeLogHistoryService#replaceChangeSet(liquibase.changelog.ChangeSet,liquibase.changelog.OfflineChangeLogHistoryService.ReplaceChangeSetLogic)
	CALLEE: liquibase.exception.DatabaseException#<init>(java.lang.Throwable)
	CALLEE: static liquibase.configuration.LiquibaseConfiguration#getInstance()
	CALLEE: liquibase.configuration.LiquibaseConfiguration#getConfiguration(java.lang.Class)
	CALLEE: liquibase.util.csv.CSVReader#<init>(java.io.Reader)
	CALLEE: liquibase.util.csv.opencsv.CSVReader#readNext()
	CALLEE: liquibase.util.csv.CSVWriter#<init>(java.io.Writer)
	CALLEE: liquibase.util.csv.opencsv.CSVWriter#writeNext(java.lang.String[])
	CALLEE: liquibase.changelog.OfflineChangeLogHistoryService.2#execute(java.lang.String[])
	CALLEE: liquibase.changelog.OfflineChangeLogHistoryService.1#execute(java.lang.String[])
	CALLEE: liquibase.util.csv.opencsv.CSVWriter#flush()
	CALLEE: liquibase.util.csv.opencsv.CSVWriter#close()
	CALLEE: liquibase.util.csv.opencsv.CSVReader#close()
CALLER: liquibase.changelog.OfflineChangeLogHistoryService#appendChangeSet(liquibase.changelog.ChangeSet,liquibase.changelog.ChangeSet.ExecType)
	CALLEE: liquibase.exception.DatabaseException#<init>(java.lang.Throwable)
	CALLEE: liquibase.util.csv.opencsv.CSVWriter#flush()
	CALLEE: liquibase.util.csv.opencsv.CSVWriter#close()
	CALLEE: liquibase.util.csv.opencsv.CSVReader#close()
	CALLEE: liquibase.changelog.OfflineChangeLogHistoryService#getNextSequenceValue()
	CALLEE: static liquibase.util.LiquibaseUtil#getBuildVersion()
	CALLEE: liquibase.changelog.AbstractChangeLogHistoryService#getDeploymentId()
	CALLEE: static liquibase.configuration.LiquibaseConfiguration#getInstance()
	CALLEE: liquibase.configuration.LiquibaseConfiguration#getConfiguration(java.lang.Class)
	CALLEE: liquibase.util.csv.CSVReader#<init>(java.io.Reader)
	CALLEE: liquibase.util.csv.opencsv.CSVReader#readNext()
	CALLEE: liquibase.util.ISODateFormat#<init>()
	CALLEE: liquibase.util.csv.CSVWriter#<init>(java.io.Writer)
	CALLEE: liquibase.util.csv.opencsv.CSVWriter#writeNext(java.lang.String[])
	CALLEE: liquibase.util.ISODateFormat#format(java.sql.Timestamp)
CALLER: liquibase.changelog.AbstractChangeLogHistoryService#getRanChangeSet(liquibase.changelog.ChangeSet)
	CALLEE: liquibase.changelog.OfflineChangeLogHistoryService#getRanChangeSets()
	CALLEE: liquibase.changelog.RanChangeSet#isSameAs(liquibase.changelog.ChangeSet)
CALLER: org.eclipse.jetty.util.IteratingCallback#close()
	CALLEE: org.eclipse.jetty.server.HttpConnection.SendCallback#onCompleteFailure(java.lang.Throwable)
CALLER: org.eclipse.jetty.io.AbstractConnection#onClose()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#isDebugEnabled()
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#qualifiedBy(java.lang.annotation.Annotation)
	CALLEE: org.glassfish.hk2.api.AnnotationLiteral#annotationType()
CALLER: static jersey.repackaged.com.google.common.collect.Iterables#any(java.lang.Iterable,jersey.repackaged.com.google.common.base.Predicate)
	CALLEE: jersey.repackaged.com.google.common.collect.Collections2.FilteredCollection#iterator()
	CALLEE: jersey.repackaged.com.google.common.collect.Collections2.TransformedCollection#iterator()
	CALLEE: static jersey.repackaged.com.google.common.collect.Iterators#any(java.util.Iterator,jersey.repackaged.com.google.common.base.Predicate)
	CALLEE: jersey.repackaged.com.google.common.collect.Lists.TransformingRandomAccessList#iterator()
CALLER: static jersey.repackaged.com.google.common.collect.Iterators#size(java.util.Iterator)
	CALLEE: jersey.repackaged.com.google.common.collect.AbstractIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.AbstractIterator#hasNext()
CALLER: org.apache.log4j.or.RendererMap#get(java.lang.Class)
	CALLEE: org.apache.log4j.or.RendererMap#searchInterfaces(java.lang.Class)
CALLER: static org.glassfish.hk2.utilities.reflection.Logger#printThrowable(java.lang.Throwable)
	CALLEE: org.h2.jdbc.JdbcSQLException#getMessage()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#getMessage()
	CALLEE: org.glassfish.hk2.api.MultiException#getMessage()
	CALLEE: org.glassfish.jersey.server.model.ModelValidationException#getMessage()
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#getMessage()
	CALLEE: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference#getMessage()
	CALLEE: org.apache.log4j.config.PropertySetterException#getMessage()
	CALLEE: org.h2.jdbc.JdbcSQLException#printStackTrace(java.io.PrintStream)
	CALLEE: org.glassfish.hk2.api.MultiException#printStackTrace(java.io.PrintStream)
CALLER: org.glassfish.jersey.server.model.ResourceModel.1#get()
	CALLEE: static org.glassfish.jersey.server.model.ResourceModel#access$100(org.glassfish.jersey.server.model.ResourceModel)
	CALLEE: org.glassfish.jersey.server.model.RuntimeResourceModel#<init>(java.util.List)
CALLER: static org.glassfish.jersey.internal.OsgiRegistry#access$000(org.glassfish.jersey.internal.OsgiRegistry,java.lang.String)
	CALLEE: org.glassfish.jersey.internal.OsgiRegistry#locateAllProviders(java.lang.String)
CALLER: org.glassfish.jersey.internal.ServiceFinder.LazyObjectIterator#<init>(java.lang.Class,java.lang.String,java.lang.ClassLoader,boolean,org.glassfish.jersey.internal.ServiceFinder.1)
	CALLEE: org.glassfish.jersey.internal.ServiceFinder.LazyObjectIterator#<init>(java.lang.Class,java.lang.String,java.lang.ClassLoader,boolean)
CALLER: org.glassfish.jersey.internal.ServiceFinder.LazyClassIterator#<init>(java.lang.Class,java.lang.String,java.lang.ClassLoader,boolean,org.glassfish.jersey.internal.ServiceFinder.1)
	CALLEE: org.glassfish.jersey.internal.ServiceFinder.LazyClassIterator#<init>(java.lang.Class,java.lang.String,java.lang.ClassLoader,boolean)
CALLER: com.fasterxml.jackson.databind.type.SimpleType#buildCanonicalName()
	CALLEE: com.fasterxml.jackson.databind.type.TypeBase#toCanonical()
CALLER: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_closeInput()
	CALLEE: com.fasterxml.jackson.core.io.IOContext#isResourceManaged()
	CALLEE: com.fasterxml.jackson.core.JsonParser#isEnabled(com.fasterxml.jackson.core.JsonParser.Feature)
CALLER: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_releaseBuffers()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#_releaseBuffers()
	CALLEE: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer#release()
	CALLEE: com.fasterxml.jackson.core.io.IOContext#releaseTokenBuffer(char[])
CALLER: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_nextAfterName()
	CALLEE: com.fasterxml.jackson.core.json.JsonReadContext#createChildArrayContext(int,int)
	CALLEE: com.fasterxml.jackson.core.json.JsonReadContext#createChildObjectContext(int,int)
CALLER: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_skipString()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#loadMore()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_reportInvalidEOF(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_decodeEscaped()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_throwUnquotedSpace(int,java.lang.String)
CALLER: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_skipWSOrEnd()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#loadMore()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#_eofAsNextChar()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_skipWSOrEnd2()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_skipCR()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_throwInvalidSpace(int)
CALLER: com.fasterxml.jackson.core.base.ParserBase#_reportMismatchedEndMarker(int,char)
	CALLEE: com.fasterxml.jackson.core.io.IOContext#getSourceReference()
	CALLEE: com.fasterxml.jackson.core.json.JsonReadContext#getStartLocation(java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.JsonStreamContext#getTypeDesc()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_reportError(java.lang.String)
CALLER: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_skipComma(int)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_reportUnexpectedChar(int,java.lang.String)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_skipCR()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_throwInvalidSpace(int)
	CALLEE: com.fasterxml.jackson.core.JsonStreamContext#getTypeDesc()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_skipAfterComma2()
CALLER: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_parseName()
	CALLEE: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer#findSymbol(char[],int,int,int)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_parseName2(int,int,int)
CALLER: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_handleOddName(int)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_reportUnexpectedChar(int,java.lang.String)
	CALLEE: com.fasterxml.jackson.core.JsonParser#isEnabled(com.fasterxml.jackson.core.JsonParser.Feature)
	CALLEE: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer#findSymbol(char[],int,int,int)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_parseAposName()
	CALLEE: static com.fasterxml.jackson.core.io.CharTypes#getInputCodeLatin1JsNames()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_handleOddName2(int,int,int[])
CALLER: com.fasterxml.jackson.core.json.JsonReadContext#setCurrentName(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.json.JsonReadContext#_checkDup(com.fasterxml.jackson.core.json.DupDetector,java.lang.String)
CALLER: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_skipColon()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_skipColon2(boolean)
CALLER: com.fasterxml.jackson.core.json.JsonReadContext#createChildArrayContext(int,int)
	CALLEE: com.fasterxml.jackson.core.json.JsonReadContext#<init>(com.fasterxml.jackson.core.json.JsonReadContext,com.fasterxml.jackson.core.json.DupDetector,int,int,int)
	CALLEE: com.fasterxml.jackson.core.json.DupDetector#child()
	CALLEE: com.fasterxml.jackson.core.json.JsonReadContext#reset(int,int,int)
CALLER: com.fasterxml.jackson.core.json.JsonReadContext#createChildObjectContext(int,int)
	CALLEE: com.fasterxml.jackson.core.json.JsonReadContext#<init>(com.fasterxml.jackson.core.json.JsonReadContext,com.fasterxml.jackson.core.json.DupDetector,int,int,int)
	CALLEE: com.fasterxml.jackson.core.json.DupDetector#child()
	CALLEE: com.fasterxml.jackson.core.json.JsonReadContext#reset(int,int,int)
CALLER: com.fasterxml.jackson.core.base.ParserMinimalBase#_reportUnexpectedChar(int,java.lang.String)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_reportError(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_reportInvalidEOF()
	CALLEE: static com.fasterxml.jackson.core.base.ParserMinimalBase#_getCharDesc(int)
CALLER: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_matchTrue()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_matchToken(java.lang.String,int)
CALLER: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_matchFalse()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_matchToken(java.lang.String,int)
CALLER: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_matchNull()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_matchToken(java.lang.String,int)
CALLER: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_parseNegNumber()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_parseNumber2(boolean,int)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_handleInvalidNumberStart(int,boolean)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_parseFloat(int,int,int,boolean,int)
	CALLEE: com.fasterxml.jackson.core.JsonStreamContext#inRoot()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_verifyRootSpace(int)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#resetInt(boolean,int)
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#resetWithShared(char[],int,int)
CALLER: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_parsePosNumber(int)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_parseNumber2(boolean,int)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_parseFloat(int,int,int,boolean,int)
	CALLEE: com.fasterxml.jackson.core.JsonStreamContext#inRoot()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_verifyRootSpace(int)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#resetInt(boolean,int)
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#resetWithShared(char[],int,int)
CALLER: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_handleOddValue(int)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_reportUnexpectedChar(int,java.lang.String)
	CALLEE: com.fasterxml.jackson.core.JsonParser#isEnabled(com.fasterxml.jackson.core.JsonParser.Feature)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#loadMore()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_reportError(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_matchToken(java.lang.String,int)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_handleInvalidNumberStart(int,boolean)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_handleApos()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#resetAsNaN(java.lang.String,double)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_reportInvalidEOFInValue()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_reportInvalidToken(java.lang.String,java.lang.String)
CALLER: static com.fasterxml.jackson.core.JsonLocation#<clinit>()
	CALLEE: com.fasterxml.jackson.core.JsonLocation#<init>(java.lang.Object,long,long,int,int)
CALLER: com.fasterxml.jackson.databind.DeserializationContext#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: com.fasterxml.jackson.databind.DeserializationFeature#getMask()
CALLER: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference#<init>(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#<init>(java.lang.String)
CALLER: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference#addUnresolvedId(java.lang.Object,java.lang.Class,com.fasterxml.jackson.core.JsonLocation)
	CALLEE: com.fasterxml.jackson.databind.deser.UnresolvedId#<init>(java.lang.Object,java.lang.Class,com.fasterxml.jackson.core.JsonLocation)
CALLER: com.fasterxml.jackson.databind.deser.DeserializerCache#findValueDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.deser.DeserializerCache#_findCachedDeserializer(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.deser.DeserializerCache#_createAndCacheValueDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.deser.DeserializerCache#_handleUnknownValueDeserializer(com.fasterxml.jackson.databind.JavaType)
CALLER: com.fasterxml.jackson.databind.DeserializationContext#handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.util.LinkedNode#<init>(java.lang.Object,com.fasterxml.jackson.databind.util.LinkedNode)
	CALLEE: com.fasterxml.jackson.databind.util.LinkedNode#next()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#findTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.DeserializationConfig#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#introspectClassAnnotations(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#getDefaultTyper(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfigBase#getSubtypeResolver()
	CALLEE: com.fasterxml.jackson.databind.JavaType#isAbstract()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#isAbstract()
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#mapAbstractType(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver#collectAndResolveSubtypes(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#getClassInfo()
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder#buildTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder#defaultImpl(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder#getDefaultImpl()
CALLER: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#<init>(com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#<init>()
CALLER: com.fasterxml.jackson.core.util.BufferRecycler#allocCharBuffer(int,int)
	CALLEE: com.fasterxml.jackson.core.util.BufferRecycler#charBufferLength(int)
	CALLEE: com.fasterxml.jackson.core.util.BufferRecycler#calloc(int)
CALLER: com.fasterxml.jackson.core.util.BufferRecycler#allocCharBuffer(int)
	CALLEE: com.fasterxml.jackson.core.util.BufferRecycler#allocCharBuffer(int,int)
CALLER: org.glassfish.jersey.server.model.Resource.Builder#mergeWith(org.glassfish.jersey.server.model.Resource.Data)
	CALLEE: static org.glassfish.jersey.internal.Errors#processWithException(java.lang.Runnable)
	CALLEE: static org.glassfish.jersey.server.model.Resource.Data#access$300(org.glassfish.jersey.server.model.Resource.Data)
	CALLEE: static org.glassfish.jersey.server.model.Resource.Data#access$400(org.glassfish.jersey.server.model.Resource.Data)
	CALLEE: static org.glassfish.jersey.server.model.Resource.Data#access$500(org.glassfish.jersey.server.model.Resource.Data)
	CALLEE: static org.glassfish.jersey.server.model.Resource.Data#access$700(org.glassfish.jersey.server.model.Resource.Data)
	CALLEE: static org.glassfish.jersey.server.model.Resource.Data#access$800(org.glassfish.jersey.server.model.Resource.Data)
	CALLEE: static org.glassfish.jersey.server.model.Resource.Data#access$900(org.glassfish.jersey.server.model.Resource.Data)
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder.1#<init>(org.glassfish.jersey.server.model.Resource.Builder,org.glassfish.jersey.server.model.Resource.Data)
CALLER: static jersey.repackaged.com.google.common.collect.AbstractIterator.1#<clinit>()
	CALLEE: static jersey.repackaged.com.google.common.collect.AbstractIterator.State#values()
CALLER: jersey.repackaged.com.google.common.collect.AbstractIterator#tryToComputeNext()
	CALLEE: jersey.repackaged.com.google.common.collect.Iterators.7#computeNext()
CALLER: jersey.repackaged.com.google.common.collect.Iterators.8#transform(java.lang.Object)
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig.1#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.inject.ProviderToService#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.model.internal.ModelErrors.1#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.ApplicationHandler.WorkersToStringTransform#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.inject.Providers.2#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.1#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.model.Resource.1#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Builder.1#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.model.RuntimeResource.2#apply(java.lang.Object)
CALLER: com.zaxxer.hikari.pool.ProxyConnection#closeStatements()
	CALLEE: com.zaxxer.hikari.util.FastList#size()
	CALLEE: com.zaxxer.hikari.pool.ProxyConnection#checkException(java.sql.SQLException)
	CALLEE: com.zaxxer.hikari.util.FastList#get(int)
	CALLEE: com.zaxxer.hikari.util.FastList#clear()
CALLER: static com.zaxxer.hikari.pool.ProxyConnection.ClosedConnection#<clinit>()
	CALLEE: static com.zaxxer.hikari.pool.ProxyConnection.ClosedConnection#getClosedConnection()
CALLER: com.zaxxer.hikari.pool.ProxyLeakTask#cancel()
	CALLEE: org.slf4j.helpers.NOPLogger#info(java.lang.String,java.lang.Object)
	CALLEE: org.slf4j.helpers.SubstituteLogger#info(java.lang.String,java.lang.Object)
	CALLEE: org.slf4j.impl.SimpleLogger#info(java.lang.String,java.lang.Object)
CALLER: com.zaxxer.hikari.pool.PoolEntry#resetConnectionState(com.zaxxer.hikari.pool.ProxyConnection,int)
	CALLEE: com.zaxxer.hikari.pool.PoolBase#resetConnectionState(java.sql.Connection,com.zaxxer.hikari.pool.ProxyConnection,int)
CALLER: com.zaxxer.hikari.pool.PoolEntry#recycle(long)
	CALLEE: com.zaxxer.hikari.pool.HikariPool#recycle(com.zaxxer.hikari.pool.PoolEntry)
CALLER: com.zaxxer.hikari.pool.ProxyConnection#checkException(java.sql.SQLException)
	CALLEE: org.slf4j.helpers.NOPLogger#warn(java.lang.String,java.lang.Object[])
	CALLEE: org.slf4j.helpers.SubstituteLogger#warn(java.lang.String,java.lang.Object[])
	CALLEE: org.slf4j.impl.SimpleLogger#warn(java.lang.String,java.lang.Object[])
	CALLEE: com.zaxxer.hikari.pool.PoolEntry#getPoolName()
	CALLEE: com.zaxxer.hikari.pool.ProxyLeakTask.1#cancel()
	CALLEE: com.zaxxer.hikari.pool.ProxyLeakTask#cancel()
	CALLEE: com.zaxxer.hikari.pool.PoolEntry#evict(java.lang.String)
CALLER: com.zaxxer.hikari.pool.ProxyConnection#prepareStatement(java.lang.String)
	CALLEE: com.zaxxer.hikari.pool.ProxyConnection#trackStatement(java.sql.Statement)
	CALLEE: static com.zaxxer.hikari.pool.ProxyFactory#getProxyPreparedStatement(com.zaxxer.hikari.pool.ProxyConnection,java.sql.PreparedStatement)
CALLER: com.zaxxer.hikari.pool.ProxyConnection#prepareStatement(java.lang.String,int)
	CALLEE: com.zaxxer.hikari.pool.ProxyConnection#trackStatement(java.sql.Statement)
	CALLEE: static com.zaxxer.hikari.pool.ProxyFactory#getProxyPreparedStatement(com.zaxxer.hikari.pool.ProxyConnection,java.sql.PreparedStatement)
CALLER: org.glassfish.hk2.api.AnnotationLiteral#getMembers()
	CALLEE: org.glassfish.hk2.api.AnnotationLiteral#annotationType()
	CALLEE: org.glassfish.hk2.api.AnnotationLiteral.1#<init>(org.glassfish.hk2.api.AnnotationLiteral)
CALLER: static org.glassfish.hk2.api.AnnotationLiteral#invoke(java.lang.reflect.Method,java.lang.Object)
	CALLEE: static org.glassfish.hk2.api.AnnotationLiteral#setAccessible(java.lang.reflect.AccessibleObject)
CALLER: javax.servlet.ServletContextAttributeEvent#<init>(javax.servlet.ServletContext,java.lang.String,java.lang.Object)
	CALLEE: javax.servlet.ServletContextEvent#<init>(javax.servlet.ServletContext)
CALLER: org.eclipse.jetty.server.handler.ContextHandler#getResourcePaths(java.lang.String)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#ignore(java.lang.Throwable)
	CALLEE: static org.eclipse.jetty.util.URIUtil#canonicalPath(java.lang.String)
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#getResource(java.lang.String)
	CALLEE: org.eclipse.jetty.webapp.WebAppContext#getResource(java.lang.String)
CALLER: org.eclipse.jetty.webapp.WebAppContext.Context#getResource(java.lang.String)
	CALLEE: org.eclipse.jetty.webapp.WebAppContext#getResource(java.lang.String)
	CALLEE: org.eclipse.jetty.webapp.WebAppContext#isExtractWAR()
CALLER: org.eclipse.jetty.server.handler.ContextHandler.Context#getResource(java.lang.String)
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#getResource(java.lang.String)
	CALLEE: org.eclipse.jetty.webapp.WebAppContext#getResource(java.lang.String)
CALLER: org.eclipse.jetty.util.resource.JarResource#getInputStream()
	CALLEE: org.eclipse.jetty.util.resource.JarFileResource#checkConnection()
	CALLEE: org.eclipse.jetty.util.resource.JarResource#checkConnection()
	CALLEE: org.eclipse.jetty.util.resource.URLResource#getInputStream(boolean)
	CALLEE: org.eclipse.jetty.util.resource.JarResource.1#<init>(org.eclipse.jetty.util.resource.JarResource,java.io.InputStream)
CALLER: org.eclipse.jetty.util.resource.URLResource#getInputStream()
	CALLEE: org.eclipse.jetty.util.resource.URLResource#getInputStream(boolean)
CALLER: org.glassfish.jersey.server.model.ComponentModelValidator.1#run()
	CALLEE: static org.glassfish.jersey.internal.Errors#mark()
	CALLEE: static org.glassfish.jersey.server.model.internal.ModelErrors#getErrorsAsResourceModelIssues(boolean)
	CALLEE: static org.glassfish.jersey.internal.Errors#unmark()
	CALLEE: static org.glassfish.jersey.server.model.ComponentModelValidator#access$000(org.glassfish.jersey.server.model.ComponentModelValidator,org.glassfish.jersey.server.model.ResourceModelComponent)
	CALLEE: static org.glassfish.jersey.server.model.ComponentModelValidator#access$100(org.glassfish.jersey.server.model.ComponentModelValidator)
CALLER: org.glassfish.jersey.model.internal.RankedComparator#getPriority(org.glassfish.jersey.model.internal.RankedProvider)
	CALLEE: org.glassfish.jersey.model.internal.RankedProvider#getRank()
CALLER: com.fasterxml.jackson.core.JsonProcessingException#getMessage()
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#getLocation()
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#getMessageSuffix()
	CALLEE: com.fasterxml.jackson.core.JsonLocation#toString()
	CALLEE: com.fasterxml.jackson.databind.exc.PropertyBindingException#getMessageSuffix()
CALLER: com.fasterxml.jackson.databind.JsonMappingException#getPathReference(java.lang.StringBuilder)
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#_appendPathDesc(java.lang.StringBuilder)
CALLER: static org.glassfish.jersey.server.model.IntrospectionModeller#access$000(org.glassfish.jersey.server.model.IntrospectionModeller)
	CALLEE: org.glassfish.jersey.server.model.IntrospectionModeller#doCreateResourceBuilder()
CALLER: static jersey.repackaged.com.google.common.collect.Maps#transformEntries(java.util.SortedMap,jersey.repackaged.com.google.common.collect.Maps.EntryTransformer)
	CALLEE: static jersey.repackaged.com.google.common.collect.Platform#mapsTransformEntriesSortedMap(java.util.SortedMap,jersey.repackaged.com.google.common.collect.Maps.EntryTransformer)
CALLER: jersey.repackaged.com.google.common.collect.Maps.TransformedEntriesMap#<init>(java.util.Map,jersey.repackaged.com.google.common.collect.Maps.EntryTransformer)
	CALLEE: static jersey.repackaged.com.google.common.base.Preconditions#checkNotNull(java.lang.Object)
	CALLEE: jersey.repackaged.com.google.common.collect.Maps.ImprovedAbstractMap#<init>()
CALLER: org.eclipse.jetty.io.AbstractConnection#next(org.eclipse.jetty.io.AbstractConnection.State,org.eclipse.jetty.io.AbstractConnection.State)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#isDebugEnabled()
	CALLEE: org.eclipse.jetty.io.AbstractConnection.FillInterestedState#onEnter(org.eclipse.jetty.io.AbstractConnection)
CALLER: com.fasterxml.jackson.databind.introspect.NopAnnotationIntrospector.1#<init>()
	CALLEE: com.fasterxml.jackson.databind.introspect.NopAnnotationIntrospector#<init>()
CALLER: com.fasterxml.jackson.databind.cfg.MapperConfig#getTypeFactory()
	CALLEE: com.fasterxml.jackson.databind.cfg.BaseSettings#getTypeFactory()
CALLER: com.fasterxml.jackson.databind.cfg.MapperConfig#getClassIntrospector()
	CALLEE: com.fasterxml.jackson.databind.cfg.BaseSettings#getClassIntrospector()
CALLER: org.glassfish.jersey.process.internal.Stages.StageChainBuilder#convertTransformations(org.glassfish.jersey.process.internal.Stage)
	CALLEE: org.glassfish.jersey.process.internal.Stages.LinkedStage#<init>(jersey.repackaged.com.google.common.base.Function)
	CALLEE: org.glassfish.jersey.process.internal.Stages.LinkedStage#<init>(jersey.repackaged.com.google.common.base.Function,org.glassfish.jersey.process.internal.Stage)
CALLER: liquibase.statement.core.UpdateChangeSetChecksumStatement#<init>(liquibase.changelog.ChangeSet)
	CALLEE: liquibase.statement.AbstractSqlStatement#<init>()
CALLER: static liquibase.util.csv.CSVWriter#<clinit>()
	CALLEE: liquibase.util.ISODateFormat#<init>()
CALLER: liquibase.util.csv.CSVWriter#<init>(java.io.Writer)
	CALLEE: liquibase.util.csv.opencsv.CSVWriter#<init>(java.io.Writer)
CALLER: liquibase.util.csv.opencsv.CSVWriter#writeNext(java.lang.String[])
	CALLEE: liquibase.util.csv.opencsv.CSVWriter#writeNext(java.lang.String[],boolean)
CALLER: liquibase.util.csv.opencsv.CSVReader#<init>(java.io.Reader)
	CALLEE: liquibase.util.csv.opencsv.CSVReader#<init>(java.io.Reader,char,char,char)
CALLER: liquibase.util.csv.opencsv.CSVReader#getNextLine()
	CALLEE: liquibase.util.csv.opencsv.CSVReader#isClosed()
	CALLEE: liquibase.util.csv.opencsv.stream.reader.LineReader#readLine()
CALLER: liquibase.ContextExpression#parseContextString(java.lang.String)
	CALLEE: static liquibase.util.StringUtils#trimToNull(java.lang.String)
	CALLEE: static liquibase.util.StringUtils#splitAndTrim(java.lang.String,java.lang.String)
CALLER: liquibase.Labels#parseLabelString(java.lang.String)
	CALLEE: static liquibase.util.StringUtils#trimToNull(java.lang.String)
	CALLEE: static liquibase.util.StringUtils#splitAndTrim(java.lang.String,java.lang.String)
CALLER: liquibase.changelog.OfflineChangeLogHistoryService.2#execute(java.lang.String[])
	CALLEE: liquibase.util.ISODateFormat#<init>()
	CALLEE: liquibase.util.ISODateFormat#format(java.sql.Timestamp)
	CALLEE: static liquibase.changelog.OfflineChangeLogHistoryService#access$100(liquibase.changelog.OfflineChangeLogHistoryService)
	CALLEE: static liquibase.changelog.OfflineChangeLogHistoryService#access$000(liquibase.changelog.OfflineChangeLogHistoryService)
	CALLEE: static liquibase.changelog.OfflineChangeLogHistoryService#access$200(liquibase.changelog.OfflineChangeLogHistoryService)
CALLER: liquibase.changelog.OfflineChangeLogHistoryService.1#execute(java.lang.String[])
	CALLEE: static liquibase.changelog.OfflineChangeLogHistoryService#access$000(liquibase.changelog.OfflineChangeLogHistoryService)
CALLER: liquibase.util.csv.opencsv.CSVWriter#close()
	CALLEE: liquibase.util.csv.opencsv.CSVWriter#flush()
CALLER: liquibase.changelog.OfflineChangeLogHistoryService#getNextSequenceValue()
	CALLEE: static liquibase.configuration.LiquibaseConfiguration#getInstance()
	CALLEE: liquibase.configuration.LiquibaseConfiguration#getConfiguration(java.lang.Class)
	CALLEE: liquibase.util.csv.CSVReader#<init>(java.io.Reader)
	CALLEE: liquibase.util.csv.opencsv.CSVReader#readNext()
CALLER: static org.eclipse.jetty.util.IteratingCallback.1#<clinit>()
	CALLEE: static org.eclipse.jetty.util.IteratingCallback.Action#values()
	CALLEE: static org.eclipse.jetty.util.IteratingCallback.State#values()
CALLER: org.eclipse.jetty.server.HttpConnection.SendCallback#onCompleteFailure(java.lang.Throwable)
	CALLEE: org.eclipse.jetty.io.AbstractConnection#getEndPoint()
	CALLEE: org.eclipse.jetty.server.HttpConnection.SendCallback#releaseHeader()
	CALLEE: static org.eclipse.jetty.server.HttpConnection#access$1000(org.eclipse.jetty.server.HttpConnection,org.eclipse.jetty.util.Callback,java.lang.Throwable)
	CALLEE: org.eclipse.jetty.io.ChannelEndPoint#shutdownOutput()
CALLER: static jersey.repackaged.com.google.common.collect.Iterators#any(java.util.Iterator,jersey.repackaged.com.google.common.base.Predicate)
	CALLEE: static jersey.repackaged.com.google.common.collect.Iterators#indexOf(java.util.Iterator,jersey.repackaged.com.google.common.base.Predicate)
CALLER: org.apache.log4j.or.RendererMap#searchInterfaces(java.lang.Class)
	CALLEE: org.apache.log4j.or.RendererMap#searchInterfaces(java.lang.Class)
CALLER: org.glassfish.jersey.server.model.RuntimeResourceModel#<init>(java.util.List)
	CALLEE: static jersey.repackaged.com.google.common.collect.Lists#newArrayList()
	CALLEE: org.glassfish.jersey.server.model.RuntimeResourceModel#getRuntimeResources(java.util.List)
	CALLEE: org.glassfish.jersey.server.model.RuntimeResource.Builder#build(org.glassfish.jersey.server.model.RuntimeResource)
CALLER: org.glassfish.jersey.internal.OsgiRegistry#locateAllProviders(java.lang.String)
	CALLEE: org.glassfish.jersey.internal.OsgiRegistry.BundleSpiProvidersLoader#call()
CALLER: org.glassfish.jersey.internal.ServiceFinder.LazyObjectIterator#<init>(java.lang.Class,java.lang.String,java.lang.ClassLoader,boolean)
	CALLEE: org.glassfish.jersey.internal.ServiceFinder.AbstractLazyIterator#<init>(java.lang.Class,java.lang.String,java.lang.ClassLoader,boolean,org.glassfish.jersey.internal.ServiceFinder.1)
CALLER: org.glassfish.jersey.internal.ServiceFinder.LazyClassIterator#<init>(java.lang.Class,java.lang.String,java.lang.ClassLoader,boolean)
	CALLEE: org.glassfish.jersey.internal.ServiceFinder.AbstractLazyIterator#<init>(java.lang.Class,java.lang.String,java.lang.ClassLoader,boolean,org.glassfish.jersey.internal.ServiceFinder.1)
CALLER: com.fasterxml.jackson.databind.type.TypeBase#toCanonical()
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#buildCanonicalName()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#buildCanonicalName()
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#buildCanonicalName()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#buildCanonicalName()
CALLER: com.fasterxml.jackson.core.JsonParser#isEnabled(com.fasterxml.jackson.core.JsonParser.Feature)
	CALLEE: com.fasterxml.jackson.core.JsonParser.Feature#enabledIn(int)
CALLER: com.fasterxml.jackson.core.base.ParserBase#_releaseBuffers()
	CALLEE: com.fasterxml.jackson.core.io.IOContext#releaseNameCopyBuffer(char[])
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#releaseBuffers()
CALLER: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer#release()
	CALLEE: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer#maybeDirty()
	CALLEE: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer#mergeChild(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer)
CALLER: com.fasterxml.jackson.core.io.IOContext#releaseTokenBuffer(char[])
	CALLEE: com.fasterxml.jackson.core.io.IOContext#_verifyRelease(char[],char[])
	CALLEE: com.fasterxml.jackson.core.util.BufferRecycler#releaseCharBuffer(int,char[])
CALLER: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#loadMore()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_closeInput()
CALLER: com.fasterxml.jackson.core.base.ParserMinimalBase#_reportInvalidEOF(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_reportError(java.lang.String)
CALLER: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_decodeEscaped()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_reportUnexpectedChar(int,java.lang.String)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#loadMore()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_reportInvalidEOF(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_handleUnrecognizedCharacterEscape(char)
	CALLEE: static com.fasterxml.jackson.core.io.CharTypes#charToHex(int)
CALLER: com.fasterxml.jackson.core.base.ParserMinimalBase#_throwUnquotedSpace(int,java.lang.String)
	CALLEE: com.fasterxml.jackson.core.JsonParser#isEnabled(com.fasterxml.jackson.core.JsonParser.Feature)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_reportError(java.lang.String)
	CALLEE: static com.fasterxml.jackson.core.base.ParserMinimalBase#_getCharDesc(int)
CALLER: com.fasterxml.jackson.core.base.ParserBase#_eofAsNextChar()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#_handleEOF()
CALLER: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_skipWSOrEnd2()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#loadMore()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#_eofAsNextChar()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_skipCR()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_throwInvalidSpace(int)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_skipComment()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_skipYAMLComment()
CALLER: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_skipCR()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#loadMore()
CALLER: com.fasterxml.jackson.core.base.ParserMinimalBase#_throwInvalidSpace(int)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_reportError(java.lang.String)
	CALLEE: static com.fasterxml.jackson.core.base.ParserMinimalBase#_getCharDesc(int)
CALLER: com.fasterxml.jackson.core.json.JsonReadContext#getStartLocation(java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.JsonLocation#<init>(java.lang.Object,long,int,int)
CALLER: com.fasterxml.jackson.core.base.ParserMinimalBase#_reportError(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.JsonParser#_constructError(java.lang.String)
CALLER: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_skipAfterComma2()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#loadMore()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_skipCR()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_throwInvalidSpace(int)
	CALLEE: com.fasterxml.jackson.core.JsonStreamContext#getTypeDesc()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_skipComment()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_skipYAMLComment()
	CALLEE: com.fasterxml.jackson.core.JsonParser#_constructError(java.lang.String)
CALLER: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer#findSymbol(char[],int,int,int)
	CALLEE: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer#_hashToIndex(int)
	CALLEE: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer#_findSymbol2(char[],int,int,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.Bucket)
	CALLEE: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer#_addSymbol(char[],int,int,int,int)
	CALLEE: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.Bucket#has(char[],int,int)
CALLER: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_parseName2(int,int,int)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#loadMore()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_reportInvalidEOF(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_decodeEscaped()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_throwUnquotedSpace(int,java.lang.String)
	CALLEE: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer#findSymbol(char[],int,int,int)
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#setCurrentLength(int)
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#finishCurrentSegment()
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#getCurrentSegmentSize()
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#resetWithShared(char[],int,int)
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#size()
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#getTextOffset()
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#getTextBuffer()
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#getCurrentSegment()
CALLER: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_parseAposName()
	CALLEE: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer#findSymbol(char[],int,int,int)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_parseName2(int,int,int)
CALLER: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_handleOddName2(int,int,int[])
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#loadMore()
	CALLEE: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer#findSymbol(char[],int,int,int)
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#setCurrentLength(int)
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#finishCurrentSegment()
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#getCurrentSegmentSize()
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#resetWithShared(char[],int,int)
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#size()
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#getTextOffset()
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#getTextBuffer()
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#getCurrentSegment()
CALLER: com.fasterxml.jackson.core.json.JsonReadContext#_checkDup(com.fasterxml.jackson.core.json.DupDetector,java.lang.String)
	CALLEE: com.fasterxml.jackson.core.json.DupDetector#isDup(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.json.DupDetector#findLocation()
	CALLEE: com.fasterxml.jackson.core.JsonParseException#<init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation)
CALLER: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_skipColon2(boolean)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_reportUnexpectedChar(int,java.lang.String)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_skipCR()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_throwInvalidSpace(int)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_skipComment()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_skipYAMLComment()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#loadMoreGuaranteed()
CALLER: com.fasterxml.jackson.core.json.DupDetector#child()
	CALLEE: com.fasterxml.jackson.core.json.DupDetector#<init>(java.lang.Object)
CALLER: com.fasterxml.jackson.core.json.JsonReadContext#reset(int,int,int)
	CALLEE: com.fasterxml.jackson.core.json.DupDetector#reset()
CALLER: com.fasterxml.jackson.core.base.ParserMinimalBase#_reportInvalidEOF()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_reportInvalidEOF(java.lang.String)
CALLER: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_matchToken(java.lang.String,int)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#loadMore()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_reportInvalidToken(java.lang.String)
CALLER: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_parseNumber2(boolean,int)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#loadMore()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_handleInvalidNumberStart(int,boolean)
	CALLEE: com.fasterxml.jackson.core.JsonStreamContext#inRoot()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_verifyRootSpace(int)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getNextChar(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_verifyNoLeadingZeroes()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#reportUnexpectedNumberChar(int,java.lang.String)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#reset(boolean,int,int,int)
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#setCurrentLength(int)
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#finishCurrentSegment()
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#emptyAndGetCurrentSegment()
CALLER: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_handleInvalidNumberStart(int,boolean)
	CALLEE: com.fasterxml.jackson.core.JsonParser#isEnabled(com.fasterxml.jackson.core.JsonParser.Feature)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#loadMore()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_reportError(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_matchToken(java.lang.String,int)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#resetAsNaN(java.lang.String,double)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_reportInvalidEOFInValue()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#reportUnexpectedNumberChar(int,java.lang.String)
CALLER: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_parseFloat(int,int,int,boolean,int)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_parseNumber2(boolean,int)
	CALLEE: com.fasterxml.jackson.core.JsonStreamContext#inRoot()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_verifyRootSpace(int)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#reportUnexpectedNumberChar(int,java.lang.String)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#resetFloat(boolean,int,int,int)
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#resetWithShared(char[],int,int)
CALLER: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_verifyRootSpace(int)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_skipCR()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_reportMissingRootWS(int)
CALLER: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_handleApos()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#loadMore()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_reportInvalidEOF(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_decodeEscaped()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_throwUnquotedSpace(int,java.lang.String)
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#setCurrentLength(int)
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#finishCurrentSegment()
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#getCurrentSegmentSize()
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#emptyAndGetCurrentSegment()
CALLER: com.fasterxml.jackson.core.base.ParserBase#resetAsNaN(java.lang.String,double)
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#resetWithString(java.lang.String)
CALLER: com.fasterxml.jackson.core.base.ParserMinimalBase#_reportInvalidEOFInValue()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_reportInvalidEOF(java.lang.String)
CALLER: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_reportInvalidToken(java.lang.String,java.lang.String)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#loadMore()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_reportError(java.lang.String)
CALLER: com.fasterxml.jackson.databind.deser.DeserializerCache#_findCachedDeserializer(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.deser.DeserializerCache#_hasCustomValueHandler(com.fasterxml.jackson.databind.JavaType)
CALLER: com.fasterxml.jackson.databind.deser.DeserializerCache#_createAndCacheValueDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.deser.DeserializerCache#_findCachedDeserializer(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.deser.DeserializerCache#_createAndCache2(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType)
CALLER: com.fasterxml.jackson.databind.deser.DeserializerCache#_handleUnknownValueDeserializer(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#<init>(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#isConcrete(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.cfg.MapperConfig#getDefaultTyper(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.cfg.BaseSettings#getTypeResolverBuilder()
CALLER: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#mapAbstractType(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#_mapAbstractType2(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType)
CALLER: jersey.repackaged.com.google.common.collect.Iterators.7#computeNext()
	CALLEE: jersey.repackaged.com.google.common.collect.AbstractIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.AbstractIterator#hasNext()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: org.glassfish.jersey.server.ResourceConfig.RuntimeConfig.1#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.ResourceConfig.RuntimeConfig.2#apply(java.lang.Object)
	CALLEE: jersey.repackaged.com.google.common.base.Predicates.AndPredicate#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.ResourceConfig.RuntimeConfig.3.1#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.ResourceConfig.RuntimeConfig.3.2#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.ApplicationHandler.8#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.ApplicationHandler.9#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig.3#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.model.internal.ComponentBag.7#apply(java.lang.Object)
	CALLEE: jersey.repackaged.com.google.common.collect.AbstractIterator#endOfData()
	CALLEE: org.glassfish.jersey.model.internal.ComponentBag.6#apply(java.lang.Object)
CALLER: org.glassfish.jersey.model.internal.CommonConfig.1#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig.1#apply(java.lang.Object)
CALLER: org.glassfish.jersey.internal.inject.ProviderToService#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.inject.ProviderToService#apply(org.glassfish.hk2.api.ServiceHandle)
CALLER: org.glassfish.jersey.server.model.internal.ModelErrors.1#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.model.internal.ModelErrors.1#apply(org.glassfish.jersey.internal.Errors.ErrorMessage)
CALLER: org.glassfish.jersey.server.ApplicationHandler.WorkersToStringTransform#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.ApplicationHandler.WorkersToStringTransform#apply(java.lang.Object)
CALLER: org.glassfish.jersey.internal.inject.Providers.2#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.inject.Providers.2#apply(org.glassfish.jersey.model.internal.RankedProvider)
CALLER: static com.zaxxer.hikari.pool.ProxyConnection.ClosedConnection#getClosedConnection()
	CALLEE: com.zaxxer.hikari.pool.ProxyConnection.ClosedConnection.1#<init>()
CALLER: com.zaxxer.hikari.pool.PoolBase#resetConnectionState(java.sql.Connection,com.zaxxer.hikari.pool.ProxyConnection,int)
	CALLEE: com.zaxxer.hikari.pool.PoolBase#setNetworkTimeout(java.sql.Connection,long)
	CALLEE: org.slf4j.helpers.NOPLogger#isDebugEnabled()
	CALLEE: org.slf4j.helpers.NOPLogger#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.slf4j.helpers.SubstituteLogger#isDebugEnabled()
	CALLEE: org.slf4j.helpers.SubstituteLogger#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.slf4j.impl.SimpleLogger#isDebugEnabled()
	CALLEE: org.slf4j.impl.SimpleLogger#debug(java.lang.String,java.lang.Object[])
	CALLEE: com.zaxxer.hikari.pool.ProxyConnection#getReadOnlyState()
	CALLEE: com.zaxxer.hikari.pool.ProxyConnection#getAutoCommitState()
	CALLEE: com.zaxxer.hikari.pool.ProxyConnection#getTransactionIsolationState()
	CALLEE: com.zaxxer.hikari.pool.ProxyConnection#getCatalogState()
	CALLEE: com.zaxxer.hikari.pool.ProxyConnection#getNetworkTimeoutState()
	CALLEE: com.zaxxer.hikari.pool.PoolBase#stringFromResetBits(int)
CALLER: com.zaxxer.hikari.pool.HikariPool#recycle(com.zaxxer.hikari.pool.PoolEntry)
	CALLEE: com.zaxxer.hikari.pool.PoolBase.MetricsTrackerDelegate#recordConnectionUsage(com.zaxxer.hikari.pool.PoolEntry)
	CALLEE: com.zaxxer.hikari.pool.PoolBase.NopMetricsTrackerDelegate#recordConnectionUsage(com.zaxxer.hikari.pool.PoolEntry)
	CALLEE: com.zaxxer.hikari.util.ConcurrentBag#requite(com.zaxxer.hikari.util.ConcurrentBag.IConcurrentBagEntry)
CALLER: com.zaxxer.hikari.pool.PoolEntry#evict(java.lang.String)
	CALLEE: com.zaxxer.hikari.pool.HikariPool#closeConnection(com.zaxxer.hikari.pool.PoolEntry,java.lang.String)
CALLER: com.zaxxer.hikari.pool.ProxyConnection#trackStatement(java.sql.Statement)
	CALLEE: com.zaxxer.hikari.util.FastList#add(java.lang.Object)
CALLER: static com.zaxxer.hikari.pool.ProxyFactory#getProxyPreparedStatement(com.zaxxer.hikari.pool.ProxyConnection,java.sql.PreparedStatement)
	CALLEE: com.zaxxer.hikari.pool.HikariProxyPreparedStatement#<init>(com.zaxxer.hikari.pool.ProxyConnection,java.sql.PreparedStatement)
CALLER: static org.glassfish.hk2.api.AnnotationLiteral#setAccessible(java.lang.reflect.AccessibleObject)
	CALLEE: org.glassfish.hk2.api.AnnotationLiteral.2#<init>(java.lang.reflect.AccessibleObject)
CALLER: org.eclipse.jetty.server.handler.ContextHandler#getResource(java.lang.String)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#ignore(java.lang.Throwable)
	CALLEE: static org.eclipse.jetty.util.URIUtil#canonicalPath(java.lang.String)
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#checkAlias(java.lang.String,org.eclipse.jetty.util.resource.Resource)
CALLER: org.eclipse.jetty.webapp.WebAppContext#getResource(java.lang.String)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#ignore(java.lang.Throwable)
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#getResource(java.lang.String)
	CALLEE: org.eclipse.jetty.webapp.WebAppContext#getResourceAlias(java.lang.String)
CALLER: org.eclipse.jetty.util.resource.URLResource#getInputStream(boolean)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#isDebugEnabled()
	CALLEE: org.eclipse.jetty.util.resource.URLResource#checkConnection()
	CALLEE: org.eclipse.jetty.util.resource.JarFileResource#checkConnection()
	CALLEE: org.eclipse.jetty.util.resource.JarResource#checkConnection()
CALLER: static org.glassfish.jersey.server.model.ComponentModelValidator#access$000(org.glassfish.jersey.server.model.ComponentModelValidator,org.glassfish.jersey.server.model.ResourceModelComponent)
	CALLEE: org.glassfish.jersey.server.model.ComponentModelValidator#validateWithErrors(org.glassfish.jersey.server.model.ResourceModelComponent)
CALLER: com.fasterxml.jackson.databind.JsonMappingException#_appendPathDesc(java.lang.StringBuilder)
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException.Reference#toString()
CALLER: org.glassfish.jersey.server.model.IntrospectionModeller#doCreateResourceBuilder()
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#extended(boolean)
	CALLEE: static org.glassfish.jersey.server.model.internal.ModelHelper#getAnnotatedResourceClass(java.lang.Class)
	CALLEE: static org.glassfish.jersey.internal.util.ReflectionHelper#getAnnotationTypes(java.lang.reflect.AnnotatedElement,java.lang.Class)
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#name(java.lang.String)
	CALLEE: org.glassfish.jersey.server.model.IntrospectionModeller#checkForNonPublicMethodIssues()
	CALLEE: static org.glassfish.jersey.server.model.IntrospectionModeller#extractMediaTypes(javax.ws.rs.Consumes)
	CALLEE: static org.glassfish.jersey.server.model.IntrospectionModeller#extractMediaTypes(javax.ws.rs.Produces)
	CALLEE: org.glassfish.jersey.server.model.MethodList#<init>(java.lang.Class)
	CALLEE: org.glassfish.jersey.server.model.IntrospectionModeller#checkResourceClassSetters(org.glassfish.jersey.server.model.MethodList,boolean,java.util.Collection)
	CALLEE: static org.glassfish.jersey.server.model.InvocableValidator#isSingleton(java.lang.Class)
	CALLEE: org.glassfish.jersey.server.model.IntrospectionModeller#checkResourceClassFields(boolean,boolean,java.util.Collection)
	CALLEE: static org.glassfish.jersey.server.model.Resource#builder(java.lang.String)
	CALLEE: static org.glassfish.jersey.server.model.Resource#builder()
	CALLEE: org.glassfish.jersey.server.model.IntrospectionModeller#addResourceMethods(org.glassfish.jersey.server.model.Resource.Builder,org.glassfish.jersey.server.model.MethodList,java.util.List,boolean,java.util.List,java.util.List,java.util.Collection,boolean)
	CALLEE: org.glassfish.jersey.server.model.IntrospectionModeller#addSubResourceMethods(org.glassfish.jersey.server.model.Resource.Builder,org.glassfish.jersey.server.model.MethodList,java.util.List,boolean,java.util.List,java.util.List,java.util.Collection,boolean)
	CALLEE: org.glassfish.jersey.server.model.IntrospectionModeller#addSubResourceLocators(org.glassfish.jersey.server.model.Resource.Builder,org.glassfish.jersey.server.model.MethodList,java.util.List,boolean,boolean)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#NEW_AR_CREATED_BY_INTROSPECTION_MODELER(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#toString()
CALLER: static jersey.repackaged.com.google.common.collect.Platform#mapsTransformEntriesSortedMap(java.util.SortedMap,jersey.repackaged.com.google.common.collect.Maps.EntryTransformer)
	CALLEE: static jersey.repackaged.com.google.common.collect.Maps#transformEntries(java.util.NavigableMap,jersey.repackaged.com.google.common.collect.Maps.EntryTransformer)
	CALLEE: static jersey.repackaged.com.google.common.collect.Maps#transformEntriesIgnoreNavigable(java.util.SortedMap,jersey.repackaged.com.google.common.collect.Maps.EntryTransformer)
CALLER: com.fasterxml.jackson.databind.introspect.NopAnnotationIntrospector#<init>()
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#<init>()
CALLER: org.glassfish.jersey.process.internal.Stages.LinkedStage#<init>(jersey.repackaged.com.google.common.base.Function)
	CALLEE: org.glassfish.jersey.process.internal.Stages.LinkedStage#<init>(jersey.repackaged.com.google.common.base.Function,org.glassfish.jersey.process.internal.Stage)
CALLER: liquibase.util.csv.opencsv.CSVWriter#<init>(java.io.Writer)
	CALLEE: liquibase.util.csv.opencsv.CSVWriter#<init>(java.io.Writer,char)
CALLER: liquibase.util.csv.opencsv.CSVWriter#writeNext(java.lang.String[],boolean)
	CALLEE: liquibase.util.csv.opencsv.CSVWriter#stringContainsSpecialCharacters(java.lang.String)
	CALLEE: liquibase.util.csv.opencsv.CSVWriter#processLine(java.lang.String)
CALLER: liquibase.util.csv.opencsv.CSVReader#<init>(java.io.Reader,char,char,char)
	CALLEE: liquibase.util.csv.opencsv.CSVReader#<init>(java.io.Reader,char,char,char,int,boolean)
CALLER: static org.eclipse.jetty.util.IteratingCallback.Action#<clinit>()
	CALLEE: org.eclipse.jetty.util.IteratingCallback.Action#<init>(java.lang.String,int)
CALLER: org.eclipse.jetty.server.HttpConnection.SendCallback#releaseHeader()
	CALLEE: static org.eclipse.jetty.server.HttpConnection#access$800(org.eclipse.jetty.server.HttpConnection)
	CALLEE: org.eclipse.jetty.io.ArrayByteBufferPool#release(java.nio.ByteBuffer)
CALLER: static org.eclipse.jetty.server.HttpConnection#access$1000(org.eclipse.jetty.server.HttpConnection,org.eclipse.jetty.util.Callback,java.lang.Throwable)
	CALLEE: org.eclipse.jetty.io.AbstractConnection#failedCallback(org.eclipse.jetty.util.Callback,java.lang.Throwable)
CALLER: org.eclipse.jetty.io.ChannelEndPoint#shutdownOutput()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.Throwable)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#isDebugEnabled()
	CALLEE: org.eclipse.jetty.io.SelectChannelEndPoint#close()
CALLER: static jersey.repackaged.com.google.common.collect.Iterators#indexOf(java.util.Iterator,jersey.repackaged.com.google.common.base.Predicate)
	CALLEE: jersey.repackaged.com.google.common.collect.AbstractIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.AbstractIterator#hasNext()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: org.glassfish.jersey.server.ResourceConfig.RuntimeConfig.1#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.ResourceConfig.RuntimeConfig.2#apply(java.lang.Object)
	CALLEE: jersey.repackaged.com.google.common.base.Predicates.AndPredicate#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.ResourceConfig.RuntimeConfig.3.1#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.ResourceConfig.RuntimeConfig.3.2#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.ApplicationHandler.8#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.ApplicationHandler.9#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig.3#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.model.internal.ComponentBag.7#apply(java.lang.Object)
	CALLEE: static jersey.repackaged.com.google.common.base.Preconditions#checkNotNull(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.model.internal.ComponentBag.6#apply(java.lang.Object)
CALLER: org.glassfish.jersey.server.model.RuntimeResourceModel#getRuntimeResources(java.util.List)
	CALLEE: static jersey.repackaged.com.google.common.collect.Maps#newHashMap()
	CALLEE: static jersey.repackaged.com.google.common.collect.Lists#newArrayList()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: org.glassfish.jersey.server.model.RuntimeResourceModel#getRuntimeResources(java.util.List)
	CALLEE: org.glassfish.jersey.uri.PathTemplate#<init>(java.lang.String)
	CALLEE: org.glassfish.jersey.uri.UriTemplate#getPattern()
	CALLEE: org.glassfish.jersey.server.model.RuntimeResource.Builder#<init>(java.util.List,java.util.List,java.lang.String)
	CALLEE: org.glassfish.jersey.uri.PatternWithGroups#getRegex()
	CALLEE: org.glassfish.jersey.server.model.Resource#getPath()
	CALLEE: org.glassfish.jersey.server.model.Resource#getChildResources()
CALLER: static org.glassfish.jersey.server.model.RuntimeResource#<clinit>()
	CALLEE: org.glassfish.jersey.server.model.RuntimeResource.1#<init>()
CALLER: org.glassfish.jersey.internal.OsgiRegistry.BundleSpiProvidersLoader#call()
	CALLEE: org.glassfish.jersey.internal.OsgiRegistry.BundleSpiProvidersLoader#call()
CALLER: org.glassfish.jersey.internal.ServiceFinder.AbstractLazyIterator#<init>(java.lang.Class,java.lang.String,java.lang.ClassLoader,boolean,org.glassfish.jersey.internal.ServiceFinder.1)
	CALLEE: org.glassfish.jersey.internal.ServiceFinder.AbstractLazyIterator#<init>(java.lang.Class,java.lang.String,java.lang.ClassLoader,boolean)
CALLER: com.fasterxml.jackson.databind.type.MapLikeType#buildCanonicalName()
	CALLEE: com.fasterxml.jackson.databind.type.TypeBase#toCanonical()
CALLER: com.fasterxml.jackson.databind.type.CollectionLikeType#buildCanonicalName()
	CALLEE: com.fasterxml.jackson.databind.type.TypeBase#toCanonical()
CALLER: com.fasterxml.jackson.core.io.IOContext#releaseNameCopyBuffer(char[])
	CALLEE: com.fasterxml.jackson.core.io.IOContext#_verifyRelease(char[],char[])
	CALLEE: com.fasterxml.jackson.core.util.BufferRecycler#releaseCharBuffer(int,char[])
CALLER: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer#mergeChild(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer)
	CALLEE: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer#initTables(int)
	CALLEE: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer#size()
CALLER: com.fasterxml.jackson.core.io.IOContext#_verifyRelease(char[],char[])
	CALLEE: com.fasterxml.jackson.core.io.IOContext#wrongBuf()
CALLER: com.fasterxml.jackson.core.base.ParserMinimalBase#_handleUnrecognizedCharacterEscape(char)
	CALLEE: com.fasterxml.jackson.core.JsonParser#isEnabled(com.fasterxml.jackson.core.JsonParser.Feature)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_reportError(java.lang.String)
	CALLEE: static com.fasterxml.jackson.core.base.ParserMinimalBase#_getCharDesc(int)
CALLER: com.fasterxml.jackson.core.base.ParserBase#_handleEOF()
	CALLEE: com.fasterxml.jackson.core.io.IOContext#getSourceReference()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_reportInvalidEOF(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.json.JsonReadContext#getStartLocation(java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.JsonStreamContext#getTypeDesc()
	CALLEE: com.fasterxml.jackson.core.JsonStreamContext#inRoot()
CALLER: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_skipComment()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_reportUnexpectedChar(int,java.lang.String)
	CALLEE: com.fasterxml.jackson.core.JsonParser#isEnabled(com.fasterxml.jackson.core.JsonParser.Feature)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#loadMore()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_reportInvalidEOF(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_skipLine()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_skipCComment()
CALLER: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_skipYAMLComment()
	CALLEE: com.fasterxml.jackson.core.JsonParser#isEnabled(com.fasterxml.jackson.core.JsonParser.Feature)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_skipLine()
CALLER: com.fasterxml.jackson.core.JsonLocation#<init>(java.lang.Object,long,int,int)
	CALLEE: com.fasterxml.jackson.core.JsonLocation#<init>(java.lang.Object,long,long,int,int)
CALLER: com.fasterxml.jackson.core.JsonParser#_constructError(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.JsonParseException#<init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getCurrentLocation()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getCurrentLocation()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentLocation()
CALLER: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer#_findSymbol2(char[],int,int,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.Bucket)
	CALLEE: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.Bucket#has(char[],int,int)
CALLER: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer#_addSymbol(char[],int,int,int,int)
	CALLEE: com.fasterxml.jackson.core.JsonFactory.Feature#enabledIn(int)
	CALLEE: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer#_hashToIndex(int)
	CALLEE: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer#copyArrays()
	CALLEE: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer#rehash()
	CALLEE: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer#calcHash(char[],int,int)
	CALLEE: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.Bucket#<init>(java.lang.String,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.Bucket)
	CALLEE: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer#_handleSpillOverflow(int,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.Bucket)
	CALLEE: com.fasterxml.jackson.core.util.InternCache#intern(java.lang.String)
CALLER: com.fasterxml.jackson.core.json.DupDetector#findLocation()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getCurrentLocation()
CALLER: com.fasterxml.jackson.core.JsonParseException#<init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation)
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#<init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation)
CALLER: com.fasterxml.jackson.core.base.ParserBase#loadMoreGuaranteed()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#loadMore()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_reportInvalidEOF()
CALLER: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_reportInvalidToken(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_reportInvalidToken(java.lang.String,java.lang.String)
CALLER: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getNextChar(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#loadMore()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_reportInvalidEOF(java.lang.String)
CALLER: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_verifyNoLeadingZeroes()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_verifyNLZ2()
CALLER: com.fasterxml.jackson.core.base.ParserBase#reportUnexpectedNumberChar(int,java.lang.String)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_reportError(java.lang.String)
	CALLEE: static com.fasterxml.jackson.core.base.ParserMinimalBase#_getCharDesc(int)
CALLER: com.fasterxml.jackson.core.base.ParserBase#reset(boolean,int,int,int)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#resetInt(boolean,int)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#resetFloat(boolean,int,int,int)
CALLER: com.fasterxml.jackson.core.base.ParserMinimalBase#_reportMissingRootWS(int)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_reportUnexpectedChar(int,java.lang.String)
CALLER: com.fasterxml.jackson.databind.deser.DeserializerCache#_hasCustomValueHandler(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.JavaType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.type.TypeBase#getValueHandler()
	CALLEE: com.fasterxml.jackson.databind.type.TypeBase#getTypeHandler()
CALLER: com.fasterxml.jackson.databind.deser.DeserializerCache#_createAndCache2(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#resolve(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#resolve(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.DeserializerCache#_hasCustomValueHandler(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.deser.DeserializerCache#_createDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#<init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable)
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#isCachable()
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#isCachable()
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#isCachable()
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#isCachable()
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#isCachable()
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#isCachable()
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#isCachable()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#isCachable()
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#isCachable()
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#isCachable()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#isCachable()
	CALLEE: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer#isCachable()
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#isCachable()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#resolve(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#resolve(com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#_mapAbstractType2(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig#hasAbstractTypeResolvers()
	CALLEE: com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig#abstractTypeResolvers()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#iterator()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#next()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#hasNext()
CALLER: org.glassfish.jersey.server.ResourceConfig.RuntimeConfig.1#apply(java.lang.Object)
	CALLEE: static org.glassfish.jersey.server.ResourceConfig.RuntimeConfig#access$700(org.glassfish.jersey.server.ResourceConfig.RuntimeConfig)
CALLER: org.glassfish.jersey.server.ResourceConfig.RuntimeConfig.2#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.ResourceConfig.RuntimeConfig.2#apply(java.lang.Class)
CALLER: jersey.repackaged.com.google.common.base.Predicates.AndPredicate#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.ResourceConfig.RuntimeConfig.1#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.ResourceConfig.RuntimeConfig.2#apply(java.lang.Object)
	CALLEE: jersey.repackaged.com.google.common.base.Predicates.AndPredicate#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.ResourceConfig.RuntimeConfig.3.1#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.ResourceConfig.RuntimeConfig.3.2#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.ApplicationHandler.8#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.ApplicationHandler.9#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig.3#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.model.internal.ComponentBag.7#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.model.internal.ComponentBag.6#apply(java.lang.Object)
CALLER: org.glassfish.jersey.server.ResourceConfig.RuntimeConfig.3.1#apply(java.lang.Object)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#NON_INSTANTIABLE_COMPONENT(java.lang.Object)
	CALLEE: static org.glassfish.jersey.internal.Errors#warning(java.lang.Object,java.lang.String)
CALLER: org.glassfish.jersey.server.ResourceConfig.RuntimeConfig.3.2#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.ResourceConfig.RuntimeConfig.3.2#apply(java.lang.Class)
CALLER: org.glassfish.jersey.server.ApplicationHandler.8#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.ApplicationHandler.8#apply(java.lang.Class)
CALLER: org.glassfish.jersey.server.ApplicationHandler.9#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.model.internal.ComponentBag#getModel(java.lang.Class)
	CALLEE: static org.glassfish.jersey.internal.inject.Providers#checkProviderRuntime(java.lang.Class,org.glassfish.jersey.model.ContractProvider,javax.ws.rs.RuntimeType,boolean,boolean)
CALLER: org.glassfish.jersey.model.internal.CommonConfig.3#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig.3#apply(org.glassfish.hk2.utilities.Binder)
CALLER: org.glassfish.jersey.model.internal.ComponentBag.7#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.model.internal.ComponentBag#getModel(java.lang.Class)
	CALLEE: org.glassfish.jersey.model.internal.ComponentBag.1#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.model.internal.ComponentBag.2#apply(java.lang.Object)
CALLER: org.glassfish.jersey.server.model.internal.ModelErrors.1#apply(org.glassfish.jersey.internal.Errors.ErrorMessage)
	CALLEE: org.glassfish.jersey.internal.Errors.ErrorMessage#getMessage()
	CALLEE: org.glassfish.jersey.internal.Errors.ErrorMessage#getSeverity()
	CALLEE: org.glassfish.jersey.internal.Errors.ErrorMessage#getSource()
	CALLEE: org.glassfish.jersey.server.model.ResourceModelIssue#<init>(java.lang.Object,java.lang.String,org.glassfish.jersey.Severity)
CALLER: org.glassfish.jersey.internal.inject.Providers.2#apply(org.glassfish.jersey.model.internal.RankedProvider)
	CALLEE: org.glassfish.jersey.model.internal.RankedProvider#getProvider()
CALLER: com.zaxxer.hikari.pool.PoolBase.MetricsTrackerDelegate#recordConnectionUsage(com.zaxxer.hikari.pool.PoolEntry)
	CALLEE: com.zaxxer.hikari.pool.PoolEntry#getMillisSinceBorrowed()
	CALLEE: com.zaxxer.hikari.metrics.dropwizard.CodaHaleMetricsTracker#recordConnectionUsageMillis(long)
CALLER: com.zaxxer.hikari.util.ConcurrentBag#requite(com.zaxxer.hikari.util.ConcurrentBag.IConcurrentBagEntry)
	CALLEE: com.zaxxer.hikari.util.QueuedSequenceSynchronizer#signal()
	CALLEE: com.zaxxer.hikari.util.FastList#add(java.lang.Object)
	CALLEE: com.zaxxer.hikari.pool.PoolEntry#setState(int)
CALLER: com.zaxxer.hikari.pool.HikariProxyPreparedStatement#<init>(com.zaxxer.hikari.pool.ProxyConnection,java.sql.PreparedStatement)
	CALLEE: com.zaxxer.hikari.pool.ProxyPreparedStatement#<init>(com.zaxxer.hikari.pool.ProxyConnection,java.sql.PreparedStatement)
CALLER: org.eclipse.jetty.server.handler.ContextHandler#checkAlias(java.lang.String,org.eclipse.jetty.util.resource.Resource)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#isDebugEnabled()
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler.ApproveNonExistentDirectoryAliases#check(java.lang.String,org.eclipse.jetty.util.resource.Resource)
CALLER: org.glassfish.jersey.server.model.ComponentModelValidator#validateWithErrors(org.glassfish.jersey.server.model.ResourceModelComponent)
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: org.glassfish.jersey.server.model.HandlerConstructor#getComponents()
	CALLEE: org.glassfish.jersey.server.model.HandlerConstructor#accept(org.glassfish.jersey.server.model.ResourceModelVisitor)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod#getComponents()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod#accept(org.glassfish.jersey.server.model.ResourceModelVisitor)
	CALLEE: org.glassfish.jersey.server.model.Invocable#getComponents()
	CALLEE: org.glassfish.jersey.server.model.Invocable#accept(org.glassfish.jersey.server.model.ResourceModelVisitor)
	CALLEE: org.glassfish.jersey.server.model.MethodHandler.ClassBasedMethodHandler#getComponents()
	CALLEE: org.glassfish.jersey.server.model.MethodHandler#getComponents()
	CALLEE: org.glassfish.jersey.server.model.MethodHandler#accept(org.glassfish.jersey.server.model.ResourceModelVisitor)
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: org.glassfish.jersey.server.model.ComponentModelValidator#validateWithErrors(org.glassfish.jersey.server.model.ResourceModelComponent)
	CALLEE: org.glassfish.jersey.server.model.ResourceModel#accept(org.glassfish.jersey.server.model.ResourceModelVisitor)
	CALLEE: org.glassfish.jersey.server.model.ResourceModel#getComponents()
	CALLEE: org.glassfish.jersey.server.model.RuntimeResource#getComponents()
	CALLEE: org.glassfish.jersey.server.model.RuntimeResource#accept(org.glassfish.jersey.server.model.ResourceModelVisitor)
	CALLEE: org.glassfish.jersey.server.model.Resource#getComponents()
	CALLEE: org.glassfish.jersey.server.model.Resource#accept(org.glassfish.jersey.server.model.ResourceModelVisitor)
CALLER: org.glassfish.jersey.server.model.IntrospectionModeller#checkForNonPublicMethodIssues()
	CALLEE: static org.glassfish.jersey.internal.Errors#warning(java.lang.Object,java.lang.String)
	CALLEE: org.glassfish.jersey.server.model.IntrospectionModeller#getAllDeclaredMethods(java.lang.Class)
	CALLEE: org.glassfish.jersey.server.model.MethodList#<init>(java.util.Collection)
	CALLEE: org.glassfish.jersey.server.model.MethodList#withMetaAnnotation(java.lang.Class)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#NON_PUB_RES_METHOD(java.lang.Object)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#NON_PUB_SUB_RES_METHOD(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.model.MethodList#withoutMetaAnnotation(java.lang.Class)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#NON_PUB_SUB_RES_LOC(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.model.MethodList#withAnnotation(java.lang.Class)
	CALLEE: org.glassfish.jersey.server.model.MethodList#withoutAnnotation(java.lang.Class)
	CALLEE: org.glassfish.jersey.server.model.MethodList#iterator()
	CALLEE: org.glassfish.jersey.server.model.MethodList#isNotPublic()
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#getMethod()
CALLER: static org.glassfish.jersey.server.model.IntrospectionModeller#extractMediaTypes(javax.ws.rs.Consumes)
	CALLEE: static org.glassfish.jersey.server.model.IntrospectionModeller#extractMediaTypes(java.lang.String[])
CALLER: static org.glassfish.jersey.server.model.IntrospectionModeller#extractMediaTypes(javax.ws.rs.Produces)
	CALLEE: static org.glassfish.jersey.server.model.IntrospectionModeller#extractMediaTypes(java.lang.String[])
CALLER: org.glassfish.jersey.server.model.MethodList#<init>(java.lang.Class)
	CALLEE: org.glassfish.jersey.server.model.MethodList#<init>(java.lang.Class,boolean)
CALLER: org.glassfish.jersey.server.model.IntrospectionModeller#checkResourceClassSetters(org.glassfish.jersey.server.model.MethodList,boolean,java.util.Collection)
	CALLEE: static org.glassfish.jersey.server.model.InvocableValidator#isSingleton(java.lang.Class)
	CALLEE: org.glassfish.jersey.server.model.MethodList#withoutMetaAnnotation(java.lang.Class)
	CALLEE: static org.glassfish.jersey.server.model.Parameter#create(java.lang.Class,java.lang.Class,boolean,java.lang.Class,java.lang.reflect.Type,java.lang.annotation.Annotation[])
	CALLEE: static org.glassfish.jersey.server.model.ResourceMethodValidator#validateParameter(org.glassfish.jersey.server.model.Parameter,java.lang.Object,java.lang.String,java.lang.String,boolean)
	CALLEE: org.glassfish.jersey.server.model.Parameter#getSource()
	CALLEE: org.glassfish.jersey.server.model.MethodList#withoutAnnotation(java.lang.Class)
	CALLEE: org.glassfish.jersey.server.model.MethodList#iterator()
	CALLEE: org.glassfish.jersey.server.model.MethodList#hasNumParams(int)
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#getParameterTypes()
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#getGenericParameterTypes()
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#isAnnotationPresent(java.lang.Class)
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#getMethod()
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#getAnnotations()
	CALLEE: org.glassfish.jersey.server.model.MethodList#hasReturnType(java.lang.Class)
	CALLEE: org.glassfish.jersey.server.model.MethodList#nameStartsWith(java.lang.String)
CALLER: static org.glassfish.jersey.server.model.InvocableValidator#isSingleton(java.lang.Class)
	CALLEE: static org.glassfish.jersey.internal.inject.Providers#isProvider(java.lang.Class)
CALLER: org.glassfish.jersey.server.model.IntrospectionModeller#checkResourceClassFields(boolean,boolean,java.util.Collection)
	CALLEE: static org.glassfish.jersey.server.model.Parameter#create(java.lang.Class,java.lang.Class,boolean,java.lang.Class,java.lang.reflect.Type,java.lang.annotation.Annotation[])
	CALLEE: static org.glassfish.jersey.server.model.ResourceMethodValidator#validateParameter(org.glassfish.jersey.server.model.Parameter,java.lang.Object,java.lang.String,java.lang.String,boolean)
	CALLEE: static org.glassfish.jersey.internal.util.ReflectionHelper#getDeclaredFieldsPA(java.lang.Class)
	CALLEE: org.glassfish.jersey.server.model.Parameter#getSource()
CALLER: static org.glassfish.jersey.server.model.Resource#builder(java.lang.String)
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#<init>(java.lang.String,org.glassfish.jersey.server.model.Resource.1)
CALLER: static org.glassfish.jersey.server.model.Resource#builder()
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#<init>(org.glassfish.jersey.server.model.Resource.1)
CALLER: org.glassfish.jersey.server.model.IntrospectionModeller#addResourceMethods(org.glassfish.jersey.server.model.Resource.Builder,org.glassfish.jersey.server.model.MethodList,java.util.List,boolean,java.util.List,java.util.List,java.util.Collection,boolean)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Builder#handlingMethod(java.lang.reflect.Method)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Builder#handlerParameters(java.util.Collection)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Builder#extended(boolean)
	CALLEE: org.glassfish.jersey.server.model.MethodList#withMetaAnnotation(java.lang.Class)
	CALLEE: static org.glassfish.jersey.server.model.IntrospectionModeller#resolveConsumedTypes(org.glassfish.jersey.server.model.AnnotatedMethod,java.util.List)
	CALLEE: static org.glassfish.jersey.server.model.IntrospectionModeller#resolveProducedTypes(org.glassfish.jersey.server.model.AnnotatedMethod,java.util.List)
	CALLEE: static org.glassfish.jersey.server.model.IntrospectionModeller#introspectAsyncFeatures(org.glassfish.jersey.server.model.AnnotatedMethod,org.glassfish.jersey.server.model.ResourceMethod.Builder)
	CALLEE: org.glassfish.jersey.server.model.MethodList#withoutAnnotation(java.lang.Class)
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#addMethod(java.lang.String)
	CALLEE: org.glassfish.jersey.server.model.MethodList#iterator()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Builder#encodedParameters(boolean)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Builder#consumes(java.util.Collection)
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#isAnnotationPresent(java.lang.Class)
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#getDeclaredMethod()
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#getMethod()
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#getAnnotations()
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#getMetaMethodAnnotations(java.lang.Class)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Builder#handledBy(java.lang.Class,java.lang.reflect.Method)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Builder#produces(java.util.Collection)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Builder#nameBindings(java.util.Collection)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Builder#nameBindings(java.lang.annotation.Annotation[])
CALLER: org.glassfish.jersey.server.model.IntrospectionModeller#addSubResourceMethods(org.glassfish.jersey.server.model.Resource.Builder,org.glassfish.jersey.server.model.MethodList,java.util.List,boolean,java.util.List,java.util.List,java.util.Collection,boolean)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Builder#handledBy(java.lang.Class,java.lang.reflect.Method)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Builder#handlingMethod(java.lang.reflect.Method)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Builder#handlerParameters(java.util.Collection)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Builder#nameBindings(java.lang.annotation.Annotation[])
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Builder#extended(boolean)
	CALLEE: org.glassfish.jersey.server.model.MethodList#withMetaAnnotation(java.lang.Class)
	CALLEE: static org.glassfish.jersey.server.model.IntrospectionModeller#resolveConsumedTypes(org.glassfish.jersey.server.model.AnnotatedMethod,java.util.List)
	CALLEE: static org.glassfish.jersey.server.model.IntrospectionModeller#resolveProducedTypes(org.glassfish.jersey.server.model.AnnotatedMethod,java.util.List)
	CALLEE: static org.glassfish.jersey.server.model.IntrospectionModeller#introspectAsyncFeatures(org.glassfish.jersey.server.model.AnnotatedMethod,org.glassfish.jersey.server.model.ResourceMethod.Builder)
	CALLEE: org.glassfish.jersey.server.model.MethodList#withAnnotation(java.lang.Class)
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#addChildResource(java.lang.String)
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#addMethod(java.lang.String)
	CALLEE: org.glassfish.jersey.server.model.MethodList#iterator()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Builder#encodedParameters(boolean)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Builder#consumes(java.util.Collection)
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#getAnnotation(java.lang.Class)
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#isAnnotationPresent(java.lang.Class)
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#getDeclaredMethod()
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#getMethod()
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#getAnnotations()
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#getMetaMethodAnnotations(java.lang.Class)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Builder#produces(java.util.Collection)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Builder#nameBindings(java.util.Collection)
CALLER: org.glassfish.jersey.server.model.IntrospectionModeller#addSubResourceLocators(org.glassfish.jersey.server.model.Resource.Builder,org.glassfish.jersey.server.model.MethodList,java.util.List,boolean,boolean)
	CALLEE: org.glassfish.jersey.server.model.MethodList#withoutMetaAnnotation(java.lang.Class)
	CALLEE: org.glassfish.jersey.server.model.MethodList#withAnnotation(java.lang.Class)
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#addChildResource(java.lang.String)
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#addMethod()
	CALLEE: org.glassfish.jersey.server.model.MethodList#iterator()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Builder#encodedParameters(boolean)
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#getAnnotation(java.lang.Class)
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#isAnnotationPresent(java.lang.Class)
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#getDeclaredMethod()
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#getMethod()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Builder#handledBy(java.lang.Class,java.lang.reflect.Method)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Builder#handlingMethod(java.lang.reflect.Method)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Builder#handlerParameters(java.util.Collection)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Builder#extended(boolean)
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#NEW_AR_CREATED_BY_INTROSPECTION_MODELER(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableNEW_AR_CREATED_BY_INTROSPECTION_MODELER(java.lang.Object)
CALLER: static jersey.repackaged.com.google.common.collect.Maps#transformEntries(java.util.NavigableMap,jersey.repackaged.com.google.common.collect.Maps.EntryTransformer)
	CALLEE: jersey.repackaged.com.google.common.collect.Maps.TransformedEntriesNavigableMap#<init>(java.util.NavigableMap,jersey.repackaged.com.google.common.collect.Maps.EntryTransformer)
CALLER: static jersey.repackaged.com.google.common.collect.Maps#transformEntriesIgnoreNavigable(java.util.SortedMap,jersey.repackaged.com.google.common.collect.Maps.EntryTransformer)
	CALLEE: jersey.repackaged.com.google.common.collect.Maps.TransformedEntriesSortedMap#<init>(java.util.SortedMap,jersey.repackaged.com.google.common.collect.Maps.EntryTransformer)
CALLER: liquibase.util.csv.opencsv.CSVWriter#<init>(java.io.Writer,char)
	CALLEE: liquibase.util.csv.opencsv.CSVWriter#<init>(java.io.Writer,char,char)
CALLER: liquibase.util.csv.opencsv.CSVWriter#processLine(java.lang.String)
	CALLEE: liquibase.util.csv.opencsv.CSVWriter#processCharacter(java.lang.StringBuilder,char)
CALLER: liquibase.util.csv.opencsv.CSVReader#<init>(java.io.Reader,char,char,char,int,boolean)
	CALLEE: liquibase.util.csv.opencsv.CSVReader#<init>(java.io.Reader,char,char,char,int,boolean,boolean)
CALLER: org.eclipse.jetty.io.AbstractConnection#failedCallback(org.eclipse.jetty.util.Callback,java.lang.Throwable)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.Throwable)
	CALLEE: org.eclipse.jetty.util.thread.QueuedThreadPool#execute(java.lang.Runnable)
	CALLEE: static org.eclipse.jetty.util.thread.NonBlockingThread#isNonBlockingThread()
	CALLEE: org.eclipse.jetty.io.AbstractConnection#getExecutor()
	CALLEE: org.eclipse.jetty.io.AbstractConnection.1#<init>(org.eclipse.jetty.io.AbstractConnection,org.eclipse.jetty.util.Callback,java.lang.Throwable)
CALLER: static org.glassfish.jersey.uri.UriTemplate#<clinit>()
	CALLEE: org.glassfish.jersey.uri.UriTemplate.1#<init>()
	CALLEE: org.glassfish.jersey.uri.UriTemplate#<init>()
CALLER: org.glassfish.jersey.uri.PathTemplate#<init>(java.lang.String)
	CALLEE: static org.glassfish.jersey.uri.PathTemplate#prefixWithSlash(java.lang.String)
	CALLEE: org.glassfish.jersey.uri.PathTemplate.PathTemplateParser#<init>(java.lang.String)
	CALLEE: org.glassfish.jersey.uri.UriTemplate#<init>(org.glassfish.jersey.uri.internal.UriTemplateParser)
CALLER: org.glassfish.jersey.internal.OsgiRegistry.BundleSpiProvidersLoader#call()
	CALLEE: static org.glassfish.jersey.internal.OsgiRegistry#access$100()
	CALLEE: static org.glassfish.jersey.internal.OsgiRegistry#access$200(org.osgi.framework.Bundle,java.lang.String)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#EXCEPTION_CAUGHT_WHILE_LOADING_SPI_PROVIDERS()
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#ERROR_CAUGHT_WHILE_LOADING_SPI_PROVIDERS()
CALLER: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_skipLine()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#loadMore()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_skipCR()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_throwInvalidSpace(int)
CALLER: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_skipCComment()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#loadMore()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_reportInvalidEOF(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_skipCR()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_throwInvalidSpace(int)
CALLER: com.fasterxml.jackson.core.base.ParserBase#getCurrentLocation()
	CALLEE: com.fasterxml.jackson.core.io.IOContext#getSourceReference()
	CALLEE: com.fasterxml.jackson.core.JsonLocation#<init>(java.lang.Object,long,long,int,int)
CALLER: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer#rehash()
	CALLEE: static com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer#_thresholdSize(int)
	CALLEE: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer#_hashToIndex(int)
	CALLEE: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.Bucket#<init>(java.lang.String,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.Bucket)
	CALLEE: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer#calcHash(java.lang.String)
CALLER: static com.fasterxml.jackson.core.util.InternCache#<clinit>()
	CALLEE: com.fasterxml.jackson.core.util.InternCache#<init>()
CALLER: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer#_handleSpillOverflow(int,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.Bucket)
	CALLEE: com.fasterxml.jackson.core.JsonFactory.Feature#enabledIn(int)
	CALLEE: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer#reportTooManyCollisions(int)
CALLER: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_verifyNLZ2()
	CALLEE: com.fasterxml.jackson.core.JsonParser#isEnabled(com.fasterxml.jackson.core.JsonParser.Feature)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#loadMore()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#reportInvalidNumber(java.lang.String)
CALLER: com.fasterxml.jackson.databind.deser.DeserializerCache#_createDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.JavaType#isAbstract()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#isAbstract()
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#mapAbstractType(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getConfig()
	CALLEE: com.fasterxml.jackson.databind.JavaType#isMapLikeType()
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#isMapLikeType()
	CALLEE: com.fasterxml.jackson.databind.JavaType#isCollectionLikeType()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#isCollectionLikeType()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.NoClassDefFoundDeserializer#<init>(java.lang.NoClassDefFoundError)
	CALLEE: com.fasterxml.jackson.databind.deser.DeserializerCache#findDeserializerFromAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.deser.DeserializerCache#modifyTypeByAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerFactory#createBuilderBasedDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.deser.DeserializerCache#_createDeserializer2(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getTypeFactory()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#<init>(com.fasterxml.jackson.databind.util.Converter,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.DeserializationConfig#introspect(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#getClassInfo()
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#findDeserializationConverter()
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#findPOJOBuilder()
CALLER: com.fasterxml.jackson.databind.JsonMappingException#<init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable)
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#<init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable)
CALLER: com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig#abstractTypeResolvers()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#<init>(java.lang.Object[])
CALLER: org.glassfish.jersey.server.ResourceConfig.RuntimeConfig.2#apply(java.lang.Class)
	CALLEE: static org.glassfish.jersey.server.ResourceConfig.RuntimeConfig#access$700(org.glassfish.jersey.server.ResourceConfig.RuntimeConfig)
CALLER: static org.glassfish.jersey.internal.Errors#warning(java.lang.Object,java.lang.String)
	CALLEE: static org.glassfish.jersey.internal.Errors#error(java.lang.Object,java.lang.String,org.glassfish.jersey.Severity)
CALLER: org.glassfish.jersey.server.ResourceConfig.RuntimeConfig.3.2#apply(java.lang.Class)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#NON_INSTANTIABLE_COMPONENT(java.lang.Object)
	CALLEE: static org.glassfish.jersey.internal.Errors#warning(java.lang.Object,java.lang.String)
CALLER: org.glassfish.jersey.server.ApplicationHandler.8#apply(java.lang.Class)
	CALLEE: org.glassfish.jersey.model.internal.ComponentBag#getModel(java.lang.Class)
	CALLEE: static org.glassfish.jersey.internal.inject.Providers#checkProviderRuntime(java.lang.Class,org.glassfish.jersey.model.ContractProvider,javax.ws.rs.RuntimeType,boolean,boolean)
CALLER: org.glassfish.jersey.model.internal.ComponentBag.1#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.model.internal.ComponentBag.1#apply(org.glassfish.jersey.model.ContractProvider)
CALLER: org.glassfish.jersey.model.internal.ComponentBag.2#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.model.internal.ComponentBag.2#apply(org.glassfish.jersey.model.ContractProvider)
CALLER: com.zaxxer.hikari.pool.PoolEntry#getMillisSinceBorrowed()
	CALLEE: com.zaxxer.hikari.util.ClockSource.MillisecondClockSource#elapsedMillis(long)
	CALLEE: com.zaxxer.hikari.util.ClockSource.NanosecondClockSource#elapsedMillis(long)
CALLER: com.zaxxer.hikari.pool.ProxyPreparedStatement#<init>(com.zaxxer.hikari.pool.ProxyConnection,java.sql.PreparedStatement)
	CALLEE: com.zaxxer.hikari.pool.ProxyStatement#<init>(com.zaxxer.hikari.pool.ProxyConnection,java.sql.Statement)
CALLER: org.glassfish.jersey.server.model.ResourceModel#accept(org.glassfish.jersey.server.model.ResourceModelVisitor)
	CALLEE: org.glassfish.jersey.server.model.AbstractResourceModelVisitor#visitResourceModel(org.glassfish.jersey.server.model.ResourceModel)
CALLER: org.glassfish.jersey.server.model.ResourceModel#getComponents()
	CALLEE: static jersey.repackaged.com.google.common.collect.Lists#newArrayList()
	CALLEE: org.glassfish.jersey.server.model.ResourceModel#getRuntimeResourceModel()
	CALLEE: org.glassfish.jersey.server.model.RuntimeResourceModel#getRuntimeResources()
CALLER: org.glassfish.jersey.server.model.IntrospectionModeller#getAllDeclaredMethods(java.lang.Class)
	CALLEE: org.glassfish.jersey.server.model.IntrospectionModeller.2#<init>(org.glassfish.jersey.server.model.IntrospectionModeller,java.lang.Class,java.util.List)
CALLER: org.glassfish.jersey.server.model.MethodList#<init>(java.util.Collection)
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#<init>(java.lang.reflect.Method)
CALLER: org.glassfish.jersey.server.model.MethodList#withMetaAnnotation(java.lang.Class)
	CALLEE: org.glassfish.jersey.server.model.MethodList.6#<init>(org.glassfish.jersey.server.model.MethodList,java.lang.Class)
	CALLEE: org.glassfish.jersey.server.model.MethodList#filter(org.glassfish.jersey.server.model.MethodList.Filter)
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#NON_PUB_RES_METHOD(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableNON_PUB_RES_METHOD(java.lang.Object)
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#NON_PUB_SUB_RES_METHOD(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableNON_PUB_SUB_RES_METHOD(java.lang.Object)
CALLER: org.glassfish.jersey.server.model.MethodList#withoutMetaAnnotation(java.lang.Class)
	CALLEE: org.glassfish.jersey.server.model.MethodList#filter(org.glassfish.jersey.server.model.MethodList.Filter)
	CALLEE: org.glassfish.jersey.server.model.MethodList.8#<init>(org.glassfish.jersey.server.model.MethodList,java.lang.Class)
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#NON_PUB_SUB_RES_LOC(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableNON_PUB_SUB_RES_LOC(java.lang.Object)
CALLER: static org.glassfish.jersey.server.model.IntrospectionModeller#extractMediaTypes(java.lang.String[])
	CALLEE: static org.glassfish.jersey.internal.util.Tokenizer#tokenize(java.lang.String,java.lang.String)
	CALLEE: static javax.ws.rs.core.MediaType#valueOf(java.lang.String)
CALLER: org.glassfish.jersey.server.model.MethodList#<init>(java.lang.Class,boolean)
	CALLEE: org.glassfish.jersey.server.model.MethodList#<init>(java.util.Collection)
	CALLEE: static org.glassfish.jersey.server.model.MethodList#getAllDeclaredMethods(java.lang.Class)
	CALLEE: static org.glassfish.jersey.server.model.MethodList#getMethods(java.lang.Class)
CALLER: static org.glassfish.jersey.server.model.Parameter#create(java.lang.Class,java.lang.Class,boolean,java.lang.Class,java.lang.reflect.Type,java.lang.annotation.Annotation[])
	CALLEE: org.glassfish.hk2.api.AnnotationLiteral#annotationType()
	CALLEE: org.glassfish.jersey.server.model.Parameter.4#getSource()
	CALLEE: org.glassfish.jersey.server.model.Parameter.5#getSource()
	CALLEE: org.glassfish.jersey.server.model.Parameter.6#getSource()
	CALLEE: org.glassfish.jersey.server.model.Parameter.7#getSource()
	CALLEE: org.glassfish.jersey.server.model.Parameter.8#getSource()
	CALLEE: org.glassfish.jersey.server.model.Parameter.9#getSource()
	CALLEE: org.glassfish.jersey.server.model.Parameter.10#getSource()
	CALLEE: static org.glassfish.jersey.server.model.Parameter#getValue(java.lang.annotation.Annotation)
	CALLEE: static org.glassfish.jersey.internal.util.ReflectionHelper#resolveGenericType(java.lang.Class,java.lang.Class,java.lang.Class,java.lang.reflect.Type)
	CALLEE: org.glassfish.jersey.server.model.Parameter.BeanParameter#<init>(java.lang.annotation.Annotation[],java.lang.annotation.Annotation,java.lang.String,java.lang.Class,java.lang.reflect.Type,boolean,java.lang.String,org.glassfish.jersey.server.model.Parameter.1)
	CALLEE: org.glassfish.jersey.server.model.Parameter#<init>(java.lang.annotation.Annotation[],java.lang.annotation.Annotation,org.glassfish.jersey.server.model.Parameter.Source,java.lang.String,java.lang.Class,java.lang.reflect.Type,boolean,java.lang.String)
	CALLEE: org.glassfish.jersey.internal.util.collection.ClassTypePair#rawClass()
	CALLEE: org.glassfish.jersey.internal.util.collection.ClassTypePair#type()
	CALLEE: org.glassfish.jersey.server.model.Parameter.1#getValueOf(java.lang.annotation.Annotation)
	CALLEE: org.glassfish.jersey.server.model.Parameter.2#getValueOf(java.lang.annotation.Annotation)
	CALLEE: org.glassfish.jersey.server.model.Parameter.3#getValueOf(java.lang.annotation.Annotation)
	CALLEE: org.glassfish.jersey.server.model.Parameter.4#getValueOf(java.lang.annotation.Annotation)
	CALLEE: org.glassfish.jersey.server.model.Parameter.5#getValueOf(java.lang.annotation.Annotation)
	CALLEE: org.glassfish.jersey.server.model.Parameter.6#getValueOf(java.lang.annotation.Annotation)
	CALLEE: org.glassfish.jersey.server.model.Parameter.7#getValueOf(java.lang.annotation.Annotation)
	CALLEE: org.glassfish.jersey.server.model.Parameter.8#getValueOf(java.lang.annotation.Annotation)
	CALLEE: org.glassfish.jersey.server.model.Parameter.9#getValueOf(java.lang.annotation.Annotation)
	CALLEE: org.glassfish.jersey.server.model.Parameter.10#getValueOf(java.lang.annotation.Annotation)
	CALLEE: org.glassfish.jersey.server.model.Parameter.1#getSource()
	CALLEE: org.glassfish.jersey.server.model.Parameter.2#getSource()
	CALLEE: org.glassfish.jersey.server.model.Parameter.3#getSource()
CALLER: static org.glassfish.jersey.server.model.Parameter#<clinit>()
	CALLEE: static org.glassfish.jersey.server.model.Parameter#createParamAnnotationHelperMap()
CALLER: static org.glassfish.jersey.server.model.ResourceMethodValidator#validateParameter(org.glassfish.jersey.server.model.Parameter,java.lang.Object,java.lang.String,java.lang.String,boolean)
	CALLEE: static org.glassfish.jersey.internal.Errors#processWithException(java.lang.Runnable)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethodValidator.1#<init>(org.glassfish.jersey.server.model.Parameter,boolean,java.lang.Object,java.lang.String,java.lang.String)
CALLER: static org.glassfish.jersey.server.model.Parameter.Source#<clinit>()
	CALLEE: org.glassfish.jersey.server.model.Parameter.Source#<init>(java.lang.String,int)
CALLER: static org.glassfish.jersey.internal.inject.Providers#isProvider(java.lang.Class)
	CALLEE: static org.glassfish.jersey.internal.inject.Providers#findFirstProviderContract(java.lang.Class)
CALLER: static org.glassfish.jersey.internal.util.ReflectionHelper#getDeclaredFieldsPA(java.lang.Class)
	CALLEE: org.glassfish.jersey.internal.util.ReflectionHelper.4#<init>(java.lang.Class)
CALLER: static org.glassfish.jersey.server.model.IntrospectionModeller#resolveConsumedTypes(org.glassfish.jersey.server.model.AnnotatedMethod,java.util.List)
	CALLEE: static org.glassfish.jersey.server.model.IntrospectionModeller#extractMediaTypes(javax.ws.rs.Consumes)
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#getAnnotation(java.lang.Class)
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#isAnnotationPresent(java.lang.Class)
CALLER: static org.glassfish.jersey.server.model.IntrospectionModeller#resolveProducedTypes(org.glassfish.jersey.server.model.AnnotatedMethod,java.util.List)
	CALLEE: static org.glassfish.jersey.server.model.IntrospectionModeller#extractMediaTypes(javax.ws.rs.Produces)
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#getAnnotation(java.lang.Class)
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#isAnnotationPresent(java.lang.Class)
CALLER: static org.glassfish.jersey.server.model.IntrospectionModeller#introspectAsyncFeatures(org.glassfish.jersey.server.model.AnnotatedMethod,org.glassfish.jersey.server.model.ResourceMethod.Builder)
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#getParameterAnnotations()
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#isAnnotationPresent(java.lang.Class)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Builder#suspended(long,java.util.concurrent.TimeUnit)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Builder#managedAsync()
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableNEW_AR_CREATED_BY_INTROSPECTION_MODELER(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: jersey.repackaged.com.google.common.collect.Maps.TransformedEntriesNavigableMap#<init>(java.util.NavigableMap,jersey.repackaged.com.google.common.collect.Maps.EntryTransformer)
	CALLEE: jersey.repackaged.com.google.common.collect.Maps.TransformedEntriesSortedMap#<init>(java.util.SortedMap,jersey.repackaged.com.google.common.collect.Maps.EntryTransformer)
CALLER: jersey.repackaged.com.google.common.collect.Maps.TransformedEntriesSortedMap#<init>(java.util.SortedMap,jersey.repackaged.com.google.common.collect.Maps.EntryTransformer)
	CALLEE: jersey.repackaged.com.google.common.collect.Maps.TransformedEntriesMap#<init>(java.util.Map,jersey.repackaged.com.google.common.collect.Maps.EntryTransformer)
CALLER: liquibase.util.csv.opencsv.CSVWriter#<init>(java.io.Writer,char,char)
	CALLEE: liquibase.util.csv.opencsv.CSVWriter#<init>(java.io.Writer,char,char,char)
CALLER: liquibase.util.csv.opencsv.CSVWriter#processCharacter(java.lang.StringBuilder,char)
	CALLEE: liquibase.util.csv.opencsv.CSVWriter#checkCharactersToEscape(char)
CALLER: liquibase.util.csv.opencsv.CSVReader#<init>(java.io.Reader,char,char,char,int,boolean,boolean)
	CALLEE: liquibase.util.csv.opencsv.CSVParser#<init>(char,char,char,boolean,boolean)
	CALLEE: liquibase.util.csv.opencsv.CSVReader#<init>(java.io.Reader,int,liquibase.util.csv.opencsv.CSVParser)
CALLER: static org.glassfish.jersey.uri.internal.UriTemplateParser#<clinit>()
	CALLEE: static org.glassfish.jersey.uri.internal.UriTemplateParser#initReserved()
	CALLEE: static org.glassfish.jersey.uri.internal.UriTemplateParser#initHexToUpperCaseRegex()
CALLER: org.glassfish.jersey.uri.PathTemplate.PathTemplateParser#<init>(java.lang.String)
	CALLEE: org.glassfish.jersey.uri.internal.UriTemplateParser#<init>(java.lang.String)
CALLER: org.glassfish.jersey.uri.UriTemplate#<init>(org.glassfish.jersey.uri.internal.UriTemplateParser)
	CALLEE: org.glassfish.jersey.uri.internal.UriTemplateParser#getTemplate()
	CALLEE: org.glassfish.jersey.uri.internal.UriTemplateParser#getNormalizedTemplate()
	CALLEE: static org.glassfish.jersey.uri.UriTemplate#initUriPattern(org.glassfish.jersey.uri.internal.UriTemplateParser)
	CALLEE: org.glassfish.jersey.uri.internal.UriTemplateParser#getNumberOfExplicitRegexes()
	CALLEE: org.glassfish.jersey.uri.internal.UriTemplateParser#getNumberOfRegexGroups()
	CALLEE: org.glassfish.jersey.uri.internal.UriTemplateParser#getNumberOfLiteralCharacters()
	CALLEE: org.glassfish.jersey.uri.internal.UriTemplateParser#getNames()
CALLER: static org.glassfish.jersey.internal.OsgiRegistry#access$200(org.osgi.framework.Bundle,java.lang.String)
	CALLEE: static org.glassfish.jersey.internal.OsgiRegistry#loadClass(org.osgi.framework.Bundle,java.lang.String)
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#EXCEPTION_CAUGHT_WHILE_LOADING_SPI_PROVIDERS()
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#localizableEXCEPTION_CAUGHT_WHILE_LOADING_SPI_PROVIDERS()
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#ERROR_CAUGHT_WHILE_LOADING_SPI_PROVIDERS()
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#localizableERROR_CAUGHT_WHILE_LOADING_SPI_PROVIDERS()
CALLER: com.fasterxml.jackson.core.base.ParserBase#reportInvalidNumber(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_reportError(java.lang.String)
CALLER: com.fasterxml.jackson.databind.deser.impl.NoClassDefFoundDeserializer#<init>(java.lang.NoClassDefFoundError)
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#<init>()
CALLER: com.fasterxml.jackson.databind.deser.DeserializerCache#findDeserializerFromAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext#deserializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.DeserializerCache#findConvertingDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findDeserializer(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findDeserializer(com.fasterxml.jackson.databind.introspect.Annotated)
CALLER: com.fasterxml.jackson.databind.deser.DeserializerCache#modifyTypeByAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#getName()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#<init>(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.JavaType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#<init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext#deserializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.JavaType#narrowBy(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getKeyType()
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#getKeyType()
	CALLEE: com.fasterxml.jackson.databind.type.MapType#narrowKey(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext#keyDeserializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.MapType#withKeyValueHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#narrowContentsBy(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#narrowContentsBy(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.MapType#narrowContentsBy(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#narrowContentsBy(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.TypeBase#getValueHandler()
	CALLEE: com.fasterxml.jackson.databind.deser.DeserializerCache#_verifyAsClass(java.lang.Object,java.lang.String,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#withContentValueHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#withContentValueHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.MapType#withContentValueHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#withContentValueHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findContentDeserializer(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findDeserializationContentType(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findKeyDeserializer(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findDeserializationKeyType(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findDeserializationType(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findContentDeserializer(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findDeserializationContentType(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findKeyDeserializer(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findDeserializationKeyType(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findDeserializationType(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerFactory#createBuilderBasedDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getConfig()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#constructType(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.DeserializationConfig#introspectForBuilder(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerFactory#buildBuilderBasedDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
CALLER: com.fasterxml.jackson.databind.deser.DeserializerCache#_createDeserializer2(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#createTreeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerFactory#createBeanDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.annotation.JsonFormat.Value#getShape()
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#findExpectedFormat(com.fasterxml.jackson.annotation.JsonFormat.Value)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getConfig()
	CALLEE: com.fasterxml.jackson.databind.JavaType#isMapLikeType()
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#isMapLikeType()
	CALLEE: com.fasterxml.jackson.databind.JavaType#isCollectionLikeType()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#isCollectionLikeType()
	CALLEE: com.fasterxml.jackson.databind.JavaType#isEnumType()
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#createEnumDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.JavaType#isArrayType()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#isArrayType()
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#createArrayDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#isTrueMapType()
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#createMapDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#createMapLikeDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#isTrueCollectionType()
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#createCollectionDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#createCollectionLikeDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription)
CALLER: com.fasterxml.jackson.databind.DeserializationContext#getTypeFactory()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#getTypeFactory()
CALLER: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#<init>(com.fasterxml.jackson.databind.util.Converter,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#<init>(com.fasterxml.jackson.databind.JavaType)
CALLER: org.glassfish.jersey.model.internal.ComponentBag.1#apply(org.glassfish.jersey.model.ContractProvider)
	CALLEE: org.glassfish.jersey.model.ContractProvider#getContracts()
CALLER: org.glassfish.jersey.model.internal.ComponentBag.2#apply(org.glassfish.jersey.model.ContractProvider)
	CALLEE: org.glassfish.jersey.model.ContractProvider#getContracts()
CALLER: static org.glassfish.jersey.server.model.AnnotatedMethod#<clinit>()
	CALLEE: static org.glassfish.jersey.server.model.AnnotatedMethod#getSet(java.lang.Class[])
CALLER: org.glassfish.jersey.server.model.AnnotatedMethod#<init>(java.lang.reflect.Method)
	CALLEE: static org.glassfish.jersey.server.model.AnnotatedMethod#findAnnotatedMethod(java.lang.reflect.Method)
	CALLEE: static org.glassfish.jersey.server.model.AnnotatedMethod#mergeMethodAnnotations(java.lang.reflect.Method,java.lang.reflect.Method)
	CALLEE: static org.glassfish.jersey.server.model.AnnotatedMethod#mergeParameterAnnotations(java.lang.reflect.Method,java.lang.reflect.Method)
CALLER: org.glassfish.jersey.server.model.MethodList#filter(org.glassfish.jersey.server.model.MethodList.Filter)
	CALLEE: org.glassfish.jersey.server.model.MethodList.6#keep(org.glassfish.jersey.server.model.AnnotatedMethod)
	CALLEE: org.glassfish.jersey.server.model.MethodList.8#keep(org.glassfish.jersey.server.model.AnnotatedMethod)
	CALLEE: org.glassfish.jersey.server.model.MethodList#<init>(org.glassfish.jersey.server.model.AnnotatedMethod[])
	CALLEE: org.glassfish.jersey.server.model.MethodList.5#keep(org.glassfish.jersey.server.model.AnnotatedMethod)
	CALLEE: org.glassfish.jersey.server.model.MethodList.7#keep(org.glassfish.jersey.server.model.AnnotatedMethod)
	CALLEE: org.glassfish.jersey.server.model.MethodList.2#keep(org.glassfish.jersey.server.model.AnnotatedMethod)
	CALLEE: org.glassfish.jersey.server.model.MethodList.1#keep(org.glassfish.jersey.server.model.AnnotatedMethod)
	CALLEE: org.glassfish.jersey.server.model.MethodList.3#keep(org.glassfish.jersey.server.model.AnnotatedMethod)
	CALLEE: org.glassfish.jersey.server.model.MethodList.4#keep(org.glassfish.jersey.server.model.AnnotatedMethod)
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableNON_PUB_RES_METHOD(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableNON_PUB_SUB_RES_METHOD(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableNON_PUB_SUB_RES_LOC(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.server.model.MethodList#getAllDeclaredMethods(java.lang.Class)
	CALLEE: static org.glassfish.jersey.internal.util.ReflectionHelper#getDeclaredMethodsPA(java.lang.Class)
CALLER: static org.glassfish.jersey.server.model.Parameter#getValue(java.lang.annotation.Annotation)
	CALLEE: org.glassfish.hk2.api.AnnotationLiteral#annotationType()
CALLER: static org.glassfish.jersey.internal.util.ReflectionHelper#resolveGenericType(java.lang.Class,java.lang.Class,java.lang.Class,java.lang.reflect.Type)
	CALLEE: static org.glassfish.jersey.internal.util.ReflectionHelper#resolveGenericType(java.lang.Class,java.lang.Class,java.lang.Class,java.lang.reflect.Type)
	CALLEE: static org.glassfish.jersey.internal.util.ReflectionHelper#resolveTypeVariable(java.lang.Class,java.lang.Class,java.lang.reflect.TypeVariable)
	CALLEE: org.glassfish.jersey.internal.util.ReflectionHelper.17#<init>(java.lang.reflect.Type[],java.lang.reflect.ParameterizedType)
	CALLEE: static org.glassfish.jersey.internal.util.collection.ClassTypePair#of(java.lang.Class,java.lang.reflect.Type)
	CALLEE: static org.glassfish.jersey.internal.util.ReflectionHelper#getArrayForComponentType(java.lang.Class)
	CALLEE: static org.glassfish.jersey.internal.util.collection.ClassTypePair#of(java.lang.Class)
	CALLEE: org.glassfish.jersey.internal.util.collection.ClassTypePair#rawClass()
	CALLEE: org.glassfish.jersey.internal.util.collection.ClassTypePair#type()
CALLER: org.glassfish.jersey.server.model.Parameter.BeanParameter#<init>(java.lang.annotation.Annotation[],java.lang.annotation.Annotation,java.lang.String,java.lang.Class,java.lang.reflect.Type,boolean,java.lang.String,org.glassfish.jersey.server.model.Parameter.1)
	CALLEE: org.glassfish.jersey.server.model.Parameter.BeanParameter#<init>(java.lang.annotation.Annotation[],java.lang.annotation.Annotation,java.lang.String,java.lang.Class,java.lang.reflect.Type,boolean,java.lang.String)
CALLER: static org.glassfish.jersey.server.model.Parameter#createParamAnnotationHelperMap()
	CALLEE: org.glassfish.jersey.server.model.Parameter.1#<init>()
	CALLEE: org.glassfish.jersey.server.model.Parameter.2#<init>()
	CALLEE: org.glassfish.jersey.server.model.Parameter.3#<init>()
	CALLEE: org.glassfish.jersey.server.model.Parameter.4#<init>()
	CALLEE: org.glassfish.jersey.server.model.Parameter.5#<init>()
	CALLEE: org.glassfish.jersey.server.model.Parameter.6#<init>()
	CALLEE: org.glassfish.jersey.server.model.Parameter.7#<init>()
	CALLEE: org.glassfish.jersey.server.model.Parameter.8#<init>()
	CALLEE: org.glassfish.jersey.server.model.Parameter.9#<init>()
	CALLEE: org.glassfish.jersey.server.model.Parameter.10#<init>()
CALLER: static org.glassfish.jersey.internal.inject.Providers#findFirstProviderContract(java.lang.Class)
	CALLEE: static org.glassfish.jersey.internal.inject.Providers#isSupportedContract(java.lang.Class)
	CALLEE: static org.glassfish.jersey.internal.inject.Providers#getImplementedContracts(java.lang.Class)
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: static org.glassfish.jersey.internal.inject.Providers#findFirstProviderContract(java.lang.Class)
CALLER: liquibase.util.csv.opencsv.CSVWriter#<init>(java.io.Writer,char,char,char)
	CALLEE: liquibase.util.csv.opencsv.CSVWriter#<init>(java.io.Writer,char,char,char,java.lang.String)
CALLER: liquibase.util.csv.opencsv.CSVParser#<init>(char,char,char,boolean,boolean)
	CALLEE: liquibase.util.csv.opencsv.CSVParser#<init>(char,char,char,boolean,boolean,boolean)
CALLER: liquibase.util.csv.opencsv.CSVReader#<init>(java.io.Reader,int,liquibase.util.csv.opencsv.CSVParser)
	CALLEE: liquibase.util.csv.opencsv.CSVReader#<init>(java.io.Reader,int,liquibase.util.csv.opencsv.CSVParser,boolean,boolean)
CALLER: static org.glassfish.jersey.uri.PatternWithGroups#<clinit>()
	CALLEE: org.glassfish.jersey.uri.PatternWithGroups#<init>()
	CALLEE: org.glassfish.jersey.uri.PatternWithGroups.EmptyStringMatchResult#<init>(org.glassfish.jersey.uri.PatternWithGroups.1)
CALLER: org.glassfish.jersey.uri.internal.UriTemplateParser#<init>(java.lang.String)
	CALLEE: org.glassfish.jersey.uri.internal.CharacterIterator#<init>(java.lang.String)
	CALLEE: org.glassfish.jersey.uri.internal.UriTemplateParser#parse(org.glassfish.jersey.uri.internal.CharacterIterator)
CALLER: static org.glassfish.jersey.uri.UriTemplate#initUriPattern(org.glassfish.jersey.uri.internal.UriTemplateParser)
	CALLEE: org.glassfish.jersey.uri.internal.UriTemplateParser#getPattern()
	CALLEE: org.glassfish.jersey.uri.internal.UriTemplateParser#getGroupIndexes()
	CALLEE: org.glassfish.jersey.uri.PatternWithGroups#<init>(java.util.regex.Pattern,int[])
CALLER: org.glassfish.jersey.uri.internal.UriTemplateParser#getNumberOfRegexGroups()
	CALLEE: org.glassfish.jersey.uri.internal.UriTemplateParser#getGroupIndexes()
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#localizableEXCEPTION_CAUGHT_WHILE_LOADING_SPI_PROVIDERS()
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#localizableERROR_CAUGHT_WHILE_LOADING_SPI_PROVIDERS()
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: com.fasterxml.jackson.databind.DeserializationContext#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.DeserializationConfig#getAnnotationIntrospector()
CALLER: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext#deserializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#isBogusClass(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#getHandlerInstantiator()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#canOverrideAccessModifiers()
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#createInstance(java.lang.Class,boolean)
CALLER: com.fasterxml.jackson.databind.deser.DeserializerCache#findConvertingDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getTypeFactory()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#<init>(com.fasterxml.jackson.databind.util.Converter,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.DeserializerCache#findConverter(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated)
CALLER: com.fasterxml.jackson.databind.JavaType#narrowBy(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.TypeBase#getValueHandler()
	CALLEE: com.fasterxml.jackson.databind.JavaType#_assertSubclass(java.lang.Class,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#_narrow(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#_narrow(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.MapType#_narrow(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#_narrow(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.TypeBase#getTypeHandler()
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#withValueHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#withValueHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.MapType#withValueHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#withValueHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.MapType#withTypeHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#withTypeHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#withTypeHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#withTypeHandler(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.type.MapType#narrowKey(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.MapType#<init>(java.lang.Class,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.JavaType#narrowBy(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext#keyDeserializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#isBogusClass(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#getHandlerInstantiator()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#canOverrideAccessModifiers()
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#createInstance(java.lang.Class,boolean)
CALLER: com.fasterxml.jackson.databind.type.MapType#withKeyValueHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.MapType#withKeyValueHandler(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.type.ArrayType#narrowContentsBy(java.lang.Class)
	CALLEE: static com.fasterxml.jackson.databind.type.ArrayType#construct(com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.JavaType#narrowBy(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.type.MapType#narrowContentsBy(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.MapType#<init>(java.lang.Class,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.JavaType#narrowBy(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.type.CollectionType#narrowContentsBy(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#<init>(java.lang.Class,com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.JavaType#narrowBy(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.DeserializerCache#_verifyAsClass(java.lang.Object,java.lang.String,java.lang.Class)
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#isBogusClass(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.type.SimpleType#withContentValueHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#withContentValueHandler(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.type.ArrayType#withContentValueHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#withContentValueHandler(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.type.MapType#withContentValueHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.MapType#withContentValueHandler(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.type.CollectionType#withContentValueHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#withContentValueHandler(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.DeserializationContext#constructType(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#constructType(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.DeserializationConfig#introspectForBuilder(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#getClassIntrospector()
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicClassIntrospector#forDeserializationWithBuilder(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver)
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerFactory#buildBuilderBasedDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getConfig()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#canOverrideAccessModifiers()
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#findValueInstantiator(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerFactory#constructBeanDeserializerBuilder(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerFactory#addBeanProps(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerFactory#addObjectIdReader(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerFactory#addReferenceProperties(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerFactory#addInjectables(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder)
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#checkAndFixAccess(java.lang.reflect.Member)
	CALLEE: com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig#hasDeserializerModifiers()
	CALLEE: com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig#deserializerModifiers()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder#setValueInstantiator(com.fasterxml.jackson.databind.deser.ValueInstantiator)
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#iterator()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#next()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#hasNext()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder#setPOJOBuilder(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder.Value)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder#buildBuilderBased(com.fasterxml.jackson.databind.JavaType,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#findMethod(java.lang.String,java.lang.Class[])
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#findPOJOBuilderConfig()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getMember()
CALLER: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#createEnumDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#getFactoryMethods()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getParameterCount()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getRawReturnType()
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getConfig()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig#hasDeserializerModifiers()
	CALLEE: com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig#deserializerModifiers()
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#_findCustomEnumDeserializer(java.lang.Class,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: static com.fasterxml.jackson.databind.deser.std.EnumDeserializer#deserializerForCreator(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#constructEnumResolver(java.lang.Class,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#<init>(com.fasterxml.jackson.databind.util.EnumResolver)
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#iterator()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#next()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#hasNext()
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#hasCreatorAnnotation(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#hasCreatorAnnotation(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#findJsonValueMethod()
CALLER: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#createArrayDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#findTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getConfig()
	CALLEE: com.fasterxml.jackson.databind.type.TypeBase#getValueHandler()
	CALLEE: com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig#hasDeserializerModifiers()
	CALLEE: com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig#deserializerModifiers()
	CALLEE: com.fasterxml.jackson.databind.type.TypeBase#getTypeHandler()
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#_findCustomArrayDeserializer(com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.JavaType#isPrimitive()
	CALLEE: static com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers#forType(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#<init>(com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#iterator()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#next()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#hasNext()
CALLER: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#createMapDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.DeserializationConfig#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#findValueInstantiator(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig#hasDeserializerModifiers()
	CALLEE: com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig#deserializerModifiers()
	CALLEE: static com.fasterxml.jackson.databind.deser.AbstractDeserializer#constructForNonPOJO(com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#setIgnorableProperties(java.lang.String[])
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#iterator()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#next()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#hasNext()
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findPropertiesToIgnore(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findPropertiesToIgnore(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#getClassInfo()
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#findTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.JavaType#isAbstract()
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getConfig()
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#getKeyType()
	CALLEE: com.fasterxml.jackson.databind.type.TypeBase#getValueHandler()
	CALLEE: com.fasterxml.jackson.databind.type.TypeBase#getTypeHandler()
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#_findCustomMapDeserializer(com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.JavaType#isInterface()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.DeserializationConfig#introspectForCreation(com.fasterxml.jackson.databind.JavaType)
CALLER: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#createMapLikeDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#findTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getConfig()
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#getKeyType()
	CALLEE: com.fasterxml.jackson.databind.type.TypeBase#getValueHandler()
	CALLEE: com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig#hasDeserializerModifiers()
	CALLEE: com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig#deserializerModifiers()
	CALLEE: com.fasterxml.jackson.databind.type.TypeBase#getTypeHandler()
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#_findCustomMapLikeDeserializer(com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#iterator()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#next()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#hasNext()
CALLER: static com.fasterxml.jackson.annotation.JsonFormat.Shape#<clinit>()
	CALLEE: com.fasterxml.jackson.annotation.JsonFormat.Shape#<init>(java.lang.String,int)
CALLER: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#createCollectionDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig#hasDeserializerModifiers()
	CALLEE: com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig#deserializerModifiers()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.ValueInstantiator)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.ValueInstantiator)
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#iterator()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#next()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#hasNext()
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#canCreateUsingDefault()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector.Vanilla#canCreateUsingDefault()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#canCreateUsingDefault()
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#findTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.JavaType#isAbstract()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getConfig()
	CALLEE: com.fasterxml.jackson.databind.type.TypeBase#getValueHandler()
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#findValueInstantiator(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.type.TypeBase#getTypeHandler()
	CALLEE: com.fasterxml.jackson.databind.JavaType#isInterface()
	CALLEE: com.fasterxml.jackson.databind.DeserializationConfig#introspectForCreation(com.fasterxml.jackson.databind.JavaType)
	CALLEE: static com.fasterxml.jackson.databind.deser.AbstractDeserializer#constructForNonPOJO(com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#_findCustomCollectionDeserializer(com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#_mapAbstractCollectionType(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.JsonDeserializer)
CALLER: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#createCollectionLikeDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#findTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getConfig()
	CALLEE: com.fasterxml.jackson.databind.type.TypeBase#getValueHandler()
	CALLEE: com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig#hasDeserializerModifiers()
	CALLEE: com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig#deserializerModifiers()
	CALLEE: com.fasterxml.jackson.databind.type.TypeBase#getTypeHandler()
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#_findCustomCollectionLikeDeserializer(com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#iterator()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#next()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#hasNext()
CALLER: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#createTreeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#_findCustomTreeNodeDeserializer(java.lang.Class,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: static com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#getDeserializer(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerFactory#createBeanDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.JavaType#isAbstract()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#isAbstract()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getConfig()
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#_findCustomBeanDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.JavaType#isThrowable()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerFactory#buildThrowableDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerFactory#materializeAbstractType(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.DeserializationConfig#introspect(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerFactory#buildBeanDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerFactory#findStdDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerFactory#isPotentialBeanType(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.std.StdDeserializer#<init>(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#<init>()
CALLER: static org.glassfish.jersey.server.model.AnnotatedMethod#findAnnotatedMethod(java.lang.reflect.Method)
	CALLEE: static org.glassfish.jersey.server.model.AnnotatedMethod#findAnnotatedMethod(java.lang.Class,java.lang.reflect.Method)
CALLER: static org.glassfish.jersey.server.model.AnnotatedMethod#mergeMethodAnnotations(java.lang.reflect.Method,java.lang.reflect.Method)
	CALLEE: static org.glassfish.jersey.server.model.AnnotatedMethod#asList(java.lang.Object[])
CALLER: static org.glassfish.jersey.server.model.AnnotatedMethod#mergeParameterAnnotations(java.lang.reflect.Method,java.lang.reflect.Method)
	CALLEE: static org.glassfish.jersey.server.model.AnnotatedMethod#asList(java.lang.Object[])
	CALLEE: static org.glassfish.jersey.server.model.AnnotatedMethod#annotationNotInList(java.lang.Class,java.util.List)
CALLER: org.glassfish.jersey.server.model.MethodList.6#keep(org.glassfish.jersey.server.model.AnnotatedMethod)
	CALLEE: org.glassfish.hk2.api.AnnotationLiteral#annotationType()
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#getAnnotations()
CALLER: org.glassfish.jersey.server.model.MethodList.8#keep(org.glassfish.jersey.server.model.AnnotatedMethod)
	CALLEE: org.glassfish.hk2.api.AnnotationLiteral#annotationType()
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#getAnnotations()
CALLER: static org.glassfish.jersey.internal.util.ReflectionHelper#getDeclaredMethodsPA(java.lang.Class)
	CALLEE: org.glassfish.jersey.internal.util.ReflectionHelper.6#<init>(java.lang.Class)
CALLER: static org.glassfish.jersey.internal.util.ReflectionHelper#resolveTypeVariable(java.lang.Class,java.lang.Class,java.lang.reflect.TypeVariable)
	CALLEE: static org.glassfish.jersey.internal.util.ReflectionHelper#resolveTypeVariable(java.lang.Class,java.lang.Class,java.lang.reflect.TypeVariable,java.util.Map)
CALLER: static org.glassfish.jersey.internal.util.collection.ClassTypePair#of(java.lang.Class,java.lang.reflect.Type)
	CALLEE: org.glassfish.jersey.internal.util.collection.ClassTypePair#<init>(java.lang.Class,java.lang.reflect.Type)
CALLER: static org.glassfish.jersey.internal.util.collection.ClassTypePair#of(java.lang.Class)
	CALLEE: org.glassfish.jersey.internal.util.collection.ClassTypePair#<init>(java.lang.Class,java.lang.reflect.Type)
CALLER: org.glassfish.jersey.server.model.Parameter.BeanParameter#<init>(java.lang.annotation.Annotation[],java.lang.annotation.Annotation,java.lang.String,java.lang.Class,java.lang.reflect.Type,boolean,java.lang.String)
	CALLEE: static org.glassfish.jersey.server.model.Parameter#create(java.lang.Class,java.lang.Class,boolean,java.lang.Class,java.lang.reflect.Type,java.lang.annotation.Annotation[])
	CALLEE: static org.glassfish.jersey.internal.util.ReflectionHelper#getDeclaredFieldsPA(java.lang.Class)
	CALLEE: org.glassfish.jersey.server.model.Parameter#<init>(java.lang.annotation.Annotation[],java.lang.annotation.Annotation,org.glassfish.jersey.server.model.Parameter.Source,java.lang.String,java.lang.Class,java.lang.reflect.Type,boolean,java.lang.String,org.glassfish.jersey.server.model.Parameter.1)
	CALLEE: static org.glassfish.jersey.internal.util.ReflectionHelper#getDeclaredConstructorsPA(java.lang.Class)
	CALLEE: static org.glassfish.jersey.server.model.Parameter#create(java.lang.Class,java.lang.Class,java.lang.reflect.Constructor,boolean)
CALLER: static liquibase.util.csv.opencsv.enums.CSVReaderNullFieldIndicator#<clinit>()
	CALLEE: liquibase.util.csv.opencsv.enums.CSVReaderNullFieldIndicator#<init>(java.lang.String,int)
CALLER: liquibase.util.csv.opencsv.CSVParser#<init>(char,char,char,boolean,boolean,boolean)
	CALLEE: liquibase.util.csv.opencsv.CSVParser#<init>(char,char,char,boolean,boolean,boolean,liquibase.util.csv.opencsv.enums.CSVReaderNullFieldIndicator)
CALLER: liquibase.util.csv.opencsv.CSVReader#<init>(java.io.Reader,int,liquibase.util.csv.opencsv.CSVParser,boolean,boolean)
	CALLEE: liquibase.util.csv.opencsv.stream.reader.LineReader#<init>(java.io.BufferedReader,boolean)
CALLER: org.glassfish.jersey.uri.PatternWithGroups.EmptyStringMatchResult#<init>(org.glassfish.jersey.uri.PatternWithGroups.1)
	CALLEE: org.glassfish.jersey.uri.PatternWithGroups.EmptyStringMatchResult#<init>()
CALLER: org.glassfish.jersey.uri.internal.UriTemplateParser#parse(org.glassfish.jersey.uri.internal.CharacterIterator)
	CALLEE: org.glassfish.jersey.uri.internal.CharacterIterator#hasNext()
	CALLEE: org.glassfish.jersey.uri.internal.CharacterIterator#next()
	CALLEE: org.glassfish.jersey.uri.internal.UriTemplateParser#processLiteralCharacters()
	CALLEE: org.glassfish.jersey.uri.internal.UriTemplateParser#parseName(org.glassfish.jersey.uri.internal.CharacterIterator,int)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#ERROR_TEMPLATE_PARSER_INVALID_SYNTAX_TERMINATED(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.cfg.MapperConfig#getHandlerInstantiator()
	CALLEE: com.fasterxml.jackson.databind.cfg.BaseSettings#getHandlerInstantiator()
CALLER: com.fasterxml.jackson.databind.cfg.MapperConfig#canOverrideAccessModifiers()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#isEnabled(com.fasterxml.jackson.databind.MapperFeature)
CALLER: static com.fasterxml.jackson.databind.util.ClassUtil#createInstance(java.lang.Class,boolean)
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#findConstructor(java.lang.Class,boolean)
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#unwrapAndThrowAsIAE(java.lang.Throwable,java.lang.String)
CALLER: com.fasterxml.jackson.databind.deser.DeserializerCache#findConverter(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.DatabindContext#converterInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findDeserializationConverter(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findDeserializationConverter(com.fasterxml.jackson.databind.introspect.Annotated)
CALLER: com.fasterxml.jackson.databind.type.SimpleType#_narrow(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#<init>(java.lang.Class,java.lang.String[],com.fasterxml.jackson.databind.JavaType[],java.lang.Object,java.lang.Object,boolean,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.type.ArrayType#_narrow(java.lang.Class)
	CALLEE: static com.fasterxml.jackson.databind.type.TypeFactory#defaultInstance()
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#constructType(java.lang.reflect.Type)
	CALLEE: static com.fasterxml.jackson.databind.type.ArrayType#construct(com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#toString()
CALLER: com.fasterxml.jackson.databind.type.MapType#_narrow(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.MapType#<init>(java.lang.Class,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean)
CALLER: com.fasterxml.jackson.databind.type.CollectionType#_narrow(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#<init>(java.lang.Class,com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean)
CALLER: com.fasterxml.jackson.databind.type.MapType#withKeyValueHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.MapType#<init>(java.lang.Class,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#withValueHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#withValueHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.MapType#withValueHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#withValueHandler(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.type.ArrayType#withContentValueHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#<init>(com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,java.lang.Object,boolean)
	CALLEE: com.fasterxml.jackson.databind.type.TypeBase#getValueHandler()
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#withValueHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#withValueHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.MapType#withValueHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#withValueHandler(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.type.MapType#withContentValueHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.MapType#<init>(java.lang.Class,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#withValueHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#withValueHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.MapType#withValueHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#withValueHandler(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.type.CollectionType#withContentValueHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#<init>(java.lang.Class,com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#withValueHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#withValueHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.MapType#withValueHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#withValueHandler(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#findValueInstantiator(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#getClassInfo()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#<init>(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getConfig()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#_valueInstantiatorInstance(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#_findStdValueInstantiator(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#_constructDefaultValueInstantiator(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig#hasValueInstantiators()
	CALLEE: com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig#valueInstantiators()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#iterator()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#next()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#hasNext()
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#getIncompleteParameter()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#getIncompleteParameter()
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findValueInstantiator(com.fasterxml.jackson.databind.introspect.AnnotatedClass)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findValueInstantiator(com.fasterxml.jackson.databind.introspect.AnnotatedClass)
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerFactory#constructBeanDeserializerBuilder(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getConfig()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder#<init>(com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.DeserializationConfig)
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerFactory#addBeanProps(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#hasSetter()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getRawType()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getGenericParameterType(int)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#getGenericType()
	CALLEE: com.fasterxml.jackson.databind.JavaType#isAbstract()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#isAbstract()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getConfig()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig#hasDeserializerModifiers()
	CALLEE: com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig#deserializerModifiers()
	CALLEE: static com.fasterxml.jackson.databind.util.ArrayBuilders#arrayToSet(java.lang.Object[])
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerFactory#constructAnySetter(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
	CALLEE: com.fasterxml.jackson.databind.DatabindContext#isEnabled(com.fasterxml.jackson.databind.MapperFeature)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerFactory#filterBeanProps(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder,java.util.List,java.util.Set)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerFactory#constructSettableProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,java.lang.reflect.Type)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerFactory#constructSetterlessProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder#addIgnorable(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#iterator()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#getName()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder#getValueInstantiator()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder#addProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder#setAnySetter(com.fasterxml.jackson.databind.deser.SettableAnyProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder#setIgnoreUnknownProperties(boolean)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder#addCreatorProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty)
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#next()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#hasNext()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#setViews(java.lang.Class[])
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findPropertiesToIgnore(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findIgnoreUnknownProperties(com.fasterxml.jackson.databind.introspect.AnnotatedClass)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findPropertiesToIgnore(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findIgnoreUnknownProperties(com.fasterxml.jackson.databind.introspect.AnnotatedClass)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonLocationInstantiator#getFromObjectArguments(com.fasterxml.jackson.databind.DeserializationConfig)
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#getFromObjectArguments(com.fasterxml.jackson.databind.DeserializationConfig)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#getFromObjectArguments(com.fasterxml.jackson.databind.DeserializationConfig)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#getClassInfo()
	CALLEE: com.fasterxml.jackson.databind.BeanDescription#getBeanClass()
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#findProperties()
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#getIgnoredPropertyNames()
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#findAnySetter()
	CALLEE: com.fasterxml.jackson.databind.BeanDescription#getType()
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#withFallbackSetter(com.fasterxml.jackson.databind.deser.SettableBeanProperty)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getName()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#findViews()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#hasConstructorParameter()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getGetter()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#hasGetter()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getField()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#hasField()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getSetter()
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerFactory#addObjectIdReader(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder)
	CALLEE: com.fasterxml.jackson.databind.introspect.ObjectIdInfo#getScope()
	CALLEE: com.fasterxml.jackson.databind.introspect.ObjectIdInfo#getGeneratorType()
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#findTypeParameters(com.fasterxml.jackson.databind.JavaType,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#findRootValueDeserializer(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getTypeFactory()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#constructType(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.DatabindContext#objectIdResolverInstance(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyBasedObjectIdGenerator#<init>(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.DatabindContext#objectIdGeneratorInstance(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo)
	CALLEE: static com.fasterxml.jackson.databind.deser.impl.ObjectIdReader#construct(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.annotation.ObjectIdGenerator,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.annotation.ObjectIdResolver)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder#findProperty(com.fasterxml.jackson.databind.PropertyName)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder#setObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#getType()
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#getClassInfo()
	CALLEE: com.fasterxml.jackson.databind.BeanDescription#getBeanClass()
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#getObjectIdInfo()
	CALLEE: com.fasterxml.jackson.databind.introspect.ObjectIdInfo#getPropertyName()
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerFactory#addReferenceProperties(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getConfig()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerFactory#constructSettableProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,java.lang.reflect.Type)
	CALLEE: static com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition#construct(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder#addBackReferenceProperty(java.lang.String,com.fasterxml.jackson.databind.deser.SettableBeanProperty)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#findBackReferenceProperties()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getRawType()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getGenericParameterType(int)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#getRawType()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#getRawType()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#getRawType()
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerFactory#addInjectables(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMember#fixAccess()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#getName()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#getGenericType()
	CALLEE: com.fasterxml.jackson.databind.PropertyName#<init>(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.DatabindContext#canOverrideAccessModifiers()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder#addInjectable(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedMember,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#getClassAnnotations()
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#resolveType(java.lang.reflect.Type)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#findInjectables()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getName()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#getName()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#getName()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#getGenericType()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getGenericType()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#getGenericType()
CALLER: com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig#deserializerModifiers()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#<init>(java.lang.Object[])
CALLER: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#_findCustomEnumDeserializer(java.lang.Class,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig#deserializers()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#iterator()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#next()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#hasNext()
CALLER: static com.fasterxml.jackson.databind.deser.std.EnumDeserializer#deserializerForCreator(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#canOverrideAccessModifiers()
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#checkAndFixAccess(java.lang.reflect.Member)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#<init>(java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getRawParameterType(int)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getMember()
CALLER: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#constructEnumResolver(java.lang.Class,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
	CALLEE: com.fasterxml.jackson.databind.DeserializationConfig#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.DeserializationConfig#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#canOverrideAccessModifiers()
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#checkAndFixAccess(java.lang.reflect.Member)
	CALLEE: static com.fasterxml.jackson.databind.util.EnumResolver#constructUnsafeUsingMethod(java.lang.Class,java.lang.reflect.Method)
	CALLEE: static com.fasterxml.jackson.databind.util.EnumResolver#constructUnsafeUsingToString(java.lang.Class)
	CALLEE: static com.fasterxml.jackson.databind.util.EnumResolver#constructUnsafe(java.lang.Class,com.fasterxml.jackson.databind.AnnotationIntrospector)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getAnnotated()
CALLER: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#<init>(com.fasterxml.jackson.databind.util.EnumResolver)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#_findCustomArrayDeserializer(com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig#deserializers()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#iterator()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#next()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#hasNext()
CALLER: static com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers#forType(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ByteDeser#<init>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ShortDeser#<init>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.FloatDeser#<init>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.DoubleDeser#<init>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.BooleanDeser#<init>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.CharDeser#<init>()
CALLER: static com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#<init>()
CALLER: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#<init>(com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase#<init>(com.fasterxml.jackson.databind.JavaType)
CALLER: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#_findCustomMapDeserializer(com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig#deserializers()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#iterator()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#next()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#hasNext()
CALLER: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#getKeyType()
	CALLEE: com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase#<init>(com.fasterxml.jackson.databind.JavaType)
CALLER: com.fasterxml.jackson.databind.cfg.MapperConfig#constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#getTypeFactory()
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.DeserializationConfig#introspectForCreation(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#getClassIntrospector()
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicClassIntrospector#forCreation(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver)
CALLER: static com.fasterxml.jackson.databind.deser.AbstractDeserializer#constructForNonPOJO(com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#<init>(com.fasterxml.jackson.databind.BeanDescription)
CALLER: com.fasterxml.jackson.databind.deser.std.MapDeserializer#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase#<init>(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#_isStdKeyDeser(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.KeyDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#canCreateUsingDefault()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector.Vanilla#canCreateUsingDefault()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#canCreateUsingDefault()
CALLER: com.fasterxml.jackson.databind.deser.std.MapDeserializer#setIgnorableProperties(java.lang.String[])
	CALLEE: static com.fasterxml.jackson.databind.util.ArrayBuilders#arrayToSet(java.lang.Object[])
CALLER: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#_findCustomMapLikeDeserializer(com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig#deserializers()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#iterator()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#next()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#hasNext()
CALLER: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#_findCustomCollectionDeserializer(com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig#deserializers()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#iterator()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#next()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#hasNext()
CALLER: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#_mapAbstractCollectionType(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.JsonDeserializer)
CALLER: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.ValueInstantiator)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.JsonDeserializer)
CALLER: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.ValueInstantiator)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.JsonDeserializer)
CALLER: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#_findCustomCollectionLikeDeserializer(com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig#deserializers()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#iterator()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#next()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#hasNext()
CALLER: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#_findCustomTreeNodeDeserializer(java.lang.Class,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig#deserializers()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#iterator()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#next()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#hasNext()
CALLER: static com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#getDeserializer(java.lang.Class)
	CALLEE: static com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ObjectDeserializer#getInstance()
	CALLEE: static com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ArrayDeserializer#getInstance()
CALLER: static com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#<init>()
CALLER: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#_findCustomBeanDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig#deserializers()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#iterator()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#next()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#hasNext()
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerFactory#buildThrowableDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.PropertyName#<init>(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getConfig()
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#findValueInstantiator(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerFactory#constructBeanDeserializerBuilder(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerFactory#addBeanProps(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder)
	CALLEE: com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig#hasDeserializerModifiers()
	CALLEE: com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig#deserializerModifiers()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerFactory#constructSettableProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,java.lang.reflect.Type)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder#setValueInstantiator(com.fasterxml.jackson.databind.deser.ValueInstantiator)
	CALLEE: static com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition#construct(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.PropertyName)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder#addOrReplaceProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty,boolean)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder#addIgnorable(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#iterator()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder#build()
	CALLEE: com.fasterxml.jackson.databind.deser.std.ThrowableDeserializer#<init>(com.fasterxml.jackson.databind.deser.BeanDeserializer)
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#next()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#hasNext()
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#findMethod(java.lang.String,java.lang.Class[])
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getGenericParameterType(int)
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerFactory#materializeAbstractType(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig#abstractTypeResolvers()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getConfig()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#iterator()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#next()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#hasNext()
	CALLEE: com.fasterxml.jackson.databind.BeanDescription#getType()
CALLER: com.fasterxml.jackson.databind.DeserializationConfig#introspect(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#getClassIntrospector()
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicClassIntrospector#forDeserialization(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver)
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerFactory#buildBeanDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.JavaType#isAbstract()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#isAbstract()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getConfig()
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#findValueInstantiator(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerFactory#constructBeanDeserializerBuilder(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerFactory#addBeanProps(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerFactory#addObjectIdReader(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerFactory#addReferenceProperties(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerFactory#addInjectables(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder)
	CALLEE: com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig#hasDeserializerModifiers()
	CALLEE: com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig#deserializerModifiers()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder#setValueInstantiator(com.fasterxml.jackson.databind.deser.ValueInstantiator)
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#iterator()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder#build()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder#buildAbstract()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#next()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#hasNext()
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#canInstantiate()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector.Vanilla#canInstantiate()
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerFactory#findStdDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getConfig()
	CALLEE: com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig#hasDeserializerModifiers()
	CALLEE: com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig#deserializerModifiers()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#iterator()
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#findDefaultDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#next()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#hasNext()
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerFactory#isPotentialBeanType(java.lang.Class)
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#canBeABeanType(java.lang.Class)
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#isProxyType(java.lang.Class)
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#isLocalType(java.lang.Class,boolean)
CALLER: static org.glassfish.jersey.server.model.AnnotatedMethod#findAnnotatedMethod(java.lang.Class,java.lang.reflect.Method)
	CALLEE: static org.glassfish.jersey.server.model.AnnotatedMethod#findAnnotatedMethod(java.lang.Class,java.lang.reflect.Method)
	CALLEE: static org.glassfish.jersey.internal.util.ReflectionHelper#findMethodOnClassPA(java.lang.Class,java.lang.reflect.Method)
	CALLEE: static org.glassfish.jersey.server.model.AnnotatedMethod#hasAnnotations(java.lang.reflect.Method)
CALLER: static org.glassfish.jersey.internal.util.ReflectionHelper#resolveTypeVariable(java.lang.Class,java.lang.Class,java.lang.reflect.TypeVariable,java.util.Map)
	CALLEE: static org.glassfish.jersey.internal.util.ReflectionHelper#resolveTypeVariable(java.lang.Class,java.lang.Class,java.lang.reflect.TypeVariable,java.util.Map)
	CALLEE: static org.glassfish.jersey.internal.util.ReflectionHelper#resolveTypeVariable(java.lang.reflect.ParameterizedType,java.lang.Class,java.lang.Class,java.lang.reflect.TypeVariable,java.util.Map)
CALLER: org.glassfish.jersey.server.model.Parameter#<init>(java.lang.annotation.Annotation[],java.lang.annotation.Annotation,org.glassfish.jersey.server.model.Parameter.Source,java.lang.String,java.lang.Class,java.lang.reflect.Type,boolean,java.lang.String,org.glassfish.jersey.server.model.Parameter.1)
	CALLEE: org.glassfish.jersey.server.model.Parameter#<init>(java.lang.annotation.Annotation[],java.lang.annotation.Annotation,org.glassfish.jersey.server.model.Parameter.Source,java.lang.String,java.lang.Class,java.lang.reflect.Type,boolean,java.lang.String)
CALLER: static org.glassfish.jersey.internal.util.ReflectionHelper#getDeclaredConstructorsPA(java.lang.Class)
	CALLEE: org.glassfish.jersey.internal.util.ReflectionHelper.16#<init>(java.lang.Class)
CALLER: static org.glassfish.jersey.server.model.Parameter#create(java.lang.Class,java.lang.Class,java.lang.reflect.Constructor,boolean)
	CALLEE: static org.glassfish.jersey.server.model.Parameter#create(java.lang.Class,java.lang.Class,boolean,java.lang.Class[],java.lang.reflect.Type[],java.lang.annotation.Annotation[][])
CALLER: liquibase.util.csv.opencsv.CSVParser#<init>(char,char,char,boolean,boolean,boolean,liquibase.util.csv.opencsv.enums.CSVReaderNullFieldIndicator)
	CALLEE: liquibase.util.csv.opencsv.CSVParser#anyCharactersAreTheSame(char,char,char)
CALLER: org.glassfish.jersey.uri.internal.CharacterIterator#next()
	CALLEE: org.glassfish.jersey.uri.internal.CharacterIterator#hasNext()
CALLER: org.glassfish.jersey.uri.internal.UriTemplateParser#processLiteralCharacters()
	CALLEE: static org.glassfish.jersey.uri.UriComponent#isHexCharacter(char)
	CALLEE: org.glassfish.jersey.uri.PathTemplate.PathTemplateParser#encodeLiteralCharacters(java.lang.String)
CALLER: org.glassfish.jersey.uri.internal.UriTemplateParser#parseName(org.glassfish.jersey.uri.internal.CharacterIterator,int)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#ERROR_TEMPLATE_PARSER_NAME_MORE_THAN_ONCE(java.lang.Object,java.lang.Object)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#ERROR_TEMPLATE_PARSER_INVALID_SYNTAX(java.lang.Object,java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.uri.internal.CharacterIterator#next()
	CALLEE: org.glassfish.jersey.uri.internal.UriTemplateParser#consumeWhiteSpace(org.glassfish.jersey.uri.internal.CharacterIterator)
	CALLEE: org.glassfish.jersey.uri.internal.CharacterIterator#pos()
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#ERROR_TEMPLATE_PARSER_ILLEGAL_CHAR_START_NAME(java.lang.Object,java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.uri.internal.UriTemplateParser#parseRegex(org.glassfish.jersey.uri.internal.CharacterIterator)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#ERROR_TEMPLATE_PARSER_ILLEGAL_CHAR_AFTER_NAME(java.lang.Object,java.lang.Object,java.lang.Object)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#ERROR_TEMPLATE_PARSER_ILLEGAL_CHAR_PART_OF_NAME(java.lang.Object,java.lang.Object,java.lang.Object)
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#ERROR_TEMPLATE_PARSER_INVALID_SYNTAX_TERMINATED(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#localizableERROR_TEMPLATE_PARSER_INVALID_SYNTAX_TERMINATED(java.lang.Object)
CALLER: static com.fasterxml.jackson.databind.util.ClassUtil#findConstructor(java.lang.Class,boolean)
	CALLEE: org.h2.jdbc.JdbcSQLException#getMessage()
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#getMessage()
	CALLEE: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference#getMessage()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#getMessage()
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#checkAndFixAccess(java.lang.reflect.Member)
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#unwrapAndThrowAsIAE(java.lang.Throwable,java.lang.String)
CALLER: static com.fasterxml.jackson.databind.util.ClassUtil#unwrapAndThrowAsIAE(java.lang.Throwable,java.lang.String)
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#getRootCause(java.lang.Throwable)
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#throwAsIAE(java.lang.Throwable,java.lang.String)
CALLER: com.fasterxml.jackson.databind.DatabindContext#converterInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#isBogusClass(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#getHandlerInstantiator()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#canOverrideAccessModifiers()
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#createInstance(java.lang.Class,boolean)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getConfig()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getConfig()
CALLER: com.fasterxml.jackson.databind.type.SimpleType#withValueHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#withValueHandler(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.type.ArrayType#withValueHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#withValueHandler(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.type.MapType#withValueHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.MapType#withValueHandler(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.type.CollectionType#withValueHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#withValueHandler(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#_valueInstantiatorInstance(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#isBogusClass(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#getHandlerInstantiator()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#canOverrideAccessModifiers()
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#createInstance(java.lang.Class,boolean)
CALLER: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#_findStdValueInstantiator(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonLocationInstantiator#<init>()
	CALLEE: com.fasterxml.jackson.databind.BeanDescription#getBeanClass()
CALLER: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#_constructDefaultValueInstantiator(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getConfig()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.DatabindContext#canOverrideAccessModifiers()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector#<init>(com.fasterxml.jackson.databind.BeanDescription,boolean)
	CALLEE: com.fasterxml.jackson.databind.DeserializationConfig#getDefaultVisibilityChecker()
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#_findCreatorsFromProperties(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#_addDeserializerFactoryMethods(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.VisibilityChecker,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.deser.impl.CreatorCollector,java.util.Map)
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#_addDeserializerConstructors(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.VisibilityChecker,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.deser.impl.CreatorCollector,java.util.Map)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector#constructValueInstantiator(com.fasterxml.jackson.databind.DeserializationConfig)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findAutoDetectVisibility(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.introspect.VisibilityChecker)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findAutoDetectVisibility(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.introspect.VisibilityChecker)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#getClassInfo()
	CALLEE: com.fasterxml.jackson.databind.BeanDescription#getType()
	CALLEE: com.fasterxml.jackson.databind.JavaType#isConcrete()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#isConcrete()
CALLER: com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig#valueInstantiators()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#<init>(java.lang.Object[])
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder#<init>(com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.DeserializationConfig)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#isEnabled(com.fasterxml.jackson.databind.MapperFeature)
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerFactory#constructAnySetter(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
	CALLEE: com.fasterxml.jackson.databind.PropertyName#<init>(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.type.TypeBase#getValueHandler()
	CALLEE: com.fasterxml.jackson.databind.type.TypeBase#getTypeHandler()
	CALLEE: com.fasterxml.jackson.databind.DatabindContext#canOverrideAccessModifiers()
	CALLEE: com.fasterxml.jackson.databind.BeanProperty.Std#<init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.PropertyMetadata)
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#resolveType(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#findDeserializerFromAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#modifyTypeByAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableAnyProperty#<init>(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#getClassAnnotations()
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#bindingsForBeanType()
	CALLEE: com.fasterxml.jackson.databind.type.TypeBindings#resolveType(java.lang.reflect.Type)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getName()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getGenericParameterType(int)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMember#fixAccess()
CALLER: com.fasterxml.jackson.databind.DatabindContext#isEnabled(com.fasterxml.jackson.databind.MapperFeature)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#isEnabled(com.fasterxml.jackson.databind.MapperFeature)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getConfig()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getConfig()
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerFactory#filterBeanProps(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder,java.util.List,java.util.Set)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getName()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#hasConstructorParameter()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#getRawType()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getConfig()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder#addIgnorable(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerFactory#isIgnorableType(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.lang.Class,java.util.Map)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getField()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#hasField()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getSetter()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#hasSetter()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getRawParameterType(int)
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerFactory#constructSettableProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,java.lang.reflect.Type)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getFullName()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#findObjectIdInfo()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#findReferenceType()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getMetadata()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getWrapperName()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getNonConstructorMutator()
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector.ReferenceProperty#getName()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMember#fixAccess()
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector.ReferenceProperty#isManagedReference()
	CALLEE: com.fasterxml.jackson.databind.type.TypeBase#getTypeHandler()
	CALLEE: com.fasterxml.jackson.databind.DatabindContext#canOverrideAccessModifiers()
	CALLEE: com.fasterxml.jackson.databind.BeanProperty.Std#<init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.PropertyMetadata)
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#resolveType(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#findDeserializerFromAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#modifyTypeByAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.BeanProperty.Std#withType(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#<init>(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#<init>(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedField)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#setManagedReferenceName(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#setObjectIdInfo(com.fasterxml.jackson.databind.introspect.ObjectIdInfo)
	CALLEE: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition#findObjectIdInfo()
	CALLEE: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition#findReferenceType()
	CALLEE: com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition#getMetadata()
	CALLEE: com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition#getWrapperName()
	CALLEE: com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition#getFullName()
	CALLEE: com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition#getNonConstructorMutator()
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#getClassAnnotations()
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#resolveType(java.lang.reflect.Type)
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerFactory#constructSetterlessProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition)
	CALLEE: com.fasterxml.jackson.databind.type.TypeBase#getTypeHandler()
	CALLEE: com.fasterxml.jackson.databind.DatabindContext#canOverrideAccessModifiers()
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#resolveType(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#findDeserializerFromAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#modifyTypeByAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#<init>(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#getClassAnnotations()
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#bindingsForBeanType()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getGetter()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMember#fixAccess()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getType(com.fasterxml.jackson.databind.type.TypeBindings)
CALLER: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.String)
	CALLEE: static com.fasterxml.jackson.databind.JsonMappingException#from(com.fasterxml.jackson.core.JsonParser,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getParser()
CALLER: com.fasterxml.jackson.databind.DatabindContext#objectIdResolverInstance(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#getHandlerInstantiator()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#canOverrideAccessModifiers()
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#createInstance(java.lang.Class,boolean)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getConfig()
	CALLEE: com.fasterxml.jackson.databind.introspect.ObjectIdInfo#getResolverType()
CALLER: com.fasterxml.jackson.databind.deser.impl.PropertyBasedObjectIdGenerator#<init>(java.lang.Class)
	CALLEE: com.fasterxml.jackson.annotation.ObjectIdGenerators.PropertyGenerator#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.DatabindContext#objectIdGeneratorInstance(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#getHandlerInstantiator()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#canOverrideAccessModifiers()
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#createInstance(java.lang.Class,boolean)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getConfig()
	CALLEE: com.fasterxml.jackson.databind.introspect.ObjectIdInfo#getScope()
	CALLEE: com.fasterxml.jackson.databind.introspect.ObjectIdInfo#getGeneratorType()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getConfig()
CALLER: static com.fasterxml.jackson.databind.deser.impl.ObjectIdReader#construct(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.annotation.ObjectIdGenerator,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.annotation.ObjectIdResolver)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReader#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.annotation.ObjectIdGenerator,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.annotation.ObjectIdResolver)
CALLER: static com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition#construct(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.PropertyName#<init>(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.DeserializationConfig#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition#<init>(com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.PropertyMetadata,com.fasterxml.jackson.annotation.JsonInclude.Include)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getName()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#getName()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#getName()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#getName()
CALLER: com.fasterxml.jackson.databind.DatabindContext#canOverrideAccessModifiers()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#canOverrideAccessModifiers()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getConfig()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getConfig()
CALLER: com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig#deserializers()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#<init>(java.lang.Object[])
CALLER: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#<init>(java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#<init>(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getAnnotated()
CALLER: static com.fasterxml.jackson.databind.util.EnumResolver#constructUnsafeUsingMethod(java.lang.Class,java.lang.reflect.Method)
	CALLEE: static com.fasterxml.jackson.databind.util.EnumResolver#constructUsingMethod(java.lang.Class,java.lang.reflect.Method)
CALLER: static com.fasterxml.jackson.databind.util.EnumResolver#constructUnsafeUsingToString(java.lang.Class)
	CALLEE: static com.fasterxml.jackson.databind.util.EnumResolver#constructUsingToString(java.lang.Class)
CALLER: static com.fasterxml.jackson.databind.util.EnumResolver#constructUnsafe(java.lang.Class,com.fasterxml.jackson.databind.AnnotationIntrospector)
	CALLEE: static com.fasterxml.jackson.databind.util.EnumResolver#constructFor(java.lang.Class,com.fasterxml.jackson.databind.AnnotationIntrospector)
CALLER: com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer#<init>(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#<init>(java.lang.Class)
CALLER: static com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.IntDeser#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.IntDeser#<init>()
CALLER: static com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.LongDeser#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.LongDeser#<init>()
CALLER: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ByteDeser#<init>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ShortDeser#<init>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.FloatDeser#<init>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.DoubleDeser#<init>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.BooleanDeser#<init>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.CharDeser#<init>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase#<init>(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#<init>(com.fasterxml.jackson.databind.JavaType)
CALLER: com.fasterxml.jackson.databind.deser.AbstractDeserializer#<init>(com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.BeanDescription#getType()
CALLER: com.fasterxml.jackson.databind.deser.std.MapDeserializer#_isStdKeyDeser(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.KeyDeserializer)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#getKeyType()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#isDefaultKeyDeserializer(com.fasterxml.jackson.databind.KeyDeserializer)
CALLER: com.fasterxml.jackson.databind.deser.std.StdDeserializer#<init>(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#<init>()
CALLER: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase#<init>(com.fasterxml.jackson.databind.JavaType)
CALLER: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase#<init>(com.fasterxml.jackson.databind.JavaType)
CALLER: static com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ObjectDeserializer#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ObjectDeserializer#<init>()
CALLER: static com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ArrayDeserializer#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ArrayDeserializer#<init>()
CALLER: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer#<init>(java.lang.Class)
CALLER: static com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition#construct(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.PropertyName)
	CALLEE: static com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition#construct(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.PropertyMetadata,com.fasterxml.jackson.annotation.JsonInclude.Include)
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder#addOrReplaceProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty,boolean)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#getName()
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder#build()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#<init>(java.util.Collection,boolean)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#assignIndexes()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#<init>(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader,com.fasterxml.jackson.databind.PropertyMetadata)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#withProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#<init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,java.util.Map,java.util.HashSet,boolean,boolean)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#hasViews()
CALLER: static com.fasterxml.jackson.databind.deser.BeanDeserializerBase#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.PropertyName#<init>(java.lang.String)
CALLER: com.fasterxml.jackson.databind.deser.std.ThrowableDeserializer#<init>(com.fasterxml.jackson.databind.deser.BeanDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#<init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase)
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder#buildAbstract()
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#<init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder,com.fasterxml.jackson.databind.BeanDescription,java.util.Map)
CALLER: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#findDefaultDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#findTypeParameters(com.fasterxml.jackson.databind.JavaType,java.lang.Class)
	CALLEE: static com.fasterxml.jackson.databind.deser.std.JdkDeserializers#find(java.lang.Class,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#constructCollectionType(java.lang.Class,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#getClassInfo()
	CALLEE: static com.fasterxml.jackson.databind.type.TypeFactory#unknownType()
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.DeserializationConfig#introspectClassAnnotations(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#findTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getConfig()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getTypeFactory()
	CALLEE: com.fasterxml.jackson.databind.type.TypeBase#getValueHandler()
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#createCollectionDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.type.TypeBase#getTypeHandler()
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#findDeserializerFromAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: static com.fasterxml.jackson.databind.deser.std.NumberDeserializers#find(java.lang.Class,java.lang.String)
	CALLEE: static com.fasterxml.jackson.databind.deser.std.DateDeserializers#find(java.lang.Class,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#findOptionalStdDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
CALLER: static org.glassfish.jersey.internal.util.ReflectionHelper#findMethodOnClassPA(java.lang.Class,java.lang.reflect.Method)
	CALLEE: org.glassfish.jersey.internal.util.ReflectionHelper.18#<init>(java.lang.Class,java.lang.reflect.Method)
CALLER: static org.glassfish.jersey.server.model.AnnotatedMethod#hasAnnotations(java.lang.reflect.Method)
	CALLEE: static org.glassfish.jersey.server.model.AnnotatedMethod#hasMetaMethodAnnotations(java.lang.reflect.Method)
	CALLEE: static org.glassfish.jersey.server.model.AnnotatedMethod#hasMethodAnnotations(java.lang.reflect.Method)
	CALLEE: static org.glassfish.jersey.server.model.AnnotatedMethod#hasParameterAnnotations(java.lang.reflect.Method)
CALLER: static org.glassfish.jersey.internal.util.ReflectionHelper#resolveTypeVariable(java.lang.reflect.ParameterizedType,java.lang.Class,java.lang.Class,java.lang.reflect.TypeVariable,java.util.Map)
	CALLEE: static org.glassfish.jersey.internal.util.collection.ClassTypePair#of(java.lang.Class,java.lang.reflect.Type)
	CALLEE: static org.glassfish.jersey.internal.util.ReflectionHelper#getArrayForComponentType(java.lang.Class)
	CALLEE: static org.glassfish.jersey.internal.util.collection.ClassTypePair#of(java.lang.Class)
	CALLEE: static org.glassfish.jersey.internal.util.ReflectionHelper#resolveTypeVariable(java.lang.Class,java.lang.Class,java.lang.reflect.TypeVariable,java.util.Map)
	CALLEE: org.glassfish.hk2.utilities.reflection.ParameterizedTypeImpl#getRawType()
CALLER: static org.glassfish.jersey.server.model.Parameter#create(java.lang.Class,java.lang.Class,boolean,java.lang.Class[],java.lang.reflect.Type[],java.lang.annotation.Annotation[][])
	CALLEE: static org.glassfish.jersey.server.model.Parameter#create(java.lang.Class,java.lang.Class,boolean,java.lang.Class,java.lang.reflect.Type,java.lang.annotation.Annotation[])
CALLER: liquibase.util.csv.opencsv.CSVParser#anyCharactersAreTheSame(char,char,char)
	CALLEE: liquibase.util.csv.opencsv.CSVParser#isSameCharacter(char,char)
CALLER: org.glassfish.jersey.uri.PathTemplate.PathTemplateParser#encodeLiteralCharacters(java.lang.String)
	CALLEE: static org.glassfish.jersey.uri.UriComponent#contextualEncode(java.lang.String,org.glassfish.jersey.uri.UriComponent.Type)
CALLER: org.glassfish.jersey.uri.internal.UriTemplateParser#consumeWhiteSpace(org.glassfish.jersey.uri.internal.CharacterIterator)
	CALLEE: org.glassfish.jersey.uri.internal.CharacterIterator#next()
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#ERROR_TEMPLATE_PARSER_ILLEGAL_CHAR_START_NAME(java.lang.Object,java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#localizableERROR_TEMPLATE_PARSER_ILLEGAL_CHAR_START_NAME(java.lang.Object,java.lang.Object,java.lang.Object)
CALLER: org.glassfish.jersey.uri.internal.UriTemplateParser#parseRegex(org.glassfish.jersey.uri.internal.CharacterIterator)
	CALLEE: org.glassfish.jersey.uri.internal.CharacterIterator#next()
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#ERROR_TEMPLATE_PARSER_ILLEGAL_CHAR_AFTER_NAME(java.lang.Object,java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#localizableERROR_TEMPLATE_PARSER_ILLEGAL_CHAR_AFTER_NAME(java.lang.Object,java.lang.Object,java.lang.Object)
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#ERROR_TEMPLATE_PARSER_ILLEGAL_CHAR_PART_OF_NAME(java.lang.Object,java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#localizableERROR_TEMPLATE_PARSER_ILLEGAL_CHAR_PART_OF_NAME(java.lang.Object,java.lang.Object,java.lang.Object)
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#ERROR_TEMPLATE_PARSER_NAME_MORE_THAN_ONCE(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#localizableERROR_TEMPLATE_PARSER_NAME_MORE_THAN_ONCE(java.lang.Object,java.lang.Object)
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#ERROR_TEMPLATE_PARSER_INVALID_SYNTAX(java.lang.Object,java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#localizableERROR_TEMPLATE_PARSER_INVALID_SYNTAX(java.lang.Object,java.lang.Object,java.lang.Object)
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#localizableERROR_TEMPLATE_PARSER_INVALID_SYNTAX_TERMINATED(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: com.fasterxml.jackson.databind.DeserializationContext#getConfig()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getConfig()
CALLER: com.fasterxml.jackson.databind.type.SimpleType#withValueHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#<init>(java.lang.Class,java.lang.String[],com.fasterxml.jackson.databind.JavaType[],java.lang.Object,java.lang.Object,boolean,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.type.ArrayType#withValueHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#<init>(com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,java.lang.Object,boolean)
CALLER: com.fasterxml.jackson.databind.type.MapType#withValueHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.MapType#<init>(java.lang.Class,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean)
CALLER: com.fasterxml.jackson.databind.type.CollectionType#withValueHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#<init>(java.lang.Class,com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean)
CALLER: com.fasterxml.jackson.databind.deser.std.JsonLocationInstantiator#<init>()
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#<init>()
CALLER: com.fasterxml.jackson.databind.DeserializationConfig#getDefaultVisibilityChecker()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#isEnabled(com.fasterxml.jackson.databind.MapperFeature)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#getDefaultVisibilityChecker()
	CALLEE: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#withSetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility)
	CALLEE: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#withCreatorVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility)
	CALLEE: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#withFieldVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility)
CALLER: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#_findCreatorsFromProperties(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#getParameterCount()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getParameterCount()
	CALLEE: com.fasterxml.jackson.databind.util.EmptyIterator#next()
	CALLEE: com.fasterxml.jackson.databind.util.EmptyIterator#hasNext()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getConstructorParameters()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#getIndex()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#getOwner()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.MemberIterator#next()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.MemberIterator#hasNext()
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#findProperties()
CALLER: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#_addDeserializerFactoryMethods(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.VisibilityChecker,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.deser.impl.CreatorCollector,java.util.Map)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#getFactoryMethods()
	CALLEE: com.fasterxml.jackson.databind.PropertyName#isEmpty()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#isExplicitlyNamed()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getFullName()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedWithParams#getParameter(int)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getParameterCount()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#getIndex()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getConfig()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector#setDefaultCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams)
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#_checkIfCreatorPropertyBased(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition)
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#_handleSingleArgumentFactory(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.VisibilityChecker,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.deser.impl.CreatorCollector,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,boolean)
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#constructCreatorProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.PropertyName,int,com.fasterxml.jackson.databind.introspect.AnnotatedParameter,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector#addPropertyCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean,com.fasterxml.jackson.databind.deser.CreatorProperty[])
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector#addDelegatingCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean,com.fasterxml.jackson.databind.deser.CreatorProperty[])
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findUnwrappingNameTransformer(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findInjectableValueId(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#hasCreatorAnnotation(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findUnwrappingNameTransformer(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findInjectableValueId(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#hasCreatorAnnotation(com.fasterxml.jackson.databind.introspect.Annotated)
CALLER: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#_addDeserializerConstructors(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.VisibilityChecker,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.deser.impl.CreatorCollector,java.util.Map)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#hasCreatorAnnotation(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#isCreatorVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#getConstructors()
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#findDefaultConstructor()
	CALLEE: com.fasterxml.jackson.databind.PropertyName#isEmpty()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#isExplicitlyNamed()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getFullName()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#removeConstructors()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#getDeclaringClass()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedWithParams#getParameter(int)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#getParameterCount()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#getIndex()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector#setDefaultCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams)
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#_checkIfCreatorPropertyBased(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition)
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#constructCreatorProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.PropertyName,int,com.fasterxml.jackson.databind.introspect.AnnotatedParameter,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector#addPropertyCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean,com.fasterxml.jackson.databind.deser.CreatorProperty[])
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector#addDelegatingCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean,com.fasterxml.jackson.databind.deser.CreatorProperty[])
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector#hasDefaultCreator()
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#_handleSingleArgumentConstructor(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.VisibilityChecker,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.deser.impl.CreatorCollector,com.fasterxml.jackson.databind.introspect.AnnotatedConstructor,boolean,boolean)
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#isNonStaticInnerClass(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findUnwrappingNameTransformer(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findInjectableValueId(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#hasCreatorAnnotation(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findUnwrappingNameTransformer(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findInjectableValueId(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
CALLER: com.fasterxml.jackson.databind.deser.impl.CreatorCollector#constructValueInstantiator(com.fasterxml.jackson.databind.DeserializationConfig)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector.Vanilla#<init>(int)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#<init>(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#configureFromObjectSettings(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.CreatorProperty[],com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.deser.CreatorProperty[])
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#configureFromStringCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#configureFromIntCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#configureFromLongCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#configureFromDoubleCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#configureFromBooleanCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#configureIncompleteParameter(com.fasterxml.jackson.databind.introspect.AnnotatedParameter)
	CALLEE: com.fasterxml.jackson.databind.BeanDescription#getType()
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#bindingsForBeanType()
	CALLEE: com.fasterxml.jackson.databind.type.TypeBindings#resolveType(java.lang.reflect.Type)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#getGenericParameterType(int)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getGenericParameterType(int)
CALLER: static com.fasterxml.jackson.databind.PropertyMetadata#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.PropertyMetadata#<init>(java.lang.Boolean,java.lang.String,java.lang.Integer,java.lang.String)
CALLER: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#resolveType(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.type.MapType#withKeyValueHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.MapType#withTypeHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#withTypeHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#withTypeHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#withTypeHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#withContentTypeHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.MapType#withContentTypeHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#withContentTypeHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#withContentTypeHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#findTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getConfig()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext#deserializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getKeyType()
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#getKeyType()
	CALLEE: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext#keyDeserializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#withContentValueHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#withContentValueHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.MapType#withContentValueHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#withContentValueHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#findPropertyContentTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#findPropertyTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findContentDeserializer(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findKeyDeserializer(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findContentDeserializer(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findKeyDeserializer(com.fasterxml.jackson.databind.introspect.Annotated)
CALLER: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#findDeserializerFromAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext#deserializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findDeserializer(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findDeserializer(com.fasterxml.jackson.databind.introspect.Annotated)
CALLER: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#modifyTypeByAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.type.MapType#narrowKey(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.MapType#withKeyValueHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#withContentValueHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#withContentValueHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.MapType#withContentValueHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#withContentValueHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getName()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#getName()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#getName()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#<init>(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#<init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext#deserializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.JavaType#narrowBy(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getKeyType()
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#getKeyType()
	CALLEE: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext#keyDeserializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#narrowContentsBy(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#narrowContentsBy(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.MapType#narrowContentsBy(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#narrowContentsBy(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.TypeBase#getValueHandler()
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findContentDeserializer(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findDeserializationContentType(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findKeyDeserializer(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findDeserializationKeyType(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findDeserializationType(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findContentDeserializer(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findDeserializationContentType(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findKeyDeserializer(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findDeserializationKeyType(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findDeserializationType(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerFactory#isIgnorableType(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.lang.Class,java.util.Map)
	CALLEE: com.fasterxml.jackson.databind.DeserializationConfig#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#introspectClassAnnotations(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#isIgnorableType(com.fasterxml.jackson.databind.introspect.AnnotatedClass)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#isIgnorableType(com.fasterxml.jackson.databind.introspect.AnnotatedClass)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#getClassInfo()
CALLER: com.fasterxml.jackson.databind.BeanProperty.Std#withType(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.BeanProperty.Std#<init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.PropertyMetadata)
CALLER: static com.fasterxml.jackson.databind.deser.SettableBeanProperty#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FailingDeserializer#<init>(java.lang.String)
CALLER: com.fasterxml.jackson.databind.deser.impl.MethodProperty#<init>(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#<init>(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.util.Annotations)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getAnnotated()
CALLER: com.fasterxml.jackson.databind.deser.impl.FieldProperty#<init>(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedField)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#<init>(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.util.Annotations)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#getAnnotated()
CALLER: com.fasterxml.jackson.databind.deser.impl.MethodProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
CALLER: com.fasterxml.jackson.databind.deser.impl.FieldProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
CALLER: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#<init>(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#<init>(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.util.Annotations)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getAnnotated()
CALLER: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
CALLER: com.fasterxml.jackson.annotation.ObjectIdGenerators.PropertyGenerator#<init>(java.lang.Class)
	CALLEE: com.fasterxml.jackson.annotation.ObjectIdGenerators.Base#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition#<init>(com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.PropertyMetadata,com.fasterxml.jackson.annotation.JsonInclude.Include)
	CALLEE: com.fasterxml.jackson.databind.PropertyName#getSimpleName()
	CALLEE: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition#<init>()
CALLER: static com.fasterxml.jackson.databind.util.EnumResolver#constructUsingMethod(java.lang.Class,java.lang.reflect.Method)
	CALLEE: org.h2.jdbc.JdbcSQLException#getMessage()
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#getMessage()
	CALLEE: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference#getMessage()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#getMessage()
	CALLEE: com.fasterxml.jackson.databind.util.EnumResolver#<init>(java.lang.Class,java.lang.Enum[],java.util.HashMap)
CALLER: static com.fasterxml.jackson.databind.util.EnumResolver#constructUsingToString(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.util.EnumResolver#<init>(java.lang.Class,java.lang.Enum[],java.util.HashMap)
CALLER: static com.fasterxml.jackson.databind.util.EnumResolver#constructFor(java.lang.Class,com.fasterxml.jackson.databind.AnnotationIntrospector)
	CALLEE: com.fasterxml.jackson.databind.util.EnumResolver#<init>(java.lang.Class,java.lang.Enum[],java.util.HashMap)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findEnumValue(java.lang.Enum)
CALLER: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.IntDeser#<init>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.LongDeser#<init>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers#<init>(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.std.StdDeserializer#isDefaultKeyDeserializer(com.fasterxml.jackson.databind.KeyDeserializer)
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#isJacksonStdImpl(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ObjectDeserializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ArrayDeserializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer#<init>(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#<init>(java.lang.Class)
CALLER: static com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition#construct(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.PropertyMetadata,com.fasterxml.jackson.annotation.JsonInclude.Include)
	CALLEE: com.fasterxml.jackson.databind.DeserializationConfig#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition#<init>(com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.PropertyMetadata,com.fasterxml.jackson.annotation.JsonInclude.Include)
	CALLEE: com.fasterxml.jackson.databind.SerializationConfig#getAnnotationIntrospector()
CALLER: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#<init>(java.util.Collection,boolean)
	CALLEE: static com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#findSize(int)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#getPropertyName(com.fasterxml.jackson.databind.deser.SettableBeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.Bucket#<init>(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.Bucket,java.lang.String,com.fasterxml.jackson.databind.deser.SettableBeanProperty,int)
CALLER: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#assignIndexes()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#assignIndex(int)
CALLER: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#<init>(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader,com.fasterxml.jackson.databind.PropertyMetadata)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#<init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyMetadata,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReader#getIdType()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReader#getDeserializer()
CALLER: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#withProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#getPropertyName(com.fasterxml.jackson.databind.deser.SettableBeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.Bucket#<init>(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.Bucket,java.lang.String,com.fasterxml.jackson.databind.deser.SettableBeanProperty,int)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#find(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#<init>(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.Bucket[],int,int,boolean)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#replace(com.fasterxml.jackson.databind.deser.SettableBeanProperty)
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializer#<init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,java.util.Map,java.util.HashSet,boolean,boolean)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#<init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,java.util.Map,java.util.HashSet,boolean,boolean)
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializer#<init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#<init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,boolean)
CALLER: com.fasterxml.jackson.databind.deser.AbstractDeserializer#<init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder,com.fasterxml.jackson.databind.BeanDescription,java.util.Map)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder#getObjectIdReader()
	CALLEE: com.fasterxml.jackson.databind.BeanDescription#getType()
CALLER: static com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#<init>()
CALLER: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#<init>(java.lang.Class)
CALLER: static com.fasterxml.jackson.databind.deser.std.StringDeserializer#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#<init>()
CALLER: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#containedTypeCount()
	CALLEE: com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase#<init>(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#containedTypeCount()
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#containedTypeCount()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#containedTypeCount()
CALLER: static com.fasterxml.jackson.databind.deser.std.DateDeserializers#find(java.lang.Class,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#findOptionalStdDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getConfig()
	CALLEE: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory#findDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription)
CALLER: static com.fasterxml.jackson.databind.deser.std.JdkDeserializers#find(java.lang.Class,java.lang.String)
	CALLEE: static com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#findDeserializer(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UUIDDeserializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer#<init>()
CALLER: static com.fasterxml.jackson.databind.deser.std.JdkDeserializers#<clinit>()
	CALLEE: static com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#types()
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#localizableERROR_TEMPLATE_PARSER_ILLEGAL_CHAR_START_NAME(java.lang.Object,java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#localizableERROR_TEMPLATE_PARSER_ILLEGAL_CHAR_AFTER_NAME(java.lang.Object,java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#localizableERROR_TEMPLATE_PARSER_ILLEGAL_CHAR_PART_OF_NAME(java.lang.Object,java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#localizableERROR_TEMPLATE_PARSER_NAME_MORE_THAN_ONCE(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#localizableERROR_TEMPLATE_PARSER_INVALID_SYNTAX(java.lang.Object,java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: com.fasterxml.jackson.databind.cfg.MapperConfig#getDefaultVisibilityChecker()
	CALLEE: com.fasterxml.jackson.databind.cfg.BaseSettings#getVisibilityChecker()
CALLER: static com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility#<clinit>()
	CALLEE: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility#<init>(java.lang.String,int)
CALLER: com.fasterxml.jackson.databind.deser.impl.CreatorCollector#setDefaultCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector#_fixAccess(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
CALLER: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#_checkIfCreatorPropertyBased(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findInjectableValueId(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findCreatorBinding(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findInjectableValueId(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findCreatorBinding(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#isExplicitlyNamed()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#couldSerialize()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getName()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedWithParams#getParameter(int)
CALLER: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#_handleSingleArgumentFactory(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.VisibilityChecker,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.deser.impl.CreatorCollector,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,boolean)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector#addDelegatingCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean,com.fasterxml.jackson.databind.deser.CreatorProperty[])
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector#addStringCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector#addIntCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector#addLongCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector#addDoubleCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector#addBooleanCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean)
	CALLEE: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#isCreatorVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getRawParameterType(int)
CALLER: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#constructCreatorProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.PropertyName,int,com.fasterxml.jackson.databind.introspect.AnnotatedParameter,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.TypeBase#getTypeHandler()
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findPropertyIndex(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findPropertyDescription(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#hasRequiredMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#getClassAnnotations()
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#bindingsForBeanType()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#getParameterType()
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#findTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#getTypeFactory()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getConfig()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.BeanProperty.Std#<init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.PropertyMetadata)
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#resolveType(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#findDeserializerFromAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#modifyTypeByAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.BeanProperty.Std#withType(com.fasterxml.jackson.databind.JavaType)
	CALLEE: static com.fasterxml.jackson.databind.PropertyMetadata#construct(boolean,java.lang.String,java.lang.Integer,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.BeanProperty.Std#getWrapperName()
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#<init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedParameter,int,java.lang.Object,com.fasterxml.jackson.databind.PropertyMetadata)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#handlePrimaryContextualization(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#constructType(java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findWrapperName(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findPropertyDefaultValue(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findPropertyIndex(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findPropertyDescription(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#hasRequiredMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findPropertyDefaultValue(com.fasterxml.jackson.databind.introspect.Annotated)
CALLER: com.fasterxml.jackson.databind.deser.impl.CreatorCollector#addPropertyCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean,com.fasterxml.jackson.databind.deser.CreatorProperty[])
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector#verifyNonDup(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,int,boolean)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#getName()
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#getInjectableValueId()
CALLER: com.fasterxml.jackson.databind.deser.impl.CreatorCollector#addDelegatingCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean,com.fasterxml.jackson.databind.deser.CreatorProperty[])
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector#verifyNonDup(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,int,boolean)
CALLER: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#_handleSingleArgumentConstructor(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.VisibilityChecker,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.deser.impl.CreatorCollector,com.fasterxml.jackson.databind.introspect.AnnotatedConstructor,boolean,boolean)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector#addDelegatingCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean,com.fasterxml.jackson.databind.deser.CreatorProperty[])
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector#addStringCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector#addIntCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector#addLongCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector#addDoubleCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector#addBooleanCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#getRawParameterType(int)
CALLER: com.fasterxml.jackson.databind.deser.impl.CreatorCollector.Vanilla#<init>(int)
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#<init>()
CALLER: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#<init>(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.MapType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#<init>()
CALLER: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#findPropertyContentTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.DeserializationConfig#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#findTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfigBase#getSubtypeResolver()
	CALLEE: com.fasterxml.jackson.databind.JavaType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver#collectAndResolveSubtypes(com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findPropertyContentTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findPropertyContentTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder#buildTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection)
CALLER: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#findPropertyTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.DeserializationConfig#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#findTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfigBase#getSubtypeResolver()
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver#collectAndResolveSubtypes(com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findPropertyTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findPropertyTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder#buildTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection)
CALLER: com.fasterxml.jackson.databind.deser.impl.FailingDeserializer#<init>(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.SettableBeanProperty#<init>(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.util.Annotations)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#<init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.PropertyMetadata)
	CALLEE: com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition#getMetadata()
	CALLEE: com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition#getWrapperName()
	CALLEE: com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition#getFullName()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getFullName()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getMetadata()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getWrapperName()
CALLER: com.fasterxml.jackson.databind.deser.impl.MethodProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#<init>(com.fasterxml.jackson.databind.deser.impl.MethodProperty,com.fasterxml.jackson.databind.JsonDeserializer)
CALLER: com.fasterxml.jackson.databind.deser.impl.FieldProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#<init>(com.fasterxml.jackson.databind.deser.impl.FieldProperty,com.fasterxml.jackson.databind.JsonDeserializer)
CALLER: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#<init>(com.fasterxml.jackson.databind.deser.impl.SetterlessProperty,com.fasterxml.jackson.databind.JsonDeserializer)
CALLER: com.fasterxml.jackson.annotation.ObjectIdGenerators.Base#<init>(java.lang.Class)
	CALLEE: com.fasterxml.jackson.annotation.ObjectIdGenerator#<init>()
CALLER: static com.fasterxml.jackson.databind.util.ClassUtil#isJacksonStdImpl(java.lang.Object)
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#isJacksonStdImpl(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#getPropertyName(com.fasterxml.jackson.databind.deser.SettableBeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#getName()
CALLER: com.fasterxml.jackson.databind.deser.SettableBeanProperty#<init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyMetadata,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.PropertyName#internSimpleName()
CALLER: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#find(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#_findWithEquals(java.lang.String,int)
CALLER: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#replace(com.fasterxml.jackson.databind.deser.SettableBeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#getPropertyName(com.fasterxml.jackson.databind.deser.SettableBeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.Bucket#<init>(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.Bucket,java.lang.String,com.fasterxml.jackson.databind.deser.SettableBeanProperty,int)
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#<init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,java.util.Map,java.util.HashSet,boolean,boolean)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#<init>(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder#getObjectIdReader()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder#getValueInstantiator()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder#getAnySetter()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder#getInjectables()
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#canCreateUsingDefault()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector.Vanilla#canCreateUsingDefault()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#canCreateUsingDefault()
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonLocationInstantiator#canCreateFromObjectWith()
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#canCreateFromObjectWith()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#canCreateFromObjectWith()
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#canCreateUsingDelegate()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#canCreateUsingDelegate()
	CALLEE: com.fasterxml.jackson.annotation.JsonFormat.Value#getShape()
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#getClassInfo()
	CALLEE: com.fasterxml.jackson.databind.BeanDescription#getType()
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#findExpectedFormat(com.fasterxml.jackson.annotation.JsonFormat.Value)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#getAnnotations()
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#<init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,boolean)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#<init>(com.fasterxml.jackson.databind.JavaType)
CALLER: com.fasterxml.jackson.databind.deser.std.StringDeserializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer#<init>(java.lang.Class)
CALLER: static com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#<init>(java.lang.Class,java.lang.Integer)
CALLER: static com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#<init>(java.lang.Class,java.lang.Boolean)
CALLER: static com.fasterxml.jackson.databind.deser.std.NumberDeserializers.LongDeserializer#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.LongDeserializer#<init>(java.lang.Class,java.lang.Long)
CALLER: static com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#<init>(java.lang.Class,java.lang.Double)
CALLER: static com.fasterxml.jackson.databind.deser.std.NumberDeserializers.CharacterDeserializer#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.CharacterDeserializer#<init>(java.lang.Class,java.lang.Character)
CALLER: static com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ByteDeserializer#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ByteDeserializer#<init>(java.lang.Class,java.lang.Byte)
CALLER: static com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ShortDeserializer#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ShortDeserializer#<init>(java.lang.Class,java.lang.Short)
CALLER: static com.fasterxml.jackson.databind.deser.std.NumberDeserializers.FloatDeserializer#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.FloatDeserializer#<init>(java.lang.Class,java.lang.Float)
CALLER: static com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#<init>()
CALLER: static com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigDecimalDeserializer#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigDecimalDeserializer#<init>()
CALLER: static com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer#<init>()
CALLER: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateBasedDeserializer#<init>(java.lang.Class)
CALLER: static com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#<init>()
CALLER: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateBasedDeserializer#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateBasedDeserializer#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#<init>(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateBasedDeserializer#<init>(java.lang.Class)
CALLER: static com.fasterxml.jackson.databind.ext.OptionalHandlerFactory#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory#<init>()
CALLER: static com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#findDeserializer(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer.Std#<init>(java.lang.Class,int)
CALLER: com.fasterxml.jackson.databind.deser.std.UUIDDeserializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.impl.CreatorCollector#_fixAccess(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#checkAndFixAccess(java.lang.reflect.Member)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#getAnnotated()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getAnnotated()
CALLER: static com.fasterxml.jackson.annotation.JsonCreator.Mode#<clinit>()
	CALLEE: com.fasterxml.jackson.annotation.JsonCreator.Mode#<init>(java.lang.String,int)
CALLER: com.fasterxml.jackson.databind.deser.impl.CreatorCollector#addStringCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector#verifyNonDup(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,int,boolean)
CALLER: com.fasterxml.jackson.databind.deser.impl.CreatorCollector#addIntCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector#verifyNonDup(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,int,boolean)
CALLER: com.fasterxml.jackson.databind.deser.impl.CreatorCollector#addLongCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector#verifyNonDup(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,int,boolean)
CALLER: com.fasterxml.jackson.databind.deser.impl.CreatorCollector#addDoubleCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector#verifyNonDup(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,int,boolean)
CALLER: com.fasterxml.jackson.databind.deser.impl.CreatorCollector#addBooleanCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector#verifyNonDup(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,int,boolean)
CALLER: static com.fasterxml.jackson.databind.PropertyMetadata#construct(boolean,java.lang.String,java.lang.Integer,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.PropertyMetadata#<init>(java.lang.Boolean,java.lang.String,java.lang.Integer,java.lang.String)
CALLER: com.fasterxml.jackson.databind.deser.CreatorProperty#<init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedParameter,int,java.lang.Object,com.fasterxml.jackson.databind.PropertyMetadata)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#<init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.PropertyMetadata)
CALLER: com.fasterxml.jackson.databind.DeserializationContext#handlePrimaryContextualization(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.util.LinkedNode#<init>(java.lang.Object,com.fasterxml.jackson.databind.util.LinkedNode)
	CALLEE: com.fasterxml.jackson.databind.util.LinkedNode#next()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.deser.CreatorProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#<init>(com.fasterxml.jackson.databind.deser.CreatorProperty,com.fasterxml.jackson.databind.JsonDeserializer)
CALLER: com.fasterxml.jackson.databind.deser.impl.CreatorCollector#verifyNonDup(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,int,boolean)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector#_fixAccess(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#getRawParameterType(int)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getRawParameterType(int)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver#collectAndResolveSubtypes(com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.JavaType)
	CALLEE: static com.fasterxml.jackson.databind.introspect.AnnotatedClass#constructWithoutSuperTypes(java.lang.Class,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver#_collectAndResolve(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.jsontype.NamedType,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector,java.util.HashMap)
	CALLEE: com.fasterxml.jackson.databind.jsontype.NamedType#<init>(java.lang.Class,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.jsontype.NamedType#getType()
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findSubtypes(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findSubtypes(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getRawType()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#getRawType()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#getRawType()
CALLER: com.fasterxml.jackson.databind.deser.SettableBeanProperty#<init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.PropertyMetadata)
	CALLEE: com.fasterxml.jackson.databind.PropertyName#internSimpleName()
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.deser.impl.MethodProperty#<init>(com.fasterxml.jackson.databind.deser.impl.MethodProperty,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#<init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.JsonDeserializer)
CALLER: com.fasterxml.jackson.databind.deser.impl.FieldProperty#<init>(com.fasterxml.jackson.databind.deser.impl.FieldProperty,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#<init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.JsonDeserializer)
CALLER: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#<init>(com.fasterxml.jackson.databind.deser.impl.SetterlessProperty,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#<init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.JsonDeserializer)
CALLER: com.fasterxml.jackson.databind.deser.SettableBeanProperty#getName()
	CALLEE: com.fasterxml.jackson.databind.PropertyName#getSimpleName()
CALLER: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#<init>(java.lang.Class,java.lang.Integer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.PrimitiveOrWrapperDeserializer#<init>(java.lang.Class,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#<init>(java.lang.Class,java.lang.Boolean)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.PrimitiveOrWrapperDeserializer#<init>(java.lang.Class,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.LongDeserializer#<init>(java.lang.Class,java.lang.Long)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.PrimitiveOrWrapperDeserializer#<init>(java.lang.Class,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#<init>(java.lang.Class,java.lang.Double)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.PrimitiveOrWrapperDeserializer#<init>(java.lang.Class,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.CharacterDeserializer#<init>(java.lang.Class,java.lang.Character)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.PrimitiveOrWrapperDeserializer#<init>(java.lang.Class,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ByteDeserializer#<init>(java.lang.Class,java.lang.Byte)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.PrimitiveOrWrapperDeserializer#<init>(java.lang.Class,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ShortDeserializer#<init>(java.lang.Class,java.lang.Short)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.PrimitiveOrWrapperDeserializer#<init>(java.lang.Class,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.FloatDeserializer#<init>(java.lang.Class,java.lang.Float)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.PrimitiveOrWrapperDeserializer#<init>(java.lang.Class,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigDecimalDeserializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateBasedDeserializer#<init>(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateBasedDeserializer#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer.Std#<init>(java.lang.Class,int)
	CALLEE: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#<init>(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.CreatorProperty#<init>(com.fasterxml.jackson.databind.deser.CreatorProperty,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#<init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.JsonDeserializer)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver#_collectAndResolve(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.jsontype.NamedType,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector,java.util.HashMap)
	CALLEE: static com.fasterxml.jackson.databind.introspect.AnnotatedClass#constructWithoutSuperTypes(java.lang.Class,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver#_collectAndResolve(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.jsontype.NamedType,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector,java.util.HashMap)
	CALLEE: com.fasterxml.jackson.databind.jsontype.NamedType#<init>(java.lang.Class,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.jsontype.NamedType#hasName()
	CALLEE: com.fasterxml.jackson.databind.jsontype.NamedType#getType()
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findSubtypes(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findTypeName(com.fasterxml.jackson.databind.introspect.AnnotatedClass)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findSubtypes(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findTypeName(com.fasterxml.jackson.databind.introspect.AnnotatedClass)
CALLER: com.fasterxml.jackson.databind.jsontype.NamedType#<init>(java.lang.Class,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.jsontype.NamedType#setName(java.lang.String)
CALLER: com.fasterxml.jackson.databind.PropertyName#internSimpleName()
	CALLEE: com.fasterxml.jackson.databind.PropertyName#<init>(java.lang.String,java.lang.String)
	CALLEE: com.fasterxml.jackson.core.util.InternCache#intern(java.lang.String)
CALLER: com.fasterxml.jackson.databind.deser.SettableBeanProperty#<init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.NullProvider#<init>(com.fasterxml.jackson.databind.JavaType,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.PrimitiveOrWrapperDeserializer#getNullValue()
CALLER: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.PrimitiveOrWrapperDeserializer#<init>(java.lang.Class,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.impl.NullProvider#<init>(com.fasterxml.jackson.databind.JavaType,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.JavaType#isPrimitive()
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder#addBackReferenceProperty(java.lang.String,com.fasterxml.jackson.databind.deser.SettableBeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#getName()
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder#findProperty(com.fasterxml.jackson.databind.PropertyName)
	CALLEE: com.fasterxml.jackson.databind.PropertyName#getSimpleName()
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder#addInjectable(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedMember,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ValueInjector#<init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedMember,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder#addProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#getName()
	CALLEE: com.fasterxml.jackson.databind.BeanDescription#getType()
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder#addCreatorProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder#addProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty)
CALLER: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory#findDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory#hasSupertypeStartingWith(java.lang.Class,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory#doesImplement(java.lang.Class,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory#instantiate(java.lang.String)
CALLER: com.fasterxml.jackson.databind.deser.SettableBeanProperty#assignIndex(int)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#getName()
CALLER: com.fasterxml.jackson.databind.deser.SettableBeanProperty#setViews(java.lang.Class[])
	CALLEE: static com.fasterxml.jackson.databind.util.ViewMatcher#construct(java.lang.Class[])
CALLER: com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition#getWrapperName()
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findWrapperName(com.fasterxml.jackson.databind.introspect.Annotated)
CALLER: com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition#getNonConstructorMutator()
	CALLEE: com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition#getSetter()
	CALLEE: com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition#getField()
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder#buildBuilderBased(com.fasterxml.jackson.databind.JavaType,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getRawReturnType()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getFullName()
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#<init>(java.util.Collection,boolean)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#assignIndexes()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#<init>(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader,com.fasterxml.jackson.databind.PropertyMetadata)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#withProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#hasViews()
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#<init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,java.util.Map,java.util.HashSet,boolean,boolean)
	CALLEE: com.fasterxml.jackson.databind.BeanDescription#getBeanClass()
CALLER: com.fasterxml.jackson.databind.deser.ValueInstantiator#canInstantiate()
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#canCreateUsingDefault()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector.Vanilla#canCreateUsingDefault()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#canCreateUsingDefault()
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonLocationInstantiator#canCreateFromObjectWith()
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#canCreateFromObjectWith()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#canCreateFromObjectWith()
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#canCreateUsingDelegate()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#canCreateUsingDelegate()
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#canCreateFromString()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#canCreateFromString()
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#canCreateFromInt()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#canCreateFromInt()
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#canCreateFromLong()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#canCreateFromLong()
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#canCreateFromDouble()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#canCreateFromDouble()
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#canCreateFromBoolean()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#canCreateFromBoolean()
CALLER: com.fasterxml.jackson.databind.deser.ValueInstantiator#canCreateUsingDefault()
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#getDefaultCreator()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#getDefaultCreator()
CALLER: org.glassfish.jersey.server.model.MethodList#withAnnotation(java.lang.Class)
	CALLEE: org.glassfish.jersey.server.model.MethodList#filter(org.glassfish.jersey.server.model.MethodList.Filter)
	CALLEE: org.glassfish.jersey.server.model.MethodList.5#<init>(org.glassfish.jersey.server.model.MethodList,java.lang.Class)
CALLER: org.glassfish.jersey.server.model.MethodList#withoutAnnotation(java.lang.Class)
	CALLEE: org.glassfish.jersey.server.model.MethodList#filter(org.glassfish.jersey.server.model.MethodList.Filter)
	CALLEE: org.glassfish.jersey.server.model.MethodList.7#<init>(org.glassfish.jersey.server.model.MethodList,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#isCachable()
	CALLEE: com.fasterxml.jackson.databind.type.TypeBase#getValueHandler()
CALLER: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#isCachable()
	CALLEE: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer#isCachable()
CALLER: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#resolve(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#resolve(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#resolve(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#resolve(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#resolve(com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.MapDeserializer#resolve(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getConfig()
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#_isStdKeyDeser(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.KeyDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonLocationInstantiator#canCreateFromObjectWith()
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#canCreateFromObjectWith()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#canCreateFromObjectWith()
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#canCreateUsingDelegate()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#canCreateUsingDelegate()
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonLocationInstantiator#getFromObjectArguments(com.fasterxml.jackson.databind.DeserializationConfig)
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#getFromObjectArguments(com.fasterxml.jackson.databind.DeserializationConfig)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#getFromObjectArguments(com.fasterxml.jackson.databind.DeserializationConfig)
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#getDelegateType(com.fasterxml.jackson.databind.DeserializationConfig)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#getDelegateType(com.fasterxml.jackson.databind.DeserializationConfig)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#findDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: static com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator#construct(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.deser.SettableBeanProperty[])
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#resolve(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.type.TypeBase#getTypeHandler()
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer#getTypeInclusion()
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer#getTypeInclusion()
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer#getTypeInclusion()
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer#getTypeInclusion()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#<init>(com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getConfig()
	CALLEE: com.fasterxml.jackson.databind.BeanProperty.Std#<init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.PropertyMetadata)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#replace(com.fasterxml.jackson.databind.deser.SettableBeanProperty)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#handlePrimaryContextualization(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonLocationInstantiator#canCreateFromObjectWith()
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#canCreateFromObjectWith()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#canCreateFromObjectWith()
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#canCreateUsingDelegate()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#canCreateUsingDelegate()
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonLocationInstantiator#getFromObjectArguments(com.fasterxml.jackson.databind.DeserializationConfig)
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#getFromObjectArguments(com.fasterxml.jackson.databind.DeserializationConfig)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#getFromObjectArguments(com.fasterxml.jackson.databind.DeserializationConfig)
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#getDelegateType(com.fasterxml.jackson.databind.DeserializationConfig)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#getDelegateType(com.fasterxml.jackson.databind.DeserializationConfig)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#findDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: static com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator#construct(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.deser.SettableBeanProperty[])
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.Builder#<init>()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.Builder#addExternal(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#iterator()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#findConvertingDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#_resolveManagedReferenceProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#_resolvedObjectIdProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#_resolveUnwrappedProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler#<init>()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler#addProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#remove(com.fasterxml.jackson.databind.deser.SettableBeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#_resolveInnerClassValuedProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#getDelegateCreator()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#getDelegateCreator()
	CALLEE: com.fasterxml.jackson.databind.DeserializationConfig#findTypeDeserializer(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.Builder#build()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#getType()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.IteratorImpl#hasNext()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.IteratorImpl#next()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator#properties()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableAnyProperty#hasValueDeserializer()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableAnyProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableAnyProperty#getType()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableAnyProperty#getProperty()
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#hasValueDeserializer()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#getValueDeserializer()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#getValueTypeDeserializer()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#hasValueTypeDeserializer()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#resolve(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#constructType(java.lang.reflect.Type)
	CALLEE: static com.fasterxml.jackson.databind.type.TypeFactory#unknownType()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getTypeFactory()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#constructType(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#constructCollectionType(java.lang.Class,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#constructMapType(java.lang.Class,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#_findCustomDeser(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)
CALLER: org.glassfish.jersey.server.model.Resource.Builder#toString()
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#shortToString()
CALLER: org.glassfish.jersey.server.model.Resource.Builder#addChildResource(java.lang.String)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#RESOURCE_ADD_CHILD_ALREADY_CHILD()
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#<init>(java.lang.String,org.glassfish.jersey.server.model.Resource.Builder)
CALLER: org.glassfish.jersey.server.model.Resource.Builder#addMethod()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Builder#<init>(org.glassfish.jersey.server.model.Resource.Builder)
CALLER: org.glassfish.jersey.server.model.Resource.Builder#addMethod(java.lang.String)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Builder#<init>(org.glassfish.jersey.server.model.Resource.Builder)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Builder#httpMethod(java.lang.String)
CALLER: liquibase.util.csv.opencsv.stream.reader.LineReader#readLine()
	CALLEE: liquibase.util.csv.opencsv.stream.reader.LineReader#readUntilNewline()
CALLER: org.eclipse.jetty.io.AbstractConnection.FillInterestedState#onEnter(org.eclipse.jetty.io.AbstractConnection)
	CALLEE: org.eclipse.jetty.io.AbstractConnection#getEndPoint()
	CALLEE: static org.eclipse.jetty.io.AbstractConnection#access$200(org.eclipse.jetty.io.AbstractConnection)
	CALLEE: org.eclipse.jetty.io.AbstractEndPoint#fillInterested(org.eclipse.jetty.util.Callback)
CALLER: org.glassfish.jersey.server.model.Resource.Builder#build()
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#buildResourceData()
	CALLEE: org.glassfish.jersey.server.model.Resource#<init>(org.glassfish.jersey.server.model.Resource,org.glassfish.jersey.server.model.Resource.Data,org.glassfish.jersey.server.model.Resource.1)
CALLER: org.glassfish.jersey.internal.OsgiRegistry.OsgiServiceFinder.2#next()
	CALLEE: org.glassfish.jersey.internal.OsgiRegistry.OsgiServiceFinder.2#next()
CALLER: org.glassfish.jersey.internal.ServiceFinder.LazyClassIterator#next()
	CALLEE: org.glassfish.jersey.internal.ServiceFinder.LazyClassIterator#next()
CALLER: org.glassfish.jersey.internal.OsgiRegistry.OsgiServiceFinder.2#hasNext()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
CALLER: org.glassfish.jersey.internal.ServiceFinder.AbstractLazyIterator#hasNext()
	CALLEE: static org.glassfish.jersey.internal.util.ReflectionHelper#classForNameWithExceptionPEA(java.lang.String,java.lang.ClassLoader)
	CALLEE: org.glassfish.jersey.internal.ServiceFinder.AbstractLazyIterator#setConfigs()
	CALLEE: static org.glassfish.jersey.internal.ServiceFinder#access$400(java.lang.String,java.net.URL,java.util.Set)
	CALLEE: org.glassfish.jersey.internal.ServiceFinder.AbstractLazyIterator#handleClassNotFoundException()
	CALLEE: static org.glassfish.jersey.internal.ServiceFinder#access$500()
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#DEPENDENT_CLASS_OF_PROVIDER_NOT_FOUND(java.lang.Object,java.lang.Object,java.lang.Object)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#DEPENDENT_CLASS_OF_PROVIDER_FORMAT_ERROR(java.lang.Object,java.lang.Object,java.lang.Object)
CALLER: com.fasterxml.jackson.core.JsonLocation#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#toString()
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.ConsumesProducesAcceptor#toString()
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#toString()
	CALLEE: org.eclipse.jetty.webapp.WebAppContext#toString()
	CALLEE: org.eclipse.jetty.server.handler.HandlerCollection#toString()
	CALLEE: org.eclipse.jetty.server.Server#toString()
	CALLEE: org.eclipse.jetty.server.AbstractNetworkConnector#toString()
	CALLEE: org.eclipse.jetty.util.thread.QueuedThreadPool#toString()
	CALLEE: org.eclipse.jetty.server.AbstractConnectionFactory#toString()
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle.Bean#toString()
	CALLEE: org.apache.log4j.NameValue#toString()
	CALLEE: liquibase.changelog.ChangeLogParameters.ChangeLogParameter#toString()
	CALLEE: org.eclipse.jetty.server.AbstractConnector.Acceptor#toString()
	CALLEE: org.eclipse.jetty.server.HttpConfiguration#toString()
	CALLEE: org.eclipse.jetty.util.MultiException#toString()
	CALLEE: org.eclipse.jetty.http.PathMap.MappedEntry#toString()
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector#toString()
	CALLEE: liquibase.servicelocator.AssignableToPackageScanFilter#toString()
	CALLEE: org.eclipse.jetty.http.HttpField#toString()
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#toString()
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#toString()
	CALLEE: org.eclipse.jetty.servlet.ServletMapping#toString()
	CALLEE: org.glassfish.jersey.internal.OsgiRegistry.BundleSpiProvidersLoader#toString()
	CALLEE: org.h2.jdbc.JdbcSQLException#toString()
	CALLEE: liquibase.changelog.filter.ChangeSetFilterResult#toString()
	CALLEE: com.zaxxer.hikari.pool.PoolEntry#toString()
	CALLEE: org.eclipse.jetty.io.SelectChannelEndPoint#toString()
	CALLEE: org.eclipse.jetty.util.FutureCallback#toString()
	CALLEE: org.eclipse.jetty.util.ConstantThrowable#toString()
	CALLEE: javax.ws.rs.core.MediaType#toString()
	CALLEE: org.glassfish.jersey.model.internal.RankedProvider#toString()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#toString()
	CALLEE: org.glassfish.hk2.api.MultiException#toString()
	CALLEE: org.glassfish.jersey.message.internal.QualitySourceMediaType#toString()
	CALLEE: jersey.repackaged.com.google.common.base.Predicates.AndPredicate#toString()
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.MapType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#toString()
	CALLEE: org.glassfish.hk2.utilities.NamedImpl#toString()
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#toString()
	CALLEE: com.fasterxml.jackson.core.JsonLocation#toString()
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#toString()
	CALLEE: com.fasterxml.jackson.databind.jsontype.NamedType#toString()
	CALLEE: liquibase.changelog.RanChangeSet#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.UnresolvedId#toString()
	CALLEE: org.glassfish.jersey.server.model.ResourceModelIssue#toString()
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#toString()
	CALLEE: org.glassfish.jersey.server.model.Parameter#toString()
	CALLEE: org.glassfish.hk2.utilities.reflection.ParameterizedTypeImpl#toString()
	CALLEE: com.fasterxml.jackson.databind.type.ClassKey#toString()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException.Reference#toString()
	CALLEE: org.glassfish.jersey.server.model.Resource.Data#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ValueNode#toString()
	CALLEE: org.glassfish.jersey.server.model.Resource#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#toString()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Data#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.MemberKey#toString()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ObjectNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ArrayNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.POJONode#toString()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#toString()
	CALLEE: com.fasterxml.jackson.databind.node.TextNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.BinaryNode#toString()
	CALLEE: com.fasterxml.jackson.databind.PropertyName#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#toString()
	CALLEE: com.fasterxml.jackson.core.io.SerializedString#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey#toString()
	CALLEE: org.glassfish.jersey.server.model.Invocable#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#toString()
	CALLEE: org.glassfish.jersey.server.model.MethodHandler.ClassBasedMethodHandler#toString()
	CALLEE: org.glassfish.jersey.server.model.MethodHandler.InstanceBasedMethodHandler#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#toString()
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodRouting#toString()
CALLER: com.fasterxml.jackson.databind.type.MapType#withTypeHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.MapType#withTypeHandler(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.type.CollectionType#withTypeHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#withTypeHandler(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.type.ArrayType#withTypeHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#withTypeHandler(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.type.SimpleType#withTypeHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#withTypeHandler(java.lang.Object)
CALLER: org.glassfish.jersey.process.internal.Stages.StageChainBuilder#build(org.glassfish.jersey.process.internal.Stage)
	CALLEE: org.glassfish.jersey.process.internal.Stages.StageChainBuilder#addTailStage(org.glassfish.jersey.process.internal.Stage)
CALLER: org.glassfish.jersey.internal.OsgiRegistry.OsgiServiceFinder.1#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#PROVIDER_COULD_NOT_BE_CREATED(java.lang.Object,java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.ServiceConfigurationError#<init>(java.lang.String)
CALLER: org.glassfish.jersey.internal.ServiceFinder.LazyObjectIterator#next()
	CALLEE: org.glassfish.jersey.internal.ServiceFinder.LazyObjectIterator#hasNext()
	CALLEE: static org.glassfish.jersey.internal.ServiceFinder#access$500()
CALLER: org.glassfish.jersey.internal.OsgiRegistry.OsgiServiceFinder.1#hasNext()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
CALLER: org.glassfish.jersey.internal.ServiceFinder.LazyObjectIterator#hasNext()
	CALLEE: static org.glassfish.jersey.internal.util.ReflectionHelper#classForNameWithExceptionPEA(java.lang.String,java.lang.ClassLoader)
	CALLEE: org.glassfish.jersey.internal.ServiceFinder.AbstractLazyIterator#setConfigs()
	CALLEE: static org.glassfish.jersey.internal.ServiceFinder#access$400(java.lang.String,java.net.URL,java.util.Set)
	CALLEE: static org.glassfish.jersey.internal.ServiceFinder#access$500()
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#DEPENDENT_CLASS_OF_PROVIDER_NOT_FOUND(java.lang.Object,java.lang.Object,java.lang.Object)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#DEPENDENT_CLASS_OF_PROVIDER_FORMAT_ERROR(java.lang.Object,java.lang.Object,java.lang.Object)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#PROVIDER_COULD_NOT_BE_CREATED(java.lang.Object,java.lang.Object,java.lang.Object)
	CALLEE: static org.glassfish.jersey.internal.ServiceFinder#access$700(java.lang.String,java.lang.String,java.lang.Throwable)
	CALLEE: org.glassfish.jersey.internal.ServiceFinder.LazyObjectIterator#handleClassNotFoundException()
CALLER: org.glassfish.jersey.server.model.Resource.Builder.1#run()
	CALLEE: static org.glassfish.jersey.internal.Errors#error(java.lang.Object,java.lang.String,org.glassfish.jersey.Severity)
	CALLEE: static org.glassfish.jersey.server.model.Resource.Builder#access$600(org.glassfish.jersey.server.model.Resource.Builder)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#RESOURCE_MERGE_CONFLICT_LOCATORS(java.lang.Object,java.lang.Object,java.lang.Object)
CALLER: org.glassfish.jersey.server.model.ResourceMethodValidator.1#run()
	CALLEE: org.glassfish.hk2.api.AnnotationLiteral#annotationType()
	CALLEE: static org.glassfish.jersey.internal.Errors#warning(java.lang.Object,java.lang.String)
	CALLEE: org.glassfish.jersey.server.model.Parameter#getAnnotations()
	CALLEE: static org.glassfish.jersey.server.model.ResourceMethodValidator#access$000()
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#SINGLETON_INJECTS_PARAMETER(java.lang.Object,java.lang.Object)
	CALLEE: static org.glassfish.jersey.internal.Errors#fatal(java.lang.Object,java.lang.String)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#AMBIGUOUS_PARAMETER(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.server.model.Parameter#getType()
	CALLEE: static org.glassfish.jersey.server.model.ResourceMethodValidator#access$100(java.lang.reflect.Type)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#PARAMETER_UNRESOLVABLE(java.lang.Object,java.lang.Object,java.lang.Object)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#proxyForSameScope(boolean)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#proxyForSameScope(boolean)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#proxyForSameScope(boolean)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#proxyForSameScope(boolean)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#proxyForSameScope(boolean)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#proxyForSameScope(boolean)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#proxyForSameScope(boolean)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#proxyForSameScope(boolean)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#qualifiedBy(java.lang.annotation.Annotation)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#qualifiedBy(java.lang.annotation.Annotation)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#qualifiedBy(java.lang.annotation.Annotation)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#qualifiedBy(java.lang.annotation.Annotation)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#named(java.lang.String)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#named(java.lang.String)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#named(java.lang.String)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#named(java.lang.String)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#named(java.lang.String)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#named(java.lang.String)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#to(java.lang.Class)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#to(java.lang.Class)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#to(java.lang.Class)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#to(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#to(java.lang.Class)
CALLER: org.glassfish.jersey.server.model.RuntimeResource.1#compare(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.server.model.RuntimeResource.1#compare(org.glassfish.jersey.server.model.RuntimeResource,org.glassfish.jersey.server.model.RuntimeResource)
CALLER: jersey.repackaged.com.google.common.base.Joiner#join(java.lang.Iterable)
	CALLEE: jersey.repackaged.com.google.common.base.Joiner#join(java.util.Iterator)
CALLER: com.zaxxer.hikari.pool.ProxyStatement#close()
	CALLEE: com.zaxxer.hikari.pool.ProxyConnection#checkException(java.sql.SQLException)
	CALLEE: com.zaxxer.hikari.pool.ProxyConnection#untrackStatement(java.sql.Statement)
CALLER: com.zaxxer.hikari.pool.HikariProxyPreparedStatement#getGeneratedKeys()
	CALLEE: com.zaxxer.hikari.pool.ProxyStatement#checkException(java.sql.SQLException)
CALLER: com.zaxxer.hikari.pool.HikariProxyPreparedStatement#execute()
	CALLEE: com.zaxxer.hikari.pool.ProxyStatement#checkException(java.sql.SQLException)
	CALLEE: com.zaxxer.hikari.pool.ProxyPreparedStatement#execute()
CALLER: com.zaxxer.hikari.pool.HikariProxyPreparedStatement#setTimestamp(int,java.sql.Timestamp)
	CALLEE: com.zaxxer.hikari.pool.ProxyStatement#checkException(java.sql.SQLException)
CALLER: com.zaxxer.hikari.pool.HikariProxyPreparedStatement#setNull(int,int)
	CALLEE: com.zaxxer.hikari.pool.ProxyStatement#checkException(java.sql.SQLException)
CALLER: com.zaxxer.hikari.pool.HikariProxyPreparedStatement#executeQuery()
	CALLEE: com.zaxxer.hikari.pool.ProxyStatement#checkException(java.sql.SQLException)
	CALLEE: com.zaxxer.hikari.pool.ProxyPreparedStatement#executeQuery()
CALLER: org.eclipse.jetty.server.handler.ContextHandler#getClassPath()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.Throwable)
	CALLEE: org.eclipse.jetty.util.resource.FileResource#getFile()
	CALLEE: org.eclipse.jetty.util.resource.BadResource#getFile()
	CALLEE: org.eclipse.jetty.util.resource.JarResource#getFile()
	CALLEE: org.eclipse.jetty.util.resource.URLResource#getFile()
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#newResource(java.net.URL)
CALLER: org.eclipse.jetty.server.handler.ContextHandler#setAttribute(java.lang.String,java.lang.Object)
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#checkManagedAttribute(java.lang.String,java.lang.Object)
	CALLEE: org.eclipse.jetty.util.AttributesMap#setAttribute(java.lang.String,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver#collectAndResolveSubtypes(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector)
	CALLEE: static com.fasterxml.jackson.databind.introspect.AnnotatedClass#constructWithoutSuperTypes(java.lang.Class,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver#_collectAndResolve(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.jsontype.NamedType,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector,java.util.HashMap)
	CALLEE: com.fasterxml.jackson.databind.jsontype.NamedType#<init>(java.lang.Class,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#getRawType()
CALLER: com.fasterxml.jackson.databind.introspect.BasicClassIntrospector#forDeserialization(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicClassIntrospector#forDeserialization(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver)
CALLER: com.fasterxml.jackson.databind.introspect.BasicClassIntrospector#forCreation(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicClassIntrospector#forCreation(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver)
CALLER: com.fasterxml.jackson.databind.introspect.BasicClassIntrospector#forDeserializationWithBuilder(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicClassIntrospector#forDeserializationWithBuilder(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver)
CALLER: com.fasterxml.jackson.databind.introspect.BasicClassIntrospector#forClassAnnotations(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicClassIntrospector#forClassAnnotations(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver)
CALLER: com.fasterxml.jackson.databind.type.TypeFactory#constructType(java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#_constructType(java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings)
CALLER: com.fasterxml.jackson.databind.type.TypeFactory#constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.JavaType#narrowBy(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#withTypeHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#_fromClass(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings)
	CALLEE: com.fasterxml.jackson.databind.type.TypeBindings#<init>(com.fasterxml.jackson.databind.type.TypeFactory,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.type.TypeBase#getValueHandler()
	CALLEE: com.fasterxml.jackson.databind.type.TypeBase#getTypeHandler()
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#withValueHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#withValueHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.MapType#withValueHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#withValueHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.MapType#withTypeHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#withTypeHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#withTypeHandler(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.type.TypeFactory#constructCollectionType(java.lang.Class,com.fasterxml.jackson.databind.JavaType)
	CALLEE: static com.fasterxml.jackson.databind.type.CollectionType#construct(java.lang.Class,com.fasterxml.jackson.databind.JavaType)
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findPropertyTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#_findTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findPropertyContentTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#_findTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findSubtypes(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.jsontype.NamedType#<init>(java.lang.Class,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#_findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findTypeName(com.fasterxml.jackson.databind.introspect.AnnotatedClass)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#_findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#isIgnorableType(com.fasterxml.jackson.databind.introspect.AnnotatedClass)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#_findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findPropertiesToIgnore(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#_findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findPropertyDefaultValue(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#_findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findPropertyIndex(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#_findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findPropertyDescription(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#_findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#hasRequiredMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#_findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findContentDeserializer(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findContentDeserializer(com.fasterxml.jackson.databind.introspect.Annotated)
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findDeserializationContentType(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#_findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#_classIfExplicit(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findKeyDeserializer(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findKeyDeserializer(com.fasterxml.jackson.databind.introspect.Annotated)
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findDeserializationKeyType(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#_findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#_classIfExplicit(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findDeserializationType(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#_findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#_classIfExplicit(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findDeserializer(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findDeserializer(com.fasterxml.jackson.databind.introspect.Annotated)
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findAutoDetectVisibility(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.introspect.VisibilityChecker)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#_findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#with(com.fasterxml.jackson.annotation.JsonAutoDetect)
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findUnwrappingNameTransformer(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#_findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
	CALLEE: static com.fasterxml.jackson.databind.util.NameTransformer#simpleTransformer(java.lang.String,java.lang.String)
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findInjectableValueId(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#_findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getParameterCount()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getRawType()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getRawParameterType(int)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#getRawType()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#getRawType()
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#hasCreatorAnnotation(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#_findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findCreatorBinding(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#_findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findIgnoreUnknownProperties(com.fasterxml.jackson.databind.introspect.AnnotatedClass)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#_findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findValueInstantiator(com.fasterxml.jackson.databind.introspect.AnnotatedClass)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#_findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findDeserializationConverter(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#_findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#_classIfExplicit(java.lang.Class,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#_findTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findRootName(com.fasterxml.jackson.databind.introspect.AnnotatedClass)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#_findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
	CALLEE: static com.fasterxml.jackson.databind.PropertyName#construct(java.lang.String,java.lang.String)
CALLER: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#withSetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility)
	CALLEE: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#withSetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility)
CALLER: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#withCreatorVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility)
	CALLEE: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#withCreatorVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility)
CALLER: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#withFieldVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility)
	CALLEE: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#withFieldVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility)
CALLER: com.fasterxml.jackson.core.util.TextBuffer#resetWithString(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#clearSegments()
CALLER: com.fasterxml.jackson.core.util.TextBuffer#finishCurrentSegment()
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#carr(int)
CALLER: com.fasterxml.jackson.core.util.TextBuffer#emptyAndGetCurrentSegment()
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#clearSegments()
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#buf(int)
CALLER: com.fasterxml.jackson.core.util.TextBuffer#resetWithShared(char[],int,int)
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#clearSegments()
CALLER: com.fasterxml.jackson.core.util.TextBuffer#getTextBuffer()
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#contentsAsArray()
CALLER: com.fasterxml.jackson.core.util.TextBuffer#getCurrentSegment()
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#buf(int)
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#unshare(int)
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#expand(int)
CALLER: com.fasterxml.jackson.core.util.TextBuffer#releaseBuffers()
	CALLEE: com.fasterxml.jackson.core.util.BufferRecycler#releaseCharBuffer(int,char[])
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#resetWithEmpty()
CALLER: com.fasterxml.jackson.databind.cfg.MapperConfigBase#findMixInClassFor(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.ClassKey#<init>(java.lang.Class)
CALLER: org.glassfish.jersey.model.internal.ComponentBag.6#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.model.internal.ComponentBag.6#apply(java.lang.Class)
CALLER: com.fasterxml.jackson.core.JsonProcessingException#toString()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#getMessage()
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#getMessage()
	CALLEE: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference#getMessage()
CALLER: com.fasterxml.jackson.databind.deser.SettableBeanProperty#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#getName()
CALLER: liquibase.changelog.RanChangeSet#toString()
	CALLEE: liquibase.changelog.RanChangeSet#getChangeLog()
	CALLEE: liquibase.changelog.RanChangeSet#getAuthor()
	CALLEE: liquibase.changelog.RanChangeSet#getId()
CALLER: org.glassfish.jersey.server.model.Parameter#toString()
	CALLEE: org.glassfish.jersey.server.model.Parameter#getRawType()
	CALLEE: org.glassfish.jersey.server.model.Parameter#getSourceName()
	CALLEE: org.glassfish.jersey.server.model.Parameter#getDefaultValue()
CALLER: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference#getMessage()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#getMessage()
	CALLEE: com.fasterxml.jackson.databind.deser.UnresolvedId#toString()
CALLER: org.glassfish.hk2.utilities.reflection.ParameterizedTypeImpl#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#equals(java.lang.Object)
	CALLEE: org.glassfish.hk2.utilities.reflection.ParameterizedTypeImpl#equals(java.lang.Object)
	CALLEE: org.glassfish.hk2.utilities.reflection.ParameterizedTypeImpl#getRawType()
	CALLEE: org.glassfish.hk2.utilities.reflection.ParameterizedTypeImpl#getActualTypeArguments()
	CALLEE: org.glassfish.jersey.internal.util.ReflectionHelper.17#getActualTypeArguments()
	CALLEE: org.glassfish.jersey.internal.util.ReflectionHelper.17#getRawType()
CALLER: org.glassfish.jersey.server.model.Parameter#equals(java.lang.Object)
	CALLEE: org.glassfish.hk2.api.AnnotationLiteral#equals(java.lang.Object)
	CALLEE: org.glassfish.hk2.utilities.reflection.ParameterizedTypeImpl#equals(java.lang.Object)
CALLER: org.glassfish.hk2.utilities.reflection.ParameterizedTypeImpl#toString()
	CALLEE: static org.glassfish.hk2.utilities.reflection.Pretty#pType(java.lang.reflect.ParameterizedType)
CALLER: org.glassfish.jersey.server.model.Parameter#hashCode()
	CALLEE: org.glassfish.hk2.api.AnnotationLiteral#hashCode()
	CALLEE: org.glassfish.hk2.utilities.reflection.ParameterizedTypeImpl#hashCode()
CALLER: org.eclipse.jetty.server.handler.ContextHandler.Context#toString()
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#toString()
	CALLEE: org.eclipse.jetty.webapp.WebAppContext#toString()
CALLER: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
CALLER: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.NoClassDefFoundDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.FloatDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigDecimalDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#convertValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ByteDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ShortDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.FloatDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.DoubleDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.BooleanDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.CharDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.IntDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.LongDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.LongDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.CharacterDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ByteDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ShortDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#getRootCause(java.lang.Throwable)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.NoClassDefFoundDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ByteDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ShortDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.FloatDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.DoubleDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.BooleanDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.CharDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.IntDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.LongDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.LongDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.CharacterDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ByteDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ShortDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.FloatDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigDecimalDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getValueAsString()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#instantiationException(java.lang.Class,java.lang.Throwable)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
	CALLEE: com.fasterxml.jackson.core.JsonParser#getValueAsString()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getValueAsString()
CALLER: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ByteDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ByteDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ShortDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ShortDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.FloatDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.FloatDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.DoubleDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.DoubleDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.BooleanDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.BooleanDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.CharDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.CharDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#instantiationException(java.lang.Class,java.lang.String)
CALLER: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#vanillaDeserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonToken)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#deserializeWithObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ThrowableDeserializer#deserializeFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserializeFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#_deserializeOther(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonToken)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
CALLER: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.IntDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.IntDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.LongDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.LongDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getEmbeddedObject()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getDoubleValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getDecimalValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getBigIntegerValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getNumberValue()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getDoubleValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getDecimalValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getNumberValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getBigIntegerValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getEmbeddedObject()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.NoClassDefFoundDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ByteDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ShortDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.FloatDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.DoubleDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.BooleanDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.CharDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.IntDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.LongDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.LongDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.CharacterDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ByteDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ShortDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.FloatDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigDecimalDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#mapObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#mapArrayToArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#mapArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getEmbeddedObject()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getBigIntegerValue()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getNumberValue()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getDecimalValue()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getDoubleValue()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getValueAsString()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getEmbeddedObject()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#wrongTokenException(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#_deserializeFromEmptyString()
	CALLEE: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer.Std#_deserializeFromEmptyString()
	CALLEE: com.fasterxml.jackson.databind.deser.std.UUIDDeserializer#_deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer.Std#_deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#weirdStringException(java.lang.String,java.lang.Class,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UUIDDeserializer#_deserializeEmbedded(java.lang.Object,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#_deserializeEmbedded(java.lang.Object,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getEmbeddedObject()
	CALLEE: com.fasterxml.jackson.core.JsonParser#getValueAsString()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getEmbeddedObject()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getValueAsString()
CALLER: com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.LongDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.LongDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.CharacterDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.CharacterDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ByteDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ByteDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ShortDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ShortDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.FloatDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.FloatDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigDecimalDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigDecimalDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#getNullValue()
CALLER: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#getNullValue()
CALLER: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getTypeFactory()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#withDelegate(com.fasterxml.jackson.databind.util.Converter,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#findContextualValueDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#findContextualValueDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#findConvertingContentDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#withDeserializer(com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#getKeyType()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#findContextualValueDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#findKeyDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#withResolved(com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.deser.std.MapDeserializer#createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#getKeyType()
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findPropertiesToIgnore(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findPropertiesToIgnore(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#findContextualValueDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#findConvertingContentDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#findKeyDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#withResolved(com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,java.util.HashSet)
	CALLEE: com.fasterxml.jackson.databind.BeanProperty.Std#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#getMember()
CALLER: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#findContextualValueDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#withDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
CALLER: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getConfig()
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#getDelegateType(com.fasterxml.jackson.databind.DeserializationConfig)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#getDelegateType(com.fasterxml.jackson.databind.DeserializationConfig)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#findDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#getDelegateCreator()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#getDelegateCreator()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#findContextualValueDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#findConvertingContentDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#isDefaultDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#withResolved(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.JsonDeserializer)
CALLER: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#constructType(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#findContextualValueDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#<init>(com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer,com.fasterxml.jackson.databind.JsonDeserializer)
CALLER: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#constructType(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#findContextualValueDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#findConvertingContentDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#isDefaultDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#<init>(com.fasterxml.jackson.databind.JsonDeserializer)
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#withIgnorableProperties(java.util.HashSet)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#asArrayDeserializer()
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#findTypeParameters(com.fasterxml.jackson.databind.JavaType,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#findRootValueDeserializer(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getTypeFactory()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#constructType(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.DatabindContext#objectIdResolverInstance(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyBasedObjectIdGenerator#<init>(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.DatabindContext#objectIdGeneratorInstance(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo)
	CALLEE: static com.fasterxml.jackson.databind.deser.impl.ObjectIdReader#construct(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.annotation.ObjectIdGenerator,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.annotation.ObjectIdResolver)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findPropertiesToIgnore(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findPropertiesToIgnore(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findObjectIdInfo(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findObjectIdInfo(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findObjectReferenceInfo(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findObjectReferenceInfo(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#findProperty(com.fasterxml.jackson.databind.PropertyName)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#handledType()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)
	CALLEE: static com.fasterxml.jackson.databind.util.ArrayBuilders#setAndArray(java.util.Set,java.lang.Object[])
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#withIgnorableProperties(java.util.HashSet)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findFormat(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findFormat(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#asArrayDeserializer()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#getType()
	CALLEE: com.fasterxml.jackson.databind.BeanProperty.Std#getMember()
	CALLEE: com.fasterxml.jackson.annotation.JsonFormat.Value#getShape()
	CALLEE: com.fasterxml.jackson.databind.introspect.ObjectIdInfo#getPropertyName()
	CALLEE: com.fasterxml.jackson.databind.introspect.ObjectIdInfo#getScope()
	CALLEE: com.fasterxml.jackson.databind.introspect.ObjectIdInfo#getGeneratorType()
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#withIgnorableProperties(java.util.HashSet)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#asArrayDeserializer()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#withIgnorableProperties(java.util.HashSet)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#asArrayDeserializer()
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#getMember()
CALLER: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#containedType(int)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#containedType(int)
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#containedType(int)
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#containedType(int)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#findContextualValueDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#findConvertingContentDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#findKeyDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#withResolved(com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#findContextualValueDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#withResolved(com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateBasedDeserializer#createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateBasedDeserializer#createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateBasedDeserializer#createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateBasedDeserializer#createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
CALLER: org.eclipse.jetty.util.resource.JarResource.1#close()
	CALLEE: static org.eclipse.jetty.util.IO#getClosedStream()
CALLER: org.eclipse.jetty.io.ArrayByteBufferPool#release(java.nio.ByteBuffer)
	CALLEE: org.eclipse.jetty.io.ArrayByteBufferPool#bucketFor(int,boolean)
	CALLEE: static org.eclipse.jetty.util.BufferUtil#clear(java.nio.ByteBuffer)
CALLER: org.eclipse.jetty.http.DateGenerator#doFormatDate(long)
	CALLEE: static org.eclipse.jetty.util.StringUtil#append2digits(java.lang.StringBuilder,int)
CALLER: org.eclipse.jetty.http.DateGenerator#doFormatCookieDate(java.lang.StringBuilder,long)
	CALLEE: static org.eclipse.jetty.util.StringUtil#append2digits(java.lang.StringBuilder,int)
CALLER: org.glassfish.jersey.model.ContractProvider#getPriority(java.lang.Class)
	CALLEE: jersey.repackaged.com.google.common.collect.Maps.TransformedEntriesMap#containsKey(java.lang.Object)
	CALLEE: jersey.repackaged.com.google.common.collect.Maps.TransformedEntriesMap#get(java.lang.Object)
CALLER: com.fasterxml.jackson.core.JsonLocation#hashCode()
	CALLEE: org.glassfish.jersey.message.internal.QualitySourceMediaType#hashCode()
	CALLEE: org.glassfish.jersey.message.internal.AcceptableMediaType#hashCode()
	CALLEE: com.fasterxml.jackson.core.JsonLocation#hashCode()
	CALLEE: com.fasterxml.jackson.databind.introspect.MemberKey#hashCode()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#hashCode()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#hashCode()
	CALLEE: com.fasterxml.jackson.databind.node.BigIntegerNode#hashCode()
	CALLEE: com.fasterxml.jackson.databind.node.DoubleNode#hashCode()
	CALLEE: com.fasterxml.jackson.databind.node.DecimalNode#hashCode()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#hashCode()
	CALLEE: com.fasterxml.jackson.databind.PropertyName#hashCode()
	CALLEE: com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey#hashCode()
	CALLEE: com.fasterxml.jackson.core.io.SerializedString#hashCode()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#hashCode()
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.ConsumesProducesAcceptor#hashCode()
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#hashCode()
	CALLEE: org.traccar.database.GroupTree.TreeNode#hashCode()
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig.FeatureRegistration#hashCode()
	CALLEE: org.apache.log4j.CategoryKey#hashCode()
	CALLEE: org.slf4j.helpers.SubstituteLogger#hashCode()
	CALLEE: org.glassfish.jersey.internal.Errors.ErrorMessage#hashCode()
	CALLEE: org.glassfish.jersey.internal.OsgiRegistry.BundleSpiProvidersLoader#hashCode()
	CALLEE: com.fasterxml.jackson.databind.type.ClassKey#hashCode()
	CALLEE: javax.ws.rs.core.MediaType#hashCode()
	CALLEE: com.fasterxml.jackson.databind.JavaType#hashCode()
	CALLEE: jersey.repackaged.com.google.common.base.Predicates.AndPredicate#hashCode()
	CALLEE: org.glassfish.hk2.api.AnnotationLiteral#hashCode()
	CALLEE: org.glassfish.hk2.utilities.reflection.ParameterizedTypeImpl#hashCode()
	CALLEE: liquibase.changelog.RanChangeSet#hashCode()
	CALLEE: org.glassfish.jersey.server.model.ResourceModelIssue#hashCode()
	CALLEE: org.glassfish.jersey.server.model.Parameter#hashCode()
	CALLEE: com.fasterxml.jackson.databind.jsontype.NamedType#hashCode()
	CALLEE: com.fasterxml.jackson.databind.node.ObjectNode#hashCode()
	CALLEE: com.fasterxml.jackson.databind.node.ArrayNode#hashCode()
	CALLEE: com.fasterxml.jackson.databind.node.POJONode#hashCode()
	CALLEE: com.fasterxml.jackson.databind.node.TextNode#hashCode()
	CALLEE: com.fasterxml.jackson.databind.node.BinaryNode#hashCode()
	CALLEE: com.fasterxml.jackson.databind.node.IntNode#hashCode()
	CALLEE: com.fasterxml.jackson.databind.node.LongNode#hashCode()
	CALLEE: com.fasterxml.jackson.annotation.ObjectIdGenerator.IdKey#hashCode()
CALLER: liquibase.util.csv.opencsv.CSVParser#parseLineMulti(java.lang.String)
	CALLEE: liquibase.util.csv.opencsv.CSVParser#parseLine(java.lang.String,boolean)
CALLER: com.fasterxml.jackson.databind.deser.std.JsonLocationInstantiator#getFromObjectArguments(com.fasterxml.jackson.databind.DeserializationConfig)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonLocationInstantiator#getFromObjectArguments(com.fasterxml.jackson.databind.DeserializationConfig)
CALLER: liquibase.changelog.RanChangeSet#isSameAs(liquibase.changelog.ChangeSet)
	CALLEE: liquibase.changelog.RanChangeSet#getChangeLog()
	CALLEE: liquibase.changelog.RanChangeSet#getAuthor()
	CALLEE: liquibase.changelog.RanChangeSet#getId()
CALLER: org.eclipse.jetty.server.session.HashedSession#save(boolean)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#isDebugEnabled()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#warn(java.lang.String,java.lang.Throwable)
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#didActivate()
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#getId()
	CALLEE: org.eclipse.jetty.server.session.HashedSession#isIdled()
	CALLEE: org.eclipse.jetty.server.session.MemSession#clearAttributes()
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#willPassivate()
	CALLEE: org.eclipse.jetty.server.session.HashedSession#save()
CALLER: org.glassfish.jersey.server.model.RuntimeResource.Builder#build(org.glassfish.jersey.server.model.RuntimeResource)
	CALLEE: org.glassfish.jersey.server.model.RuntimeResource#<init>(java.util.List,java.util.List,org.glassfish.jersey.server.model.RuntimeResource,java.lang.String,org.glassfish.jersey.server.model.RuntimeResource.1)
CALLER: jersey.repackaged.com.google.common.collect.Lists.TransformingRandomAccessList#get(int)
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig.1#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.inject.ProviderToService#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.model.internal.ModelErrors.1#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.ApplicationHandler.WorkersToStringTransform#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.inject.Providers.2#apply(java.lang.Object)
	CALLEE: jersey.repackaged.com.google.common.collect.Lists.TransformingRandomAccessList#get(int)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.1#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.model.Resource.1#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Builder.1#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.model.RuntimeResource.2#apply(java.lang.Object)
CALLER: org.slf4j.helpers.SubstituteLogger#log(org.slf4j.event.LoggingEvent)
	CALLEE: org.slf4j.helpers.SubstituteLogger#isDelegateEventAware()
CALLER: jersey.repackaged.com.google.common.collect.Lists.TransformingRandomAccessList#size()
	CALLEE: jersey.repackaged.com.google.common.collect.Lists.TransformingRandomAccessList#size()
	CALLEE: jersey.repackaged.com.google.common.collect.Lists.TransformingSequentialList#size()
CALLER: jersey.repackaged.com.google.common.collect.Lists.TransformingSequentialList#size()
	CALLEE: jersey.repackaged.com.google.common.collect.Lists.TransformingRandomAccessList#size()
	CALLEE: jersey.repackaged.com.google.common.collect.Lists.TransformingSequentialList#size()
CALLER: jersey.repackaged.com.google.common.collect.Lists.TransformingSequentialList#listIterator(int)
	CALLEE: jersey.repackaged.com.google.common.collect.Lists.TransformingSequentialList#listIterator(int)
	CALLEE: jersey.repackaged.com.google.common.collect.Lists.TransformingSequentialList.1#<init>(jersey.repackaged.com.google.common.collect.Lists.TransformingSequentialList,java.util.ListIterator)
	CALLEE: jersey.repackaged.com.google.common.collect.Lists.TransformingRandomAccessList#listIterator(int)
CALLER: org.glassfish.jersey.server.model.Parameter.1#getValueOf(java.lang.annotation.Annotation)
	CALLEE: org.glassfish.jersey.server.model.Parameter.1#getValueOf(javax.ws.rs.core.Context)
CALLER: org.glassfish.jersey.server.model.Parameter.2#getValueOf(java.lang.annotation.Annotation)
	CALLEE: org.glassfish.jersey.server.model.Parameter.2#getValueOf(javax.ws.rs.CookieParam)
CALLER: org.glassfish.jersey.server.model.Parameter.3#getValueOf(java.lang.annotation.Annotation)
	CALLEE: org.glassfish.jersey.server.model.Parameter.3#getValueOf(javax.ws.rs.FormParam)
CALLER: org.glassfish.jersey.server.model.Parameter.4#getValueOf(java.lang.annotation.Annotation)
	CALLEE: org.glassfish.jersey.server.model.Parameter.4#getValueOf(javax.ws.rs.HeaderParam)
CALLER: org.glassfish.jersey.server.model.Parameter.5#getValueOf(java.lang.annotation.Annotation)
	CALLEE: org.glassfish.jersey.server.model.Parameter.5#getValueOf(javax.ws.rs.MatrixParam)
CALLER: org.glassfish.jersey.server.model.Parameter.6#getValueOf(java.lang.annotation.Annotation)
	CALLEE: org.glassfish.jersey.server.model.Parameter.6#getValueOf(javax.ws.rs.PathParam)
CALLER: org.glassfish.jersey.server.model.Parameter.7#getValueOf(java.lang.annotation.Annotation)
	CALLEE: org.glassfish.jersey.server.model.Parameter.7#getValueOf(javax.ws.rs.QueryParam)
CALLER: org.glassfish.jersey.server.model.Parameter.8#getValueOf(java.lang.annotation.Annotation)
	CALLEE: org.glassfish.jersey.server.model.Parameter.8#getValueOf(javax.ws.rs.container.Suspended)
CALLER: org.glassfish.jersey.server.model.Parameter.9#getValueOf(java.lang.annotation.Annotation)
	CALLEE: org.glassfish.jersey.server.model.Parameter.9#getValueOf(org.glassfish.jersey.server.Uri)
CALLER: org.glassfish.jersey.server.model.Parameter.10#getValueOf(java.lang.annotation.Annotation)
	CALLEE: org.glassfish.jersey.server.model.Parameter.10#getValueOf(javax.ws.rs.BeanParam)
CALLER: org.glassfish.jersey.model.ContractProvider#getContracts()
	CALLEE: jersey.repackaged.com.google.common.collect.Maps.TransformedEntriesMap#keySet()
CALLER: com.fasterxml.jackson.databind.deser.impl.ValueInjector#<init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedMember,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.BeanProperty.Std#<init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.PropertyMetadata)
CALLER: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory#hasSupertypeStartingWith(java.lang.Class,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory#hasInterfaceStartingWith(java.lang.Class,java.lang.String)
CALLER: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory#doesImplement(java.lang.Class,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory#hasInterface(java.lang.Class,java.lang.String)
CALLER: static com.fasterxml.jackson.databind.util.ViewMatcher#construct(java.lang.Class[])
	CALLEE: com.fasterxml.jackson.databind.util.ViewMatcher.Single#<init>(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.util.ViewMatcher.Multi#<init>(java.lang.Class[])
CALLER: static com.fasterxml.jackson.databind.util.ViewMatcher#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.util.ViewMatcher#<init>()
CALLER: com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition#getSetter()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getParameterCount()
CALLER: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#<init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,java.util.Map,java.util.HashSet,boolean,boolean)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#<init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,java.util.Map,java.util.HashSet,boolean,boolean)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder#getBuildMethod()
	CALLEE: com.fasterxml.jackson.databind.BeanDescription#getType()
CALLER: com.fasterxml.jackson.databind.deser.std.StdDeserializer#findDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#findContextualValueDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
CALLER: static com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator#construct(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.deser.SettableBeanProperty[])
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.JavaType#isPrimitive()
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.PrimitiveOrWrapperDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#findContextualValueDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#defaultValue(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator#<init>(com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.deser.SettableBeanProperty[],java.lang.Object[])
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#getType()
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#hasValueDeserializer()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#getValueDeserializer()
CALLER: static com.fasterxml.jackson.annotation.JsonTypeInfo.As#<clinit>()
	CALLEE: com.fasterxml.jackson.annotation.JsonTypeInfo.As#<init>(java.lang.String,int)
CALLER: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.Builder#addExternal(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#getName()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.ExtTypedProperty#<init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase#getPropertyName()
CALLER: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#iterator()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.IteratorImpl#<init>(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.Bucket[])
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#findConvertingDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getTypeFactory()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#<init>(com.fasterxml.jackson.databind.util.Converter,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.DatabindContext#converterInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findDeserializationConverter(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findDeserializationConverter(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#findContextualValueDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#getMember()
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#_resolveManagedReferenceProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#<init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,java.lang.String,com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.util.Annotations,boolean)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#getType()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#getValueDeserializer()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#getManagedReferenceName()
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#findBackReference(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#findBackReference(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase#findBackReference(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#findBackReference(java.lang.String)
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#_resolvedObjectIdProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#<init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.introspect.ObjectIdInfo)
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#getObjectIdReader()
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#getObjectIdReader()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#getObjectIdReader()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#getValueDeserializer()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#getObjectIdInfo()
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#_resolveUnwrappedProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ThrowableDeserializer#unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findUnwrappingNameTransformer(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findUnwrappingNameTransformer(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#getValueDeserializer()
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer)
CALLER: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#remove(com.fasterxml.jackson.databind.deser.SettableBeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#getPropertyName(com.fasterxml.jackson.databind.deser.SettableBeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.Bucket#<init>(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.Bucket,java.lang.String,com.fasterxml.jackson.databind.deser.SettableBeanProperty,int)
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#_resolveInnerClassValuedProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getConfig()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#canOverrideAccessModifiers()
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#checkAndFixAccess(java.lang.reflect.Member)
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#canCreateUsingDefault()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector.Vanilla#canCreateUsingDefault()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#canCreateUsingDefault()
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#getOuterClass(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#<init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,java.lang.reflect.Constructor)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#getType()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#getValueDeserializer()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#getValueInstantiator()
CALLER: com.fasterxml.jackson.databind.DeserializationConfig#findTypeDeserializer(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.DeserializationConfig#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#introspectClassAnnotations(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#getDefaultTyper(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfigBase#getSubtypeResolver()
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver#collectAndResolveSubtypes(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#getClassInfo()
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder#buildTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection)
CALLER: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.Builder#build()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler#<init>(com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.ExtTypedProperty[],java.util.HashMap,java.lang.String[],com.fasterxml.jackson.databind.util.TokenBuffer[])
CALLER: com.fasterxml.jackson.databind.type.TypeFactory#constructMapType(java.lang.Class,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)
	CALLEE: static com.fasterxml.jackson.databind.type.MapType#construct(java.lang.Class,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)
CALLER: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#_findCustomDeser(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#isJacksonStdImpl(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#findNonContextualValueDeserializer(com.fasterxml.jackson.databind.JavaType)
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#RESOURCE_ADD_CHILD_ALREADY_CHILD()
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableRESOURCE_ADD_CHILD_ALREADY_CHILD()
CALLER: org.glassfish.jersey.server.model.Resource.Builder#<init>(java.lang.String,org.glassfish.jersey.server.model.Resource.Builder)
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#<init>(org.glassfish.jersey.server.model.Resource.Builder)
CALLER: org.glassfish.jersey.server.model.ResourceMethod.Builder#<init>(org.glassfish.jersey.server.model.Resource.Builder)
	CALLEE: static jersey.repackaged.com.google.common.collect.Sets#newLinkedHashSet()
CALLER: org.eclipse.jetty.io.AbstractEndPoint#fillInterested(org.eclipse.jetty.util.Callback)
	CALLEE: org.eclipse.jetty.io.IdleTimeout#notIdle()
	CALLEE: org.eclipse.jetty.io.FillInterest#register(org.eclipse.jetty.util.Callback)
CALLER: org.glassfish.jersey.server.model.Resource.Builder#buildResourceData()
	CALLEE: static jersey.repackaged.com.google.common.collect.Sets#newHashSet(java.lang.Iterable)
	CALLEE: static org.glassfish.jersey.server.model.Resource.Data#access$700(org.glassfish.jersey.server.model.Resource.Data)
	CALLEE: static org.glassfish.jersey.server.model.Resource.Data#access$800(org.glassfish.jersey.server.model.Resource.Data)
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#processMethodBuilders()
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#processChildResourceBuilders()
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#mergeResources(java.util.List)
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#areAllMembersExtended(java.util.List)
	CALLEE: org.glassfish.jersey.server.model.Resource.Data#<init>(java.util.List,java.lang.String,java.util.List,org.glassfish.jersey.server.model.ResourceMethod.Data,java.util.List,java.util.Set,java.util.Set,boolean,org.glassfish.jersey.server.model.Resource.1)
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#isExtended()
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#onBuildChildResource(org.glassfish.jersey.server.model.Resource.Builder,org.glassfish.jersey.server.model.Resource.Data)
CALLER: org.glassfish.jersey.server.model.Resource#<init>(org.glassfish.jersey.server.model.Resource,org.glassfish.jersey.server.model.Resource.Data,org.glassfish.jersey.server.model.Resource.1)
	CALLEE: org.glassfish.jersey.server.model.Resource#<init>(org.glassfish.jersey.server.model.Resource,org.glassfish.jersey.server.model.Resource.Data)
CALLER: org.glassfish.jersey.internal.OsgiRegistry.OsgiServiceFinder.2#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
CALLER: org.glassfish.jersey.internal.ServiceFinder.LazyClassIterator#next()
	CALLEE: static org.glassfish.jersey.internal.util.ReflectionHelper#classForNameWithExceptionPEA(java.lang.String,java.lang.ClassLoader)
	CALLEE: org.glassfish.jersey.internal.ServiceFinder.AbstractLazyIterator#hasNext()
	CALLEE: static org.glassfish.jersey.internal.ServiceFinder#access$500()
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#DEPENDENT_CLASS_OF_PROVIDER_NOT_FOUND(java.lang.Object,java.lang.Object,java.lang.Object)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#DEPENDENT_CLASS_OF_PROVIDER_FORMAT_ERROR(java.lang.Object,java.lang.Object,java.lang.Object)
	CALLEE: static org.glassfish.jersey.internal.ServiceFinder#access$700(java.lang.String,java.lang.String,java.lang.Throwable)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#PROVIDER_NOT_FOUND(java.lang.Object,java.lang.Object)
	CALLEE: static org.glassfish.jersey.internal.ServiceFinder#access$300(java.lang.String,java.lang.String)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#PROVIDER_CLASS_COULD_NOT_BE_LOADED(java.lang.Object,java.lang.Object,java.lang.Object)
CALLER: org.glassfish.jersey.internal.ServiceFinder.AbstractLazyIterator#setConfigs()
	CALLEE: static org.glassfish.jersey.internal.ServiceFinder#access$300(java.lang.String,java.lang.String)
	CALLEE: static org.glassfish.jersey.internal.ServiceFinder#access$200(java.lang.ClassLoader,java.lang.String)
CALLER: static org.glassfish.jersey.internal.ServiceFinder#access$400(java.lang.String,java.net.URL,java.util.Set)
	CALLEE: static org.glassfish.jersey.internal.ServiceFinder#parse(java.lang.String,java.net.URL,java.util.Set)
CALLER: org.glassfish.jersey.internal.ServiceFinder.AbstractLazyIterator#handleClassNotFoundException()
	CALLEE: static org.glassfish.jersey.internal.ServiceFinder#access$500()
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#PROVIDER_NOT_FOUND(java.lang.Object,java.lang.Object)
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#DEPENDENT_CLASS_OF_PROVIDER_NOT_FOUND(java.lang.Object,java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#localizableDEPENDENT_CLASS_OF_PROVIDER_NOT_FOUND(java.lang.Object,java.lang.Object,java.lang.Object)
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#DEPENDENT_CLASS_OF_PROVIDER_FORMAT_ERROR(java.lang.Object,java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#localizableDEPENDENT_CLASS_OF_PROVIDER_FORMAT_ERROR(java.lang.Object,java.lang.Object,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.type.MapType#withTypeHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.MapType#<init>(java.lang.Class,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean)
CALLER: com.fasterxml.jackson.databind.type.CollectionType#withTypeHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#<init>(java.lang.Class,com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean)
CALLER: com.fasterxml.jackson.databind.type.ArrayType#withTypeHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#<init>(com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,java.lang.Object,boolean)
CALLER: com.fasterxml.jackson.databind.type.SimpleType#withTypeHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#<init>(java.lang.Class,java.lang.String[],com.fasterxml.jackson.databind.JavaType[],java.lang.Object,java.lang.Object,boolean,java.lang.Class)
CALLER: jersey.repackaged.com.google.common.collect.Lists.TransformingRandomAccessList#remove(int)
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig.1#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.inject.ProviderToService#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.model.internal.ModelErrors.1#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.ApplicationHandler.WorkersToStringTransform#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.inject.Providers.2#apply(java.lang.Object)
	CALLEE: jersey.repackaged.com.google.common.collect.Lists.TransformingRandomAccessList#remove(int)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.1#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.model.Resource.1#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Builder.1#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.model.RuntimeResource.2#apply(java.lang.Object)
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#PROVIDER_COULD_NOT_BE_CREATED(java.lang.Object,java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#localizablePROVIDER_COULD_NOT_BE_CREATED(java.lang.Object,java.lang.Object,java.lang.Object)
CALLER: static org.glassfish.jersey.internal.ServiceFinder#access$700(java.lang.String,java.lang.String,java.lang.Throwable)
	CALLEE: static org.glassfish.jersey.internal.ServiceFinder#fail(java.lang.String,java.lang.String,java.lang.Throwable)
CALLER: org.glassfish.jersey.internal.ServiceFinder.LazyObjectIterator#handleClassNotFoundException()
	CALLEE: static org.glassfish.jersey.internal.ServiceFinder#access$500()
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#PROVIDER_NOT_FOUND(java.lang.Object,java.lang.Object)
	CALLEE: static org.glassfish.jersey.internal.ServiceFinder#access$300(java.lang.String,java.lang.String)
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#RESOURCE_MERGE_CONFLICT_LOCATORS(java.lang.Object,java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableRESOURCE_MERGE_CONFLICT_LOCATORS(java.lang.Object,java.lang.Object,java.lang.Object)
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#SINGLETON_INJECTS_PARAMETER(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableSINGLETON_INJECTS_PARAMETER(java.lang.Object,java.lang.Object)
CALLER: static org.glassfish.jersey.internal.Errors#fatal(java.lang.Object,java.lang.String)
	CALLEE: static org.glassfish.jersey.internal.Errors#error(java.lang.Object,java.lang.String,org.glassfish.jersey.Severity)
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#AMBIGUOUS_PARAMETER(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableAMBIGUOUS_PARAMETER(java.lang.Object,java.lang.Object)
CALLER: static org.glassfish.jersey.server.model.ResourceMethodValidator#access$100(java.lang.reflect.Type)
	CALLEE: static org.glassfish.jersey.server.model.ResourceMethodValidator#isConcreteType(java.lang.reflect.Type)
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#PARAMETER_UNRESOLVABLE(java.lang.Object,java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizablePARAMETER_UNRESOLVABLE(java.lang.Object,java.lang.Object,java.lang.Object)
CALLER: org.glassfish.jersey.server.model.RuntimeResource.1#compare(org.glassfish.jersey.server.model.RuntimeResource,org.glassfish.jersey.server.model.RuntimeResource)
	CALLEE: org.glassfish.jersey.server.model.RuntimeResource#getPathPattern()
	CALLEE: org.glassfish.jersey.uri.PathPattern.1#compare(java.lang.Object,java.lang.Object)
CALLER: jersey.repackaged.com.google.common.base.Joiner#join(java.util.Iterator)
	CALLEE: jersey.repackaged.com.google.common.base.Joiner#appendTo(java.lang.StringBuilder,java.util.Iterator)
CALLER: com.zaxxer.hikari.pool.ProxyConnection#untrackStatement(java.sql.Statement)
	CALLEE: com.zaxxer.hikari.util.FastList#remove(java.lang.Object)
CALLER: com.zaxxer.hikari.pool.ProxyStatement#checkException(java.sql.SQLException)
	CALLEE: com.zaxxer.hikari.pool.ProxyConnection#checkException(java.sql.SQLException)
CALLER: com.zaxxer.hikari.pool.ProxyPreparedStatement#execute()
	CALLEE: com.zaxxer.hikari.pool.ProxyConnection#markCommitStateDirty()
CALLER: com.zaxxer.hikari.pool.ProxyPreparedStatement#executeQuery()
	CALLEE: com.zaxxer.hikari.pool.ProxyConnection#markCommitStateDirty()
	CALLEE: static com.zaxxer.hikari.pool.ProxyFactory#getProxyResultSet(com.zaxxer.hikari.pool.ProxyConnection,com.zaxxer.hikari.pool.ProxyStatement,java.sql.ResultSet)
CALLER: org.eclipse.jetty.server.handler.ContextHandler#newResource(java.net.URL)
	CALLEE: static org.eclipse.jetty.util.resource.Resource#newResource(java.net.URL)
CALLER: com.fasterxml.jackson.databind.introspect.BasicClassIntrospector#forDeserialization(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicClassIntrospector#_findStdTypeDesc(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicClassIntrospector#_findStdJdkCollectionDesc(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicClassIntrospector#collectProperties(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver,boolean,java.lang.String)
	CALLEE: static com.fasterxml.jackson.databind.introspect.BasicBeanDescription#forDeserialization(com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector)
	CALLEE: com.fasterxml.jackson.databind.util.LRUMap#putIfAbsent(java.lang.Object,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.introspect.BasicClassIntrospector#forCreation(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicClassIntrospector#_findStdTypeDesc(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicClassIntrospector#_findStdJdkCollectionDesc(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicClassIntrospector#collectProperties(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver,boolean,java.lang.String)
	CALLEE: static com.fasterxml.jackson.databind.introspect.BasicBeanDescription#forDeserialization(com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector)
CALLER: com.fasterxml.jackson.databind.introspect.BasicClassIntrospector#forDeserializationWithBuilder(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver)
	CALLEE: static com.fasterxml.jackson.databind.introspect.BasicBeanDescription#forDeserialization(com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector)
	CALLEE: com.fasterxml.jackson.databind.util.LRUMap#putIfAbsent(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicClassIntrospector#collectPropertiesWithBuilder(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver,boolean)
CALLER: com.fasterxml.jackson.databind.introspect.BasicClassIntrospector#forClassAnnotations(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver)
	CALLEE: static com.fasterxml.jackson.databind.introspect.BasicBeanDescription#forOtherUse(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedClass)
	CALLEE: com.fasterxml.jackson.databind.util.LRUMap#get(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.LRUMap#put(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.DeserializationConfig#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicClassIntrospector#_findStdTypeDesc(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#isAnnotationProcessingEnabled()
	CALLEE: static com.fasterxml.jackson.databind.introspect.AnnotatedClass#construct(java.lang.Class,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver)
	CALLEE: com.fasterxml.jackson.databind.SerializationConfig#getAnnotationIntrospector()
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#_findTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#_findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#typeResolverBuilderInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#_constructNoTypeResolverBuilder()
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#_constructStdTypeResolverBuilder()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#typeIdResolverInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder#init(com.fasterxml.jackson.annotation.JsonTypeInfo.Id,com.fasterxml.jackson.databind.jsontype.TypeIdResolver)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder#defaultImpl(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder#inclusion(com.fasterxml.jackson.annotation.JsonTypeInfo.As)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder#typeProperty(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder#typeIdVisibility(boolean)
CALLER: com.fasterxml.jackson.databind.AnnotationIntrospector#_findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#getAnnotation(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedWithParams#getAnnotation(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#getAnnotation(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#getAnnotation(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.introspect.VirtualAnnotatedMember#getAnnotation(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findContentDeserializer(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#_findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#_classIfExplicit(java.lang.Class)
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#isBogusClass(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findKeyDeserializer(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#_findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findDeserializer(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#_findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#with(com.fasterxml.jackson.annotation.JsonAutoDetect)
	CALLEE: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#with(com.fasterxml.jackson.annotation.JsonAutoDetect)
CALLER: static com.fasterxml.jackson.databind.util.NameTransformer#simpleTransformer(java.lang.String,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.NameTransformer.2#<init>(java.lang.String,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.NameTransformer.3#<init>(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.NameTransformer.4#<init>(java.lang.String)
CALLER: static com.fasterxml.jackson.databind.util.NameTransformer#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.util.NameTransformer.1#<init>()
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#_classIfExplicit(java.lang.Class,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#_classIfExplicit(java.lang.Class)
CALLER: static com.fasterxml.jackson.databind.PropertyName#construct(java.lang.String,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.PropertyName#<init>(java.lang.String,java.lang.String)
CALLER: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#withSetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility)
	CALLEE: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#<init>(com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility)
CALLER: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#withCreatorVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility)
	CALLEE: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#<init>(com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility)
CALLER: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#withFieldVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility)
	CALLEE: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#<init>(com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility)
CALLER: com.fasterxml.jackson.core.util.TextBuffer#buf(int)
	CALLEE: com.fasterxml.jackson.core.util.BufferRecycler#allocCharBuffer(int,int)
CALLER: com.fasterxml.jackson.core.util.TextBuffer#contentsAsArray()
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#resultArray()
CALLER: com.fasterxml.jackson.core.util.TextBuffer#unshare(int)
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#buf(int)
CALLER: com.fasterxml.jackson.core.util.TextBuffer#expand(int)
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#carr(int)
CALLER: com.fasterxml.jackson.core.util.TextBuffer#resetWithEmpty()
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#clearSegments()
CALLER: org.glassfish.jersey.model.internal.ComponentBag.6#apply(java.lang.Class)
	CALLEE: org.glassfish.jersey.model.internal.ComponentBag#getModel(java.lang.Class)
	CALLEE: org.glassfish.jersey.model.internal.ComponentBag.1#apply(java.lang.Object)
CALLER: static org.glassfish.hk2.utilities.reflection.Pretty#pType(java.lang.reflect.ParameterizedType)
	CALLEE: static org.glassfish.hk2.utilities.reflection.ReflectionHelper#getRawClass(java.lang.reflect.Type)
	CALLEE: org.glassfish.hk2.utilities.reflection.ParameterizedTypeImpl#getActualTypeArguments()
	CALLEE: static org.glassfish.hk2.utilities.reflection.Pretty#clazz(java.lang.Class)
	CALLEE: static org.glassfish.hk2.utilities.reflection.Pretty#type(java.lang.reflect.Type)
CALLER: org.eclipse.jetty.http.PathMap#clear()
	CALLEE: org.eclipse.jetty.util.ArrayTernaryTrie#<init>(boolean)
CALLER: com.fasterxml.jackson.databind.JsonDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer#deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer#deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer#deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#convertValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
CALLER: com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer#deserializeTypedFromScalar(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer#deserializeTypedFromScalar(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
CALLER: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer#deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer#deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer#deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer#deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer#deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer#deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer#deserializeTypedFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer#deserializeTypedFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer#deserializeTypedFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer#deserializeTypedFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer#deserializeTypedFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer#deserializeTypedFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer#deserializeTypedFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer#deserializeTypedFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer#deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer#deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer#deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer#deserializeTypedFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer#deserializeTypedFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer#deserializeTypedFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer#deserializeTypedFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.JsonToken#isScalarValue()
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#_deserializeFromObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#_deserializeIfNatural(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer#deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer#deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer#deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
CALLER: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#canReadObjectId()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getCurrentName()
	CALLEE: com.fasterxml.jackson.core.JsonToken#isScalarValue()
	CALLEE: com.fasterxml.jackson.core.JsonParser#canReadObjectId()
	CALLEE: com.fasterxml.jackson.core.JsonParser#getObjectId()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#_handleTypedObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#deserializeFromObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReader#maySerializeAsObject()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReader#isValidReferencePropertyName(java.lang.String,com.fasterxml.jackson.core.JsonParser)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#canReadObjectId()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getObjectId()
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer#deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer#deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer#deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentName()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getObjectId()
CALLER: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer#deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer#deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer#deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getEmbeddedObject()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getDoubleValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getDecimalValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getBigIntegerValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getNumberValue()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer#deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer#deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer#deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getDoubleValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getDecimalValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getNumberValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getBigIntegerValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getEmbeddedObject()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.NoClassDefFoundDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ByteDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ShortDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.FloatDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.DoubleDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.BooleanDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.CharDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.IntDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.LongDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.LongDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.CharacterDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ByteDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ShortDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.FloatDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigDecimalDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getEmbeddedObject()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getBigIntegerValue()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getNumberValue()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getDecimalValue()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getDoubleValue()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer#deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer#deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer#deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
CALLER: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
CALLER: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
CALLER: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
CALLER: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
CALLER: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer#deserializeTypedFromScalar(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer#deserializeTypedFromScalar(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
CALLER: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.databind.util.EnumResolver#findEnum(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#_deserializeAltString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#_checkFailOnNumber(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getIntValue()
	CALLEE: com.fasterxml.jackson.databind.util.EnumResolver#getEnum(int)
	CALLEE: com.fasterxml.jackson.databind.util.EnumResolver#getEnumClass()
	CALLEE: com.fasterxml.jackson.databind.util.EnumResolver#lastValidIndex()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#weirdNumberException(java.lang.Number,java.lang.Class,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#_deserializeOther(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getIntValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getIntValue()
CALLER: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.ObjectBuffer#resetAndStart()
	CALLEE: com.fasterxml.jackson.databind.util.ObjectBuffer#appendCompletedChunk(java.lang.Object[])
	CALLEE: com.fasterxml.jackson.databind.util.ObjectBuffer#completeAndClearBuffer(java.lang.Object[],int,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.ObjectBuffer#completeAndClearBuffer(java.lang.Object[],int)
	CALLEE: com.fasterxml.jackson.databind.util.ObjectBuffer#bufferedSize()
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#isExpectedStartArrayToken()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.NoClassDefFoundDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ByteDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ShortDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.FloatDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.DoubleDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.BooleanDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.CharDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.IntDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.LongDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.LongDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.CharacterDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ByteDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ShortDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.FloatDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigDecimalDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.PrimitiveOrWrapperDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#isExpectedStartArrayToken()
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#leaseObjectBuffer()
	CALLEE: static com.fasterxml.jackson.databind.JsonMappingException#wrapWithPath(java.lang.Throwable,java.lang.Object,int)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#returnObjectBuffer(com.fasterxml.jackson.databind.util.ObjectBuffer)
CALLER: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#skipChildren()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#getKeyType()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.NoClassDefFoundDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ByteDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ShortDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.FloatDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.DoubleDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.BooleanDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.CharDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.IntDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.LongDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.LongDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.CharacterDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ByteDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ShortDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.FloatDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigDecimalDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.PrimitiveOrWrapperDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#weirdStringException(java.lang.String,java.lang.Class,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_deserializeFromEmpty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#constructMap()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#skipChildren()
	CALLEE: com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase#wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer#deserializeKey(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.DelegatingKD#deserializeKey(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.StringKD#deserializeKey(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.NoClassDefFoundDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ByteDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ShortDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.FloatDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.DoubleDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.BooleanDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.CharDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.IntDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.LongDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.LongDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.CharacterDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ByteDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ShortDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.FloatDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigDecimalDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#instantiationException(java.lang.Class,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_deserializeFromEmpty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#_deserializeUsingCreator(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#createUsingDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#createUsingDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#getMapClass()
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#createFromString(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#createFromString(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector.Vanilla#createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#_readAndBindStringMap(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#_readAndBind(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map)
CALLER: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#isExpectedStartArrayToken()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.NoClassDefFoundDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ByteDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ShortDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.FloatDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.DoubleDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.BooleanDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.CharDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.IntDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.LongDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.LongDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.CharacterDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ByteDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ShortDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.FloatDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigDecimalDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.Class)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#isExpectedStartArrayToken()
	CALLEE: static com.fasterxml.jackson.databind.JsonMappingException#wrapWithPath(java.lang.Throwable,java.lang.Object,int)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#constructSet()
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
CALLER: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.NoClassDefFoundDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ByteDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ShortDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.FloatDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.DoubleDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.BooleanDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.CharDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.IntDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.LongDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.LongDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.CharacterDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ByteDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ShortDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.FloatDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigDecimalDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#createUsingDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#createUsingDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#createFromString(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#createFromString(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.LongDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.CharacterDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ByteDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ShortDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.FloatDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigDecimalDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.NoClassDefFoundDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ByteDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ShortDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.FloatDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.DoubleDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.BooleanDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.CharDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.IntDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.LongDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#createUsingDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#createUsingDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector.Vanilla#createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection)
CALLER: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.NoClassDefFoundDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ByteDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ShortDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.FloatDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.DoubleDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.BooleanDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.CharDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.IntDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.LongDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.LongDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.CharacterDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ByteDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ShortDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.FloatDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigDecimalDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#createUsingDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#createUsingDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#createFromString(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#createFromString(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector.Vanilla#createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_finishString()
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#contentsAsString()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_getText2(com.fasterxml.jackson.core.JsonToken)
CALLER: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getValueAsString()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_finishString()
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#contentsAsString()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getValueAsString(java.lang.String)
CALLER: com.fasterxml.jackson.databind.DeserializationContext#instantiationException(java.lang.Class,java.lang.Throwable)
	CALLEE: org.glassfish.hk2.api.MultiException#getMessage()
	CALLEE: org.glassfish.jersey.server.model.ModelValidationException#getMessage()
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#getMessage()
	CALLEE: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference#getMessage()
	CALLEE: static com.fasterxml.jackson.databind.JsonMappingException#from(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Throwable)
	CALLEE: org.apache.log4j.config.PropertySetterException#getMessage()
	CALLEE: org.h2.jdbc.JdbcSQLException#getMessage()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#getMessage()
CALLER: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ByteDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getEmbeddedObject()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#isExpectedStartArrayToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getBinaryValue(com.fasterxml.jackson.core.Base64Variant)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getEmbeddedObject()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.Class)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#isExpectedStartArrayToken()
	CALLEE: static com.fasterxml.jackson.databind.JsonMappingException#wrapWithPath(java.lang.Throwable,java.lang.Object,int)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getBase64Variant()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getBinaryValue(com.fasterxml.jackson.core.Base64Variant)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ByteDeser#handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getArrayBuilders()
	CALLEE: com.fasterxml.jackson.core.JsonParser#getByteValue()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayBuilders#getByteBuilder()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getEmbeddedObject()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getBinaryValue(com.fasterxml.jackson.core.Base64Variant)
	CALLEE: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder#completeAndClearBuffer(java.lang.Object,int)
	CALLEE: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder#bufferedSize()
	CALLEE: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder#appendCompletedChunk(java.lang.Object,int)
	CALLEE: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder#resetAndStart()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getByteValue()
CALLER: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ShortDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#isExpectedStartArrayToken()
	CALLEE: static com.fasterxml.jackson.databind.JsonMappingException#wrapWithPath(java.lang.Throwable,java.lang.Object,int)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getArrayBuilders()
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ShortDeser#handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseShortPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.ArrayBuilders#getShortBuilder()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder#completeAndClearBuffer(java.lang.Object,int)
	CALLEE: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder#bufferedSize()
	CALLEE: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder#appendCompletedChunk(java.lang.Object,int)
	CALLEE: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder#resetAndStart()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#isExpectedStartArrayToken()
CALLER: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.FloatDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#isExpectedStartArrayToken()
	CALLEE: static com.fasterxml.jackson.databind.JsonMappingException#wrapWithPath(java.lang.Throwable,java.lang.Object,int)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getArrayBuilders()
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.FloatDeser#handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseFloatPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.ArrayBuilders#getFloatBuilder()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder#completeAndClearBuffer(java.lang.Object,int)
	CALLEE: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder#bufferedSize()
	CALLEE: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder#appendCompletedChunk(java.lang.Object,int)
	CALLEE: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder#resetAndStart()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#isExpectedStartArrayToken()
CALLER: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.DoubleDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#isExpectedStartArrayToken()
	CALLEE: static com.fasterxml.jackson.databind.JsonMappingException#wrapWithPath(java.lang.Throwable,java.lang.Object,int)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getArrayBuilders()
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.DoubleDeser#handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseDoublePrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.ArrayBuilders#getDoubleBuilder()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder#completeAndClearBuffer(java.lang.Object,int)
	CALLEE: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder#bufferedSize()
	CALLEE: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder#appendCompletedChunk(java.lang.Object,int)
	CALLEE: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder#resetAndStart()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#isExpectedStartArrayToken()
CALLER: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.BooleanDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#isExpectedStartArrayToken()
	CALLEE: static com.fasterxml.jackson.databind.JsonMappingException#wrapWithPath(java.lang.Throwable,java.lang.Object,int)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getArrayBuilders()
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.BooleanDeser#handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseBooleanPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.ArrayBuilders#getBooleanBuilder()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder#completeAndClearBuffer(java.lang.Object,int)
	CALLEE: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder#bufferedSize()
	CALLEE: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder#appendCompletedChunk(java.lang.Object,int)
	CALLEE: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder#resetAndStart()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#isExpectedStartArrayToken()
CALLER: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.CharDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getEmbeddedObject()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getTextLength()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getTextOffset()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getTextCharacters()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getEmbeddedObject()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#isExpectedStartArrayToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getTextLength()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getTextOffset()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getTextCharacters()
	CALLEE: static com.fasterxml.jackson.core.Base64Variants#getDefaultVariant()
	CALLEE: static com.fasterxml.jackson.databind.JsonMappingException#from(com.fasterxml.jackson.core.JsonParser,java.lang.String)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getEmbeddedObject()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.Class)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#isExpectedStartArrayToken()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getTextCharacters()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getTextOffset()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getTextLength()
	CALLEE: com.fasterxml.jackson.core.Base64Variant#encode(byte[],boolean)
CALLER: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#isExpectedStartArrayToken()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#leaseObjectBuffer()
	CALLEE: static com.fasterxml.jackson.databind.JsonMappingException#wrapWithPath(java.lang.Throwable,java.lang.Object,int)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#returnObjectBuffer(com.fasterxml.jackson.databind.util.ObjectBuffer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#_deserializeCustom(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextTextValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.ObjectBuffer#resetAndStart()
	CALLEE: com.fasterxml.jackson.databind.util.ObjectBuffer#appendCompletedChunk(java.lang.Object[])
	CALLEE: com.fasterxml.jackson.databind.util.ObjectBuffer#completeAndClearBuffer(java.lang.Object[],int,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.util.ObjectBuffer#bufferedSize()
	CALLEE: com.fasterxml.jackson.core.JsonParser#nextTextValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#isExpectedStartArrayToken()
CALLER: com.fasterxml.jackson.databind.DeserializationContext#instantiationException(java.lang.Class,java.lang.String)
	CALLEE: static com.fasterxml.jackson.databind.JsonMappingException#from(com.fasterxml.jackson.core.JsonParser,java.lang.String)
CALLER: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentTokenId()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getNodeFactory()
	CALLEE: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer#deserializeObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory)
	CALLEE: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer#deserializeArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory)
	CALLEE: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer#deserializeAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentTokenId()
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializer#vanillaDeserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonToken)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector.Vanilla#createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#setCurrentValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#findDeserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#handleUnknownVanilla(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getCurrentName()
	CALLEE: com.fasterxml.jackson.core.JsonParser#setCurrentValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#setCurrentValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentName()
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#deserializeWithObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ThrowableDeserializer#deserializeFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserializeFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.ThrowableDeserializer#deserializeFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#isAbstract()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#skipChildren()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: static com.fasterxml.jackson.databind.JsonMappingException#from(com.fasterxml.jackson.core.JsonParser,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#<init>(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.JavaType#isAbstract()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#find(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#canCreateUsingDefault()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector.Vanilla#canCreateUsingDefault()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#canCreateUsingDefault()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.NoClassDefFoundDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ByteDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ShortDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.FloatDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.DoubleDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.BooleanDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.CharDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.IntDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.LongDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.LongDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.CharacterDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ByteDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ShortDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.FloatDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigDecimalDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#canCreateFromString()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#canCreateFromString()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#skipChildren()
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#createUsingDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#createUsingDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#createFromString(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#createFromString(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector.Vanilla#createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#_deserializeUsingPropertyBased(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#size()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#handleUnknownProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#set(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#set(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#set(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#set(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableAnyProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#set(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#set(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#set(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#set(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserializeFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReader#isValidReferencePropertyName(java.lang.String,com.fasterxml.jackson.core.JsonParser)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getCurrentName()
	CALLEE: com.fasterxml.jackson.core.JsonParser#setCurrentValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#canReadObjectId()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getObjectId()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentTokenId()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#setCurrentValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentName()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getObjectId()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#canReadObjectId()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getCurrentName()
	CALLEE: com.fasterxml.jackson.core.JsonParser#canReadObjectId()
	CALLEE: com.fasterxml.jackson.core.JsonParser#getObjectId()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#_handleTypedObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#deserializeFromObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector.Vanilla#createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentTokenId()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#setCurrentValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#findDeserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#handleUnknownVanilla(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserializeWithUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserializeWithExternalTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#deserializeFromObjectUsingNonDefault(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#injectValues(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getActiveView()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserializeWithView(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReader#maySerializeAsObject()
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializer#_deserializeOther(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonToken)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#vanillaDeserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonToken)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#deserializeWithObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ThrowableDeserializer#deserializeFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserializeFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#handledType()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#deserializeFromString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#deserializeFromNumber(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#deserializeFromDouble(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#deserializeFromEmbedded(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#deserializeFromBoolean(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#deserializeFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.IntDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#isExpectedStartArrayToken()
	CALLEE: static com.fasterxml.jackson.databind.JsonMappingException#wrapWithPath(java.lang.Throwable,java.lang.Object,int)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getArrayBuilders()
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.IntDeser#handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseIntPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.ArrayBuilders#getIntBuilder()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder#completeAndClearBuffer(java.lang.Object,int)
	CALLEE: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder#bufferedSize()
	CALLEE: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder#appendCompletedChunk(java.lang.Object,int)
	CALLEE: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder#resetAndStart()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#isExpectedStartArrayToken()
CALLER: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.LongDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#isExpectedStartArrayToken()
	CALLEE: static com.fasterxml.jackson.databind.JsonMappingException#wrapWithPath(java.lang.Throwable,java.lang.Object,int)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getArrayBuilders()
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.LongDeser#handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseLongPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.ArrayBuilders#getLongBuilder()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder#completeAndClearBuffer(java.lang.Object,int)
	CALLEE: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder#bufferedSize()
	CALLEE: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder#appendCompletedChunk(java.lang.Object,int)
	CALLEE: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder#resetAndStart()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#isExpectedStartArrayToken()
CALLER: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getNodeFactory()
	CALLEE: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer#deserializeObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
CALLER: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.Class)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#isExpectedStartArrayToken()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getNodeFactory()
	CALLEE: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer#deserializeArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#isExpectedStartArrayToken()
CALLER: static com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.1#<clinit>()
	CALLEE: static com.fasterxml.jackson.core.JsonToken#values()
CALLER: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#mapObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getCurrentName()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentName()
CALLER: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#mapArrayToArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#leaseObjectBuffer()
	CALLEE: com.fasterxml.jackson.databind.util.ObjectBuffer#resetAndStart()
	CALLEE: com.fasterxml.jackson.databind.util.ObjectBuffer#appendCompletedChunk(java.lang.Object[])
	CALLEE: com.fasterxml.jackson.databind.util.ObjectBuffer#completeAndClearBuffer(java.lang.Object[],int)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
CALLER: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#mapArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#leaseObjectBuffer()
	CALLEE: com.fasterxml.jackson.databind.util.ObjectBuffer#resetAndStart()
	CALLEE: com.fasterxml.jackson.databind.util.ObjectBuffer#appendCompletedChunk(java.lang.Object[])
	CALLEE: com.fasterxml.jackson.databind.util.ObjectBuffer#completeAndClearBuffer(java.lang.Object[],int,java.util.List)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
CALLER: com.fasterxml.jackson.core.base.ParserBase#getBigIntegerValue()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#_parseNumericValue(int)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#convertNumberToBigInteger()
CALLER: com.fasterxml.jackson.core.base.ParserBase#getNumberValue()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#_parseNumericValue(int)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_throwInternal()
CALLER: com.fasterxml.jackson.core.base.ParserBase#getDecimalValue()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#_parseNumericValue(int)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#convertNumberToBigDecimal()
CALLER: com.fasterxml.jackson.core.base.ParserBase#getDoubleValue()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#_parseNumericValue(int)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#convertNumberToDouble()
CALLER: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.Class)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.Class,com.fasterxml.jackson.core.JsonToken)
CALLER: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.NoClassDefFoundDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ByteDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ShortDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.FloatDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.DoubleDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.BooleanDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.CharDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.IntDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.LongDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.LongDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.CharacterDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ByteDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ShortDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.FloatDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigDecimalDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.PrimitiveOrWrapperDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_deserializeFromEmpty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase#wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.Class,com.fasterxml.jackson.core.JsonToken)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#handledType()
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer#deserializeKey(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.DelegatingKD#deserializeKey(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.StringKD#deserializeKey(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentName()
CALLER: com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer#createBufferInstance(com.fasterxml.jackson.core.JsonParser)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.NoClassDefFoundDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ByteDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ShortDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.FloatDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.DoubleDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.BooleanDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.CharDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.IntDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.LongDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.LongDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.CharacterDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ByteDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ShortDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.FloatDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigDecimalDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
CALLER: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: org.glassfish.jersey.message.internal.QualitySourceMediaType#toString()
	CALLEE: com.fasterxml.jackson.core.JsonLocation#toString()
	CALLEE: com.fasterxml.jackson.databind.PropertyName#toString()
	CALLEE: com.fasterxml.jackson.core.io.SerializedString#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey#toString()
	CALLEE: org.glassfish.jersey.server.model.Invocable#toString()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#toString()
	CALLEE: org.glassfish.jersey.server.model.MethodHandler.ClassBasedMethodHandler#toString()
	CALLEE: org.glassfish.jersey.server.model.MethodHandler.InstanceBasedMethodHandler#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#toString()
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodRouting#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#toString()
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.ConsumesProducesAcceptor#toString()
	CALLEE: static com.fasterxml.jackson.core.Base64Variants#getDefaultVariant()
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#toString()
	CALLEE: org.eclipse.jetty.webapp.WebAppContext#toString()
	CALLEE: org.eclipse.jetty.server.handler.HandlerCollection#toString()
	CALLEE: org.eclipse.jetty.server.Server#toString()
	CALLEE: org.eclipse.jetty.server.AbstractNetworkConnector#toString()
	CALLEE: org.eclipse.jetty.util.thread.QueuedThreadPool#toString()
	CALLEE: org.eclipse.jetty.server.AbstractConnectionFactory#toString()
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle.Bean#toString()
	CALLEE: org.apache.log4j.NameValue#toString()
	CALLEE: liquibase.changelog.ChangeLogParameters.ChangeLogParameter#toString()
	CALLEE: org.eclipse.jetty.server.AbstractConnector.Acceptor#toString()
	CALLEE: org.eclipse.jetty.server.HttpConfiguration#toString()
	CALLEE: org.eclipse.jetty.util.MultiException#toString()
	CALLEE: org.eclipse.jetty.http.PathMap.MappedEntry#toString()
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector#toString()
	CALLEE: liquibase.servicelocator.AssignableToPackageScanFilter#toString()
	CALLEE: org.eclipse.jetty.http.HttpField#toString()
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#toString()
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#toString()
	CALLEE: org.eclipse.jetty.servlet.ServletMapping#toString()
	CALLEE: org.glassfish.jersey.internal.OsgiRegistry.BundleSpiProvidersLoader#toString()
	CALLEE: org.h2.jdbc.JdbcSQLException#toString()
	CALLEE: liquibase.changelog.filter.ChangeSetFilterResult#toString()
	CALLEE: com.zaxxer.hikari.pool.PoolEntry#toString()
	CALLEE: org.eclipse.jetty.io.SelectChannelEndPoint#toString()
	CALLEE: org.eclipse.jetty.util.FutureCallback#toString()
	CALLEE: org.eclipse.jetty.util.ConstantThrowable#toString()
	CALLEE: javax.ws.rs.core.MediaType#toString()
	CALLEE: org.glassfish.jersey.model.internal.RankedProvider#toString()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#toString()
	CALLEE: org.glassfish.hk2.api.MultiException#toString()
	CALLEE: jersey.repackaged.com.google.common.base.Predicates.AndPredicate#toString()
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.MapType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#toString()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: org.glassfish.hk2.utilities.NamedImpl#toString()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#toString()
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#toString()
	CALLEE: com.fasterxml.jackson.databind.jsontype.NamedType#toString()
	CALLEE: liquibase.changelog.RanChangeSet#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.UnresolvedId#toString()
	CALLEE: org.glassfish.jersey.server.model.ResourceModelIssue#toString()
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#toString()
	CALLEE: org.glassfish.jersey.server.model.Parameter#toString()
	CALLEE: org.glassfish.hk2.utilities.reflection.ParameterizedTypeImpl#toString()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getValueAsString()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getEmbeddedObject()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#wrongTokenException(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken,java.lang.String)
	CALLEE: com.fasterxml.jackson.core.Base64Variant#encode(byte[],boolean)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.Class,com.fasterxml.jackson.core.JsonToken)
	CALLEE: com.fasterxml.jackson.databind.type.ClassKey#toString()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException.Reference#toString()
	CALLEE: org.glassfish.jersey.server.model.Resource.Data#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ValueNode#toString()
	CALLEE: org.glassfish.jersey.server.model.Resource#toString()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getEmbeddedObject()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#toString()
	CALLEE: com.fasterxml.jackson.core.JsonParser#getValueAsString()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#toString()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Data#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.MemberKey#toString()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ObjectNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ArrayNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.POJONode#toString()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#toString()
	CALLEE: com.fasterxml.jackson.databind.node.TextNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.BinaryNode#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#toString()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getEmbeddedObject()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getValueAsString()
CALLER: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#instantiationException(java.lang.Class,java.lang.Throwable)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateBasedDeserializer#_parseDate(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#constructCalendar(java.util.Date)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getTimeZone()
CALLER: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateBasedDeserializer#_parseDate(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateBasedDeserializer#_parseDate(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.DeserializationContext#wrongTokenException(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken,java.lang.String)
	CALLEE: static com.fasterxml.jackson.databind.JsonMappingException#from(com.fasterxml.jackson.core.JsonParser,java.lang.String)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
CALLER: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer.Std#_deserializeFromEmptyString()
	CALLEE: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#_deserializeFromEmptyString()
CALLER: com.fasterxml.jackson.databind.deser.std.UUIDDeserializer#_deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UUIDDeserializer#_deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer.Std#_deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getTypeFactory()
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#getRootCause(java.lang.Throwable)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#instantiationException(java.lang.Class,java.lang.Throwable)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#findClass(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#constructFromCanonical(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.exc.InvalidFormatException#<init>(java.lang.String,java.lang.Object,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.DeserializationContext#weirdStringException(java.lang.String,java.lang.Class,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#_valueDesc()
	CALLEE: static com.fasterxml.jackson.databind.exc.InvalidFormatException#from(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.std.UUIDDeserializer#_deserializeEmbedded(java.lang.Object,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UUIDDeserializer#_deserializeEmbedded(java.lang.Object,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#_deserializeEmbedded(java.lang.Object,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.String)
CALLER: com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getIntValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentName()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getIntValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#nextValue()
	CALLEE: static com.fasterxml.jackson.databind.JsonMappingException#from(com.fasterxml.jackson.core.JsonParser,java.lang.String)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#wrongTokenException(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getIntValue()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.Class,com.fasterxml.jackson.core.JsonToken)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#nextValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#handleUnknownProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.core.JsonToken#isNumeric()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
CALLER: com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseBooleanPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.JsonParser#getBinaryValue()
CALLER: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseInteger(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseBoolean(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.LongDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseLong(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseDouble(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.CharacterDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getIntValue()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#wrongTokenException(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.CharacterDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getIntValue()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.Class,com.fasterxml.jackson.core.JsonToken)
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#getEmptyValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getIntValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
CALLER: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ByteDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseByte(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ShortDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseShort(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.FloatDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseFloat(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getNumberValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getBigIntegerValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getBigIntegerValue()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getNumberValue()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getDecimalValue()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getDoubleValue()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#wrongTokenException(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#weirdStringException(java.lang.String,java.lang.Class,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.Class,com.fasterxml.jackson.core.JsonToken)
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#getEmptyValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_hasTextualNull(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_isPosInf(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_isNegInf(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_isNaN(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getDoubleValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getDecimalValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getBigIntegerValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getNumberValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getDoubleValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getDecimalValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
CALLER: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigDecimalDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getDecimalValue()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#wrongTokenException(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#weirdStringException(java.lang.String,java.lang.Class,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigDecimalDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.Class,com.fasterxml.jackson.core.JsonToken)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getDecimalValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getDecimalValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
CALLER: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getNumberType()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getDecimalValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getLongValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getNumberType()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getDecimalValue()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#wrongTokenException(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#weirdStringException(java.lang.String,java.lang.Class,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.Class,com.fasterxml.jackson.core.JsonToken)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getNumberType()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getLongValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getDecimalValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getLongValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
CALLER: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateBasedDeserializer#_parseDate(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#getNullValue()
	CALLEE: static com.fasterxml.jackson.databind.node.NullNode#getInstance()
CALLER: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#withDelegate(com.fasterxml.jackson.databind.util.Converter,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#<init>(com.fasterxml.jackson.databind.util.Converter,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer)
CALLER: com.fasterxml.jackson.databind.DeserializationContext#findContextualValueDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.DeserializerCache#findValueDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JavaType)
CALLER: com.fasterxml.jackson.databind.deser.std.StdDeserializer#findConvertingContentDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getTypeFactory()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#<init>(com.fasterxml.jackson.databind.util.Converter,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.DatabindContext#converterInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#findContextualValueDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findDeserializationContentConverter(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findDeserializationContentConverter(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.BeanProperty.Std#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#getMember()
CALLER: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#withDeserializer(com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#<init>(com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
CALLER: com.fasterxml.jackson.databind.DeserializationContext#findKeyDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.DeserializerCache#findKeyDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType)
CALLER: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#withResolved(com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
CALLER: com.fasterxml.jackson.databind.deser.std.MapDeserializer#withResolved(com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,java.util.HashSet)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#<init>(com.fasterxml.jackson.databind.deser.std.MapDeserializer,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,java.util.HashSet)
CALLER: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#withDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer)
CALLER: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getConfig()
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#canCreateUsingDelegate()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#canCreateUsingDelegate()
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#getDelegateType(com.fasterxml.jackson.databind.DeserializationConfig)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#getDelegateType(com.fasterxml.jackson.databind.DeserializationConfig)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#findDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#findContextualValueDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#findConvertingContentDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#withResolved(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#withResolved(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.deser.std.StdDeserializer#isDefaultDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#isJacksonStdImpl(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#withResolved(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.JsonDeserializer)
CALLER: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#<init>(com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#<init>(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findObjectIdInfo(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.PropertyName#<init>(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#_findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.introspect.ObjectIdInfo#<init>(com.fasterxml.jackson.databind.PropertyName,java.lang.Class,java.lang.Class,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findObjectReferenceInfo(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#_findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.introspect.ObjectIdInfo#withAlwaysAsId(boolean)
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#findProperty(com.fasterxml.jackson.databind.PropertyName)
	CALLEE: com.fasterxml.jackson.databind.PropertyName#getSimpleName()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#findProperty(java.lang.String)
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#handledType()
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializer#withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializer#withIgnorableProperties(java.util.HashSet)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#withIgnorableProperties(java.util.HashSet)
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findFormat(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#_findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
	CALLEE: com.fasterxml.jackson.annotation.JsonFormat.Value#<init>(com.fasterxml.jackson.annotation.JsonFormat)
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializer#asArrayDeserializer()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#getPropertiesInInsertionOrder()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#<init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.deser.SettableBeanProperty[])
CALLER: static com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#<init>()
CALLER: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#withResolved(com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#<init>(com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
CALLER: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#withResolved(com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer)
CALLER: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateBasedDeserializer#createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.util.StdDateFormat#withTimeZone(java.util.TimeZone)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.util.StdDateFormat#withLocale(java.util.Locale)
	CALLEE: com.fasterxml.jackson.databind.util.StdDateFormat#setTimeZone(java.util.TimeZone)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getConfig()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findFormat(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findFormat(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getTimeZone()
	CALLEE: com.fasterxml.jackson.annotation.JsonFormat.Value#getTimeZone()
	CALLEE: com.fasterxml.jackson.annotation.JsonFormat.Value#hasPattern()
	CALLEE: com.fasterxml.jackson.annotation.JsonFormat.Value#getPattern()
	CALLEE: com.fasterxml.jackson.annotation.JsonFormat.Value#hasLocale()
	CALLEE: com.fasterxml.jackson.annotation.JsonFormat.Value#getLocale()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getLocale()
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#withDateFormat(java.text.DateFormat,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#withDateFormat(java.text.DateFormat,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#withDateFormat(java.text.DateFormat,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#withDateFormat(java.text.DateFormat,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#getDateFormat()
	CALLEE: com.fasterxml.jackson.databind.BeanProperty.Std#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.util.StdDateFormat#clone()
CALLER: jersey.repackaged.com.google.common.collect.Maps.TransformedEntriesMap#get(java.lang.Object)
	CALLEE: org.glassfish.jersey.model.ContractProvider.Builder.1#transformEntry(java.lang.Object,java.lang.Object)
CALLER: liquibase.util.csv.opencsv.CSVParser#parseLine(java.lang.String,boolean)
	CALLEE: liquibase.util.csv.opencsv.CSVParser#inQuotes(boolean)
	CALLEE: liquibase.util.csv.opencsv.CSVParser#isNextCharacterEscapable(java.lang.String,boolean,int)
	CALLEE: liquibase.util.csv.opencsv.CSVParser#appendNextCharacterAndAdvanceLoop(java.lang.String,java.lang.StringBuilder,int)
	CALLEE: liquibase.util.csv.opencsv.CSVParser#isNextCharacterEscapedQuote(java.lang.String,boolean,int)
	CALLEE: liquibase.util.csv.opencsv.CSVParser#atStartOfField(java.lang.StringBuilder)
	CALLEE: liquibase.util.csv.opencsv.CSVParser#isAllWhiteSpace(java.lang.CharSequence)
	CALLEE: liquibase.util.csv.opencsv.CSVParser#convertEmptyToNullIfNeeded(java.lang.String,boolean)
CALLER: com.fasterxml.jackson.databind.deser.std.JsonLocationInstantiator#getFromObjectArguments(com.fasterxml.jackson.databind.DeserializationConfig)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#constructType(java.lang.Class)
	CALLEE: static com.fasterxml.jackson.databind.deser.std.JsonLocationInstantiator#creatorProp(java.lang.String,com.fasterxml.jackson.databind.JavaType,int)
CALLER: org.eclipse.jetty.server.session.AbstractSession#willPassivate()
	CALLEE: javax.servlet.http.HttpSessionEvent#<init>(javax.servlet.http.HttpSession)
	CALLEE: org.eclipse.jetty.server.session.MemSession#getAttributeMap()
CALLER: org.eclipse.jetty.server.session.HashedSession#save()
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#getId()
	CALLEE: org.eclipse.jetty.server.session.HashedSession#save(java.io.OutputStream)
	CALLEE: org.eclipse.jetty.server.session.HashedSession#saveFailed()
CALLER: org.glassfish.jersey.server.model.RuntimeResource#<init>(java.util.List,java.util.List,org.glassfish.jersey.server.model.RuntimeResource,java.lang.String,org.glassfish.jersey.server.model.RuntimeResource.1)
	CALLEE: org.glassfish.jersey.server.model.RuntimeResource#<init>(java.util.List,java.util.List,org.glassfish.jersey.server.model.RuntimeResource,java.lang.String)
CALLER: jersey.repackaged.com.google.common.collect.Lists.TransformingSequentialList.1#<init>(jersey.repackaged.com.google.common.collect.Lists.TransformingSequentialList,java.util.ListIterator)
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedListIterator#<init>(java.util.ListIterator)
CALLER: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory#hasInterfaceStartingWith(java.lang.Class,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory#hasInterfaceStartingWith(java.lang.Class,java.lang.String)
CALLER: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory#hasInterface(java.lang.Class,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory#hasInterface(java.lang.Class,java.lang.String)
CALLER: com.fasterxml.jackson.databind.util.ViewMatcher.Single#<init>(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.util.ViewMatcher#<init>()
CALLER: com.fasterxml.jackson.databind.util.ViewMatcher.Multi#<init>(java.lang.Class[])
	CALLEE: com.fasterxml.jackson.databind.util.ViewMatcher#<init>()
CALLER: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator#<init>(com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.deser.SettableBeanProperty[],java.lang.Object[])
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#getName()
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#getInjectableValueId()
CALLER: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.ExtTypedProperty#<init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase#getPropertyName()
CALLER: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#<init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,java.lang.String,com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.util.Annotations,boolean)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#<init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.PropertyMetadata)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#getType()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#getValueTypeDeserializer()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#getMetadata()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#getWrapperName()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#getFullName()
CALLER: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#<init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.introspect.ObjectIdInfo)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#<init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty)
CALLER: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#<init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,java.lang.reflect.Constructor)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#<init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty)
CALLER: com.fasterxml.jackson.databind.DeserializationContext#findNonContextualValueDeserializer(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.deser.DeserializerCache#findValueDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType)
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableRESOURCE_ADD_CHILD_ALREADY_CHILD()
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: org.eclipse.jetty.io.FillInterest#register(org.eclipse.jetty.util.Callback)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#warn(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.io.FillInterest#onFail(java.lang.Throwable)
	CALLEE: org.eclipse.jetty.io.AbstractEndPoint.1#needsFill()
	CALLEE: org.eclipse.jetty.io.FillInterest#fillable()
CALLER: org.glassfish.jersey.server.model.Resource.Builder#processMethodBuilders()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Builder#build()
CALLER: org.glassfish.jersey.server.model.Resource.Builder#processChildResourceBuilders()
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#build()
CALLER: org.glassfish.jersey.server.model.Resource.Builder#mergeResources(java.util.List)
	CALLEE: static jersey.repackaged.com.google.common.collect.Lists#newArrayList()
	CALLEE: static org.glassfish.jersey.server.model.Resource.Data#access$1000(org.glassfish.jersey.server.model.Resource.Data)
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#mergeWith(org.glassfish.jersey.server.model.Resource.Data)
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#buildResourceData()
	CALLEE: static org.glassfish.jersey.server.model.Resource#access$1100(org.glassfish.jersey.server.model.Resource.Data)
CALLER: org.glassfish.jersey.server.model.Resource.Builder#areAllMembersExtended(java.util.List)
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: static org.glassfish.jersey.server.model.Resource.Data#access$1300(org.glassfish.jersey.server.model.Resource.Data)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Data#isExtended()
CALLER: org.glassfish.jersey.server.model.Resource.Data#<init>(java.util.List,java.lang.String,java.util.List,org.glassfish.jersey.server.model.ResourceMethod.Data,java.util.List,java.util.Set,java.util.Set,boolean,org.glassfish.jersey.server.model.Resource.1)
	CALLEE: org.glassfish.jersey.server.model.Resource.Data#<init>(java.util.List,java.lang.String,java.util.List,org.glassfish.jersey.server.model.ResourceMethod.Data,java.util.List,java.util.Set,java.util.Set,boolean)
CALLER: org.glassfish.jersey.server.model.Resource#<init>(org.glassfish.jersey.server.model.Resource,org.glassfish.jersey.server.model.Resource.Data)
	CALLEE: static org.glassfish.jersey.internal.util.collection.Values#lazy(org.glassfish.jersey.internal.util.collection.Value)
	CALLEE: static org.glassfish.jersey.server.model.Resource.Data#access$300(org.glassfish.jersey.server.model.Resource.Data)
	CALLEE: static org.glassfish.jersey.server.model.Resource.Data#access$400(org.glassfish.jersey.server.model.Resource.Data)
	CALLEE: static org.glassfish.jersey.server.model.Resource.Data#access$500(org.glassfish.jersey.server.model.Resource.Data)
	CALLEE: org.glassfish.jersey.server.model.Resource.2#<init>(org.glassfish.jersey.server.model.Resource,org.glassfish.jersey.server.model.Resource.Data)
	CALLEE: static org.glassfish.jersey.server.model.ResourceMethod#transform(org.glassfish.jersey.server.model.Resource,java.util.List)
	CALLEE: static org.glassfish.jersey.server.model.Resource#immutableCopy(java.util.List)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod#<init>(org.glassfish.jersey.server.model.Resource,org.glassfish.jersey.server.model.ResourceMethod.Data)
	CALLEE: static org.glassfish.jersey.server.model.Resource#transform(org.glassfish.jersey.server.model.Resource,java.util.List)
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#PROVIDER_NOT_FOUND(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#localizablePROVIDER_NOT_FOUND(java.lang.Object,java.lang.Object)
CALLER: static org.glassfish.jersey.internal.ServiceFinder#access$300(java.lang.String,java.lang.String)
	CALLEE: static org.glassfish.jersey.internal.ServiceFinder#fail(java.lang.String,java.lang.String)
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#PROVIDER_CLASS_COULD_NOT_BE_LOADED(java.lang.Object,java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#localizablePROVIDER_CLASS_COULD_NOT_BE_LOADED(java.lang.Object,java.lang.Object,java.lang.Object)
CALLER: static org.glassfish.jersey.internal.ServiceFinder#access$200(java.lang.ClassLoader,java.lang.String)
	CALLEE: static org.glassfish.jersey.internal.ServiceFinder#getResources(java.lang.ClassLoader,java.lang.String)
CALLER: static org.glassfish.jersey.internal.ServiceFinder#parse(java.lang.String,java.net.URL,java.util.Set)
	CALLEE: static org.glassfish.jersey.internal.ServiceFinder#fail(java.lang.String,java.lang.String)
	CALLEE: static org.glassfish.jersey.internal.ServiceFinder#parseLine(java.lang.String,java.net.URL,java.io.BufferedReader,int,java.util.List,java.util.Set)
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#localizableDEPENDENT_CLASS_OF_PROVIDER_NOT_FOUND(java.lang.Object,java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#localizableDEPENDENT_CLASS_OF_PROVIDER_FORMAT_ERROR(java.lang.Object,java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: jersey.repackaged.com.google.common.collect.TransformedIterator#remove()
	CALLEE: com.fasterxml.jackson.databind.util.EmptyIterator#remove()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#remove()
	CALLEE: org.glassfish.jersey.server.internal.AbstractResourceFinderAdapter#remove()
	CALLEE: jersey.repackaged.com.google.common.collect.UnmodifiableIterator#remove()
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#localizablePROVIDER_COULD_NOT_BE_CREATED(java.lang.Object,java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.internal.ServiceFinder#fail(java.lang.String,java.lang.String,java.lang.Throwable)
	CALLEE: org.glassfish.jersey.internal.ServiceConfigurationError#<init>(java.lang.String)
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableRESOURCE_MERGE_CONFLICT_LOCATORS(java.lang.Object,java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableSINGLETON_INJECTS_PARAMETER(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableAMBIGUOUS_PARAMETER(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.server.model.ResourceMethodValidator#isConcreteType(java.lang.reflect.Type)
	CALLEE: static org.glassfish.jersey.server.model.ResourceMethodValidator#isConcreteParameterizedType(java.lang.reflect.ParameterizedType)
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizablePARAMETER_UNRESOLVABLE(java.lang.Object,java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.uri.PathPattern#<clinit>()
	CALLEE: org.glassfish.jersey.uri.PathPattern#<init>()
	CALLEE: org.glassfish.jersey.uri.PathPattern#<init>(java.lang.String,org.glassfish.jersey.uri.PathPattern.RightHandPath)
	CALLEE: org.glassfish.jersey.uri.PathPattern.1#<init>()
CALLER: jersey.repackaged.com.google.common.base.Joiner#appendTo(java.lang.StringBuilder,java.util.Iterator)
	CALLEE: jersey.repackaged.com.google.common.base.Joiner#appendTo(java.lang.Appendable,java.util.Iterator)
CALLER: com.zaxxer.hikari.pool.ProxyConnection#markCommitStateDirty()
	CALLEE: com.zaxxer.hikari.util.ClockSource.MillisecondClockSource#currentTime()
	CALLEE: com.zaxxer.hikari.util.ClockSource.NanosecondClockSource#currentTime()
CALLER: static com.zaxxer.hikari.pool.ProxyFactory#getProxyResultSet(com.zaxxer.hikari.pool.ProxyConnection,com.zaxxer.hikari.pool.ProxyStatement,java.sql.ResultSet)
	CALLEE: com.zaxxer.hikari.pool.HikariProxyResultSet#<init>(com.zaxxer.hikari.pool.ProxyConnection,com.zaxxer.hikari.pool.ProxyStatement,java.sql.ResultSet)
CALLER: com.fasterxml.jackson.databind.introspect.BasicClassIntrospector#_findStdTypeDesc(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
CALLER: com.fasterxml.jackson.databind.introspect.BasicClassIntrospector#_findStdJdkCollectionDesc(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver)
	CALLEE: static com.fasterxml.jackson.databind.introspect.BasicBeanDescription#forOtherUse(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedClass)
	CALLEE: com.fasterxml.jackson.databind.DeserializationConfig#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#isAnnotationProcessingEnabled()
	CALLEE: static com.fasterxml.jackson.databind.introspect.AnnotatedClass#construct(java.lang.Class,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicClassIntrospector#_isStdJDKCollection(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.SerializationConfig#getAnnotationIntrospector()
CALLER: com.fasterxml.jackson.databind.introspect.BasicClassIntrospector#collectProperties(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver,boolean,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.DeserializationConfig#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#isAnnotationProcessingEnabled()
	CALLEE: static com.fasterxml.jackson.databind.introspect.AnnotatedClass#construct(java.lang.Class,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicClassIntrospector#constructPropertyCollector(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.JavaType,boolean,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#collect()
	CALLEE: com.fasterxml.jackson.databind.SerializationConfig#getAnnotationIntrospector()
CALLER: static com.fasterxml.jackson.databind.introspect.BasicBeanDescription#forDeserialization(com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#<init>(com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#getJsonValueMethod()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#getInjectables()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#getIgnoredPropertyNames()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#getAnySetterMethod()
CALLER: com.fasterxml.jackson.databind.util.LRUMap#putIfAbsent(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.LRUMap#clear()
CALLER: com.fasterxml.jackson.databind.introspect.BasicClassIntrospector#collectPropertiesWithBuilder(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver,boolean)
	CALLEE: com.fasterxml.jackson.databind.DeserializationConfig#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#isAnnotationProcessingEnabled()
	CALLEE: static com.fasterxml.jackson.databind.introspect.AnnotatedClass#construct(java.lang.Class,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicClassIntrospector#constructPropertyCollector(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.JavaType,boolean,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findPOJOBuilderConfig(com.fasterxml.jackson.databind.introspect.AnnotatedClass)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findPOJOBuilderConfig(com.fasterxml.jackson.databind.introspect.AnnotatedClass)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#collect()
CALLER: com.fasterxml.jackson.databind.cfg.MapperConfig#isAnnotationProcessingEnabled()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#isEnabled(com.fasterxml.jackson.databind.MapperFeature)
CALLER: static com.fasterxml.jackson.databind.introspect.AnnotatedClass#construct(java.lang.Class,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#<init>(java.lang.Class,java.util.List,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver,com.fasterxml.jackson.databind.introspect.AnnotationMap)
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#findSuperTypes(java.lang.Class,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.cfg.MapperConfig#typeResolverBuilderInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#getHandlerInstantiator()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#canOverrideAccessModifiers()
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#createInstance(java.lang.Class,boolean)
CALLER: static com.fasterxml.jackson.annotation.JsonTypeInfo.Id#<clinit>()
	CALLEE: com.fasterxml.jackson.annotation.JsonTypeInfo.Id#<init>(java.lang.String,int,java.lang.String)
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#_constructNoTypeResolverBuilder()
	CALLEE: static com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder#noTypeInfoBuilder()
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#_constructStdTypeResolverBuilder()
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder#<init>()
CALLER: com.fasterxml.jackson.databind.cfg.MapperConfig#typeIdResolverInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#getHandlerInstantiator()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#canOverrideAccessModifiers()
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#createInstance(java.lang.Class,boolean)
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedClass#getAnnotation(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#resolveClassAnnotations()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotationMap#get(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#with(com.fasterxml.jackson.annotation.JsonAutoDetect)
	CALLEE: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#withSetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility)
	CALLEE: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#withCreatorVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility)
	CALLEE: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#withFieldVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility)
	CALLEE: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#withGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility)
	CALLEE: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#withIsGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility)
CALLER: com.fasterxml.jackson.databind.util.NameTransformer.2#<init>(java.lang.String,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.NameTransformer#<init>()
CALLER: com.fasterxml.jackson.databind.util.NameTransformer.3#<init>(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.NameTransformer#<init>()
CALLER: com.fasterxml.jackson.databind.util.NameTransformer.4#<init>(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.NameTransformer#<init>()
CALLER: com.fasterxml.jackson.databind.util.NameTransformer.1#<init>()
	CALLEE: com.fasterxml.jackson.databind.util.NameTransformer#<init>()
CALLER: com.fasterxml.jackson.core.util.TextBuffer#resultArray()
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#size()
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#carr(int)
CALLER: static org.glassfish.hk2.utilities.reflection.Pretty#type(java.lang.reflect.Type)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.MapType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#toString()
	CALLEE: org.glassfish.hk2.utilities.reflection.ParameterizedTypeImpl#toString()
	CALLEE: static org.glassfish.hk2.utilities.reflection.Pretty#pType(java.lang.reflect.ParameterizedType)
	CALLEE: static org.glassfish.hk2.utilities.reflection.Pretty#clazz(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer#deserializeTypedFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer#deserializeTypedFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.AbstractDeserializer#_deserializeFromObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getCurrentLocation()
	CALLEE: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext#findObjectId(java.lang.Object,com.fasterxml.jackson.annotation.ObjectIdGenerator,com.fasterxml.jackson.annotation.ObjectIdResolver)
	CALLEE: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference#<init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,com.fasterxml.jackson.databind.deser.impl.ReadableObjectId)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ReadableObjectId#resolve()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReader#readObjectReference(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getCurrentLocation()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentLocation()
CALLER: com.fasterxml.jackson.databind.deser.AbstractDeserializer#_deserializeIfNatural(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getDoubleValue()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getIntValue()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentTokenId()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getDoubleValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getIntValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getDoubleValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentTokenId()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getIntValue()
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#_handleTypedObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#handledType()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#handledType()
	CALLEE: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext#findObjectId(java.lang.Object,com.fasterxml.jackson.annotation.ObjectIdGenerator,com.fasterxml.jackson.annotation.ObjectIdResolver)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#_convertObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ReadableObjectId#bindItem(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReader#getDeserializer()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#handledType()
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#handledType()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#handledType()
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#handledType()
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#deserializeFromObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getCurrentLocation()
	CALLEE: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext#findObjectId(java.lang.Object,com.fasterxml.jackson.annotation.ObjectIdGenerator,com.fasterxml.jackson.annotation.ObjectIdResolver)
	CALLEE: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference#<init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,com.fasterxml.jackson.databind.deser.impl.ReadableObjectId)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ReadableObjectId#resolve()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReader#readObjectReference(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getCurrentLocation()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentLocation()
CALLER: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer#deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer#deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer#deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseInteger(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseBoolean(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseDouble(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: static com.fasterxml.jackson.databind.deser.std.NumberDeserializers.1#<clinit>()
	CALLEE: static com.fasterxml.jackson.core.JsonToken#values()
	CALLEE: static com.fasterxml.jackson.core.JsonParser.NumberType#values()
CALLER: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#_deserializeAltString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#weirdStringException(java.lang.String,java.lang.Class,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#_checkFailOnNumber(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.EnumResolver#getEnum(int)
	CALLEE: com.fasterxml.jackson.databind.util.EnumResolver#getEnumClass()
	CALLEE: com.fasterxml.jackson.databind.util.EnumResolver#getEnums()
CALLER: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#_checkFailOnNumber(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.String)
CALLER: com.fasterxml.jackson.core.base.ParserBase#getIntValue()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#_parseNumericValue(int)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#convertNumberToInt()
CALLER: com.fasterxml.jackson.databind.DeserializationContext#weirdNumberException(java.lang.Number,java.lang.Class,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#_valueDesc()
	CALLEE: static com.fasterxml.jackson.databind.exc.InvalidFormatException#from(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#_deserializeOther(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#wrongTokenException(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.EnumResolver#getEnumClass()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
CALLER: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.PrimitiveOrWrapperDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.NoClassDefFoundDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ByteDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ShortDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.FloatDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.DoubleDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.BooleanDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.CharDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.IntDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.LongDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.LongDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.CharacterDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ByteDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ShortDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.FloatDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigDecimalDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserializeFromBase64(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.DeserializationContext#leaseObjectBuffer()
	CALLEE: com.fasterxml.jackson.databind.util.ObjectBuffer#<init>()
CALLER: static com.fasterxml.jackson.databind.JsonMappingException#wrapWithPath(java.lang.Throwable,java.lang.Object,int)
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException.Reference#<init>(java.lang.Object,int)
	CALLEE: static com.fasterxml.jackson.databind.JsonMappingException#wrapWithPath(java.lang.Throwable,com.fasterxml.jackson.databind.JsonMappingException.Reference)
CALLER: com.fasterxml.jackson.databind.DeserializationContext#returnObjectBuffer(com.fasterxml.jackson.databind.util.ObjectBuffer)
	CALLEE: com.fasterxml.jackson.databind.util.ObjectBuffer#initialCapacity()
CALLER: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_deserializeFromEmpty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.Class,com.fasterxml.jackson.core.JsonToken)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#handledType()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
CALLER: com.fasterxml.jackson.core.base.ParserMinimalBase#skipChildren()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#_handleEOF()
	CALLEE: com.fasterxml.jackson.core.JsonToken#isStructStart()
	CALLEE: com.fasterxml.jackson.core.JsonToken#isStructEnd()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#_handleEOF()
CALLER: com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase#wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String)
	CALLEE: static com.fasterxml.jackson.databind.JsonMappingException#wrapWithPath(java.lang.Throwable,java.lang.Object,java.lang.String)
CALLER: com.fasterxml.jackson.databind.deser.std.MapDeserializer#_deserializeUsingCreator(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.StringKD#deserializeKey(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#skipChildren()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.NoClassDefFoundDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ByteDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ShortDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.FloatDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.DoubleDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.BooleanDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.CharDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.IntDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.LongDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.LongDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.CharacterDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ByteDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ShortDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.FloatDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigDecimalDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.PrimitiveOrWrapperDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#skipChildren()
	CALLEE: com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase#wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#_readAndBind(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator#findCreatorProperty(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer#deserializeKey(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator#build(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator#startBuilding(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.DelegatingKD#deserializeKey(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#getCreatorIndex()
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#getCreatorIndex()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer#assignParameter(int,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer#bufferMapProperty(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.ValueInstantiator#createUsingDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonLocationInstantiator#getValueTypeDesc()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector.Vanilla#getValueTypeDesc()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#getValueTypeDesc()
CALLER: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#createUsingDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#getInjectableValueId()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#getValueTypeDesc()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#findInjectableValue(java.lang.Object,com.fasterxml.jackson.databind.BeanProperty,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#wrapException(java.lang.Throwable)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#call1(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#call(java.lang.Object[])
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#call1(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#call(java.lang.Object[])
CALLER: com.fasterxml.jackson.databind.deser.std.MapDeserializer#getMapClass()
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
CALLER: com.fasterxml.jackson.databind.deser.ValueInstantiator#createFromString(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#_createFromStringFallbacks(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
CALLER: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#createFromString(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#wrapException(java.lang.Throwable)
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#_createFromStringFallbacks(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#call1(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#call1(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.ValueInstantiator#createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonLocationInstantiator#getValueTypeDesc()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector.Vanilla#getValueTypeDesc()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#getValueTypeDesc()
CALLER: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#getValueTypeDesc()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#wrapException(java.lang.Throwable)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#call()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#call()
CALLER: com.fasterxml.jackson.databind.deser.std.MapDeserializer#_readAndBindStringMap(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#skipChildren()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.NoClassDefFoundDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ByteDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ShortDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.FloatDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.DoubleDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.BooleanDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.CharDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.IntDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.LongDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.LongDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.CharacterDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ByteDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ShortDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.FloatDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigDecimalDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.PrimitiveOrWrapperDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#skipChildren()
	CALLEE: com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase#wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer.MapReferringAccumulator#<init>(java.lang.Class,java.util.Map)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer.MapReferringAccumulator#put(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#handleUnresolvedReference(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.deser.std.MapDeserializer.MapReferringAccumulator,java.lang.Object,com.fasterxml.jackson.databind.deser.UnresolvedForwardReference)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#getObjectIdReader()
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#getObjectIdReader()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#getObjectIdReader()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.MapDeserializer#_readAndBind(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#skipChildren()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.NoClassDefFoundDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ByteDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ShortDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.FloatDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.DoubleDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.BooleanDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.CharDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.IntDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.LongDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.LongDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.CharacterDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ByteDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ShortDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.FloatDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigDecimalDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.PrimitiveOrWrapperDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#skipChildren()
	CALLEE: com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase#wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer.MapReferringAccumulator#<init>(java.lang.Class,java.util.Map)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer.MapReferringAccumulator#put(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#handleUnresolvedReference(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.deser.std.MapDeserializer.MapReferringAccumulator,java.lang.Object,com.fasterxml.jackson.databind.deser.UnresolvedForwardReference)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer#deserializeKey(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#getObjectIdReader()
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#getObjectIdReader()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#getObjectIdReader()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.DelegatingKD#deserializeKey(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.StringKD#deserializeKey(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#isExpectedStartArrayToken()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.NoClassDefFoundDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ByteDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ShortDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.FloatDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.DoubleDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.BooleanDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.CharDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.IntDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.LongDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.LongDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.CharacterDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ByteDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ShortDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.FloatDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigDecimalDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.PrimitiveOrWrapperDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#isExpectedStartArrayToken()
	CALLEE: static com.fasterxml.jackson.databind.JsonMappingException#wrapWithPath(java.lang.Throwable,java.lang.Object,int)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#isExpectedStartArrayToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#isExpectedStartArrayToken()
	CALLEE: static com.fasterxml.jackson.databind.JsonMappingException#wrapWithPath(java.lang.Throwable,java.lang.Object,int)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextTextValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserializeUsingCustom(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.core.JsonParser#nextTextValue()
CALLER: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.NoClassDefFoundDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ByteDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ShortDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.FloatDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.DoubleDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.BooleanDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.CharDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.IntDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.LongDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.LongDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.CharacterDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ByteDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ShortDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.FloatDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigDecimalDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.PrimitiveOrWrapperDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#isExpectedStartArrayToken()
	CALLEE: static com.fasterxml.jackson.databind.JsonMappingException#wrapWithPath(java.lang.Throwable,java.lang.Object,int)
	CALLEE: static com.fasterxml.jackson.databind.JsonMappingException#from(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Throwable)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#setCurrentValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.CollectionReferringAccumulator#<init>(java.lang.Class,java.util.Collection)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.CollectionReferringAccumulator#add(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.CollectionReferringAccumulator#handleUnresolvedReference(com.fasterxml.jackson.databind.deser.UnresolvedForwardReference)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#getObjectIdReader()
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#getObjectIdReader()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#getObjectIdReader()
	CALLEE: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference#getRoid()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.core.JsonParser#setCurrentValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ReadableObjectId#appendReferring(com.fasterxml.jackson.databind.deser.impl.ReadableObjectId.Referring)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#setCurrentValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#isExpectedStartArrayToken()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
CALLER: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_finishString()
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#resetWithShared(char[],int,int)
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#resetWithCopy(char[],int,int)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_finishString2()
CALLER: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_getText2(com.fasterxml.jackson.core.JsonToken)
	CALLEE: com.fasterxml.jackson.core.json.JsonReadContext#getCurrentName()
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#contentsAsString()
	CALLEE: com.fasterxml.jackson.core.JsonToken#id()
	CALLEE: com.fasterxml.jackson.core.JsonToken#asString()
CALLER: com.fasterxml.jackson.core.base.ParserMinimalBase#getValueAsString(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.core.JsonToken#isScalarValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
CALLER: static com.fasterxml.jackson.databind.JsonMappingException#from(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Throwable)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getTokenLocation()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#<init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getTokenLocation()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getTokenLocation()
CALLER: com.fasterxml.jackson.databind.DeserializationContext#getBase64Variant()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#getBase64Variant()
CALLER: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getBinaryValue(com.fasterxml.jackson.core.Base64Variant)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_reportError(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.JsonParser#_constructError(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_decodeBase64(com.fasterxml.jackson.core.Base64Variant)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#_getByteArrayBuilder()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_decodeBase64(java.lang.String,com.fasterxml.jackson.core.util.ByteArrayBuilder,com.fasterxml.jackson.core.Base64Variant)
	CALLEE: com.fasterxml.jackson.core.util.ByteArrayBuilder#toByteArray()
CALLER: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ByteDeser#handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.Class)
	CALLEE: com.fasterxml.jackson.core.JsonParser#getByteValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getByteValue()
CALLER: com.fasterxml.jackson.databind.DeserializationContext#getArrayBuilders()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayBuilders#<init>()
CALLER: com.fasterxml.jackson.core.JsonParser#getByteValue()
	CALLEE: com.fasterxml.jackson.core.JsonParser#_constructError(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getIntValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getIntValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getIntValue()
CALLER: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ShortDeser#handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseShortPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
CALLER: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseShortPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#weirdStringException(java.lang.String,java.lang.Class,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseIntPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.FloatDeser#handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseFloatPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
CALLER: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseFloatPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getFloatValue()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#wrongTokenException(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#weirdStringException(java.lang.String,java.lang.Class,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseFloatPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.Class,com.fasterxml.jackson.core.JsonToken)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_hasTextualNull(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_isPosInf(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_isNegInf(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_isNaN(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getFloatValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getFloatValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
CALLER: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.DoubleDeser#handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseDoublePrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
CALLER: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseDoublePrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getDoubleValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getDoubleValue()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#wrongTokenException(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#weirdStringException(java.lang.String,java.lang.Class,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseDoublePrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.Class,com.fasterxml.jackson.core.JsonToken)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_hasTextualNull(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_isPosInf(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_isNegInf(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_isNaN(java.lang.String)
	CALLEE: static com.fasterxml.jackson.databind.deser.std.StdDeserializer#parseDouble(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getDoubleValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
CALLER: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.BooleanDeser#handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseBooleanPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
CALLER: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseBooleanPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getIntValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getNumberType()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#wrongTokenException(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#weirdStringException(java.lang.String,java.lang.Class,java.lang.String)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getIntValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseBooleanPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.Class,com.fasterxml.jackson.core.JsonToken)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_hasTextualNull(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getNumberType()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseBooleanFromNumber(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getNumberType()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getIntValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
CALLER: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getTextCharacters()
	CALLEE: com.fasterxml.jackson.core.json.JsonReadContext#getCurrentName()
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#getTextBuffer()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_finishString()
	CALLEE: com.fasterxml.jackson.core.JsonToken#id()
	CALLEE: com.fasterxml.jackson.core.io.IOContext#allocNameCopyBuffer(int)
	CALLEE: com.fasterxml.jackson.core.JsonToken#asCharArray()
CALLER: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getTextOffset()
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#getTextOffset()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_finishString()
	CALLEE: com.fasterxml.jackson.core.JsonToken#id()
CALLER: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getTextLength()
	CALLEE: com.fasterxml.jackson.core.json.JsonReadContext#getCurrentName()
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#size()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_finishString()
	CALLEE: com.fasterxml.jackson.core.JsonToken#id()
	CALLEE: com.fasterxml.jackson.core.JsonToken#asCharArray()
CALLER: com.fasterxml.jackson.core.Base64Variant#encode(byte[],boolean)
	CALLEE: com.fasterxml.jackson.core.Base64Variant#getMaxLineLength()
	CALLEE: com.fasterxml.jackson.core.Base64Variant#encodeBase64Chunk(java.lang.StringBuilder,int)
	CALLEE: com.fasterxml.jackson.core.Base64Variant#encodeBase64Partial(java.lang.StringBuilder,int,int)
CALLER: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
CALLER: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#_deserializeCustom(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.PrimitiveOrWrapperDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.JsonParser#nextTextValue()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.NoClassDefFoundDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ByteDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ShortDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.FloatDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.DoubleDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.BooleanDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.CharDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.IntDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.LongDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.LongDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.CharacterDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ByteDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ShortDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.FloatDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigDecimalDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#leaseObjectBuffer()
	CALLEE: static com.fasterxml.jackson.databind.JsonMappingException#wrapWithPath(java.lang.Throwable,java.lang.Object,int)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#returnObjectBuffer(com.fasterxml.jackson.databind.util.ObjectBuffer)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextTextValue()
	CALLEE: com.fasterxml.jackson.databind.util.ObjectBuffer#resetAndStart()
	CALLEE: com.fasterxml.jackson.databind.util.ObjectBuffer#appendCompletedChunk(java.lang.Object[])
	CALLEE: com.fasterxml.jackson.databind.util.ObjectBuffer#completeAndClearBuffer(java.lang.Object[],int,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextTextValue()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.json.JsonReadContext#createChildArrayContext(int,int)
	CALLEE: com.fasterxml.jackson.core.json.JsonReadContext#createChildObjectContext(int,int)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_finishString()
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#contentsAsString()
CALLER: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getValueAsString()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#wrongTokenException(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.Class,com.fasterxml.jackson.core.JsonToken)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
	CALLEE: com.fasterxml.jackson.core.JsonParser#getValueAsString()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getValueAsString()
CALLER: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentTokenId()
	CALLEE: com.fasterxml.jackson.core.JsonToken#id()
CALLER: com.fasterxml.jackson.databind.DeserializationContext#getNodeFactory()
	CALLEE: com.fasterxml.jackson.databind.DeserializationConfig#getNodeFactory()
CALLER: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer#deserializeObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getCurrentName()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer#deserializeObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory)
	CALLEE: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer#deserializeArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory)
	CALLEE: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer#deserializeAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory)
	CALLEE: com.fasterxml.jackson.core.JsonToken#id()
	CALLEE: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer#_fromInt(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory)
	CALLEE: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer#_handleDuplicateField(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory,java.lang.String,com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode)
	CALLEE: com.fasterxml.jackson.databind.node.JsonNodeFactory#nullNode()
	CALLEE: com.fasterxml.jackson.databind.node.JsonNodeFactory#booleanNode(boolean)
	CALLEE: com.fasterxml.jackson.databind.node.JsonNodeFactory#textNode(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.node.JsonNodeFactory#objectNode()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
	CALLEE: com.fasterxml.jackson.databind.node.ObjectNode#replace(java.lang.String,com.fasterxml.jackson.databind.JsonNode)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentName()
CALLER: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer#deserializeArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer#deserializeObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory)
	CALLEE: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer#deserializeArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory)
	CALLEE: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer#deserializeAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory)
	CALLEE: com.fasterxml.jackson.core.JsonToken#id()
	CALLEE: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer#_fromInt(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory)
	CALLEE: com.fasterxml.jackson.databind.node.JsonNodeFactory#nullNode()
	CALLEE: com.fasterxml.jackson.databind.node.JsonNodeFactory#booleanNode(boolean)
	CALLEE: com.fasterxml.jackson.databind.node.JsonNodeFactory#textNode(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.node.JsonNodeFactory#arrayNode()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
	CALLEE: com.fasterxml.jackson.databind.node.ArrayNode#add(com.fasterxml.jackson.databind.JsonNode)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
CALLER: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer#deserializeAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.Class)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentTokenId()
	CALLEE: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer#deserializeObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory)
	CALLEE: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer#deserializeArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#handledType()
	CALLEE: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer#_fromInt(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory)
	CALLEE: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer#_fromEmbedded(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory)
	CALLEE: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer#_fromFloat(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory)
	CALLEE: com.fasterxml.jackson.databind.node.JsonNodeFactory#nullNode()
	CALLEE: com.fasterxml.jackson.databind.node.JsonNodeFactory#booleanNode(boolean)
	CALLEE: com.fasterxml.jackson.databind.node.JsonNodeFactory#textNode(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentTokenId()
CALLER: com.fasterxml.jackson.core.base.ParserBase#setCurrentValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.json.JsonReadContext#setCurrentValue(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#findDeserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#_findDeserializeAndSet2(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String,int)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#handleUnknownVanilla(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#handleUnknownProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#handleIgnoredProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableAnyProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializer#_deserializeUsingPropertyBased(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableAnyProperty#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator#startBuilding(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getCurrentName()
	CALLEE: com.fasterxml.jackson.core.JsonParser#setCurrentValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#getCreatorIndex()
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#getCreatorIndex()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer#assignParameter(int,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer#readIdProperty(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer#bufferProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer#bufferAnyProperty(com.fasterxml.jackson.databind.deser.SettableAnyProperty,java.lang.String,java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#setCurrentValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentName()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#find(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#instantiationException(java.lang.Class,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#handledType()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#setCurrentValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#handleIgnoredProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserializeWithErrorWrapping(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#handlePolymorphic(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#handleUnknownProperties(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#<init>(com.fasterxml.jackson.core.JsonParser)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeFieldName(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#wrapInstantiationProblem(java.lang.Throwable,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator#findCreatorProperty(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator#build(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer)
CALLER: com.fasterxml.jackson.databind.deser.impl.MethodProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#_throwAsIOE(java.lang.Exception,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.impl.FieldProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#_throwAsIOE(java.lang.Exception,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.SettableBeanProperty#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.NoClassDefFoundDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ByteDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ShortDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.FloatDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.DoubleDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.BooleanDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.CharDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.IntDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.LongDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.LongDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.CharacterDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ByteDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ShortDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.FloatDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigDecimalDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.NullProvider#nullValue(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FailingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#handleUnknownProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#skipChildren()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#handleUnknownProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#handleIgnoredProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#skipChildren()
CALLER: com.fasterxml.jackson.databind.deser.impl.MethodProperty#set(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#_throwAsIOE(java.lang.Exception,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.impl.FieldProperty#set(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#_throwAsIOE(java.lang.Exception,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#set(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#setAndReturn(java.lang.Object,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserializeWithUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getCurrentName()
	CALLEE: com.fasterxml.jackson.core.JsonParser#setCurrentValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#skipChildren()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#setCurrentValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#find(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.NoClassDefFoundDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ByteDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ShortDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.FloatDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.DoubleDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.BooleanDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.CharDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.IntDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.LongDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.LongDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.CharacterDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ByteDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ShortDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.FloatDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigDecimalDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#skipChildren()
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#createUsingDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#createUsingDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector.Vanilla#createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#setCurrentValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#injectValues(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getActiveView()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#handleIgnoredProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#<init>(com.fasterxml.jackson.core.JsonParser)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeFieldName(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserializeUsingPropertyBasedWithUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeStartObject()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#visibleInView(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeEndObject()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler#processUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableAnyProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserializeWithExternalTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector.Vanilla#createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserializeUsingPropertyBasedWithExternalTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserializeWithExternalTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#deserializeFromObjectUsingNonDefault(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.JavaType#isAbstract()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#isAbstract()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: static com.fasterxml.jackson.databind.JsonMappingException#from(com.fasterxml.jackson.core.JsonParser,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.NoClassDefFoundDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ByteDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ShortDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.FloatDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.DoubleDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.BooleanDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.CharDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.IntDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.LongDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.LongDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.CharacterDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ByteDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ShortDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.FloatDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigDecimalDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#createUsingDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#createUsingDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#_deserializeUsingPropertyBased(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#_deserializeUsingPropertyBased(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserializeWithView(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.Class)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#find(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#skipChildren()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#handleUnknownVanilla(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#visibleInView(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#skipChildren()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentName()
CALLER: static com.fasterxml.jackson.databind.deser.BeanDeserializer.1#<clinit>()
	CALLEE: static com.fasterxml.jackson.core.JsonToken#values()
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#deserializeFromString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.NoClassDefFoundDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ByteDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ShortDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.FloatDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.DoubleDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.BooleanDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.CharDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.IntDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.LongDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.LongDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.CharacterDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ByteDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ShortDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.FloatDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigDecimalDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#canCreateFromString()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#canCreateFromString()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#deserializeFromObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#createUsingDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#createUsingDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#createFromString(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#createFromString(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#injectValues(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#deserializeFromNumber(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getNumberType()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getLongValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getIntValue()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getIntValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getLongValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getNumberType()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.NoClassDefFoundDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ByteDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ShortDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.FloatDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.DoubleDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.BooleanDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.CharDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.IntDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.LongDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.LongDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.CharacterDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ByteDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ShortDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.FloatDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigDecimalDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#canCreateFromInt()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#canCreateFromInt()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#instantiationException(java.lang.Class,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#handledType()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#deserializeFromObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getIntValue()
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#createUsingDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#createUsingDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#injectValues(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getNumberType()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getLongValue()
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#createFromInt(com.fasterxml.jackson.databind.DeserializationContext,int)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#createFromInt(com.fasterxml.jackson.databind.DeserializationContext,int)
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#createFromLong(com.fasterxml.jackson.databind.DeserializationContext,long)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#createFromLong(com.fasterxml.jackson.databind.DeserializationContext,long)
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#deserializeFromDouble(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getDoubleValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getNumberType()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getDoubleValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getNumberType()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.NoClassDefFoundDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ByteDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ShortDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.FloatDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.DoubleDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.BooleanDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.CharDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.IntDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.LongDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.LongDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.CharacterDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ByteDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ShortDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.FloatDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigDecimalDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#canCreateFromDouble()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#canCreateFromDouble()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#instantiationException(java.lang.Class,java.lang.String)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getDoubleValue()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#handledType()
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#createUsingDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#createUsingDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#injectValues(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getNumberType()
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#createFromDouble(com.fasterxml.jackson.databind.DeserializationContext,double)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#createFromDouble(com.fasterxml.jackson.databind.DeserializationContext,double)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#deserializeFromEmbedded(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getEmbeddedObject()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#deserializeFromObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getEmbeddedObject()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getEmbeddedObject()
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#deserializeFromBoolean(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.NoClassDefFoundDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ByteDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ShortDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.FloatDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.DoubleDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.BooleanDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.CharDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.IntDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.LongDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.LongDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.CharacterDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ByteDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ShortDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.FloatDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigDecimalDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#canCreateFromBoolean()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#canCreateFromBoolean()
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#createUsingDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#createUsingDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#injectValues(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#createFromBoolean(com.fasterxml.jackson.databind.DeserializationContext,boolean)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#createFromBoolean(com.fasterxml.jackson.databind.DeserializationContext,boolean)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#deserializeFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.NoClassDefFoundDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ByteDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ShortDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.FloatDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.DoubleDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.BooleanDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.CharDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.IntDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.LongDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.LongDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.CharacterDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ByteDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ShortDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.FloatDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigDecimalDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#wrongTokenException(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#handledType()
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#createUsingDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#createUsingDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#injectValues(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.Class,com.fasterxml.jackson.core.JsonToken)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#wrapInstantiationProblem(java.lang.Throwable,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.IntDeser#handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseIntPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
CALLER: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseIntPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getIntValue()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#wrongTokenException(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#weirdStringException(java.lang.String,java.lang.Class,java.lang.String)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getIntValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseIntPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.Class,com.fasterxml.jackson.core.JsonToken)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_hasTextualNull(java.lang.String)
	CALLEE: static com.fasterxml.jackson.core.io.NumberInput#parseInt(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getIntValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
CALLER: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.LongDeser#handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseLongPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
CALLER: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseLongPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#wrongTokenException(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#weirdStringException(java.lang.String,java.lang.Class,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseLongPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.Class,com.fasterxml.jackson.core.JsonToken)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_hasTextualNull(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getLongValue()
	CALLEE: static com.fasterxml.jackson.core.io.NumberInput#parseLong(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getLongValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getLongValue()
CALLER: com.fasterxml.jackson.core.base.ParserBase#_parseNumericValue(int)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_reportError(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#getTextOffset()
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#getTextBuffer()
	CALLEE: static com.fasterxml.jackson.core.io.NumberInput#parseInt(char[],int,int)
	CALLEE: static com.fasterxml.jackson.core.io.NumberInput#parseLong(char[],int,int)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#_parseSlowInt(int,char[],int,int)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#_parseSlowFloat(int)
CALLER: com.fasterxml.jackson.core.base.ParserBase#convertNumberToBigInteger()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_throwInternal()
CALLER: com.fasterxml.jackson.core.base.ParserMinimalBase#_throwInternal()
	CALLEE: static com.fasterxml.jackson.core.util.VersionUtil#throwInternal()
CALLER: com.fasterxml.jackson.core.base.ParserBase#convertNumberToBigDecimal()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_throwInternal()
	CALLEE: static com.fasterxml.jackson.core.io.NumberInput#parseBigDecimal(java.lang.String)
CALLER: com.fasterxml.jackson.core.base.ParserBase#convertNumberToDouble()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_throwInternal()
CALLER: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.Class,com.fasterxml.jackson.core.JsonToken)
	CALLEE: static com.fasterxml.jackson.databind.JsonMappingException#from(com.fasterxml.jackson.core.JsonParser,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#_calcName(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer#createBufferInstance(com.fasterxml.jackson.core.JsonParser)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#<init>(com.fasterxml.jackson.core.JsonParser)
CALLER: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateBasedDeserializer#_parseDate(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#wrongTokenException(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateBasedDeserializer#_parseDate(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#getEmptyValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseDate(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
	CALLEE: com.fasterxml.jackson.databind.util.StdDateFormat#parse(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
CALLER: com.fasterxml.jackson.databind.DeserializationContext#constructCalendar(java.util.Date)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getTimeZone()
CALLER: com.fasterxml.jackson.databind.DeserializationContext#getTimeZone()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#getTimeZone()
CALLER: com.fasterxml.jackson.databind.deser.std.UUIDDeserializer#_deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: static com.fasterxml.jackson.core.Base64Variants#getDefaultVariant()
	CALLEE: com.fasterxml.jackson.core.Base64Variant#decode(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UUIDDeserializer#_fromBytes(byte[],com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UUIDDeserializer#_badFormat(java.lang.String)
	CALLEE: static com.fasterxml.jackson.databind.deser.std.UUIDDeserializer#intFromChars(java.lang.String,int)
	CALLEE: static com.fasterxml.jackson.databind.deser.std.UUIDDeserializer#shortFromChars(java.lang.String,int)
CALLER: com.fasterxml.jackson.databind.DeserializationContext#findClass(java.lang.String)
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#findClass(java.lang.String)
CALLER: com.fasterxml.jackson.databind.type.TypeFactory#constructFromCanonical(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.type.TypeParser#parse(java.lang.String)
CALLER: com.fasterxml.jackson.databind.exc.InvalidFormatException#<init>(java.lang.String,java.lang.Object,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#<init>(java.lang.String)
CALLER: com.fasterxml.jackson.databind.DeserializationContext#_valueDesc()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#_desc(java.lang.String)
CALLER: static com.fasterxml.jackson.databind.exc.InvalidFormatException#from(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object,java.lang.Class)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getTokenLocation()
	CALLEE: com.fasterxml.jackson.databind.exc.InvalidFormatException#<init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Object,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.std.UUIDDeserializer#_deserializeEmbedded(java.lang.Object,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#_deserializeEmbedded(java.lang.Object,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UUIDDeserializer#_fromBytes(byte[],com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.core.base.ParserMinimalBase#nextValue()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
CALLER: com.fasterxml.jackson.databind.deser.std.StdDeserializer#handleUnknownProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#handledType()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#skipChildren()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#handledType()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#handleUnknownProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#reportUnknownProperty(java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#skipChildren()
CALLER: com.fasterxml.jackson.core.JsonParser#getBinaryValue()
	CALLEE: static com.fasterxml.jackson.core.Base64Variants#getDefaultVariant()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getBinaryValue(com.fasterxml.jackson.core.Base64Variant)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getBinaryValue(com.fasterxml.jackson.core.Base64Variant)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getBinaryValue(com.fasterxml.jackson.core.Base64Variant)
CALLER: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseInteger(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getIntValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getIntValue()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.PrimitiveOrWrapperDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#wrongTokenException(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#weirdStringException(java.lang.String,java.lang.Class,java.lang.String)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getIntValue()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.Class,com.fasterxml.jackson.core.JsonToken)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseInteger(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#getEmptyValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_hasTextualNull(java.lang.String)
	CALLEE: static com.fasterxml.jackson.core.io.NumberInput#parseInt(java.lang.String)
CALLER: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseBoolean(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getNumberType()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getIntValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getNumberType()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.PrimitiveOrWrapperDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#wrongTokenException(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#weirdStringException(java.lang.String,java.lang.Class,java.lang.String)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getIntValue()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.Class,com.fasterxml.jackson.core.JsonToken)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseBoolean(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#getEmptyValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_hasTextualNull(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getNumberType()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseBooleanFromNumber(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getIntValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
CALLER: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseLong(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getLongValue()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.PrimitiveOrWrapperDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#wrongTokenException(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#weirdStringException(java.lang.String,java.lang.Class,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.Class,com.fasterxml.jackson.core.JsonToken)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseLong(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#getEmptyValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_hasTextualNull(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getLongValue()
	CALLEE: static com.fasterxml.jackson.core.io.NumberInput#parseLong(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getLongValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
CALLER: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseDouble(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getDoubleValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getDoubleValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.PrimitiveOrWrapperDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getDoubleValue()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#wrongTokenException(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#weirdStringException(java.lang.String,java.lang.Class,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.Class,com.fasterxml.jackson.core.JsonToken)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseDouble(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#getEmptyValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_hasTextualNull(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_isPosInf(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_isNegInf(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_isNaN(java.lang.String)
	CALLEE: static com.fasterxml.jackson.databind.deser.std.StdDeserializer#parseDouble(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
CALLER: com.fasterxml.jackson.databind.JsonDeserializer#getEmptyValue()
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.PrimitiveOrWrapperDeserializer#getNullValue()
CALLER: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseByte(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.PrimitiveOrWrapperDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#wrongTokenException(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#weirdStringException(java.lang.String,java.lang.Class,java.lang.String)
	CALLEE: com.fasterxml.jackson.core.JsonParser#getByteValue()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.Class,com.fasterxml.jackson.core.JsonToken)
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#getEmptyValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseByte(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_hasTextualNull(java.lang.String)
	CALLEE: static com.fasterxml.jackson.core.io.NumberInput#parseInt(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getByteValue()
CALLER: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseShort(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.PrimitiveOrWrapperDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#wrongTokenException(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#weirdStringException(java.lang.String,java.lang.Class,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.Class,com.fasterxml.jackson.core.JsonToken)
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#getEmptyValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseShort(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_hasTextualNull(java.lang.String)
	CALLEE: static com.fasterxml.jackson.core.io.NumberInput#parseInt(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.JsonParser#getShortValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getShortValue()
CALLER: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseFloat(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getFloatValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getFloatValue()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.PrimitiveOrWrapperDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#wrongTokenException(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#weirdStringException(java.lang.String,java.lang.Class,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.Class,com.fasterxml.jackson.core.JsonToken)
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#getEmptyValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseFloat(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_hasTextualNull(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_isPosInf(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_isNegInf(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_isNaN(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getFloatValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
CALLER: com.fasterxml.jackson.core.base.ParserBase#getNumberType()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#_parseNumericValue(int)
CALLER: com.fasterxml.jackson.core.base.ParserBase#getLongValue()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#_parseNumericValue(int)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#convertNumberToLong()
CALLER: static com.fasterxml.jackson.databind.node.NullNode#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.node.NullNode#<init>()
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findDeserializationContentConverter(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#_findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#_classIfExplicit(java.lang.Class,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.DeserializerCache#findKeyDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#createKeyDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.deser.DeserializerCache#_handleUnknownKeyDeserializer(com.fasterxml.jackson.databind.JavaType)
CALLER: com.fasterxml.jackson.databind.deser.std.MapDeserializer#<init>(com.fasterxml.jackson.databind.deser.std.MapDeserializer,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,java.util.HashSet)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase#<init>(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#_isStdKeyDeser(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.KeyDeserializer)
CALLER: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#withResolved(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#withResolved(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
CALLER: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#withResolved(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.JsonDeserializer)
CALLER: com.fasterxml.jackson.databind.introspect.ObjectIdInfo#<init>(com.fasterxml.jackson.databind.PropertyName,java.lang.Class,java.lang.Class,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.introspect.ObjectIdInfo#<init>(com.fasterxml.jackson.databind.PropertyName,java.lang.Class,java.lang.Class,boolean,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#findProperty(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#find(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator#findCreatorProperty(java.lang.String)
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializer#withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#<init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializer#withIgnorableProperties(java.util.HashSet)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#<init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,java.util.HashSet)
CALLER: com.fasterxml.jackson.annotation.JsonFormat.Value#<init>(com.fasterxml.jackson.annotation.JsonFormat)
	CALLEE: com.fasterxml.jackson.annotation.JsonFormat.Value#<init>(java.lang.String,com.fasterxml.jackson.annotation.JsonFormat.Shape,java.lang.String,java.lang.String)
CALLER: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#<init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.deser.SettableBeanProperty[])
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#<init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase)
CALLER: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#<init>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#<init>(com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase#<init>(com.fasterxml.jackson.databind.JavaType)
CALLER: com.fasterxml.jackson.databind.DeserializationContext#getLocale()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#getLocale()
CALLER: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#withDateFormat(java.text.DateFormat,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#withDateFormat(java.text.DateFormat,java.lang.String)
CALLER: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#withDateFormat(java.text.DateFormat,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#withDateFormat(java.text.DateFormat,java.lang.String)
CALLER: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#withDateFormat(java.text.DateFormat,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#withDateFormat(java.text.DateFormat,java.lang.String)
CALLER: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#withDateFormat(java.text.DateFormat,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#withDateFormat(java.text.DateFormat,java.lang.String)
CALLER: com.fasterxml.jackson.databind.cfg.MapperConfig#getDateFormat()
	CALLEE: com.fasterxml.jackson.databind.cfg.BaseSettings#getDateFormat()
CALLER: org.glassfish.jersey.model.ContractProvider.Builder.1#transformEntry(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.model.ContractProvider.Builder.1#transformEntry(java.lang.Class,java.lang.Integer)
CALLER: liquibase.util.csv.opencsv.CSVParser#isNextCharacterEscapable(java.lang.String,boolean,int)
	CALLEE: liquibase.util.csv.opencsv.CSVParser#isCharacterEscapable(char)
CALLER: liquibase.util.csv.opencsv.CSVParser#isNextCharacterEscapedQuote(java.lang.String,boolean,int)
	CALLEE: liquibase.util.csv.opencsv.CSVParser#isCharacterQuoteCharacter(char)
CALLER: liquibase.util.csv.opencsv.CSVParser#isAllWhiteSpace(java.lang.CharSequence)
	CALLEE: static liquibase.util.StringUtils#isWhitespace(java.lang.CharSequence)
CALLER: liquibase.util.csv.opencsv.CSVParser#convertEmptyToNullIfNeeded(java.lang.String,boolean)
	CALLEE: liquibase.util.csv.opencsv.CSVParser#shouldConvertEmptyToNull(boolean)
CALLER: static com.fasterxml.jackson.databind.deser.std.JsonLocationInstantiator#creatorProp(java.lang.String,com.fasterxml.jackson.databind.JavaType,int)
	CALLEE: com.fasterxml.jackson.databind.PropertyName#<init>(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#<init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedParameter,int,java.lang.Object,com.fasterxml.jackson.databind.PropertyMetadata)
CALLER: org.eclipse.jetty.server.session.HashedSession#save(java.io.OutputStream)
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#getClusterId()
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#getMaxInactiveInterval()
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#getCreationTime()
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#getNodeId()
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#getAccessed()
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#getRequests()
	CALLEE: org.eclipse.jetty.server.session.MemSession#getAttributes()
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#getAttributeNames()
	CALLEE: org.eclipse.jetty.server.session.MemSession#doGet(java.lang.String)
CALLER: org.glassfish.jersey.server.model.RuntimeResource#<init>(java.util.List,java.util.List,org.glassfish.jersey.server.model.RuntimeResource,java.lang.String)
	CALLEE: static jersey.repackaged.com.google.common.collect.Lists#newArrayList()
	CALLEE: static jersey.repackaged.com.google.common.collect.Lists#newArrayList(java.lang.Iterable)
	CALLEE: org.glassfish.jersey.server.model.RuntimeResource.Builder#build(org.glassfish.jersey.server.model.RuntimeResource)
	CALLEE: org.glassfish.jersey.server.model.Resource#getPathPattern()
	CALLEE: org.glassfish.jersey.server.model.Resource#getResourceLocator()
	CALLEE: org.glassfish.jersey.server.model.Resource#getResourceMethods()
CALLER: jersey.repackaged.com.google.common.collect.TransformedListIterator#<init>(java.util.ListIterator)
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#<init>(java.util.Iterator)
CALLER: org.eclipse.jetty.io.AbstractEndPoint.1#needsFill()
	CALLEE: org.eclipse.jetty.io.SelectChannelEndPoint#needsFill()
CALLER: org.eclipse.jetty.io.FillInterest#fillable()
	CALLEE: org.eclipse.jetty.util.FutureCallback#succeeded()
CALLER: static org.glassfish.jersey.server.model.Resource#access$1100(org.glassfish.jersey.server.model.Resource.Data)
	CALLEE: static org.glassfish.jersey.server.model.Resource#builder(org.glassfish.jersey.server.model.Resource.Data)
CALLER: org.glassfish.jersey.server.model.Resource.Data#<init>(java.util.List,java.lang.String,java.util.List,org.glassfish.jersey.server.model.ResourceMethod.Data,java.util.List,java.util.Set,java.util.Set,boolean)
	CALLEE: org.glassfish.jersey.uri.PathPattern#<init>(java.lang.String,org.glassfish.jersey.uri.PathPattern.RightHandPath)
	CALLEE: static org.glassfish.jersey.server.model.Resource#access$000(java.util.List)
	CALLEE: static org.glassfish.jersey.server.model.Resource#access$100(java.util.Set)
CALLER: static org.glassfish.jersey.server.model.ResourceMethod#transform(org.glassfish.jersey.server.model.Resource,java.util.List)
	CALLEE: static jersey.repackaged.com.google.common.collect.Lists#transform(java.util.List,jersey.repackaged.com.google.common.base.Function)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.1#<init>(org.glassfish.jersey.server.model.Resource)
CALLER: static org.glassfish.jersey.server.model.Resource#immutableCopy(java.util.List)
	CALLEE: static jersey.repackaged.com.google.common.collect.Lists#newArrayList(java.lang.Iterable)
	CALLEE: jersey.repackaged.com.google.common.collect.Lists.TransformingRandomAccessList#isEmpty()
CALLER: static org.glassfish.jersey.server.model.Resource#transform(org.glassfish.jersey.server.model.Resource,java.util.List)
	CALLEE: static jersey.repackaged.com.google.common.collect.Lists#transform(java.util.List,jersey.repackaged.com.google.common.base.Function)
	CALLEE: org.glassfish.jersey.server.model.Resource.1#<init>(org.glassfish.jersey.server.model.Resource)
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#localizablePROVIDER_NOT_FOUND(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.internal.ServiceFinder#fail(java.lang.String,java.lang.String)
	CALLEE: org.glassfish.jersey.internal.ServiceConfigurationError#<init>(java.lang.String)
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#localizablePROVIDER_CLASS_COULD_NOT_BE_LOADED(java.lang.Object,java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.internal.ServiceFinder#getResources(java.lang.ClassLoader,java.lang.String)
	CALLEE: static org.glassfish.jersey.internal.ServiceFinder#getResources(java.lang.String)
CALLER: static org.glassfish.jersey.internal.ServiceFinder#parseLine(java.lang.String,java.net.URL,java.io.BufferedReader,int,java.util.List,java.util.Set)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#ILLEGAL_CONFIG_SYNTAX()
	CALLEE: static org.glassfish.jersey.internal.ServiceFinder#fail(java.lang.String,java.net.URL,int,java.lang.String)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#ILLEGAL_PROVIDER_CLASS_NAME(java.lang.Object)
CALLER: static org.glassfish.jersey.server.model.ResourceMethodValidator#isConcreteParameterizedType(java.lang.reflect.ParameterizedType)
	CALLEE: org.glassfish.hk2.utilities.reflection.ParameterizedTypeImpl#getActualTypeArguments()
	CALLEE: static org.glassfish.jersey.server.model.ResourceMethodValidator#isConcreteType(java.lang.reflect.Type)
	CALLEE: org.glassfish.jersey.internal.util.ReflectionHelper.17#getActualTypeArguments()
CALLER: org.glassfish.jersey.uri.PathPattern#<init>()
	CALLEE: org.glassfish.jersey.uri.PatternWithGroups#<init>()
CALLER: static org.glassfish.jersey.uri.PathPattern.RightHandPath#<clinit>()
	CALLEE: org.glassfish.jersey.uri.PathPattern.RightHandPath#<init>(java.lang.String,int,java.lang.String)
CALLER: org.glassfish.jersey.uri.PathPattern#<init>(java.lang.String,org.glassfish.jersey.uri.PathPattern.RightHandPath)
	CALLEE: org.glassfish.jersey.uri.PathTemplate#<init>(java.lang.String)
	CALLEE: org.glassfish.jersey.uri.PathPattern#<init>(org.glassfish.jersey.uri.PathTemplate,org.glassfish.jersey.uri.PathPattern.RightHandPath)
CALLER: jersey.repackaged.com.google.common.base.Joiner#appendTo(java.lang.Appendable,java.util.Iterator)
	CALLEE: static jersey.repackaged.com.google.common.base.Preconditions#checkNotNull(java.lang.Object)
	CALLEE: jersey.repackaged.com.google.common.base.Joiner#toString(java.lang.Object)
CALLER: com.zaxxer.hikari.pool.HikariProxyResultSet#<init>(com.zaxxer.hikari.pool.ProxyConnection,com.zaxxer.hikari.pool.ProxyStatement,java.sql.ResultSet)
	CALLEE: com.zaxxer.hikari.pool.ProxyResultSet#<init>(com.zaxxer.hikari.pool.ProxyConnection,com.zaxxer.hikari.pool.ProxyStatement,java.sql.ResultSet)
CALLER: com.fasterxml.jackson.databind.introspect.BasicClassIntrospector#_isStdJDKCollection(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.JavaType#isArrayType()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#isArrayType()
CALLER: com.fasterxml.jackson.databind.introspect.BasicClassIntrospector#constructPropertyCollector(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.JavaType,boolean,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#<init>(com.fasterxml.jackson.databind.cfg.MapperConfig,boolean,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.lang.String)
CALLER: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#<init>(com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#<init>(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.util.List)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#getObjectIdInfo()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#getProperties()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#getClassDef()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#getType()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#getConfig()
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findPOJOBuilderConfig(com.fasterxml.jackson.databind.introspect.AnnotatedClass)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#_findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder.Value#<init>(com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder)
CALLER: static com.fasterxml.jackson.databind.util.ClassUtil#findSuperTypes(java.lang.Class,java.lang.Class)
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#findSuperTypes(java.lang.Class,java.lang.Class,java.util.List)
CALLER: static com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder#noTypeInfoBuilder()
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder#<init>()
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder#init(com.fasterxml.jackson.annotation.JsonTypeInfo.Id,com.fasterxml.jackson.databind.jsontype.TypeIdResolver)
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedClass#resolveClassAnnotations()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotationMap#<init>()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_addClassMixIns(com.fasterxml.jackson.databind.introspect.AnnotationMap,java.lang.Class,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_addAnnotationsIfNotPresent(com.fasterxml.jackson.databind.introspect.AnnotationMap,java.lang.annotation.Annotation[])
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_addClassMixIns(com.fasterxml.jackson.databind.introspect.AnnotationMap,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#withGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility)
	CALLEE: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#<init>(com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility)
CALLER: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext#findObjectId(java.lang.Object,com.fasterxml.jackson.annotation.ObjectIdGenerator,com.fasterxml.jackson.annotation.ObjectIdResolver)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ReadableObjectId#<init>(com.fasterxml.jackson.annotation.ObjectIdGenerator.IdKey)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ReadableObjectId#setResolver(com.fasterxml.jackson.annotation.ObjectIdResolver)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyBasedObjectIdGenerator#key(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference#<init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,com.fasterxml.jackson.databind.deser.impl.ReadableObjectId)
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#<init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation)
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#_convertObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.NoClassDefFoundDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ByteDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ShortDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.FloatDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.DoubleDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.BooleanDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.CharDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.IntDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.LongDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.LongDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.CharacterDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ByteDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ShortDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.FloatDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigDecimalDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#<init>(com.fasterxml.jackson.core.JsonParser)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeString(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeNumber(long)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeNumber(int)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeObject(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#asParser()
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.core.base.ParserBase#convertNumberToInt()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_reportError(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_throwInternal()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#reportOverflowInt()
CALLER: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserializeFromBase64(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getBase64Variant()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getBinaryValue(com.fasterxml.jackson.core.Base64Variant)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getBinaryValue(com.fasterxml.jackson.core.Base64Variant)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getBinaryValue(com.fasterxml.jackson.core.Base64Variant)
CALLER: static com.fasterxml.jackson.databind.JsonMappingException#wrapWithPath(java.lang.Throwable,com.fasterxml.jackson.databind.JsonMappingException.Reference)
	CALLEE: org.apache.log4j.config.PropertySetterException#getMessage()
	CALLEE: org.glassfish.hk2.api.MultiException#getMessage()
	CALLEE: org.glassfish.jersey.server.model.ModelValidationException#getMessage()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#<init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable)
	CALLEE: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference#getMessage()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#prependPath(com.fasterxml.jackson.databind.JsonMappingException.Reference)
	CALLEE: org.h2.jdbc.JdbcSQLException#getMessage()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#getMessage()
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#getMessage()
CALLER: static com.fasterxml.jackson.databind.JsonMappingException#wrapWithPath(java.lang.Throwable,java.lang.Object,java.lang.String)
	CALLEE: static com.fasterxml.jackson.databind.JsonMappingException#wrapWithPath(java.lang.Throwable,com.fasterxml.jackson.databind.JsonMappingException.Reference)
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException.Reference#<init>(java.lang.Object,java.lang.String)
CALLER: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#wrapException(java.lang.Throwable)
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#getMessage()
	CALLEE: org.glassfish.hk2.api.MultiException#getMessage()
	CALLEE: org.glassfish.jersey.server.model.ModelValidationException#getMessage()
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#getMessage()
	CALLEE: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference#getMessage()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#<init>(java.lang.String,java.lang.Throwable)
	CALLEE: org.apache.log4j.config.PropertySetterException#getMessage()
	CALLEE: org.h2.jdbc.JdbcSQLException#getMessage()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#getValueTypeDesc()
CALLER: com.fasterxml.jackson.databind.deser.ValueInstantiator#_createFromStringFallbacks(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#canCreateFromBoolean()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#canCreateFromBoolean()
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonLocationInstantiator#getValueTypeDesc()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector.Vanilla#getValueTypeDesc()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#getValueTypeDesc()
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#createFromBoolean(com.fasterxml.jackson.databind.DeserializationContext,boolean)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#createFromBoolean(com.fasterxml.jackson.databind.DeserializationContext,boolean)
CALLER: com.fasterxml.jackson.databind.deser.std.MapDeserializer#handleUnresolvedReference(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.deser.std.MapDeserializer.MapReferringAccumulator,java.lang.Object,com.fasterxml.jackson.databind.deser.UnresolvedForwardReference)
	CALLEE: static com.fasterxml.jackson.databind.JsonMappingException#from(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Throwable)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer.MapReferringAccumulator#handleUnresolvedReference(com.fasterxml.jackson.databind.deser.UnresolvedForwardReference,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference#getRoid()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ReadableObjectId#appendReferring(com.fasterxml.jackson.databind.deser.impl.ReadableObjectId.Referring)
CALLER: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.NoClassDefFoundDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ByteDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ShortDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.FloatDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.DoubleDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.BooleanDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.CharDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.IntDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.LongDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.LongDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.CharacterDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ByteDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ShortDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.FloatDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigDecimalDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.PrimitiveOrWrapperDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.Class)
	CALLEE: static com.fasterxml.jackson.databind.JsonMappingException#wrapWithPath(java.lang.Throwable,java.lang.Object,int)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
CALLER: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.NoClassDefFoundDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ByteDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ShortDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.FloatDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.DoubleDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.BooleanDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.CharDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.IntDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.LongDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.LongDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.CharacterDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ByteDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ShortDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.FloatDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigDecimalDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.PrimitiveOrWrapperDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserializeUsingCustom(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.NoClassDefFoundDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ByteDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ShortDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.FloatDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.DoubleDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.BooleanDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.CharDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.IntDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.LongDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.LongDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.CharacterDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ByteDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ShortDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.FloatDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigDecimalDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.PrimitiveOrWrapperDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextTextValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.JsonParser#nextTextValue()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.CollectionReferringAccumulator#handleUnresolvedReference(com.fasterxml.jackson.databind.deser.UnresolvedForwardReference)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.CollectionReferring#<init>(com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.CollectionReferringAccumulator,com.fasterxml.jackson.databind.deser.UnresolvedForwardReference,java.lang.Class)
CALLER: com.fasterxml.jackson.core.util.TextBuffer#resetWithCopy(char[],int,int)
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#clearSegments()
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#buf(int)
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#append(char[],int,int)
CALLER: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_finishString2()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#loadMore()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_reportInvalidEOF(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_decodeEscaped()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_throwUnquotedSpace(int,java.lang.String)
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#setCurrentLength(int)
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#finishCurrentSegment()
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#getCurrentSegmentSize()
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#getCurrentSegment()
CALLER: com.fasterxml.jackson.databind.cfg.MapperConfig#getBase64Variant()
	CALLEE: com.fasterxml.jackson.databind.cfg.BaseSettings#getBase64Variant()
CALLER: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_decodeBase64(com.fasterxml.jackson.core.Base64Variant)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#loadMoreGuaranteed()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#_getByteArrayBuilder()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#_decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant,char,int)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant,int,int,java.lang.String)
	CALLEE: com.fasterxml.jackson.core.util.ByteArrayBuilder#toByteArray()
	CALLEE: com.fasterxml.jackson.core.Base64Variant#decodeBase64Char(char)
	CALLEE: com.fasterxml.jackson.core.Base64Variant#usesPadding()
	CALLEE: com.fasterxml.jackson.core.util.ByteArrayBuilder#append(int)
	CALLEE: com.fasterxml.jackson.core.Base64Variant#usesPaddingChar(char)
	CALLEE: com.fasterxml.jackson.core.Base64Variant#getPaddingChar()
	CALLEE: com.fasterxml.jackson.core.util.ByteArrayBuilder#appendTwoBytes(int)
	CALLEE: com.fasterxml.jackson.core.util.ByteArrayBuilder#appendThreeBytes(int)
CALLER: com.fasterxml.jackson.core.base.ParserBase#_getByteArrayBuilder()
	CALLEE: com.fasterxml.jackson.core.util.ByteArrayBuilder#<init>()
	CALLEE: com.fasterxml.jackson.core.util.ByteArrayBuilder#reset()
CALLER: com.fasterxml.jackson.core.base.ParserMinimalBase#_decodeBase64(java.lang.String,com.fasterxml.jackson.core.util.ByteArrayBuilder,com.fasterxml.jackson.core.Base64Variant)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_reportError(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.Base64Variant#decode(java.lang.String,com.fasterxml.jackson.core.util.ByteArrayBuilder)
CALLER: com.fasterxml.jackson.core.base.ParserBase#getFloatValue()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getDoubleValue()
CALLER: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseBooleanFromNumber(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getNumberType()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getLongValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getNumberType()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getLongValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getLongValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getNumberType()
CALLER: com.fasterxml.jackson.core.io.IOContext#allocNameCopyBuffer(int)
	CALLEE: com.fasterxml.jackson.core.io.IOContext#_verifyAlloc(java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.util.BufferRecycler#allocCharBuffer(int,int)
CALLER: com.fasterxml.jackson.databind.util.ObjectBuffer#resetAndStart()
	CALLEE: com.fasterxml.jackson.databind.util.ObjectBuffer#_reset()
CALLER: com.fasterxml.jackson.databind.util.ObjectBuffer#appendCompletedChunk(java.lang.Object[])
	CALLEE: com.fasterxml.jackson.databind.util.LinkedNode#<init>(java.lang.Object,com.fasterxml.jackson.databind.util.LinkedNode)
	CALLEE: com.fasterxml.jackson.databind.util.LinkedNode#linkNext(com.fasterxml.jackson.databind.util.LinkedNode)
CALLER: com.fasterxml.jackson.databind.util.ObjectBuffer#completeAndClearBuffer(java.lang.Object[],int,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.util.ObjectBuffer#_reset()
	CALLEE: com.fasterxml.jackson.databind.util.ObjectBuffer#_copyTo(java.lang.Object,int,java.lang.Object[],int)
CALLER: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer#_fromInt(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getBigIntegerValue()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getIntValue()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getNumberType()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getLongValue()
	CALLEE: com.fasterxml.jackson.databind.node.JsonNodeFactory#numberNode(long)
	CALLEE: com.fasterxml.jackson.databind.node.JsonNodeFactory#numberNode(int)
	CALLEE: com.fasterxml.jackson.databind.node.JsonNodeFactory#numberNode(java.math.BigInteger)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getNumberType()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getLongValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getBigIntegerValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getIntValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getBigIntegerValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getIntValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getLongValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getNumberType()
CALLER: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer#_handleDuplicateField(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory,java.lang.String,com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer#_reportProblem(com.fasterxml.jackson.core.JsonParser,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer#_handleDuplicateField(java.lang.String,com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode)
CALLER: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer#_fromEmbedded(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getEmbeddedObject()
	CALLEE: com.fasterxml.jackson.databind.node.JsonNodeFactory#nullNode()
	CALLEE: com.fasterxml.jackson.databind.node.JsonNodeFactory#pojoNode(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.JsonNodeFactory#binaryNode(byte[])
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getEmbeddedObject()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getEmbeddedObject()
CALLER: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer#_fromFloat(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getDecimalValue()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getDoubleValue()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getNumberType()
	CALLEE: com.fasterxml.jackson.databind.node.JsonNodeFactory#numberNode(double)
	CALLEE: com.fasterxml.jackson.databind.node.JsonNodeFactory#numberNode(java.math.BigDecimal)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getDoubleValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getDecimalValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getNumberType()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getDoubleValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getDecimalValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getNumberType()
CALLER: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: static com.fasterxml.jackson.databind.JsonMappingException#wrapWithPath(java.lang.Throwable,java.lang.Object,java.lang.String)
CALLER: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#_findDeserializeAndSet2(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String,int)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#_findWithEquals(java.lang.String,int)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#handleIgnoredProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#skipChildren()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#getKnownPropertyNames()
	CALLEE: static com.fasterxml.jackson.databind.exc.IgnoredPropertyException#from(com.fasterxml.jackson.core.JsonParser,java.lang.Object,java.lang.String,java.util.Collection)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#skipChildren()
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: static com.fasterxml.jackson.databind.JsonMappingException#wrapWithPath(java.lang.Throwable,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#throwOrReturnThrowable(java.lang.Throwable,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserializeWithErrorWrapping(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#handlePolymorphic(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#handleUnknownProperties(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeEndObject()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#asParser()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#_findSubclassDeserializer(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#handleUnknownProperties(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#handleUnknownProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeEndObject()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#asParser()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getCurrentName()
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getCurrentName()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#setCurrentValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#findDeserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#handleUnknownVanilla(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#injectValues(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getActiveView()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserializeWithView(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserializeWithExternalTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserializeWithUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getCurrentName()
	CALLEE: com.fasterxml.jackson.core.JsonParser#setCurrentValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#setCurrentValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentName()
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer#<init>(com.fasterxml.jackson.core.JsonParser)
	CALLEE: com.fasterxml.jackson.core.JsonParser#canReadObjectId()
	CALLEE: com.fasterxml.jackson.core.JsonGenerator#<init>()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getCodec()
	CALLEE: static com.fasterxml.jackson.core.json.JsonWriteContext#createRootContext(com.fasterxml.jackson.core.json.DupDetector)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Segment#<init>()
	CALLEE: com.fasterxml.jackson.core.JsonParser#canReadTypeId()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#canReadObjectId()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#canReadTypeId()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getCodec()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#canReadObjectId()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#canReadTypeId()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCodec()
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer#writeFieldName(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#_append(com.fasterxml.jackson.core.JsonToken,java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.json.JsonWriteContext#writeFieldName(java.lang.String)
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer#copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeFieldName(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeStartObject()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeEndObject()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#_checkNativeIds(com.fasterxml.jackson.core.JsonParser)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeStartArray()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeEndArray()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getCurrentName()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentName()
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#wrapInstantiationProblem(java.lang.Throwable,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#instantiationException(java.lang.Class,java.lang.Throwable)
CALLER: com.fasterxml.jackson.databind.deser.SettableBeanProperty#_throwAsIOE(java.lang.Exception,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#<init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#getName()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#getType()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#_throwAsIOE(java.lang.Exception)
CALLER: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FailingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.NoClassDefFoundDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ByteDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ShortDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.FloatDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.DoubleDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.BooleanDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.CharDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.IntDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.LongDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.LongDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.CharacterDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ByteDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ShortDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.FloatDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigDecimalDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext#findObjectId(java.lang.Object,com.fasterxml.jackson.annotation.ObjectIdGenerator,com.fasterxml.jackson.annotation.ObjectIdResolver)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ReadableObjectId#bindItem(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#setAndReturn(java.lang.Object,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.impl.NullProvider#nullValue(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.String)
CALLER: com.fasterxml.jackson.databind.deser.std.StdDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer#deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer#deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer#deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.impl.FailingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.String)
CALLER: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#setAndReturn(java.lang.Object,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserializeUsingPropertyBasedWithUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator#findCreatorProperty(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator#build(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator#startBuilding(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getCurrentName()
	CALLEE: com.fasterxml.jackson.core.JsonParser#setCurrentValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#getCreatorIndex()
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#getCreatorIndex()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer#assignParameter(int,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer#readIdProperty(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer#bufferProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer#bufferAnyProperty(com.fasterxml.jackson.databind.deser.SettableAnyProperty,java.lang.String,java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#setCurrentValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentName()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#find(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#handledType()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#setCurrentValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#handleIgnoredProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserializeWithErrorWrapping(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#<init>(com.fasterxml.jackson.core.JsonParser)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeFieldName(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#wrapInstantiationProblem(java.lang.Throwable,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeStartObject()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeEndObject()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler#processUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#close()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableAnyProperty#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer#writeStartObject()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#_append(com.fasterxml.jackson.core.JsonToken)
	CALLEE: com.fasterxml.jackson.core.json.JsonWriteContext#createChildObjectContext()
CALLER: com.fasterxml.jackson.databind.deser.SettableBeanProperty#visibleInView(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.util.ViewMatcher.Single#isVisibleForView(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.util.ViewMatcher.Multi#isVisibleForView(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.util.ViewMatcher#isVisibleForView(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer#writeEndObject()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#_append(com.fasterxml.jackson.core.JsonToken)
	CALLEE: com.fasterxml.jackson.core.json.JsonWriteContext#getParent()
CALLER: com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler#processUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#asParser()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserializeUsingPropertyBasedWithExternalTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler#handlePropertyValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler#complete(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#getCreatorIndex()
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#getCreatorIndex()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer#assignParameter(int,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer#readIdProperty(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer#bufferProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer#bufferAnyProperty(com.fasterxml.jackson.databind.deser.SettableAnyProperty,java.lang.String,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler#complete(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer,com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentName()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#find(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#handledType()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#handleIgnoredProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserializeWithErrorWrapping(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#<init>(com.fasterxml.jackson.core.JsonParser)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#wrapInstantiationProblem(java.lang.Throwable,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeStartObject()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator#findCreatorProperty(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableAnyProperty#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator#build(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator#startBuilding(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler#start()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserializeWithExternalTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler#handlePropertyValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler#complete(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler#handleTypePropertyValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#skipChildren()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentName()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#find(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.JsonToken#isScalarValue()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#skipChildren()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#handleUnknownProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getActiveView()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#handleIgnoredProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#visibleInView(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableAnyProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler#start()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getCurrentName()
CALLER: static com.fasterxml.jackson.databind.deser.BeanDeserializerBase.1#<clinit>()
	CALLEE: static com.fasterxml.jackson.core.JsonParser.NumberType#values()
CALLER: com.fasterxml.jackson.databind.deser.ValueInstantiator#createFromInt(com.fasterxml.jackson.databind.DeserializationContext,int)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonLocationInstantiator#getValueTypeDesc()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector.Vanilla#getValueTypeDesc()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#getValueTypeDesc()
CALLER: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#createFromInt(com.fasterxml.jackson.databind.DeserializationContext,int)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#getValueTypeDesc()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#wrapException(java.lang.Throwable)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#call1(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#call1(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.ValueInstantiator#createFromLong(com.fasterxml.jackson.databind.DeserializationContext,long)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonLocationInstantiator#getValueTypeDesc()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector.Vanilla#getValueTypeDesc()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#getValueTypeDesc()
CALLER: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#createFromLong(com.fasterxml.jackson.databind.DeserializationContext,long)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#getValueTypeDesc()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#wrapException(java.lang.Throwable)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#call1(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#call1(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.ValueInstantiator#createFromDouble(com.fasterxml.jackson.databind.DeserializationContext,double)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonLocationInstantiator#getValueTypeDesc()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector.Vanilla#getValueTypeDesc()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#getValueTypeDesc()
CALLER: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#createFromDouble(com.fasterxml.jackson.databind.DeserializationContext,double)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#getValueTypeDesc()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#wrapException(java.lang.Throwable)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#call1(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#call1(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.ValueInstantiator#createFromBoolean(com.fasterxml.jackson.databind.DeserializationContext,boolean)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonLocationInstantiator#getValueTypeDesc()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector.Vanilla#getValueTypeDesc()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#getValueTypeDesc()
CALLER: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#createFromBoolean(com.fasterxml.jackson.databind.DeserializationContext,boolean)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#getValueTypeDesc()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#wrapException(java.lang.Throwable)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#call1(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#call1(java.lang.Object)
CALLER: static com.fasterxml.jackson.core.io.NumberInput#parseLong(java.lang.String)
	CALLEE: static com.fasterxml.jackson.core.io.NumberInput#parseInt(java.lang.String)
CALLER: static com.fasterxml.jackson.core.io.NumberInput#parseLong(char[],int,int)
	CALLEE: static com.fasterxml.jackson.core.io.NumberInput#parseInt(char[],int,int)
CALLER: com.fasterxml.jackson.core.base.ParserBase#_parseSlowInt(int,char[],int,int)
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#contentsAsString()
	CALLEE: static com.fasterxml.jackson.core.io.NumberInput#inLongRange(char[],int,int,boolean)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_wrapError(java.lang.String,java.lang.Throwable)
CALLER: com.fasterxml.jackson.core.base.ParserBase#_parseSlowFloat(int)
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#contentsAsString()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_wrapError(java.lang.String,java.lang.Throwable)
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#contentsAsDecimal()
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#contentsAsDouble()
CALLER: static com.fasterxml.jackson.core.io.NumberInput#parseBigDecimal(java.lang.String)
	CALLEE: static com.fasterxml.jackson.core.io.NumberInput#_badBD(java.lang.String)
CALLER: com.fasterxml.jackson.databind.DeserializationContext#_calcName(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#_calcName(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_parseDate(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getLongValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getLongValue()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#getNullValue()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#wrongTokenException(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#weirdStringException(java.lang.String,java.lang.Class,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.Class,com.fasterxml.jackson.core.JsonToken)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateBasedDeserializer#_parseDate(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#getEmptyValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#_hasTextualNull(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getLongValue()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#parseDate(java.lang.String)
CALLER: com.fasterxml.jackson.databind.cfg.MapperConfig#getTimeZone()
	CALLEE: com.fasterxml.jackson.databind.cfg.BaseSettings#getTimeZone()
CALLER: com.fasterxml.jackson.core.Base64Variant#decode(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.util.ByteArrayBuilder#<init>()
	CALLEE: com.fasterxml.jackson.core.Base64Variant#decode(java.lang.String,com.fasterxml.jackson.core.util.ByteArrayBuilder)
	CALLEE: com.fasterxml.jackson.core.util.ByteArrayBuilder#toByteArray()
CALLER: com.fasterxml.jackson.databind.deser.std.UUIDDeserializer#_fromBytes(byte[],com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.String)
	CALLEE: static com.fasterxml.jackson.databind.deser.std.UUIDDeserializer#_long(byte[],int)
CALLER: static com.fasterxml.jackson.databind.deser.std.UUIDDeserializer#intFromChars(java.lang.String,int)
	CALLEE: static com.fasterxml.jackson.databind.deser.std.UUIDDeserializer#byteFromChars(java.lang.String,int)
CALLER: static com.fasterxml.jackson.databind.deser.std.UUIDDeserializer#shortFromChars(java.lang.String,int)
	CALLEE: static com.fasterxml.jackson.databind.deser.std.UUIDDeserializer#byteFromChars(java.lang.String,int)
CALLER: static com.fasterxml.jackson.databind.util.ClassUtil#findClass(java.lang.String)
	CALLEE: org.h2.jdbc.JdbcSQLException#getMessage()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#getMessage()
	CALLEE: org.glassfish.hk2.api.MultiException#getMessage()
	CALLEE: org.glassfish.jersey.server.model.ModelValidationException#getMessage()
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#getMessage()
	CALLEE: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference#getMessage()
	CALLEE: org.apache.log4j.config.PropertySetterException#getMessage()
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#getRootCause(java.lang.Throwable)
CALLER: com.fasterxml.jackson.databind.type.TypeParser#parse(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.type.TypeParser.MyTokenizer#<init>(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.type.TypeParser#parseType(com.fasterxml.jackson.databind.type.TypeParser.MyTokenizer)
	CALLEE: com.fasterxml.jackson.databind.type.TypeParser.MyTokenizer#hasMoreTokens()
	CALLEE: com.fasterxml.jackson.databind.type.TypeParser#_problem(com.fasterxml.jackson.databind.type.TypeParser.MyTokenizer,java.lang.String)
CALLER: com.fasterxml.jackson.databind.exc.InvalidFormatException#<init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Object,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#<init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation)
CALLER: com.fasterxml.jackson.databind.DeserializationContext#handleUnknownProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.DeserializationConfig#getProblemHandlers()
CALLER: com.fasterxml.jackson.databind.DeserializationContext#reportUnknownProperty(java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#getKnownPropertyNames()
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#getKnownPropertyNames()
	CALLEE: static com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException#from(com.fasterxml.jackson.core.JsonParser,java.lang.Object,java.lang.String,java.util.Collection)
CALLER: com.fasterxml.jackson.core.JsonParser#getShortValue()
	CALLEE: com.fasterxml.jackson.core.JsonParser#_constructError(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getIntValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getIntValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getIntValue()
CALLER: com.fasterxml.jackson.core.base.ParserBase#convertNumberToLong()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_throwInternal()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#reportOverflowLong()
CALLER: com.fasterxml.jackson.databind.node.NullNode#<init>()
	CALLEE: com.fasterxml.jackson.databind.node.ValueNode#<init>()
CALLER: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#createKeyDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#introspectClassAnnotations(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getConfig()
	CALLEE: com.fasterxml.jackson.databind.JavaType#isEnumType()
	CALLEE: com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig#hasDeserializerModifiers()
	CALLEE: com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig#deserializerModifiers()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#iterator()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#next()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#hasNext()
	CALLEE: com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig#hasKeyDeserializers()
	CALLEE: com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig#keyDeserializers()
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#_createEnumKeyDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)
	CALLEE: static com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers#findStringBasedKeyDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers#findKeyDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription)
CALLER: com.fasterxml.jackson.databind.deser.DeserializerCache#_handleUnknownKeyDeserializer(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#<init>(java.lang.String)
CALLER: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#withResolved(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.JsonDeserializer)
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializer#<init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#<init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializer#<init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,java.util.HashSet)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#<init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,java.util.HashSet)
CALLER: com.fasterxml.jackson.annotation.JsonFormat.Value#<init>(java.lang.String,com.fasterxml.jackson.annotation.JsonFormat.Shape,java.lang.String,java.lang.String)
	CALLEE: com.fasterxml.jackson.annotation.JsonFormat.Value#<init>(java.lang.String,com.fasterxml.jackson.annotation.JsonFormat.Shape,java.util.Locale,java.lang.String,java.util.TimeZone)
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#<init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#<init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,boolean)
CALLER: com.fasterxml.jackson.databind.cfg.MapperConfig#getLocale()
	CALLEE: com.fasterxml.jackson.databind.cfg.BaseSettings#getLocale()
CALLER: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#withDateFormat(java.text.DateFormat,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#<init>(com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer,java.text.DateFormat,java.lang.String)
CALLER: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#withDateFormat(java.text.DateFormat,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#<init>(com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer,java.text.DateFormat,java.lang.String)
CALLER: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#withDateFormat(java.text.DateFormat,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#<init>(com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer,java.text.DateFormat,java.lang.String)
CALLER: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#withDateFormat(java.text.DateFormat,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#<init>(com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer,java.text.DateFormat,java.lang.String)
CALLER: org.glassfish.jersey.model.ContractProvider.Builder.1#transformEntry(java.lang.Class,java.lang.Integer)
	CALLEE: static org.glassfish.jersey.model.ContractProvider.Builder#access$700(org.glassfish.jersey.model.ContractProvider.Builder)
CALLER: liquibase.util.csv.opencsv.CSVParser#isCharacterEscapable(char)
	CALLEE: liquibase.util.csv.opencsv.CSVParser#isCharacterQuoteCharacter(char)
	CALLEE: liquibase.util.csv.opencsv.CSVParser#isCharacterEscapeCharacter(char)
CALLER: static liquibase.util.StringUtils#isWhitespace(java.lang.CharSequence)
	CALLEE: static liquibase.util.StringUtils#trimToNull(java.lang.String)
CALLER: org.eclipse.jetty.server.session.MemSession#getAttributes()
	CALLEE: org.eclipse.jetty.server.session.HashedSession#checkValid()
CALLER: org.eclipse.jetty.server.session.AbstractSession#getAttributeNames()
	CALLEE: org.eclipse.jetty.server.session.HashedSession#checkValid()
	CALLEE: org.eclipse.jetty.server.session.MemSession#doGetAttributeNames()
CALLER: org.eclipse.jetty.io.SelectChannelEndPoint#needsFill()
	CALLEE: org.eclipse.jetty.io.SelectChannelEndPoint#updateLocalInterests(int,boolean)
CALLER: static org.glassfish.jersey.server.model.Resource#access$000(java.util.List)
	CALLEE: static org.glassfish.jersey.server.model.Resource#immutableCopy(java.util.List)
CALLER: static org.glassfish.jersey.server.model.Resource#access$100(java.util.Set)
	CALLEE: static org.glassfish.jersey.server.model.Resource#immutableCopy(java.util.Set)
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#ILLEGAL_CONFIG_SYNTAX()
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#localizableILLEGAL_CONFIG_SYNTAX()
CALLER: static org.glassfish.jersey.internal.ServiceFinder#fail(java.lang.String,java.net.URL,int,java.lang.String)
	CALLEE: static org.glassfish.jersey.internal.ServiceFinder#fail(java.lang.String,java.lang.String)
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#ILLEGAL_PROVIDER_CLASS_NAME(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#localizableILLEGAL_PROVIDER_CLASS_NAME(java.lang.Object)
CALLER: org.glassfish.jersey.uri.PathPattern#<init>(org.glassfish.jersey.uri.PathTemplate,org.glassfish.jersey.uri.PathPattern.RightHandPath)
	CALLEE: org.glassfish.jersey.uri.UriTemplate#getPattern()
	CALLEE: org.glassfish.jersey.uri.PatternWithGroups#getRegex()
	CALLEE: static org.glassfish.jersey.uri.PathPattern#postfixWithCapturingGroup(java.lang.String,org.glassfish.jersey.uri.PathPattern.RightHandPath)
	CALLEE: org.glassfish.jersey.uri.UriTemplate#getNumberOfRegexGroups()
	CALLEE: org.glassfish.jersey.uri.PatternWithGroups#getGroupIndexes()
	CALLEE: static org.glassfish.jersey.uri.PathPattern#addIndexForRightHandPathCapturingGroup(int,int[])
	CALLEE: org.glassfish.jersey.uri.PatternWithGroups#<init>(java.lang.String,int[])
CALLER: jersey.repackaged.com.google.common.base.Joiner#toString(java.lang.Object)
	CALLEE: org.glassfish.jersey.message.internal.QualitySourceMediaType#toString()
	CALLEE: com.fasterxml.jackson.core.JsonLocation#toString()
	CALLEE: com.fasterxml.jackson.databind.PropertyName#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#toString()
	CALLEE: com.fasterxml.jackson.core.io.SerializedString#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey#toString()
	CALLEE: org.glassfish.jersey.server.model.Invocable#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#toString()
	CALLEE: org.glassfish.jersey.server.model.MethodHandler.ClassBasedMethodHandler#toString()
	CALLEE: org.glassfish.jersey.server.model.MethodHandler.InstanceBasedMethodHandler#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#toString()
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodRouting#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#toString()
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.ConsumesProducesAcceptor#toString()
	CALLEE: static jersey.repackaged.com.google.common.base.Preconditions#checkNotNull(java.lang.Object)
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#toString()
	CALLEE: org.eclipse.jetty.webapp.WebAppContext#toString()
	CALLEE: org.eclipse.jetty.server.handler.HandlerCollection#toString()
	CALLEE: org.eclipse.jetty.server.Server#toString()
	CALLEE: org.eclipse.jetty.server.AbstractNetworkConnector#toString()
	CALLEE: org.eclipse.jetty.util.thread.QueuedThreadPool#toString()
	CALLEE: org.eclipse.jetty.server.AbstractConnectionFactory#toString()
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle.Bean#toString()
	CALLEE: org.apache.log4j.NameValue#toString()
	CALLEE: liquibase.changelog.ChangeLogParameters.ChangeLogParameter#toString()
	CALLEE: org.eclipse.jetty.server.AbstractConnector.Acceptor#toString()
	CALLEE: org.eclipse.jetty.server.HttpConfiguration#toString()
	CALLEE: org.eclipse.jetty.util.MultiException#toString()
	CALLEE: org.eclipse.jetty.http.PathMap.MappedEntry#toString()
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector#toString()
	CALLEE: liquibase.servicelocator.AssignableToPackageScanFilter#toString()
	CALLEE: org.eclipse.jetty.http.HttpField#toString()
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#toString()
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#toString()
	CALLEE: org.eclipse.jetty.servlet.ServletMapping#toString()
	CALLEE: org.glassfish.jersey.internal.OsgiRegistry.BundleSpiProvidersLoader#toString()
	CALLEE: org.h2.jdbc.JdbcSQLException#toString()
	CALLEE: liquibase.changelog.filter.ChangeSetFilterResult#toString()
	CALLEE: com.zaxxer.hikari.pool.PoolEntry#toString()
	CALLEE: org.eclipse.jetty.io.SelectChannelEndPoint#toString()
	CALLEE: org.eclipse.jetty.util.FutureCallback#toString()
	CALLEE: org.eclipse.jetty.util.ConstantThrowable#toString()
	CALLEE: javax.ws.rs.core.MediaType#toString()
	CALLEE: org.glassfish.jersey.model.internal.RankedProvider#toString()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#toString()
	CALLEE: org.glassfish.hk2.api.MultiException#toString()
	CALLEE: jersey.repackaged.com.google.common.base.Predicates.AndPredicate#toString()
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.MapType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#toString()
	CALLEE: org.glassfish.hk2.utilities.NamedImpl#toString()
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#toString()
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#toString()
	CALLEE: com.fasterxml.jackson.databind.jsontype.NamedType#toString()
	CALLEE: liquibase.changelog.RanChangeSet#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.UnresolvedId#toString()
	CALLEE: org.glassfish.jersey.server.model.ResourceModelIssue#toString()
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#toString()
	CALLEE: org.glassfish.jersey.server.model.Parameter#toString()
	CALLEE: org.glassfish.hk2.utilities.reflection.ParameterizedTypeImpl#toString()
	CALLEE: com.fasterxml.jackson.databind.type.ClassKey#toString()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException.Reference#toString()
	CALLEE: org.glassfish.jersey.server.model.Resource.Data#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ValueNode#toString()
	CALLEE: org.glassfish.jersey.server.model.Resource#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#toString()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Data#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.MemberKey#toString()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ObjectNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ArrayNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.POJONode#toString()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#toString()
	CALLEE: com.fasterxml.jackson.databind.node.TextNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.BinaryNode#toString()
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#<init>(com.fasterxml.jackson.databind.cfg.MapperConfig,boolean,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#isEnabled(com.fasterxml.jackson.databind.MapperFeature)
	CALLEE: com.fasterxml.jackson.databind.DeserializationConfig#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.DeserializationConfig#getDefaultVisibilityChecker()
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findAutoDetectVisibility(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.introspect.VisibilityChecker)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findAutoDetectVisibility(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.introspect.VisibilityChecker)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#isAnnotationProcessingEnabled()
	CALLEE: com.fasterxml.jackson.databind.SerializationConfig#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.SerializationConfig#getDefaultVisibilityChecker()
CALLER: static com.fasterxml.jackson.databind.util.ClassUtil#findSuperTypes(java.lang.Class,java.lang.Class,java.util.List)
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#_addSuperTypes(java.lang.Class,java.lang.Class,java.util.Collection,boolean)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder#init(com.fasterxml.jackson.annotation.JsonTypeInfo.Id,com.fasterxml.jackson.databind.jsontype.TypeIdResolver)
	CALLEE: com.fasterxml.jackson.annotation.JsonTypeInfo.Id#getDefaultPropertyName()
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_addClassMixIns(com.fasterxml.jackson.databind.introspect.AnnotationMap,java.lang.Class,java.lang.Class)
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#findSuperTypes(java.lang.Class,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_addAnnotationsIfNotPresent(com.fasterxml.jackson.databind.introspect.AnnotationMap,java.lang.annotation.Annotation[])
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_addAnnotationsIfNotPresent(com.fasterxml.jackson.databind.introspect.AnnotationMap,java.lang.annotation.Annotation[])
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_addAnnotationsIfNotPresent(com.fasterxml.jackson.databind.introspect.AnnotationMap,java.lang.annotation.Annotation[])
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotationMap#addIfNotPresent(java.lang.annotation.Annotation)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_isAnnotationBundle(java.lang.annotation.Annotation)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_addFromBundle(java.lang.annotation.Annotation,java.util.List)
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_addClassMixIns(com.fasterxml.jackson.databind.introspect.AnnotationMap,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfigBase#findMixInClassFor(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_addClassMixIns(com.fasterxml.jackson.databind.introspect.AnnotationMap,java.lang.Class,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer#writeString(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#_append(com.fasterxml.jackson.core.JsonToken,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeNull()
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer#writeNumber(long)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#_append(com.fasterxml.jackson.core.JsonToken,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer#writeNumber(int)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#_append(com.fasterxml.jackson.core.JsonToken,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer#writeObject(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#_append(com.fasterxml.jackson.core.JsonToken,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeNull()
	CALLEE: com.fasterxml.jackson.databind.ObjectMapper#writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer#asParser()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#asParser(com.fasterxml.jackson.core.ObjectCodec)
CALLER: com.fasterxml.jackson.core.base.ParserBase#reportOverflowInt()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_reportError(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
CALLER: com.fasterxml.jackson.databind.JsonMappingException#<init>(java.lang.String,java.lang.Throwable)
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#<init>(java.lang.String,java.lang.Throwable)
CALLER: com.fasterxml.jackson.databind.deser.std.MapDeserializer.MapReferringAccumulator#handleUnresolvedReference(com.fasterxml.jackson.databind.deser.UnresolvedForwardReference,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer.MapReferring#<init>(com.fasterxml.jackson.databind.deser.std.MapDeserializer.MapReferringAccumulator,com.fasterxml.jackson.databind.deser.UnresolvedForwardReference,java.lang.Class,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.CollectionReferring#<init>(com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.CollectionReferringAccumulator,com.fasterxml.jackson.databind.deser.UnresolvedForwardReference,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ReadableObjectId.Referring#<init>(com.fasterxml.jackson.databind.deser.UnresolvedForwardReference,java.lang.Class)
CALLER: com.fasterxml.jackson.core.util.TextBuffer#append(char[],int,int)
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#unshare(int)
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#expand(int)
CALLER: com.fasterxml.jackson.core.base.ParserBase#_decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant,char,int)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_decodeEscaped()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant,int,int)
	CALLEE: com.fasterxml.jackson.core.Base64Variant#decodeBase64Char(char)
CALLER: com.fasterxml.jackson.core.base.ParserBase#reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant,int,int,java.lang.String)
	CALLEE: com.fasterxml.jackson.core.Base64Variant#getPaddingChar()
	CALLEE: com.fasterxml.jackson.core.Base64Variant#usesPaddingChar(int)
CALLER: com.fasterxml.jackson.core.util.ByteArrayBuilder#<init>()
	CALLEE: com.fasterxml.jackson.core.util.ByteArrayBuilder#<init>(com.fasterxml.jackson.core.util.BufferRecycler)
CALLER: com.fasterxml.jackson.databind.util.ObjectBuffer#_reset()
	CALLEE: com.fasterxml.jackson.databind.util.LinkedNode#value()
CALLER: com.fasterxml.jackson.databind.util.ObjectBuffer#_copyTo(java.lang.Object,int,java.lang.Object[],int)
	CALLEE: com.fasterxml.jackson.databind.util.LinkedNode#next()
	CALLEE: com.fasterxml.jackson.databind.util.LinkedNode#value()
CALLER: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer#_reportProblem(com.fasterxml.jackson.core.JsonParser,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#<init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getTokenLocation()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getTokenLocation()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getTokenLocation()
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#getKnownPropertyNames()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#getName()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#iterator()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.IteratorImpl#hasNext()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.IteratorImpl#next()
CALLER: static com.fasterxml.jackson.databind.exc.IgnoredPropertyException#from(com.fasterxml.jackson.core.JsonParser,java.lang.Object,java.lang.String,java.util.Collection)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getCurrentLocation()
	CALLEE: com.fasterxml.jackson.databind.exc.IgnoredPropertyException#<init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Class,java.lang.String,java.util.Collection)
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#prependPath(java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getCurrentLocation()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentLocation()
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#throwOrReturnThrowable(java.lang.Throwable,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#_findSubclassDeserializer(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer)
	CALLEE: com.fasterxml.jackson.databind.type.ClassKey#<init>(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#findRootValueDeserializer(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#constructType(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserializeWithUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#skipChildren()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentName()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#find(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#skipChildren()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getActiveView()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#handleIgnoredProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#<init>(com.fasterxml.jackson.core.JsonParser)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeFieldName(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeStartObject()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#visibleInView(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeEndObject()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler#processUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableAnyProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
CALLER: static com.fasterxml.jackson.core.json.JsonWriteContext#createRootContext(com.fasterxml.jackson.core.json.DupDetector)
	CALLEE: com.fasterxml.jackson.core.json.JsonWriteContext#<init>(int,com.fasterxml.jackson.core.json.JsonWriteContext,com.fasterxml.jackson.core.json.DupDetector)
CALLER: static com.fasterxml.jackson.databind.util.TokenBuffer.Segment#<clinit>()
	CALLEE: static com.fasterxml.jackson.core.JsonToken#values()
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer#_append(com.fasterxml.jackson.core.JsonToken,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Segment#append(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object,java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Segment#append(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer#_checkNativeIds(com.fasterxml.jackson.core.JsonParser)
	CALLEE: com.fasterxml.jackson.core.JsonParser#getObjectId()
	CALLEE: com.fasterxml.jackson.core.JsonParser#getTypeId()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getObjectId()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getTypeId()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getObjectId()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getTypeId()
CALLER: static com.fasterxml.jackson.databind.util.TokenBuffer.1#<clinit>()
	CALLEE: static com.fasterxml.jackson.core.JsonToken#values()
	CALLEE: static com.fasterxml.jackson.core.JsonParser.NumberType#values()
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer#writeStartArray()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#_append(com.fasterxml.jackson.core.JsonToken)
	CALLEE: com.fasterxml.jackson.core.json.JsonWriteContext#createChildArrayContext()
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer#writeEndArray()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#_append(com.fasterxml.jackson.core.JsonToken)
	CALLEE: com.fasterxml.jackson.core.json.JsonWriteContext#getParent()
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer#copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getCurrentName()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getEmbeddedObject()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getBigIntegerValue()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getDecimalValue()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getDoubleValue()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getIntValue()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getTextCharacters()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getTextOffset()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getTextLength()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getNumberType()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getLongValue()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getFloatValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeFieldName(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeStartObject()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeEndObject()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeString(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeNumber(long)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeNumber(int)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeObject(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#_checkNativeIds(com.fasterxml.jackson.core.JsonParser)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeStartArray()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeEndArray()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeNull()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#hasTextCharacters()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeString(char[],int,int)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeNumber(java.math.BigInteger)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeNumber(java.math.BigDecimal)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeNumber(float)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeNumber(double)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeBoolean(boolean)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getEmbeddedObject()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getDoubleValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getFloatValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getDecimalValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getNumberType()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getLongValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getBigIntegerValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getIntValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getTextLength()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getTextOffset()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getTextCharacters()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#hasTextCharacters()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getDoubleValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getDecimalValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getBigIntegerValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getEmbeddedObject()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentName()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getTextLength()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getTextOffset()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getTextCharacters()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getIntValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getLongValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getNumberType()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getFloatValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#hasTextCharacters()
CALLER: com.fasterxml.jackson.databind.deser.SettableBeanProperty#_throwAsIOE(java.lang.Exception)
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#getMessage()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#<init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable)
	CALLEE: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference#getMessage()
	CALLEE: org.apache.log4j.config.PropertySetterException#getMessage()
	CALLEE: org.h2.jdbc.JdbcSQLException#getMessage()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#getMessage()
	CALLEE: org.glassfish.hk2.api.MultiException#getMessage()
	CALLEE: org.glassfish.jersey.server.model.ModelValidationException#getMessage()
CALLER: com.fasterxml.jackson.databind.deser.impl.ReadableObjectId#bindItem(java.lang.Object)
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.CollectionReferring#handleResolvedForwardReference(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer.MapReferring#handleResolvedForwardReference(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty.PropertyReferring#handleResolvedForwardReference(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableAnyProperty.AnySetterReferring#handleResolvedForwardReference(java.lang.Object,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer#_append(com.fasterxml.jackson.core.JsonToken)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Segment#append(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Segment#append(int,com.fasterxml.jackson.core.JsonToken)
CALLER: com.fasterxml.jackson.core.base.ParserMinimalBase#_wrapError(java.lang.String,java.lang.Throwable)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_constructError(java.lang.String,java.lang.Throwable)
CALLER: com.fasterxml.jackson.core.util.TextBuffer#contentsAsDecimal()
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#contentsAsArray()
	CALLEE: static com.fasterxml.jackson.core.io.NumberInput#parseBigDecimal(char[])
	CALLEE: static com.fasterxml.jackson.core.io.NumberInput#parseBigDecimal(char[],int,int)
CALLER: com.fasterxml.jackson.core.util.TextBuffer#contentsAsDouble()
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#contentsAsString()
	CALLEE: static com.fasterxml.jackson.core.io.NumberInput#parseDouble(java.lang.String)
CALLER: com.fasterxml.jackson.databind.DeserializationContext#parseDate(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getDateFormat()
	CALLEE: com.fasterxml.jackson.databind.util.StdDateFormat#parse(java.lang.String)
CALLER: com.fasterxml.jackson.core.Base64Variant#decode(java.lang.String,com.fasterxml.jackson.core.util.ByteArrayBuilder)
	CALLEE: com.fasterxml.jackson.core.Base64Variant#decodeBase64Char(char)
	CALLEE: com.fasterxml.jackson.core.Base64Variant#_reportInvalidBase64(char,int,java.lang.String)
	CALLEE: com.fasterxml.jackson.core.Base64Variant#_reportBase64EOF()
	CALLEE: com.fasterxml.jackson.core.Base64Variant#usesPadding()
	CALLEE: com.fasterxml.jackson.core.util.ByteArrayBuilder#append(int)
	CALLEE: com.fasterxml.jackson.core.Base64Variant#usesPaddingChar(char)
	CALLEE: com.fasterxml.jackson.core.Base64Variant#getPaddingChar()
	CALLEE: com.fasterxml.jackson.core.util.ByteArrayBuilder#appendTwoBytes(int)
	CALLEE: com.fasterxml.jackson.core.util.ByteArrayBuilder#appendThreeBytes(int)
CALLER: com.fasterxml.jackson.core.util.ByteArrayBuilder#toByteArray()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: com.fasterxml.jackson.core.util.ByteArrayBuilder#reset()
CALLER: static com.fasterxml.jackson.databind.deser.std.UUIDDeserializer#_long(byte[],int)
	CALLEE: static com.fasterxml.jackson.databind.deser.std.UUIDDeserializer#_int(byte[],int)
CALLER: static com.fasterxml.jackson.databind.deser.std.UUIDDeserializer#byteFromChars(java.lang.String,int)
	CALLEE: static com.fasterxml.jackson.databind.deser.std.UUIDDeserializer#_badChar(java.lang.String,int,char)
CALLER: com.fasterxml.jackson.databind.type.TypeParser#parseType(com.fasterxml.jackson.databind.type.TypeParser.MyTokenizer)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#_fromClass(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings)
	CALLEE: com.fasterxml.jackson.databind.type.TypeParser.MyTokenizer#hasMoreTokens()
	CALLEE: com.fasterxml.jackson.databind.type.TypeParser#_problem(com.fasterxml.jackson.databind.type.TypeParser.MyTokenizer,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.type.TypeParser.MyTokenizer#nextToken()
	CALLEE: com.fasterxml.jackson.databind.type.TypeParser#findClass(java.lang.String,com.fasterxml.jackson.databind.type.TypeParser.MyTokenizer)
	CALLEE: com.fasterxml.jackson.databind.type.TypeParser#parseTypes(com.fasterxml.jackson.databind.type.TypeParser.MyTokenizer)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#_fromParameterizedClass(java.lang.Class,java.util.List)
	CALLEE: com.fasterxml.jackson.databind.type.TypeParser.MyTokenizer#pushBack(java.lang.String)
CALLER: com.fasterxml.jackson.databind.type.TypeParser#_problem(com.fasterxml.jackson.databind.type.TypeParser.MyTokenizer,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.type.TypeParser.MyTokenizer#getAllInput()
	CALLEE: com.fasterxml.jackson.databind.type.TypeParser.MyTokenizer#getRemainingInput()
CALLER: static com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException#from(com.fasterxml.jackson.core.JsonParser,java.lang.Object,java.lang.String,java.util.Collection)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getCurrentLocation()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#prependPath(java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException#<init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Class,java.lang.String,java.util.Collection)
CALLER: com.fasterxml.jackson.core.base.ParserBase#reportOverflowLong()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_reportError(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
CALLER: com.fasterxml.jackson.databind.node.ValueNode#<init>()
	CALLEE: com.fasterxml.jackson.databind.node.BaseJsonNode#<init>()
CALLER: com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig#keyDeserializers()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#<init>(java.lang.Object[])
CALLER: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#_createEnumKeyDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#getClassInfo()
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#findJsonValueMethod()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getParameterCount()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getRawReturnType()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getMember()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getGenericParameterType(int)
	CALLEE: com.fasterxml.jackson.databind.DeserializationConfig#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getConfig()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#canOverrideAccessModifiers()
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#checkAndFixAccess(java.lang.reflect.Member)
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#_findCustomEnumDeserializer(java.lang.Class,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#constructEnumResolver(java.lang.Class,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
	CALLEE: com.fasterxml.jackson.databind.DeserializationConfig#introspect(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#findDeserializerFromAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#hasCreatorAnnotation(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#hasCreatorAnnotation(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: static com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers#constructDelegatingKeyDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: static com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers#constructEnumKeyDeserializer(com.fasterxml.jackson.databind.util.EnumResolver,com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
	CALLEE: static com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers#constructEnumKeyDeserializer(com.fasterxml.jackson.databind.util.EnumResolver)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#getFactoryMethods()
CALLER: static com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers#findStringBasedKeyDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#canOverrideAccessModifiers()
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#checkAndFixAccess(java.lang.reflect.Member)
	CALLEE: com.fasterxml.jackson.databind.DeserializationConfig#introspect(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.StringCtorKeyDeserializer#<init>(java.lang.reflect.Constructor)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.StringFactoryKeyDeserializer#<init>(java.lang.reflect.Method)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#findFactoryMethod(java.lang.Class[])
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#findSingleArgConstructor(java.lang.Class[])
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#<init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#<init>(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#<init>(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader,com.fasterxml.jackson.databind.PropertyMetadata)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#withProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty)
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#<init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,java.util.HashSet)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#<init>(com.fasterxml.jackson.databind.JavaType)
CALLER: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#<init>(com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer,java.text.DateFormat,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateBasedDeserializer#<init>(com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateBasedDeserializer,java.text.DateFormat,java.lang.String)
CALLER: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#<init>(com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer,java.text.DateFormat,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateBasedDeserializer#<init>(com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateBasedDeserializer,java.text.DateFormat,java.lang.String)
CALLER: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#<init>(com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer,java.text.DateFormat,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateBasedDeserializer#<init>(com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateBasedDeserializer,java.text.DateFormat,java.lang.String)
CALLER: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#<init>(com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer,java.text.DateFormat,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateBasedDeserializer#<init>(com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateBasedDeserializer,java.text.DateFormat,java.lang.String)
CALLER: static liquibase.util.csv.opencsv.CSVParser.1#<clinit>()
	CALLEE: static liquibase.util.csv.opencsv.enums.CSVReaderNullFieldIndicator#values()
CALLER: org.eclipse.jetty.io.SelectChannelEndPoint#updateLocalInterests(int,boolean)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#isDebugEnabled()
	CALLEE: org.eclipse.jetty.io.ChannelEndPoint#isInputShutdown()
	CALLEE: org.eclipse.jetty.io.ChannelEndPoint#isOutputShutdown()
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector#updateKey(java.lang.Runnable)
CALLER: static org.glassfish.jersey.server.model.Resource#immutableCopy(java.util.Set)
	CALLEE: static jersey.repackaged.com.google.common.collect.Sets#newIdentityHashSet()
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#localizableILLEGAL_CONFIG_SYNTAX()
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#localizableILLEGAL_PROVIDER_CLASS_NAME(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.uri.PathPattern#postfixWithCapturingGroup(java.lang.String,org.glassfish.jersey.uri.PathPattern.RightHandPath)
	CALLEE: static org.glassfish.jersey.uri.PathPattern.RightHandPath#access$100(org.glassfish.jersey.uri.PathPattern.RightHandPath)
CALLER: org.glassfish.jersey.uri.PatternWithGroups#<init>(java.lang.String,int[])
	CALLEE: org.glassfish.jersey.uri.PatternWithGroups#<init>(java.util.regex.Pattern,int[])
	CALLEE: static org.glassfish.jersey.uri.PatternWithGroups#compile(java.lang.String)
CALLER: static com.fasterxml.jackson.databind.util.ClassUtil#_addSuperTypes(java.lang.Class,java.lang.Class,java.util.Collection,boolean)
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#_addSuperTypes(java.lang.Class,java.lang.Class,java.util.Collection,boolean)
CALLER: com.fasterxml.jackson.databind.introspect.AnnotationMap#addIfNotPresent(java.lang.annotation.Annotation)
	CALLEE: org.glassfish.hk2.api.AnnotationLiteral#annotationType()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotationMap#_add(java.lang.annotation.Annotation)
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_isAnnotationBundle(java.lang.annotation.Annotation)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#isAnnotationBundle(java.lang.annotation.Annotation)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#isAnnotationBundle(java.lang.annotation.Annotation)
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_addFromBundle(java.lang.annotation.Annotation,java.util.List)
	CALLEE: org.glassfish.hk2.api.AnnotationLiteral#annotationType()
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer#writeNull()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#_append(com.fasterxml.jackson.core.JsonToken)
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer#asParser(com.fasterxml.jackson.core.ObjectCodec)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#<init>(com.fasterxml.jackson.databind.util.TokenBuffer.Segment,com.fasterxml.jackson.core.ObjectCodec,boolean,boolean)
CALLER: com.fasterxml.jackson.core.JsonProcessingException#<init>(java.lang.String,java.lang.Throwable)
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#<init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable)
CALLER: com.fasterxml.jackson.databind.deser.std.MapDeserializer.MapReferring#<init>(com.fasterxml.jackson.databind.deser.std.MapDeserializer.MapReferringAccumulator,com.fasterxml.jackson.databind.deser.UnresolvedForwardReference,java.lang.Class,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ReadableObjectId.Referring#<init>(com.fasterxml.jackson.databind.deser.UnresolvedForwardReference,java.lang.Class)
CALLER: com.fasterxml.jackson.core.base.ParserBase#reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant,int,int)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant,int,int,java.lang.String)
CALLER: com.fasterxml.jackson.core.util.ByteArrayBuilder#<init>(com.fasterxml.jackson.core.util.BufferRecycler)
	CALLEE: com.fasterxml.jackson.core.util.ByteArrayBuilder#<init>(com.fasterxml.jackson.core.util.BufferRecycler,int)
CALLER: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.IteratorImpl#next()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.IteratorImpl#next()
CALLER: com.fasterxml.jackson.databind.exc.IgnoredPropertyException#<init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Class,java.lang.String,java.util.Collection)
	CALLEE: com.fasterxml.jackson.databind.exc.PropertyBindingException#<init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Class,java.lang.String,java.util.Collection)
CALLER: com.fasterxml.jackson.databind.JsonMappingException#prependPath(java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#prependPath(com.fasterxml.jackson.databind.JsonMappingException.Reference)
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException.Reference#<init>(java.lang.Object,java.lang.String)
CALLER: com.fasterxml.jackson.core.json.JsonWriteContext#<init>(int,com.fasterxml.jackson.core.json.JsonWriteContext,com.fasterxml.jackson.core.json.DupDetector)
	CALLEE: com.fasterxml.jackson.core.JsonStreamContext#<init>()
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer.Segment#append(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object,java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Segment#<init>()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Segment#set(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object,java.lang.Object,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer.Segment#append(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Segment#<init>()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Segment#set(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer#writeString(char[],int,int)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeString(java.lang.String)
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer#writeNumber(java.math.BigInteger)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#_append(com.fasterxml.jackson.core.JsonToken,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeNull()
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer#writeNumber(java.math.BigDecimal)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#_append(com.fasterxml.jackson.core.JsonToken,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeNull()
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer#writeNumber(float)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#_append(com.fasterxml.jackson.core.JsonToken,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer#writeNumber(double)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#_append(com.fasterxml.jackson.core.JsonToken,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer#writeBoolean(boolean)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#_append(com.fasterxml.jackson.core.JsonToken)
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer.Segment#append(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Segment#<init>()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Segment#set(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer.Segment#append(int,com.fasterxml.jackson.core.JsonToken)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Segment#<init>()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Segment#set(int,com.fasterxml.jackson.core.JsonToken)
CALLER: com.fasterxml.jackson.core.base.ParserMinimalBase#_constructError(java.lang.String,java.lang.Throwable)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getCurrentLocation()
	CALLEE: com.fasterxml.jackson.core.JsonParseException#<init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable)
CALLER: static com.fasterxml.jackson.core.io.NumberInput#parseBigDecimal(char[])
	CALLEE: static com.fasterxml.jackson.core.io.NumberInput#parseBigDecimal(char[],int,int)
CALLER: static com.fasterxml.jackson.core.io.NumberInput#parseBigDecimal(char[],int,int)
	CALLEE: static com.fasterxml.jackson.core.io.NumberInput#_badBD(java.lang.String)
CALLER: com.fasterxml.jackson.databind.DeserializationContext#getDateFormat()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#getDateFormat()
	CALLEE: com.fasterxml.jackson.databind.util.StdDateFormat#clone()
CALLER: com.fasterxml.jackson.core.Base64Variant#_reportInvalidBase64(char,int,java.lang.String)
	CALLEE: com.fasterxml.jackson.core.Base64Variant#usesPaddingChar(char)
	CALLEE: com.fasterxml.jackson.core.Base64Variant#getPaddingChar()
CALLER: com.fasterxml.jackson.core.util.ByteArrayBuilder#append(int)
	CALLEE: com.fasterxml.jackson.core.util.ByteArrayBuilder#_allocMore()
CALLER: com.fasterxml.jackson.core.util.ByteArrayBuilder#appendTwoBytes(int)
	CALLEE: com.fasterxml.jackson.core.util.ByteArrayBuilder#append(int)
CALLER: com.fasterxml.jackson.core.util.ByteArrayBuilder#appendThreeBytes(int)
	CALLEE: com.fasterxml.jackson.core.util.ByteArrayBuilder#append(int)
CALLER: com.fasterxml.jackson.databind.type.TypeParser#findClass(java.lang.String,com.fasterxml.jackson.databind.type.TypeParser.MyTokenizer)
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#getMessage()
	CALLEE: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference#getMessage()
	CALLEE: com.fasterxml.jackson.databind.type.TypeParser#_problem(com.fasterxml.jackson.databind.type.TypeParser.MyTokenizer,java.lang.String)
	CALLEE: org.h2.jdbc.JdbcSQLException#getMessage()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#getMessage()
	CALLEE: org.glassfish.hk2.api.MultiException#getMessage()
	CALLEE: org.glassfish.jersey.server.model.ModelValidationException#getMessage()
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#findClass(java.lang.String)
CALLER: com.fasterxml.jackson.databind.type.TypeParser#parseTypes(com.fasterxml.jackson.databind.type.TypeParser.MyTokenizer)
	CALLEE: com.fasterxml.jackson.databind.type.TypeParser#parseType(com.fasterxml.jackson.databind.type.TypeParser.MyTokenizer)
	CALLEE: com.fasterxml.jackson.databind.type.TypeParser.MyTokenizer#hasMoreTokens()
	CALLEE: com.fasterxml.jackson.databind.type.TypeParser#_problem(com.fasterxml.jackson.databind.type.TypeParser.MyTokenizer,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.type.TypeParser.MyTokenizer#nextToken()
CALLER: com.fasterxml.jackson.databind.type.TypeFactory#_fromParameterizedClass(java.lang.Class,java.util.List)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#<init>(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#_constructType(java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings)
	CALLEE: static com.fasterxml.jackson.databind.type.ArrayType#construct(com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#_mapType(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#_collectionType(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#constructSimpleType(java.lang.Class,java.lang.Class,com.fasterxml.jackson.databind.JavaType[])
	CALLEE: static com.fasterxml.jackson.databind.type.MapType#construct(java.lang.Class,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)
	CALLEE: static com.fasterxml.jackson.databind.type.CollectionType#construct(java.lang.Class,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#_unknownType()
CALLER: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException#<init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Class,java.lang.String,java.util.Collection)
	CALLEE: com.fasterxml.jackson.databind.exc.PropertyBindingException#<init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Class,java.lang.String,java.util.Collection)
CALLER: com.fasterxml.jackson.databind.node.BaseJsonNode#<init>()
	CALLEE: com.fasterxml.jackson.databind.JsonNode#<init>()
CALLER: static com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers#constructDelegatingKeyDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.DelegatingKD#<init>(java.lang.Class,com.fasterxml.jackson.databind.JsonDeserializer)
CALLER: static com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers#constructEnumKeyDeserializer(com.fasterxml.jackson.databind.util.EnumResolver,com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.EnumKD#<init>(com.fasterxml.jackson.databind.util.EnumResolver,com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
CALLER: static com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers#constructEnumKeyDeserializer(com.fasterxml.jackson.databind.util.EnumResolver)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.EnumKD#<init>(com.fasterxml.jackson.databind.util.EnumResolver,com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
CALLER: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.StringCtorKeyDeserializer#<init>(java.lang.reflect.Constructor)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer#<init>(int,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.StringFactoryKeyDeserializer#<init>(java.lang.reflect.Method)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer#<init>(int,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateBasedDeserializer#<init>(com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateBasedDeserializer,java.text.DateFormat,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer#<init>(java.lang.Class)
CALLER: org.eclipse.jetty.io.SelectorManager.ManagedSelector#updateKey(java.lang.Runnable)
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector#submit(java.lang.Runnable)
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector#wakeup()
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector#runChange(java.lang.Runnable)
	CALLEE: static org.eclipse.jetty.io.SelectorManager#access$400()
CALLER: static org.glassfish.jersey.uri.PathPattern.RightHandPath#access$100(org.glassfish.jersey.uri.PathPattern.RightHandPath)
	CALLEE: org.glassfish.jersey.uri.PathPattern.RightHandPath#getRegex()
CALLER: com.fasterxml.jackson.databind.introspect.AnnotationMap#_add(java.lang.annotation.Annotation)
	CALLEE: org.glassfish.hk2.api.AnnotationLiteral#annotationType()
	CALLEE: org.glassfish.hk2.api.AnnotationLiteral#equals(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#isAnnotationBundle(java.lang.annotation.Annotation)
	CALLEE: org.glassfish.hk2.api.AnnotationLiteral#annotationType()
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#<init>(com.fasterxml.jackson.databind.util.TokenBuffer.Segment,com.fasterxml.jackson.core.ObjectCodec,boolean,boolean)
	CALLEE: static com.fasterxml.jackson.core.json.JsonReadContext#createRootContext(com.fasterxml.jackson.core.json.DupDetector)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#<init>(int)
CALLER: com.fasterxml.jackson.databind.exc.PropertyBindingException#<init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Class,java.lang.String,java.util.Collection)
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#<init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation)
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer.Segment#set(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object,java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Segment#assignNativeIds(int,java.lang.Object,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer.Segment#set(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Segment#assignNativeIds(int,java.lang.Object,java.lang.Object)
CALLER: com.fasterxml.jackson.core.JsonParseException#<init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable)
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#<init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable)
CALLER: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.DelegatingKD#<init>(java.lang.Class,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.KeyDeserializer#<init>()
CALLER: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.EnumKD#<init>(com.fasterxml.jackson.databind.util.EnumResolver,com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
	CALLEE: com.fasterxml.jackson.databind.util.EnumResolver#getEnumClass()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer#<init>(int,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer#<init>(int,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer#<init>(int,java.lang.Class,com.fasterxml.jackson.databind.deser.std.FromStringDeserializer)
CALLER: com.fasterxml.jackson.core.base.ParserMinimalBase#<init>(int)
	CALLEE: com.fasterxml.jackson.core.JsonParser#<init>(int)
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer.Segment#assignNativeIds(int,java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Segment#_objectIdIndex(int)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Segment#_typeIdIndex(int)
CALLER: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer#<init>(int,java.lang.Class,com.fasterxml.jackson.databind.deser.std.FromStringDeserializer)
	CALLEE: com.fasterxml.jackson.databind.KeyDeserializer#<init>()
CALLER: jersey.repackaged.com.google.common.collect.Lists.TransformingRandomAccessList#listIterator(int)
	CALLEE: jersey.repackaged.com.google.common.collect.Lists.TransformingSequentialList#listIterator(int)
	CALLEE: jersey.repackaged.com.google.common.collect.Lists.TransformingRandomAccessList#listIterator(int)
	CALLEE: jersey.repackaged.com.google.common.collect.Lists.TransformingRandomAccessList.1#<init>(jersey.repackaged.com.google.common.collect.Lists.TransformingRandomAccessList,java.util.ListIterator)
CALLER: org.glassfish.jersey.server.model.MethodList.5#keep(org.glassfish.jersey.server.model.AnnotatedMethod)
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#getAnnotation(java.lang.Class)
CALLER: org.glassfish.jersey.server.model.MethodList.7#keep(org.glassfish.jersey.server.model.AnnotatedMethod)
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#getAnnotation(java.lang.Class)
CALLER: jersey.repackaged.com.google.common.collect.Lists.TransformingSequentialList.1#transform(java.lang.Object)
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig.1#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.inject.ProviderToService#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.model.internal.ModelErrors.1#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.ApplicationHandler.WorkersToStringTransform#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.inject.Providers.2#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.1#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.model.Resource.1#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Builder.1#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.model.RuntimeResource.2#apply(java.lang.Object)
CALLER: org.eclipse.jetty.io.SelectChannelEndPoint.1#run()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#warn(java.lang.String,java.lang.Throwable)
	CALLEE: org.eclipse.jetty.io.SelectChannelEndPoint#close()
	CALLEE: org.eclipse.jetty.io.ChannelEndPoint#getChannel()
	CALLEE: static org.eclipse.jetty.io.SelectChannelEndPoint#access$000(org.eclipse.jetty.io.SelectChannelEndPoint)
	CALLEE: static org.eclipse.jetty.io.SelectChannelEndPoint#access$100(org.eclipse.jetty.io.SelectChannelEndPoint)
	CALLEE: static org.eclipse.jetty.io.SelectChannelEndPoint#access$200(org.eclipse.jetty.io.SelectChannelEndPoint,int,int)
CALLER: org.glassfish.jersey.server.model.Resource.2#get()
	CALLEE: org.glassfish.jersey.server.model.Resource.2#get()
CALLER: org.eclipse.jetty.server.handler.ContextHandler#shutdown()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#isRunning()
	CALLEE: org.eclipse.jetty.util.FutureCallback#<init>(boolean)
CALLER: org.glassfish.jersey.server.model.MethodList#hasNumParams(int)
	CALLEE: org.glassfish.jersey.server.model.MethodList#filter(org.glassfish.jersey.server.model.MethodList.Filter)
	CALLEE: org.glassfish.jersey.server.model.MethodList.2#<init>(org.glassfish.jersey.server.model.MethodList,int)
CALLER: org.glassfish.jersey.server.model.MethodList#isNotPublic()
	CALLEE: org.glassfish.jersey.server.model.MethodList#filter(org.glassfish.jersey.server.model.MethodList.Filter)
	CALLEE: org.glassfish.jersey.server.model.MethodList.1#<init>(org.glassfish.jersey.server.model.MethodList)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.ClassBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#in(java.lang.Class)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryTypeBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#in(java.lang.Class)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.FactoryInstanceBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#in(java.lang.Class)
CALLER: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder.InstanceBasedBindingBuilder#in(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.binding.AbstractBindingBuilder#in(java.lang.Class)
CALLER: org.glassfish.jersey.server.model.Resource#getPath()
	CALLEE: static org.glassfish.jersey.server.model.Resource.Data#access$1000(org.glassfish.jersey.server.model.Resource.Data)
CALLER: com.fasterxml.jackson.databind.type.ArrayType#withContentTypeHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#withContentTypeHandler(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.type.MapType#withContentTypeHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.MapType#withContentTypeHandler(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.type.CollectionType#withContentTypeHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#withContentTypeHandler(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#isCreatorVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#isCreatorVisible(java.lang.reflect.Member)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#getMember()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getMember()
CALLER: com.fasterxml.jackson.databind.deser.SettableAnyProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableAnyProperty#<init>(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
CALLER: liquibase.change.CheckSum#equals(java.lang.Object)
	CALLEE: liquibase.change.CheckSum#toString()
CALLER: org.glassfish.jersey.server.model.RuntimeResource#getComponents()
	CALLEE: org.glassfish.jersey.server.model.RuntimeResource#getChildRuntimeResources()
CALLER: org.glassfish.jersey.server.model.RuntimeResource#accept(org.glassfish.jersey.server.model.ResourceModelVisitor)
	CALLEE: org.glassfish.jersey.server.model.AbstractResourceModelVisitor#visitRuntimeResource(org.glassfish.jersey.server.model.RuntimeResource)
	CALLEE: org.glassfish.jersey.server.model.RuntimeResourceModelValidator#visitRuntimeResource(org.glassfish.jersey.server.model.RuntimeResource)
CALLER: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.Class)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getDoubleValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getDecimalValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getNumberValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getBigIntegerValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getEmbeddedObject()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentTokenId()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getEmbeddedObject()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getBigIntegerValue()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getNumberValue()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getDecimalValue()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getDoubleValue()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentTokenId()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getEmbeddedObject()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getDoubleValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getDecimalValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getBigIntegerValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getNumberValue()
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#mapObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#mapArrayToArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#mapArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.introspect.ObjectIdInfo#withAlwaysAsId(boolean)
	CALLEE: com.fasterxml.jackson.databind.introspect.ObjectIdInfo#<init>(com.fasterxml.jackson.databind.PropertyName,java.lang.Class,java.lang.Class,boolean,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#getClassAnnotations()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#getAnnotations()
CALLER: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#resolveType(java.lang.reflect.Type)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#bindingsForBeanType()
	CALLEE: com.fasterxml.jackson.databind.type.TypeBindings#resolveType(java.lang.reflect.Type)
CALLER: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#findBackReferenceProperties()
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findReferenceType(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findReferenceType(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector.ReferenceProperty#getName()
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector.ReferenceProperty#isBackReference()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getMutator()
CALLER: com.fasterxml.jackson.databind.BeanDescription#getBeanClass()
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
CALLER: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#findAnySetter()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getRawParameterType(int)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getName()
CALLER: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#bindingsForBeanType()
	CALLEE: com.fasterxml.jackson.databind.type.TypeBindings#<init>(com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#getTypeFactory()
CALLER: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#getConstructors()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#getConstructors()
CALLER: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#findDefaultConstructor()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#getDefaultConstructor()
CALLER: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#getFactoryMethods()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#getStaticMethods()
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#isFactoryMethod(com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
CALLER: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#findExpectedFormat(com.fasterxml.jackson.annotation.JsonFormat.Value)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findFormat(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findFormat(com.fasterxml.jackson.databind.introspect.Annotated)
CALLER: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#findMethod(java.lang.String,java.lang.Class[])
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#findMethod(java.lang.String,java.lang.Class[])
CALLER: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#findDeserializationConverter()
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findDeserializationConverter(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findDeserializationConverter(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#_createConverter(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#findPOJOBuilder()
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findPOJOBuilder(com.fasterxml.jackson.databind.introspect.AnnotatedClass)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findPOJOBuilder(com.fasterxml.jackson.databind.introspect.AnnotatedClass)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder#init(com.fasterxml.jackson.annotation.JsonTypeInfo.Id,com.fasterxml.jackson.databind.jsontype.TypeIdResolver)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder#init(com.fasterxml.jackson.annotation.JsonTypeInfo.Id,com.fasterxml.jackson.databind.jsontype.TypeIdResolver)
CALLER: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#withIsGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility)
	CALLEE: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#<init>(com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility)
CALLER: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#findFactoryMethod(java.lang.Class[])
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#getStaticMethods()
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#isFactoryMethod(com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getAnnotated()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getRawParameterType(int)
CALLER: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#findSingleArgConstructor(java.lang.Class[])
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#getConstructors()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#getRawParameterType(int)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#getParameterCount()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#getAnnotated()
CALLER: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#<init>(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#getName()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#_throwAsIOE(java.lang.Exception)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
CALLER: com.fasterxml.jackson.databind.util.ObjectBuffer#completeAndClearBuffer(java.lang.Object[],int)
	CALLEE: com.fasterxml.jackson.databind.util.ObjectBuffer#_copyTo(java.lang.Object,int,java.lang.Object[],int)
CALLER: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getEmbeddedObject()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#handledType()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#deserializeFromString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#deserializeFromNumber(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#deserializeFromDouble(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#deserializeFromBoolean(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#deserializeFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getEmbeddedObject()
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#vanillaDeserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonToken)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#finishBuild(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserializeFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getEmbeddedObject()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
CALLER: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)
CALLER: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#withIgnorableProperties(java.util.HashSet)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#withIgnorableProperties(java.util.HashSet)
CALLER: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#asArrayDeserializer()
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#asArrayDeserializer()
CALLER: com.fasterxml.jackson.databind.deser.impl.MethodProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#_throwAsIOE(java.lang.Exception,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.impl.FieldProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#_throwAsIOE(java.lang.Exception,java.lang.Object)
CALLER: org.glassfish.jersey.uri.PathPattern.1#compare(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.uri.PathPattern.1#compare(org.glassfish.jersey.uri.PathPattern,org.glassfish.jersey.uri.PathPattern)
CALLER: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getDecimalValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getNumberValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getBigIntegerValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentTokenId()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getEmbeddedObject()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getBigIntegerValue()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getNumberValue()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getDecimalValue()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getDoubleValue()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.Class)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentTokenId()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getEmbeddedObject()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getDoubleValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getDecimalValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getBigIntegerValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getNumberValue()
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer#deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer#deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer#deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getDoubleValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getEmbeddedObject()
CALLER: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer#deserializeKey(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: org.h2.jdbc.JdbcSQLException#getMessage()
	CALLEE: org.glassfish.hk2.api.MultiException#getMessage()
	CALLEE: org.glassfish.jersey.server.model.ModelValidationException#getMessage()
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#getMessage()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer#_parse(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#getMessage()
	CALLEE: com.fasterxml.jackson.databind.DeserializationConfig#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getConfig()
	CALLEE: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference#getMessage()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.StringCtorKeyDeserializer#_parse(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.StringFactoryKeyDeserializer#_parse(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.EnumKD#_parse(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#weirdKeyException(java.lang.Class,java.lang.String,java.lang.String)
CALLER: org.glassfish.jersey.server.model.ResourceMethod.1#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.1#apply(org.glassfish.jersey.server.model.ResourceMethod.Data)
CALLER: org.glassfish.jersey.server.model.Resource.1#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.model.Resource.1#apply(org.glassfish.jersey.server.model.Resource.Data)
CALLER: org.glassfish.jersey.server.model.Resource.Builder#onBuildChildResource(org.glassfish.jersey.server.model.Resource.Builder,org.glassfish.jersey.server.model.Resource.Data)
	CALLEE: static jersey.repackaged.com.google.common.base.Preconditions#checkState(boolean,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.node.JsonNodeFactory#nullNode()
	CALLEE: static com.fasterxml.jackson.databind.node.NullNode#getInstance()
CALLER: com.fasterxml.jackson.databind.node.JsonNodeFactory#booleanNode(boolean)
	CALLEE: static com.fasterxml.jackson.databind.node.BooleanNode#getTrue()
	CALLEE: static com.fasterxml.jackson.databind.node.BooleanNode#getFalse()
CALLER: com.fasterxml.jackson.databind.node.JsonNodeFactory#textNode(java.lang.String)
	CALLEE: static com.fasterxml.jackson.databind.node.TextNode#valueOf(java.lang.String)
CALLER: com.fasterxml.jackson.databind.node.JsonNodeFactory#objectNode()
	CALLEE: com.fasterxml.jackson.databind.node.ObjectNode#<init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)
CALLER: com.fasterxml.jackson.databind.node.JsonNodeFactory#arrayNode()
	CALLEE: com.fasterxml.jackson.databind.node.ArrayNode#<init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)
CALLER: com.fasterxml.jackson.databind.node.JsonNodeFactory#pojoNode(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.POJONode#<init>(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.node.JsonNodeFactory#binaryNode(byte[])
	CALLEE: static com.fasterxml.jackson.databind.node.BinaryNode#valueOf(byte[])
CALLER: com.fasterxml.jackson.databind.node.JsonNodeFactory#numberNode(long)
	CALLEE: com.fasterxml.jackson.databind.node.JsonNodeFactory#_inIntRange(long)
	CALLEE: static com.fasterxml.jackson.databind.node.IntNode#valueOf(int)
	CALLEE: static com.fasterxml.jackson.databind.node.LongNode#valueOf(long)
CALLER: com.fasterxml.jackson.databind.node.JsonNodeFactory#numberNode(int)
	CALLEE: static com.fasterxml.jackson.databind.node.IntNode#valueOf(int)
CALLER: com.fasterxml.jackson.databind.node.JsonNodeFactory#numberNode(java.math.BigInteger)
	CALLEE: static com.fasterxml.jackson.databind.node.BigIntegerNode#valueOf(java.math.BigInteger)
CALLER: com.fasterxml.jackson.databind.node.JsonNodeFactory#numberNode(double)
	CALLEE: static com.fasterxml.jackson.databind.node.DoubleNode#valueOf(double)
CALLER: com.fasterxml.jackson.databind.node.JsonNodeFactory#numberNode(java.math.BigDecimal)
	CALLEE: static com.fasterxml.jackson.databind.node.DecimalNode#valueOf(java.math.BigDecimal)
CALLER: com.fasterxml.jackson.databind.deser.SettableAnyProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: static com.fasterxml.jackson.databind.JsonMappingException#from(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Throwable)
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#getObjectIdReader()
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#getObjectIdReader()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#getObjectIdReader()
	CALLEE: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference#getRoid()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableAnyProperty#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableAnyProperty#set(java.lang.Object,java.lang.String,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableAnyProperty.AnySetterReferring#<init>(com.fasterxml.jackson.databind.deser.SettableAnyProperty,com.fasterxml.jackson.databind.deser.UnresolvedForwardReference,java.lang.Class,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ReadableObjectId#appendReferring(com.fasterxml.jackson.databind.deser.impl.ReadableObjectId.Referring)
CALLER: jersey.repackaged.com.google.common.collect.Lists.TransformingRandomAccessList#isEmpty()
	CALLEE: jersey.repackaged.com.google.common.collect.Lists.TransformingRandomAccessList#isEmpty()
CALLER: com.fasterxml.jackson.databind.deser.SettableAnyProperty#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.NoClassDefFoundDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ByteDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ShortDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.FloatDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.DoubleDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.BooleanDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.CharDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.IntDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.LongDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.LongDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.CharacterDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ByteDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ShortDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.FloatDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigDecimalDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator#build(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonLocationInstantiator#createFromObjectWith(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object[])
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#createFromObjectWith(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object[])
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#createFromObjectWith(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object[])
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer#buffered()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer#handleIdValue(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer#getParameters(java.lang.Object[])
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyValue.Regular#assign(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyValue.Any#assign(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyValue.Map#assign(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator#startBuilding(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer#<init>(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,int,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer#inject(com.fasterxml.jackson.databind.deser.SettableBeanProperty[])
CALLER: org.eclipse.jetty.io.SelectorManager.ManagedSelector.Acceptor#run()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#isDebugEnabled()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#warn(java.lang.Throwable)
	CALLEE: static org.eclipse.jetty.io.SelectorManager.ManagedSelector#access$1000(org.eclipse.jetty.io.SelectorManager.ManagedSelector)
	CALLEE: static org.eclipse.jetty.io.SelectorManager.ManagedSelector#access$1100(org.eclipse.jetty.io.SelectorManager.ManagedSelector,java.io.Closeable)
CALLER: org.eclipse.jetty.io.SelectorManager.ManagedSelector.Stop#run()
	CALLEE: org.eclipse.jetty.util.component.AbstractLifeCycle#getStopTimeout()
	CALLEE: org.eclipse.jetty.io.SelectorManager#execute(java.lang.Runnable)
	CALLEE: static org.eclipse.jetty.io.SelectorManager.ManagedSelector#access$1000(org.eclipse.jetty.io.SelectorManager.ManagedSelector)
	CALLEE: static org.eclipse.jetty.io.SelectorManager.ManagedSelector#access$1100(org.eclipse.jetty.io.SelectorManager.ManagedSelector,java.io.Closeable)
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector.EndPointCloser#<init>(org.eclipse.jetty.io.SelectorManager.ManagedSelector,org.eclipse.jetty.io.EndPoint,org.eclipse.jetty.io.SelectorManager.1)
	CALLEE: static org.eclipse.jetty.io.SelectorManager.ManagedSelector.EndPointCloser#access$1700(org.eclipse.jetty.io.SelectorManager.ManagedSelector.EndPointCloser,long)
CALLER: org.eclipse.jetty.io.SelectorManager.ManagedSelector.DumpKeys#run()
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector#dumpKeysState(java.util.List)
CALLER: org.eclipse.jetty.io.SelectorManager.ManagedSelector.Accept#run()
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.Throwable)
	CALLEE: static org.eclipse.jetty.io.SelectorManager.ManagedSelector#access$1000(org.eclipse.jetty.io.SelectorManager.ManagedSelector)
	CALLEE: static org.eclipse.jetty.io.SelectorManager.ManagedSelector#access$1100(org.eclipse.jetty.io.SelectorManager.ManagedSelector,java.io.Closeable)
	CALLEE: static org.eclipse.jetty.io.SelectorManager.ManagedSelector#access$1200(org.eclipse.jetty.io.SelectorManager.ManagedSelector,java.nio.channels.SocketChannel,java.nio.channels.SelectionKey)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder#buildTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder#idResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection,boolean,boolean)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,java.lang.Class,com.fasterxml.jackson.annotation.JsonTypeInfo.As)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder#defaultImpl(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder#defaultImpl(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.node.ValueNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.NullNode#asText()
	CALLEE: com.fasterxml.jackson.databind.node.POJONode#asText()
	CALLEE: com.fasterxml.jackson.databind.node.BooleanNode#asText()
	CALLEE: com.fasterxml.jackson.databind.node.TextNode#asText()
	CALLEE: com.fasterxml.jackson.databind.node.BinaryNode#asText()
	CALLEE: com.fasterxml.jackson.databind.node.IntNode#asText()
	CALLEE: com.fasterxml.jackson.databind.node.LongNode#asText()
	CALLEE: com.fasterxml.jackson.databind.node.BigIntegerNode#asText()
	CALLEE: com.fasterxml.jackson.databind.node.DoubleNode#asText()
	CALLEE: com.fasterxml.jackson.databind.node.DecimalNode#asText()
CALLER: com.fasterxml.jackson.databind.deser.impl.ObjectIdReader#readObjectReference(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.CharacterDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ByteDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ShortDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.FloatDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigDecimalDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.NoClassDefFoundDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ByteDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ShortDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.FloatDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.DoubleDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.BooleanDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.CharDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.IntDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.LongDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.LongDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.CreatorProperty#withFallbackSetter(com.fasterxml.jackson.databind.deser.SettableBeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#<init>(com.fasterxml.jackson.databind.deser.CreatorProperty,com.fasterxml.jackson.databind.deser.SettableBeanProperty)
CALLER: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#skipChildren()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#setCurrentValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#isExpectedStartArrayToken()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#getName()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#isExpectedStartArrayToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#skipChildren()
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector.Vanilla#createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#setCurrentValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.core.JsonParser#setCurrentValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#_deserializeFromNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#_deserializeNonVanilla(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.CreatorProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentTokenId()
	CALLEE: com.fasterxml.jackson.core.JsonToken#id()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeStartObject()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeEndObject()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentTokenId()
CALLER: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)
CALLER: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#withIgnorableProperties(java.util.HashSet)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#withIgnorableProperties(java.util.HashSet)
CALLER: com.fasterxml.jackson.databind.deser.impl.PropertyBasedObjectIdGenerator#key(java.lang.Object)
	CALLEE: com.fasterxml.jackson.annotation.ObjectIdGenerator.IdKey#<init>(java.lang.Class,java.lang.Class,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#collect()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#isEnabled(com.fasterxml.jackson.databind.MapperFeature)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#_addFields()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#_addMethods()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#_addCreators()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#_addInjectables()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#_removeUnwantedProperties()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#_renameProperties()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#_findNamingStrategy()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#_renameUsing(com.fasterxml.jackson.databind.PropertyNamingStrategy)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#_renameWithWrappers()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#_sortProperties()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#trimByVisibility()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#mergeAnnotations(boolean)
CALLER: com.fasterxml.jackson.databind.util.StdDateFormat#clone()
	CALLEE: com.fasterxml.jackson.databind.util.StdDateFormat#clone()
CALLER: com.fasterxml.jackson.databind.util.StdDateFormat#withTimeZone(java.util.TimeZone)
	CALLEE: com.fasterxml.jackson.databind.util.StdDateFormat#<init>(java.util.TimeZone,java.util.Locale)
CALLER: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map)
CALLER: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection)
CALLER: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection)
CALLER: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection)
CALLER: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map.Entry)
CALLER: com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.nio.ByteBuffer)
CALLER: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#finishBuild(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#_deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler#start()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler#<init>(com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler)
CALLER: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#set(java.lang.Object,java.lang.Object)
CALLER: org.glassfish.jersey.server.model.Resource#toString()
	CALLEE: org.glassfish.jersey.server.model.Resource.Data#toString()
CALLER: org.glassfish.jersey.server.model.Resource#getHandlerClasses()
	CALLEE: static org.glassfish.jersey.server.model.Resource.Data#access$700(org.glassfish.jersey.server.model.Resource.Data)
CALLER: org.glassfish.jersey.server.model.Resource#getHandlerInstances()
	CALLEE: static org.glassfish.jersey.server.model.Resource.Data#access$800(org.glassfish.jersey.server.model.Resource.Data)
CALLER: org.glassfish.jersey.server.model.Resource#getComponents()
	CALLEE: org.glassfish.jersey.server.model.Resource#getResourceLocator()
	CALLEE: org.glassfish.jersey.server.model.Resource#getResourceMethods()
	CALLEE: org.glassfish.jersey.server.model.Resource#getChildResources()
CALLER: org.glassfish.jersey.server.model.Resource#accept(org.glassfish.jersey.server.model.ResourceModelVisitor)
	CALLEE: org.glassfish.jersey.server.model.Resource#getParent()
	CALLEE: org.glassfish.jersey.server.model.ResourceValidator#visitResource(org.glassfish.jersey.server.model.Resource)
	CALLEE: org.glassfish.jersey.server.model.AbstractResourceModelVisitor#visitResource(org.glassfish.jersey.server.model.Resource)
	CALLEE: org.glassfish.jersey.server.model.ResourceValidator#visitChildResource(org.glassfish.jersey.server.model.Resource)
	CALLEE: org.glassfish.jersey.server.model.AbstractResourceModelVisitor#visitChildResource(org.glassfish.jersey.server.model.Resource)
CALLER: com.fasterxml.jackson.databind.deser.impl.ObjectIdReader#maySerializeAsObject()
	CALLEE: com.fasterxml.jackson.annotation.ObjectIdGenerator#maySerializeAsObject()
CALLER: org.glassfish.jersey.server.model.Resource#getPathPattern()
	CALLEE: static org.glassfish.jersey.server.model.Resource.Data#access$2500(org.glassfish.jersey.server.model.Resource.Data)
CALLER: com.fasterxml.jackson.databind.deser.impl.ObjectIdReader#isValidReferencePropertyName(java.lang.String,com.fasterxml.jackson.core.JsonParser)
	CALLEE: com.fasterxml.jackson.annotation.ObjectIdGenerator#isValidReferencePropertyName(java.lang.String,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.DelegatingKD#deserializeKey(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getParser()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#weirdKeyException(java.lang.Class,java.lang.String,java.lang.String)
CALLER: com.fasterxml.jackson.core.json.JsonWriteContext#createChildObjectContext()
	CALLEE: com.fasterxml.jackson.core.json.JsonWriteContext#<init>(int,com.fasterxml.jackson.core.json.JsonWriteContext,com.fasterxml.jackson.core.json.DupDetector)
	CALLEE: com.fasterxml.jackson.core.json.JsonWriteContext#reset(int)
CALLER: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers#findKeyDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#wrapperType(java.lang.Class)
	CALLEE: static com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer#forType(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.JsonNode#iterator()
	CALLEE: com.fasterxml.jackson.databind.JsonNode#elements()
	CALLEE: com.fasterxml.jackson.databind.node.ObjectNode#elements()
	CALLEE: com.fasterxml.jackson.databind.node.ArrayNode#elements()
CALLER: com.fasterxml.jackson.databind.util.ObjectBuffer#completeAndClearBuffer(java.lang.Object[],int,java.util.List)
	CALLEE: com.fasterxml.jackson.databind.util.LinkedNode#next()
	CALLEE: com.fasterxml.jackson.databind.util.LinkedNode#value()
CALLER: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#findPOJOBuilderConfig()
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findPOJOBuilderConfig(com.fasterxml.jackson.databind.introspect.AnnotatedClass)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findPOJOBuilderConfig(com.fasterxml.jackson.databind.introspect.AnnotatedClass)
CALLER: com.fasterxml.jackson.databind.util.ArrayBuilders#getBooleanBuilder()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayBuilders.BooleanBuilder#<init>()
CALLER: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#skipChildren()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#setCurrentValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#getName()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#skipChildren()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#setCurrentValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#injectValues(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.core.JsonParser#setCurrentValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.util.ArrayBuilders#getFloatBuilder()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayBuilders.FloatBuilder#<init>()
CALLER: com.fasterxml.jackson.databind.util.ArrayBuilders#getByteBuilder()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayBuilders.ByteBuilder#<init>()
CALLER: com.fasterxml.jackson.databind.util.ArrayBuilders#getShortBuilder()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayBuilders.ShortBuilder#<init>()
CALLER: com.fasterxml.jackson.databind.util.ArrayBuilders#getIntBuilder()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayBuilders.IntBuilder#<init>()
CALLER: com.fasterxml.jackson.databind.util.ArrayBuilders#getDoubleBuilder()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayBuilders.DoubleBuilder#<init>()
CALLER: com.fasterxml.jackson.databind.util.ArrayBuilders#getLongBuilder()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayBuilders.LongBuilder#<init>()
CALLER: com.fasterxml.jackson.databind.ObjectMapper#writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ObjectMapper#getSerializationConfig()
	CALLEE: com.fasterxml.jackson.databind.SerializationConfig#isEnabled(com.fasterxml.jackson.databind.SerializationFeature)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#useDefaultPrettyPrinter()
	CALLEE: com.fasterxml.jackson.databind.ObjectMapper#_writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)
	CALLEE: com.fasterxml.jackson.databind.ObjectMapper#_serializerProvider(com.fasterxml.jackson.databind.SerializationConfig)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#flush()
	CALLEE: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider#serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#set(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#unwrapAndThrowAsIAE(java.lang.Throwable,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.NullProvider#nullValue(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#set(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#set(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#set(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#set(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#set(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#set(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#set(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#set(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#set(java.lang.Object,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#setAndReturn(java.lang.Object,java.lang.Object)
CALLER: com.zaxxer.hikari.pool.HikariProxyResultSet#close()
	CALLEE: com.zaxxer.hikari.pool.ProxyResultSet#checkException(java.sql.SQLException)
CALLER: com.zaxxer.hikari.pool.HikariProxyResultSet#next()
	CALLEE: com.zaxxer.hikari.pool.ProxyResultSet#checkException(java.sql.SQLException)
CALLER: com.zaxxer.hikari.pool.HikariProxyResultSet#getMetaData()
	CALLEE: com.zaxxer.hikari.pool.ProxyResultSet#checkException(java.sql.SQLException)
CALLER: com.zaxxer.hikari.pool.HikariProxyResultSet#getString(java.lang.String)
	CALLEE: com.zaxxer.hikari.pool.ProxyResultSet#checkException(java.sql.SQLException)
CALLER: com.zaxxer.hikari.pool.HikariProxyResultSet#getBytes(java.lang.String)
	CALLEE: com.zaxxer.hikari.pool.ProxyResultSet#checkException(java.sql.SQLException)
CALLER: com.zaxxer.hikari.pool.HikariProxyResultSet#getTimestamp(java.lang.String)
	CALLEE: com.zaxxer.hikari.pool.ProxyResultSet#checkException(java.sql.SQLException)
CALLER: com.zaxxer.hikari.pool.HikariProxyResultSet#getDouble(java.lang.String)
	CALLEE: com.zaxxer.hikari.pool.ProxyResultSet#checkException(java.sql.SQLException)
CALLER: com.zaxxer.hikari.pool.HikariProxyResultSet#getLong(java.lang.String)
	CALLEE: com.zaxxer.hikari.pool.ProxyResultSet#checkException(java.sql.SQLException)
CALLER: com.zaxxer.hikari.pool.HikariProxyResultSet#getInt(java.lang.String)
	CALLEE: com.zaxxer.hikari.pool.ProxyResultSet#checkException(java.sql.SQLException)
CALLER: com.zaxxer.hikari.pool.HikariProxyResultSet#getBoolean(java.lang.String)
	CALLEE: com.zaxxer.hikari.pool.ProxyResultSet#checkException(java.sql.SQLException)
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: org.glassfish.jersey.server.model.MethodHandler.InstanceBasedMethodHandler#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#toString()
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodRouting#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#toString()
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.ConsumesProducesAcceptor#toString()
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#toString()
	CALLEE: org.eclipse.jetty.webapp.WebAppContext#toString()
	CALLEE: org.eclipse.jetty.server.handler.HandlerCollection#toString()
	CALLEE: org.eclipse.jetty.server.Server#toString()
	CALLEE: org.eclipse.jetty.server.AbstractNetworkConnector#toString()
	CALLEE: org.eclipse.jetty.util.thread.QueuedThreadPool#toString()
	CALLEE: org.eclipse.jetty.server.AbstractConnectionFactory#toString()
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle.Bean#toString()
	CALLEE: org.apache.log4j.NameValue#toString()
	CALLEE: liquibase.changelog.ChangeLogParameters.ChangeLogParameter#toString()
	CALLEE: org.eclipse.jetty.server.AbstractConnector.Acceptor#toString()
	CALLEE: org.eclipse.jetty.server.HttpConfiguration#toString()
	CALLEE: org.eclipse.jetty.util.MultiException#toString()
	CALLEE: org.eclipse.jetty.http.PathMap.MappedEntry#toString()
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector#toString()
	CALLEE: liquibase.servicelocator.AssignableToPackageScanFilter#toString()
	CALLEE: org.eclipse.jetty.http.HttpField#toString()
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#toString()
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#toString()
	CALLEE: org.eclipse.jetty.servlet.ServletMapping#toString()
	CALLEE: org.glassfish.jersey.internal.OsgiRegistry.BundleSpiProvidersLoader#toString()
	CALLEE: org.h2.jdbc.JdbcSQLException#toString()
	CALLEE: liquibase.changelog.filter.ChangeSetFilterResult#toString()
	CALLEE: com.zaxxer.hikari.pool.PoolEntry#toString()
	CALLEE: org.eclipse.jetty.io.SelectChannelEndPoint#toString()
	CALLEE: org.eclipse.jetty.util.FutureCallback#toString()
	CALLEE: static com.fasterxml.jackson.core.json.JsonReadContext#createRootContext(com.fasterxml.jackson.core.json.DupDetector)
	CALLEE: org.eclipse.jetty.util.ConstantThrowable#toString()
	CALLEE: javax.ws.rs.core.MediaType#toString()
	CALLEE: org.glassfish.jersey.model.internal.RankedProvider#toString()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#toString()
	CALLEE: org.glassfish.hk2.api.MultiException#toString()
	CALLEE: org.glassfish.jersey.message.internal.QualitySourceMediaType#toString()
	CALLEE: jersey.repackaged.com.google.common.base.Predicates.AndPredicate#toString()
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.MapType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#toString()
	CALLEE: org.glassfish.hk2.utilities.NamedImpl#toString()
	CALLEE: com.fasterxml.jackson.core.json.JsonReadContext#getParent()
	CALLEE: com.fasterxml.jackson.core.json.JsonReadContext#setCurrentName(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.json.JsonReadContext#createChildArrayContext(int,int)
	CALLEE: com.fasterxml.jackson.core.json.JsonReadContext#createChildObjectContext(int,int)
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#toString()
	CALLEE: com.fasterxml.jackson.core.JsonLocation#toString()
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#toString()
	CALLEE: com.fasterxml.jackson.databind.jsontype.NamedType#toString()
	CALLEE: liquibase.changelog.RanChangeSet#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.UnresolvedId#toString()
	CALLEE: org.glassfish.jersey.server.model.ResourceModelIssue#toString()
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#toString()
	CALLEE: org.glassfish.jersey.server.model.Parameter#toString()
	CALLEE: org.glassfish.hk2.utilities.reflection.ParameterizedTypeImpl#toString()
	CALLEE: com.fasterxml.jackson.databind.type.ClassKey#toString()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException.Reference#toString()
	CALLEE: org.glassfish.jersey.server.model.Resource.Data#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ValueNode#toString()
	CALLEE: org.glassfish.jersey.server.model.Resource#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#toString()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Segment#next()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Segment#type(int)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#_currentObject()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#toString()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Data#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.MemberKey#toString()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ObjectNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ArrayNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.POJONode#toString()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#toString()
	CALLEE: com.fasterxml.jackson.databind.node.TextNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.BinaryNode#toString()
	CALLEE: com.fasterxml.jackson.databind.PropertyName#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#toString()
	CALLEE: com.fasterxml.jackson.core.io.SerializedString#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey#toString()
	CALLEE: org.glassfish.jersey.server.model.Invocable#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#toString()
	CALLEE: org.glassfish.jersey.server.model.MethodHandler.ClassBasedMethodHandler#toString()
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getCurrentName()
	CALLEE: com.fasterxml.jackson.core.json.JsonReadContext#getCurrentName()
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#_handleEOF()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_throwInternal()
CALLER: com.fasterxml.jackson.core.JsonParser#setCurrentValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.json.JsonReadContext#setCurrentValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getParsingContext()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getParsingContext()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getParsingContext()
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getEmbeddedObject()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#_currentObject()
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getDoubleValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getNumberValue()
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getFloatValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getNumberValue()
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getDecimalValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getNumberType()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getNumberValue()
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getNumberType()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getNumberValue()
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getLongValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getNumberValue()
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getBigIntegerValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getNumberType()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getNumberValue()
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getIntValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getNumberValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#_currentObject()
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
	CALLEE: org.glassfish.jersey.message.internal.QualitySourceMediaType#toString()
	CALLEE: com.fasterxml.jackson.core.JsonLocation#toString()
	CALLEE: com.fasterxml.jackson.databind.PropertyName#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#toString()
	CALLEE: com.fasterxml.jackson.core.io.SerializedString#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey#toString()
	CALLEE: org.glassfish.jersey.server.model.Invocable#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#toString()
	CALLEE: org.glassfish.jersey.server.model.MethodHandler.ClassBasedMethodHandler#toString()
	CALLEE: org.glassfish.jersey.server.model.MethodHandler.InstanceBasedMethodHandler#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#toString()
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodRouting#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#toString()
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.ConsumesProducesAcceptor#toString()
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#toString()
	CALLEE: org.eclipse.jetty.webapp.WebAppContext#toString()
	CALLEE: org.eclipse.jetty.server.handler.HandlerCollection#toString()
	CALLEE: org.eclipse.jetty.server.Server#toString()
	CALLEE: org.eclipse.jetty.server.AbstractNetworkConnector#toString()
	CALLEE: org.eclipse.jetty.util.thread.QueuedThreadPool#toString()
	CALLEE: org.eclipse.jetty.server.AbstractConnectionFactory#toString()
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle.Bean#toString()
	CALLEE: org.apache.log4j.NameValue#toString()
	CALLEE: liquibase.changelog.ChangeLogParameters.ChangeLogParameter#toString()
	CALLEE: org.eclipse.jetty.server.AbstractConnector.Acceptor#toString()
	CALLEE: org.eclipse.jetty.server.HttpConfiguration#toString()
	CALLEE: org.eclipse.jetty.util.MultiException#toString()
	CALLEE: org.eclipse.jetty.http.PathMap.MappedEntry#toString()
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector#toString()
	CALLEE: liquibase.servicelocator.AssignableToPackageScanFilter#toString()
	CALLEE: org.eclipse.jetty.http.HttpField#toString()
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#toString()
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#toString()
	CALLEE: org.eclipse.jetty.servlet.ServletMapping#toString()
	CALLEE: org.glassfish.jersey.internal.OsgiRegistry.BundleSpiProvidersLoader#toString()
	CALLEE: org.h2.jdbc.JdbcSQLException#toString()
	CALLEE: liquibase.changelog.filter.ChangeSetFilterResult#toString()
	CALLEE: com.zaxxer.hikari.pool.PoolEntry#toString()
	CALLEE: org.eclipse.jetty.io.SelectChannelEndPoint#toString()
	CALLEE: org.eclipse.jetty.util.FutureCallback#toString()
	CALLEE: org.eclipse.jetty.util.ConstantThrowable#toString()
	CALLEE: javax.ws.rs.core.MediaType#toString()
	CALLEE: org.glassfish.jersey.model.internal.RankedProvider#toString()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#toString()
	CALLEE: org.glassfish.hk2.api.MultiException#toString()
	CALLEE: jersey.repackaged.com.google.common.base.Predicates.AndPredicate#toString()
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.MapType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#toString()
	CALLEE: org.glassfish.hk2.utilities.NamedImpl#toString()
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#toString()
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#toString()
	CALLEE: com.fasterxml.jackson.databind.jsontype.NamedType#toString()
	CALLEE: liquibase.changelog.RanChangeSet#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.UnresolvedId#toString()
	CALLEE: org.glassfish.jersey.server.model.ResourceModelIssue#toString()
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#toString()
	CALLEE: org.glassfish.jersey.server.model.Parameter#toString()
	CALLEE: org.glassfish.hk2.utilities.reflection.ParameterizedTypeImpl#toString()
	CALLEE: com.fasterxml.jackson.databind.type.ClassKey#toString()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException.Reference#toString()
	CALLEE: org.glassfish.jersey.server.model.Resource.Data#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ValueNode#toString()
	CALLEE: org.glassfish.jersey.server.model.Resource#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#toString()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#_currentObject()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#toString()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Data#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.MemberKey#toString()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ObjectNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ArrayNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.POJONode#toString()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#toString()
	CALLEE: com.fasterxml.jackson.databind.node.TextNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.BinaryNode#toString()
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getTextLength()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getTextCharacters()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getObjectId()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Segment#findObjectId(int)
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getTypeId()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Segment#findTypeId(int)
CALLER: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#<init>(com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty,com.fasterxml.jackson.databind.JsonDeserializer)
CALLER: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#getMember()
CALLER: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#set(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#set(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#set(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#set(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#set(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#set(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#set(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#set(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#set(java.lang.Object,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#setAndReturn(java.lang.Object,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
CALLER: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#getMember()
CALLER: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#set(java.lang.Object,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#set(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#setAndReturn(java.lang.Object,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#set(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#set(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#set(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#set(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#set(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#set(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#set(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#set(java.lang.Object,java.lang.Object)
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#setAndReturn(java.lang.Object,java.lang.Object)
CALLER: com.fasterxml.jackson.core.json.JsonWriteContext#createChildArrayContext()
	CALLEE: com.fasterxml.jackson.core.json.JsonWriteContext#<init>(int,com.fasterxml.jackson.core.json.JsonWriteContext,com.fasterxml.jackson.core.json.DupDetector)
	CALLEE: com.fasterxml.jackson.core.json.JsonWriteContext#reset(int)
CALLER: com.fasterxml.jackson.core.json.JsonWriteContext#writeFieldName(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.json.JsonWriteContext#_checkDup(com.fasterxml.jackson.core.json.DupDetector,java.lang.String)
CALLER: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
CALLER: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
CALLER: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#getMember()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#getMember()
CALLER: org.glassfish.jersey.server.model.ResourceMethod.Builder#build()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod#<init>(org.glassfish.jersey.server.model.Resource,org.glassfish.jersey.server.model.ResourceMethod.Data)
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#isExtended()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Builder#createInvocable()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Data#<init>(java.lang.String,java.util.Collection,java.util.Collection,boolean,boolean,long,java.util.concurrent.TimeUnit,org.glassfish.jersey.server.model.Invocable,java.util.Collection,boolean,org.glassfish.jersey.server.model.ResourceMethod.1)
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#onBuildMethod(org.glassfish.jersey.server.model.ResourceMethod.Builder,org.glassfish.jersey.server.model.ResourceMethod.Data)
CALLER: com.fasterxml.jackson.databind.deser.CreatorProperty#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#getName()
CALLER: com.fasterxml.jackson.databind.deser.CreatorProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#set(java.lang.Object,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.CreatorProperty#set(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#set(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#set(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#set(java.lang.Object,java.lang.Object)
CALLER: com.fasterxml.jackson.core.JsonParser#getValueAsString()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getValueAsString(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getValueAsString(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getValueAsString(java.lang.String)
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getNumberValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#_currentObject()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#_checkIsNumber()
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getBinaryValue(com.fasterxml.jackson.core.Base64Variant)
	CALLEE: com.fasterxml.jackson.core.JsonParser#_constructError(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#_decodeBase64(java.lang.String,com.fasterxml.jackson.core.util.ByteArrayBuilder,com.fasterxml.jackson.core.Base64Variant)
	CALLEE: com.fasterxml.jackson.core.util.ByteArrayBuilder#reset()
	CALLEE: com.fasterxml.jackson.core.util.ByteArrayBuilder#toByteArray()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#_currentObject()
	CALLEE: com.fasterxml.jackson.core.util.ByteArrayBuilder#<init>(int)
CALLER: com.fasterxml.jackson.core.JsonParser#nextTextValue()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getTokenLocation()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getCurrentLocation()
CALLER: com.fasterxml.jackson.databind.deser.CreatorProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#setAndReturn(java.lang.Object,java.lang.Object)
CALLER: org.glassfish.hk2.api.MultiException#printStackTrace(java.io.PrintWriter)
	CALLEE: org.h2.jdbc.JdbcSQLException#printStackTrace(java.io.PrintWriter)
	CALLEE: org.glassfish.hk2.api.MultiException#printStackTrace(java.io.PrintWriter)
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: org.glassfish.hk2.api.MultiException#getErrors()
CALLER: jersey.repackaged.com.google.common.collect.Lists.TransformingRandomAccessList.1#<init>(jersey.repackaged.com.google.common.collect.Lists.TransformingRandomAccessList,java.util.ListIterator)
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedListIterator#<init>(java.util.ListIterator)
CALLER: static org.eclipse.jetty.io.SelectChannelEndPoint#access$200(org.eclipse.jetty.io.SelectChannelEndPoint,int,int)
	CALLEE: org.eclipse.jetty.io.SelectChannelEndPoint#setKeyInterests(int,int)
CALLER: org.glassfish.jersey.server.model.Resource.2#get()
	CALLEE: static org.glassfish.jersey.server.model.Resource.Data#access$900(org.glassfish.jersey.server.model.Resource.Data)
CALLER: com.fasterxml.jackson.databind.type.ArrayType#withContentTypeHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#<init>(com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,java.lang.Object,boolean)
	CALLEE: com.fasterxml.jackson.databind.type.TypeBase#getTypeHandler()
	CALLEE: com.fasterxml.jackson.databind.type.MapType#withTypeHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#withTypeHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#withTypeHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#withTypeHandler(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.type.MapType#withContentTypeHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.MapType#<init>(java.lang.Class,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean)
	CALLEE: com.fasterxml.jackson.databind.type.MapType#withTypeHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#withTypeHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#withTypeHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#withTypeHandler(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.type.CollectionType#withContentTypeHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#<init>(java.lang.Class,com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean)
	CALLEE: com.fasterxml.jackson.databind.type.MapType#withTypeHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#withTypeHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#withTypeHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#withTypeHandler(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#isCreatorVisible(java.lang.reflect.Member)
	CALLEE: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility#isVisible(java.lang.reflect.Member)
CALLER: org.glassfish.jersey.server.model.RuntimeResourceModelValidator#visitRuntimeResource(org.glassfish.jersey.server.model.RuntimeResource)
	CALLEE: org.glassfish.jersey.server.model.RuntimeResourceModelValidator#checkMethods(org.glassfish.jersey.server.model.RuntimeResource)
CALLER: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#mapObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
CALLER: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#mapArrayToArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#leaseObjectBuffer()
	CALLEE: com.fasterxml.jackson.databind.util.ObjectBuffer#resetAndStart()
	CALLEE: com.fasterxml.jackson.databind.util.ObjectBuffer#appendCompletedChunk(java.lang.Object[])
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.ObjectBuffer#completeAndClearBuffer(java.lang.Object[],int)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
CALLER: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#mapArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#leaseObjectBuffer()
	CALLEE: com.fasterxml.jackson.databind.util.ObjectBuffer#resetAndStart()
	CALLEE: com.fasterxml.jackson.databind.util.ObjectBuffer#appendCompletedChunk(java.lang.Object[])
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.ObjectBuffer#completeAndClearBuffer(java.lang.Object[],int,java.util.List)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedClass#getAnnotations()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#resolveClassAnnotations()
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findReferenceType(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#_findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
	CALLEE: static com.fasterxml.jackson.databind.AnnotationIntrospector.ReferenceProperty#managed(java.lang.String)
	CALLEE: static com.fasterxml.jackson.databind.AnnotationIntrospector.ReferenceProperty#back(java.lang.String)
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedClass#getConstructors()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#resolveCreators()
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedClass#getDefaultConstructor()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#resolveCreators()
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedClass#getStaticMethods()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#resolveCreators()
CALLER: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#isFactoryMethod(com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#hasCreatorAnnotation(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#hasCreatorAnnotation(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.BeanDescription#getBeanClass()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getParameterCount()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getRawParameterType(int)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getName()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getRawReturnType()
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedClass#findMethod(java.lang.String,java.lang.Class[])
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#resolveMemberMethods()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap#find(java.lang.String,java.lang.Class[])
CALLER: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#_createConverter(java.lang.Object)
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#isBogusClass(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#getHandlerInstantiator()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#canOverrideAccessModifiers()
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#createInstance(java.lang.Class,boolean)
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findPOJOBuilder(com.fasterxml.jackson.databind.introspect.AnnotatedClass)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#_findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#_classIfExplicit(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#vanillaDeserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonToken)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#find(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector.Vanilla#createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#handleUnknownVanilla(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentName()
CALLER: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#finishBuild(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#wrapInstantiationProblem(java.lang.Throwable,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getMember()
CALLER: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserializeFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#handleUnknownVanilla(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentName()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#find(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector.Vanilla#createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#deserializeFromObjectUsingNonDefault(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#injectValues(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getActiveView()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserializeWithUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserializeWithExternalTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserializeWithView(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.Class)
CALLER: static com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer.1#<clinit>()
	CALLEE: static com.fasterxml.jackson.core.JsonToken#values()
CALLER: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#<init>(com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)
CALLER: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#withIgnorableProperties(java.util.HashSet)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#<init>(com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer,java.util.HashSet)
CALLER: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#asArrayDeserializer()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#getPropertiesInInsertionOrder()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#<init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.deser.SettableBeanProperty[],com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
CALLER: org.glassfish.jersey.uri.PathPattern.1#compare(org.glassfish.jersey.uri.PathPattern,org.glassfish.jersey.uri.PathPattern)
	CALLEE: static org.glassfish.jersey.uri.PathPattern#access$000(org.glassfish.jersey.uri.PathPattern)
	CALLEE: org.glassfish.jersey.uri.UriTemplate.1#compare(java.lang.Object,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.EnumKD#_parse(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.DeserializationConfig#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getConfig()
	CALLEE: com.fasterxml.jackson.databind.util.EnumResolver#findEnum(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#weirdKeyException(java.lang.Class,java.lang.String,java.lang.String)
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#unwrapAndThrowAsIAE(java.lang.Throwable)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#call1(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.DeserializationContext#weirdKeyException(java.lang.Class,java.lang.String,java.lang.String)
	CALLEE: static com.fasterxml.jackson.databind.exc.InvalidFormatException#from(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#_desc(java.lang.String)
CALLER: org.glassfish.jersey.server.model.ResourceMethod.1#apply(org.glassfish.jersey.server.model.ResourceMethod.Data)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod#<init>(org.glassfish.jersey.server.model.Resource,org.glassfish.jersey.server.model.ResourceMethod.Data)
CALLER: org.glassfish.jersey.server.model.Resource.1#apply(org.glassfish.jersey.server.model.Resource.Data)
	CALLEE: org.glassfish.jersey.server.model.Resource#<init>(org.glassfish.jersey.server.model.Resource,org.glassfish.jersey.server.model.Resource.Data,org.glassfish.jersey.server.model.Resource.1)
CALLER: static com.fasterxml.jackson.databind.node.BooleanNode#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.node.BooleanNode#<init>(boolean)
CALLER: static com.fasterxml.jackson.databind.node.TextNode#valueOf(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.node.TextNode#<init>(java.lang.String)
CALLER: static com.fasterxml.jackson.databind.node.TextNode#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.node.TextNode#<init>(java.lang.String)
CALLER: com.fasterxml.jackson.databind.node.ObjectNode#<init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)
	CALLEE: com.fasterxml.jackson.databind.node.ContainerNode#<init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)
CALLER: com.fasterxml.jackson.databind.node.ArrayNode#<init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)
	CALLEE: com.fasterxml.jackson.databind.node.ContainerNode#<init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)
CALLER: com.fasterxml.jackson.databind.node.POJONode#<init>(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.ValueNode#<init>()
CALLER: static com.fasterxml.jackson.databind.node.BinaryNode#valueOf(byte[])
	CALLEE: com.fasterxml.jackson.databind.node.BinaryNode#<init>(byte[])
CALLER: static com.fasterxml.jackson.databind.node.BinaryNode#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.node.BinaryNode#<init>(byte[])
CALLER: static com.fasterxml.jackson.databind.node.IntNode#valueOf(int)
	CALLEE: com.fasterxml.jackson.databind.node.IntNode#<init>(int)
CALLER: static com.fasterxml.jackson.databind.node.IntNode#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.node.IntNode#<init>(int)
CALLER: static com.fasterxml.jackson.databind.node.LongNode#valueOf(long)
	CALLEE: com.fasterxml.jackson.databind.node.LongNode#<init>(long)
CALLER: static com.fasterxml.jackson.databind.node.BigIntegerNode#valueOf(java.math.BigInteger)
	CALLEE: com.fasterxml.jackson.databind.node.BigIntegerNode#<init>(java.math.BigInteger)
CALLER: static com.fasterxml.jackson.databind.node.DoubleNode#valueOf(double)
	CALLEE: com.fasterxml.jackson.databind.node.DoubleNode#<init>(double)
CALLER: static com.fasterxml.jackson.databind.node.DecimalNode#valueOf(java.math.BigDecimal)
	CALLEE: com.fasterxml.jackson.databind.node.DecimalNode#<init>(java.math.BigDecimal)
CALLER: static com.fasterxml.jackson.databind.node.DecimalNode#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.node.DecimalNode#<init>(java.math.BigDecimal)
CALLER: com.fasterxml.jackson.databind.deser.SettableAnyProperty#set(java.lang.Object,java.lang.String,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableAnyProperty#_throwAsIOE(java.lang.Exception,java.lang.String,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getAnnotated()
CALLER: com.fasterxml.jackson.databind.deser.SettableAnyProperty.AnySetterReferring#<init>(com.fasterxml.jackson.databind.deser.SettableAnyProperty,com.fasterxml.jackson.databind.deser.UnresolvedForwardReference,java.lang.Class,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ReadableObjectId.Referring#<init>(com.fasterxml.jackson.databind.deser.UnresolvedForwardReference,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.std.JsonLocationInstantiator#createFromObjectWith(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object[])
	CALLEE: com.fasterxml.jackson.core.JsonLocation#<init>(java.lang.Object,long,long,int,int)
	CALLEE: static com.fasterxml.jackson.databind.deser.std.JsonLocationInstantiator#_long(java.lang.Object)
	CALLEE: static com.fasterxml.jackson.databind.deser.std.JsonLocationInstantiator#_int(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.ValueInstantiator#createFromObjectWith(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object[])
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonLocationInstantiator#getValueTypeDesc()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector.Vanilla#getValueTypeDesc()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#getValueTypeDesc()
CALLER: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#createFromObjectWith(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object[])
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#getValueTypeDesc()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#wrapException(java.lang.Throwable)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#call(java.lang.Object[])
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#call(java.lang.Object[])
CALLER: com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer#inject(com.fasterxml.jackson.databind.deser.SettableBeanProperty[])
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#getInjectableValueId()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#findInjectableValue(java.lang.Object,com.fasterxml.jackson.databind.BeanProperty,java.lang.Object)
CALLER: static org.eclipse.jetty.io.SelectorManager.ManagedSelector#access$1100(org.eclipse.jetty.io.SelectorManager.ManagedSelector,java.io.Closeable)
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector#closeNoExceptions(java.io.Closeable)
CALLER: org.eclipse.jetty.io.SelectorManager.ManagedSelector.EndPointCloser#<init>(org.eclipse.jetty.io.SelectorManager.ManagedSelector,org.eclipse.jetty.io.EndPoint,org.eclipse.jetty.io.SelectorManager.1)
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector.EndPointCloser#<init>(org.eclipse.jetty.io.SelectorManager.ManagedSelector,org.eclipse.jetty.io.EndPoint)
CALLER: static org.eclipse.jetty.io.SelectorManager.ManagedSelector.EndPointCloser#access$1700(org.eclipse.jetty.io.SelectorManager.ManagedSelector.EndPointCloser,long)
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector.EndPointCloser#await(long)
CALLER: static org.eclipse.jetty.io.SelectorManager.ManagedSelector#access$1200(org.eclipse.jetty.io.SelectorManager.ManagedSelector,java.nio.channels.SocketChannel,java.nio.channels.SelectionKey)
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector#createEndPoint(java.nio.channels.SocketChannel,java.nio.channels.SelectionKey)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder#idResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection,boolean,boolean)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#getTypeFactory()
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.TypeFactory)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.MinimalClassNameIdResolver#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.TypeFactory)
	CALLEE: static com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver#construct(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection,boolean,boolean)
CALLER: static com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.1#<clinit>()
	CALLEE: static com.fasterxml.jackson.annotation.JsonTypeInfo.Id#values()
	CALLEE: static com.fasterxml.jackson.annotation.JsonTypeInfo.As#values()
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,java.lang.Class,com.fasterxml.jackson.annotation.JsonTypeInfo.As)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.CreatorProperty#<init>(com.fasterxml.jackson.databind.deser.CreatorProperty,com.fasterxml.jackson.databind.deser.SettableBeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#<init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty)
CALLER: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#_deserializeFromNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
CALLER: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#_deserializeNonVanilla(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#skipChildren()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#skipChildren()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#setCurrentValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#getName()
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector.Vanilla#createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#setCurrentValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#injectValues(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getActiveView()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#visibleInView(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.core.JsonParser#setCurrentValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#_deserializeWithCreator(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#<init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.deser.SettableBeanProperty[])
CALLER: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#withIgnorableProperties(java.util.HashSet)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#withIgnorableProperties(java.util.HashSet)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#<init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.deser.SettableBeanProperty[])
CALLER: com.fasterxml.jackson.annotation.ObjectIdGenerator.IdKey#<init>(java.lang.Class,java.lang.Class,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.ClassKey#hashCode()
	CALLEE: org.glassfish.jersey.message.internal.QualitySourceMediaType#hashCode()
	CALLEE: org.glassfish.jersey.message.internal.AcceptableMediaType#hashCode()
	CALLEE: com.fasterxml.jackson.core.JsonLocation#hashCode()
	CALLEE: com.fasterxml.jackson.databind.introspect.MemberKey#hashCode()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#hashCode()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#hashCode()
	CALLEE: com.fasterxml.jackson.annotation.ObjectIdGenerator.IdKey#hashCode()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#hashCode()
	CALLEE: com.fasterxml.jackson.databind.PropertyName#hashCode()
	CALLEE: com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey#hashCode()
	CALLEE: com.fasterxml.jackson.core.io.SerializedString#hashCode()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#hashCode()
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.ConsumesProducesAcceptor#hashCode()
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#hashCode()
	CALLEE: org.traccar.database.GroupTree.TreeNode#hashCode()
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig.FeatureRegistration#hashCode()
	CALLEE: org.apache.log4j.CategoryKey#hashCode()
	CALLEE: org.slf4j.helpers.SubstituteLogger#hashCode()
	CALLEE: org.glassfish.jersey.internal.Errors.ErrorMessage#hashCode()
	CALLEE: org.glassfish.jersey.internal.OsgiRegistry.BundleSpiProvidersLoader#hashCode()
	CALLEE: javax.ws.rs.core.MediaType#hashCode()
	CALLEE: com.fasterxml.jackson.databind.JavaType#hashCode()
	CALLEE: jersey.repackaged.com.google.common.base.Predicates.AndPredicate#hashCode()
	CALLEE: org.glassfish.hk2.api.AnnotationLiteral#hashCode()
	CALLEE: org.glassfish.hk2.utilities.reflection.ParameterizedTypeImpl#hashCode()
	CALLEE: liquibase.changelog.RanChangeSet#hashCode()
	CALLEE: org.glassfish.jersey.server.model.ResourceModelIssue#hashCode()
	CALLEE: org.glassfish.jersey.server.model.Parameter#hashCode()
	CALLEE: com.fasterxml.jackson.databind.jsontype.NamedType#hashCode()
	CALLEE: com.fasterxml.jackson.databind.node.ObjectNode#hashCode()
	CALLEE: com.fasterxml.jackson.databind.node.ArrayNode#hashCode()
	CALLEE: com.fasterxml.jackson.databind.node.POJONode#hashCode()
	CALLEE: com.fasterxml.jackson.databind.node.TextNode#hashCode()
	CALLEE: com.fasterxml.jackson.databind.node.BinaryNode#hashCode()
	CALLEE: com.fasterxml.jackson.databind.node.IntNode#hashCode()
	CALLEE: com.fasterxml.jackson.databind.node.LongNode#hashCode()
	CALLEE: com.fasterxml.jackson.databind.node.BigIntegerNode#hashCode()
	CALLEE: com.fasterxml.jackson.databind.node.DoubleNode#hashCode()
	CALLEE: com.fasterxml.jackson.databind.node.DecimalNode#hashCode()
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#_addFields()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#addField(com.fasterxml.jackson.databind.introspect.AnnotatedField,com.fasterxml.jackson.databind.PropertyName,boolean,boolean,boolean)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#getName()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#getModifiers()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#isEnabled(com.fasterxml.jackson.databind.MapperFeature)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#fields()
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findImplicitPropertyName(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findImplicitPropertyName(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findNameForSerialization(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findNameForSerialization(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findNameForDeserialization(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findNameForDeserialization(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#_propNameFromSimple(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#isFieldVisible(com.fasterxml.jackson.databind.introspect.AnnotatedField)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#hasIgnoreMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#hasIgnoreMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#_property(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.PropertyName#isEmpty()
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#_addMethods()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#memberMethods()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#_addGetterMethod(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.AnnotationIntrospector)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#_addSetterMethod(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.AnnotationIntrospector)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#hasAnySetterAnnotation(com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#hasAnySetterAnnotation(com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap#iterator()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getParameterCount()
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#_addCreators()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#getConstructors()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#getStaticMethods()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#_addCreatorParam(com.fasterxml.jackson.databind.introspect.AnnotatedParameter)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedWithParams#getParameter(int)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#getParameterCount()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getParameterCount()
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#_addInjectables()
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findInjectableValueId(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findInjectableValueId(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#fields()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#memberMethods()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#_doAddInjectable(java.lang.Object,com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap#iterator()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getParameterCount()
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#_removeUnwantedProperties()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#isEnabled(com.fasterxml.jackson.databind.MapperFeature)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#_addIgnored(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getName()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#removeNonVisible(boolean)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#couldDeserialize()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#removeIgnored()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#isExplicitlyIncluded()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#anyIgnorals()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#anyVisible()
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#_renameProperties()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#_updateCreatorProperty(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder,java.util.List)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getName()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#withName(com.fasterxml.jackson.databind.PropertyName)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#addAll(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#explode(java.util.Collection)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#findExplicitNames()
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#_findNamingStrategy()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#getHandlerInstantiator()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#canOverrideAccessModifiers()
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#createInstance(java.lang.Class,boolean)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findNamingStrategy(com.fasterxml.jackson.databind.introspect.AnnotatedClass)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findNamingStrategy(com.fasterxml.jackson.databind.introspect.AnnotatedClass)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#getPropertyNamingStrategy()
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#_renameUsing(com.fasterxml.jackson.databind.PropertyNamingStrategy)
	CALLEE: com.fasterxml.jackson.databind.PropertyName#getSimpleName()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#_updateCreatorProperty(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder,java.util.List)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#isExplicitlyNamed()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getFullName()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#hasConstructorParameter()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getGetter()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#hasGetter()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getField()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#hasField()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getSetter()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#hasSetter()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#addAll(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#withSimpleName(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getConstructorParameter()
	CALLEE: com.fasterxml.jackson.databind.PropertyName#hasSimpleName(java.lang.String)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#_renameWithWrappers()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getFullName()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getName()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#withName(com.fasterxml.jackson.databind.PropertyName)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getPrimaryMember()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#addAll(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder)
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findWrapperName(com.fasterxml.jackson.databind.introspect.Annotated)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#_sortProperties()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getInternalName()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findSerializationSortAlphabetically(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findSerializationSortAlphabetically(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#shouldSortPropertiesAlphabetically()
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findSerializationPropertyOrder(com.fasterxml.jackson.databind.introspect.AnnotatedClass)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findSerializationPropertyOrder(com.fasterxml.jackson.databind.introspect.AnnotatedClass)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getName()
CALLER: com.fasterxml.jackson.databind.util.StdDateFormat#clone()
	CALLEE: com.fasterxml.jackson.databind.util.StdDateFormat#<init>(java.util.TimeZone,java.util.Locale)
CALLER: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#getMapClass()
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#_readAndBindStringMap(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#_readAndBind(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#setCurrentValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.JsonParser#setCurrentValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#setCurrentValue(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.nio.ByteBuffer)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getBase64Variant()
	CALLEE: com.fasterxml.jackson.databind.util.ByteBufferBackedOutputStream#<init>(java.nio.ByteBuffer)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream)
CALLER: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#_deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#handleUnknownVanilla(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentName()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#find(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#handledType()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#injectValues(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getActiveView()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserializeWithView(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserializeWithUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserializeWithExternalTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
CALLER: org.glassfish.jersey.server.model.ResourceValidator#visitResource(org.glassfish.jersey.server.model.Resource)
	CALLEE: org.glassfish.jersey.server.model.ResourceValidator#checkResource(org.glassfish.jersey.server.model.Resource)
CALLER: org.glassfish.jersey.server.model.ResourceValidator#visitChildResource(org.glassfish.jersey.server.model.Resource)
	CALLEE: org.glassfish.jersey.server.model.ResourceValidator#checkResource(org.glassfish.jersey.server.model.Resource)
CALLER: static com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer#forType(java.lang.Class)
	CALLEE: static com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#findDeserializer(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer#<init>(int,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer#<init>(int,java.lang.Class,com.fasterxml.jackson.databind.deser.std.FromStringDeserializer)
	CALLEE: static com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.StringKD#forType(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.JsonNode#elements()
	CALLEE: static com.fasterxml.jackson.databind.util.EmptyIterator#instance()
CALLER: com.fasterxml.jackson.databind.util.ArrayBuilders.BooleanBuilder#<init>()
	CALLEE: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder#<init>()
CALLER: com.fasterxml.jackson.databind.util.ArrayBuilders.FloatBuilder#<init>()
	CALLEE: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder#<init>()
CALLER: com.fasterxml.jackson.databind.util.ArrayBuilders.ByteBuilder#<init>()
	CALLEE: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder#<init>()
CALLER: com.fasterxml.jackson.databind.util.ArrayBuilders.ShortBuilder#<init>()
	CALLEE: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder#<init>()
CALLER: com.fasterxml.jackson.databind.util.ArrayBuilders.IntBuilder#<init>()
	CALLEE: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder#<init>()
CALLER: com.fasterxml.jackson.databind.util.ArrayBuilders.DoubleBuilder#<init>()
	CALLEE: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder#<init>()
CALLER: com.fasterxml.jackson.databind.util.ArrayBuilders.LongBuilder#<init>()
	CALLEE: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder#<init>()
CALLER: com.fasterxml.jackson.databind.SerializationConfig#isEnabled(com.fasterxml.jackson.databind.SerializationFeature)
	CALLEE: com.fasterxml.jackson.databind.SerializationFeature#getMask()
CALLER: com.fasterxml.jackson.databind.ObjectMapper#_writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)
	CALLEE: org.eclipse.jetty.server.ServerConnector#close()
	CALLEE: org.eclipse.jetty.io.SelectChannelEndPoint#close()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#close()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#close()
	CALLEE: com.fasterxml.jackson.databind.SerializationConfig#isEnabled(com.fasterxml.jackson.databind.SerializationFeature)
	CALLEE: com.fasterxml.jackson.databind.ObjectMapper#_serializerProvider(com.fasterxml.jackson.databind.SerializationConfig)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#flush()
	CALLEE: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider#serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#close()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#close()
CALLER: com.fasterxml.jackson.databind.ObjectMapper#_serializerProvider(com.fasterxml.jackson.databind.SerializationConfig)
	CALLEE: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.Impl#createInstance(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.SerializerFactory)
CALLER: com.zaxxer.hikari.pool.ProxyResultSet#checkException(java.sql.SQLException)
	CALLEE: com.zaxxer.hikari.pool.ProxyConnection#checkException(java.sql.SQLException)
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#_currentObject()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Segment#get(int)
CALLER: com.fasterxml.jackson.core.base.ParserBase#getParsingContext()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getParsingContext()
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer.Segment#findObjectId(int)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Segment#_objectIdIndex(int)
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer.Segment#findTypeId(int)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Segment#_typeIdIndex(int)
CALLER: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#<init>(com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#<init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.JsonDeserializer)
CALLER: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: static com.fasterxml.jackson.databind.JsonMappingException#from(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Throwable)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#getObjectIdReader()
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#getObjectIdReader()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#getObjectIdReader()
	CALLEE: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference#getRoid()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty.PropertyReferring#<init>(com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty,com.fasterxml.jackson.databind.deser.UnresolvedForwardReference,java.lang.Class,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ReadableObjectId#appendReferring(com.fasterxml.jackson.databind.deser.impl.ReadableObjectId.Referring)
CALLER: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#<init>(com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty,com.fasterxml.jackson.databind.JsonDeserializer)
CALLER: com.fasterxml.jackson.core.json.JsonWriteContext#_checkDup(com.fasterxml.jackson.core.json.DupDetector,java.lang.String)
	CALLEE: com.fasterxml.jackson.core.JsonGenerationException#<init>(java.lang.String)
CALLER: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#<init>(com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty,com.fasterxml.jackson.databind.JsonDeserializer)
CALLER: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#<init>(com.fasterxml.jackson.databind.deser.impl.InnerClassProperty,com.fasterxml.jackson.databind.JsonDeserializer)
CALLER: org.glassfish.jersey.server.model.ResourceMethod.Builder#createInvocable()
	CALLEE: static org.glassfish.jersey.server.model.MethodHandler#create(java.lang.Class,boolean,java.util.Collection)
	CALLEE: static org.glassfish.jersey.server.model.MethodHandler#create(java.lang.Object,java.util.Collection)
	CALLEE: static org.glassfish.jersey.server.model.Invocable#create(org.glassfish.jersey.server.model.MethodHandler,java.lang.reflect.Method,java.lang.reflect.Method,boolean,java.lang.reflect.Type)
CALLER: org.glassfish.jersey.server.model.ResourceMethod.Data#<init>(java.lang.String,java.util.Collection,java.util.Collection,boolean,boolean,long,java.util.concurrent.TimeUnit,org.glassfish.jersey.server.model.Invocable,java.util.Collection,boolean,org.glassfish.jersey.server.model.ResourceMethod.1)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Data#<init>(java.lang.String,java.util.Collection,java.util.Collection,boolean,boolean,long,java.util.concurrent.TimeUnit,org.glassfish.jersey.server.model.Invocable,java.util.Collection,boolean)
CALLER: org.glassfish.jersey.server.model.Resource.Builder#onBuildMethod(org.glassfish.jersey.server.model.ResourceMethod.Builder,org.glassfish.jersey.server.model.ResourceMethod.Data)
	CALLEE: static org.glassfish.jersey.internal.Errors#processWithException(java.lang.Runnable)
	CALLEE: static jersey.repackaged.com.google.common.base.Preconditions#checkState(boolean,java.lang.Object)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Data#getType()
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder.3#<init>(org.glassfish.jersey.server.model.Resource.Builder)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Data#getInvocable()
	CALLEE: org.glassfish.jersey.server.model.MethodHandler.ClassBasedMethodHandler#getHandlerClass()
	CALLEE: org.glassfish.jersey.server.model.MethodHandler.InstanceBasedMethodHandler#getHandlerClass()
	CALLEE: org.glassfish.jersey.server.model.Invocable#getHandler()
	CALLEE: org.glassfish.jersey.server.model.MethodHandler.ClassBasedMethodHandler#getHandlerInstance()
	CALLEE: org.glassfish.jersey.server.model.MethodHandler.InstanceBasedMethodHandler#getHandlerInstance()
	CALLEE: org.glassfish.jersey.server.model.MethodHandler.ClassBasedMethodHandler#isClassBased()
	CALLEE: org.glassfish.jersey.server.model.MethodHandler.InstanceBasedMethodHandler#isClassBased()
CALLER: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getValueAsString(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_finishString()
	CALLEE: com.fasterxml.jackson.core.util.TextBuffer#contentsAsString()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getValueAsString(java.lang.String)
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#_checkIsNumber()
	CALLEE: com.fasterxml.jackson.core.JsonParser#_constructError(java.lang.String)
CALLER: com.fasterxml.jackson.core.util.ByteArrayBuilder#<init>(int)
	CALLEE: com.fasterxml.jackson.core.util.ByteArrayBuilder#<init>(com.fasterxml.jackson.core.util.BufferRecycler,int)
CALLER: org.eclipse.jetty.io.SelectChannelEndPoint#setKeyInterests(int,int)
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#debug(java.lang.String,java.lang.Object[])
	CALLEE: org.eclipse.jetty.util.log.StdErrLog#isDebugEnabled()
CALLER: org.glassfish.jersey.server.model.RuntimeResourceModelValidator#checkMethods(org.glassfish.jersey.server.model.RuntimeResource)
	CALLEE: static org.glassfish.jersey.internal.Errors#error(java.lang.Object,java.lang.String,org.glassfish.jersey.Severity)
	CALLEE: org.glassfish.jersey.server.model.RuntimeResource#getFullPathRegex()
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#AMBIGUOUS_SRLS_PATH_PATTERN(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.model.RuntimeResourceModelValidator#sameHttpMethod(org.glassfish.jersey.server.model.ResourceMethod,org.glassfish.jersey.server.model.ResourceMethod)
	CALLEE: org.glassfish.jersey.server.model.RuntimeResourceModelValidator#checkIntersectingMediaTypes(org.glassfish.jersey.server.model.RuntimeResource,java.lang.String,org.glassfish.jersey.server.model.ResourceMethod,org.glassfish.jersey.server.model.ResourceMethod)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod#getHttpMethod()
	CALLEE: static jersey.repackaged.com.google.common.collect.Lists#newArrayList(java.lang.Iterable)
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: org.glassfish.jersey.server.model.RuntimeResource#getResourceMethods()
	CALLEE: org.glassfish.jersey.server.model.RuntimeResource#getResourceLocators()
CALLER: static com.fasterxml.jackson.databind.AnnotationIntrospector.ReferenceProperty#managed(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector.ReferenceProperty#<init>(com.fasterxml.jackson.databind.AnnotationIntrospector.ReferenceProperty.Type,java.lang.String)
CALLER: static com.fasterxml.jackson.databind.AnnotationIntrospector.ReferenceProperty#back(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector.ReferenceProperty#<init>(com.fasterxml.jackson.databind.AnnotationIntrospector.ReferenceProperty.Type,java.lang.String)
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedClass#resolveCreators()
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#hasIgnoreMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#hasIgnoreMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_constructConstructor(java.lang.reflect.Constructor,boolean)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_addConstructorMixIns(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_findClassMethods(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_constructCreatorMethod(java.lang.reflect.Method)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_addFactoryMixIns(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedClass#resolveMemberMethods()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getRawParameterTypes()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getName()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfigBase#findMixInClassFor(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap#<init>()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_addMemberMethods(java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap,java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_addMethodMixIns(java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap,java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap#isEmpty()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap#iterator()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_constructMethod(java.lang.reflect.Method)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_addMixOvers(java.lang.reflect.Method,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,boolean)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap#add(com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getAnnotated()
CALLER: com.fasterxml.jackson.databind.deser.impl.MethodProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#_throwAsIOE(java.lang.Exception,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.impl.FieldProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#_throwAsIOE(java.lang.Exception,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.CreatorProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#setAndReturn(java.lang.Object,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#setAndReturn(java.lang.Object,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#setAndReturn(java.lang.Object,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserializeWithUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeEndObject()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler#processUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableAnyProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#skipChildren()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#find(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.NoClassDefFoundDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ByteDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ShortDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.FloatDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.DoubleDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.BooleanDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.CharDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.IntDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.LongDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.LongDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.CharacterDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ByteDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ShortDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.FloatDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigDecimalDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#skipChildren()
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#createUsingDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#createUsingDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector.Vanilla#createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#injectValues(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getActiveView()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#handleIgnoredProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#<init>(com.fasterxml.jackson.core.JsonParser)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeFieldName(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeStartObject()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#visibleInView(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserializeUsingPropertyBasedWithUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserializeWithExternalTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector.Vanilla#createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserializeWithExternalTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserializeUsingPropertyBasedWithExternalTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserializeWithView(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.Class)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#find(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#skipChildren()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#handleUnknownVanilla(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#visibleInView(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#skipChildren()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentName()
CALLER: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#<init>(com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#<init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)
CALLER: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#<init>(com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer,java.util.HashSet)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#<init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,java.util.HashSet)
CALLER: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#<init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.deser.SettableBeanProperty[],com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#<init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase)
CALLER: org.glassfish.jersey.uri.UriTemplate.1#compare(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.uri.UriTemplate.1#compare(org.glassfish.jersey.uri.UriTemplate,org.glassfish.jersey.uri.UriTemplate)
CALLER: static com.fasterxml.jackson.databind.util.ClassUtil#unwrapAndThrowAsIAE(java.lang.Throwable)
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#getRootCause(java.lang.Throwable)
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#throwAsIAE(java.lang.Throwable)
CALLER: com.fasterxml.jackson.databind.node.BooleanNode#<init>(boolean)
	CALLEE: com.fasterxml.jackson.databind.node.ValueNode#<init>()
CALLER: com.fasterxml.jackson.databind.node.TextNode#<init>(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.node.ValueNode#<init>()
CALLER: com.fasterxml.jackson.databind.node.ContainerNode#<init>(com.fasterxml.jackson.databind.node.JsonNodeFactory)
	CALLEE: com.fasterxml.jackson.databind.node.BaseJsonNode#<init>()
CALLER: com.fasterxml.jackson.databind.node.BinaryNode#<init>(byte[])
	CALLEE: com.fasterxml.jackson.databind.node.ValueNode#<init>()
CALLER: com.fasterxml.jackson.databind.node.IntNode#<init>(int)
	CALLEE: com.fasterxml.jackson.databind.node.NumericNode#<init>()
CALLER: com.fasterxml.jackson.databind.node.LongNode#<init>(long)
	CALLEE: com.fasterxml.jackson.databind.node.NumericNode#<init>()
CALLER: com.fasterxml.jackson.databind.node.BigIntegerNode#<init>(java.math.BigInteger)
	CALLEE: com.fasterxml.jackson.databind.node.NumericNode#<init>()
CALLER: com.fasterxml.jackson.databind.node.DoubleNode#<init>(double)
	CALLEE: com.fasterxml.jackson.databind.node.NumericNode#<init>()
CALLER: com.fasterxml.jackson.databind.node.DecimalNode#<init>(java.math.BigDecimal)
	CALLEE: com.fasterxml.jackson.databind.node.NumericNode#<init>()
CALLER: com.fasterxml.jackson.databind.deser.SettableAnyProperty#_throwAsIOE(java.lang.Exception,java.lang.String,java.lang.Object)
	CALLEE: org.h2.jdbc.JdbcSQLException#getMessage()
	CALLEE: org.glassfish.hk2.api.MultiException#getMessage()
	CALLEE: org.glassfish.jersey.server.model.ModelValidationException#getMessage()
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#getMessage()
	CALLEE: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference#getMessage()
	CALLEE: org.apache.log4j.config.PropertySetterException#getMessage()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#getMessage()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#<init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableAnyProperty#getClassName()
CALLER: com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.TypeFactory)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.TypeFactory)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.MinimalClassNameIdResolver#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.TypeFactory)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.TypeFactory)
CALLER: static com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver#construct(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection,boolean,boolean)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#constructType(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.jsontype.NamedType#hasName()
	CALLEE: com.fasterxml.jackson.databind.jsontype.NamedType#getType()
	CALLEE: com.fasterxml.jackson.databind.jsontype.NamedType#getName()
	CALLEE: static com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver#_defaultTypeId(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver#<init>(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,java.util.HashMap,java.util.HashMap)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.jsontype.TypeDeserializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.JavaType#forcedNarrowBy(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#_deserializeWithCreator(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#isAbstract()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: static com.fasterxml.jackson.databind.JsonMappingException#from(com.fasterxml.jackson.core.JsonParser,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.JavaType#isAbstract()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.NoClassDefFoundDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ByteDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ShortDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.FloatDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.DoubleDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.BooleanDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.CharDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.IntDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.LongDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.LongDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.CharacterDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ByteDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ShortDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.FloatDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigDecimalDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#createUsingDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#createUsingDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#_deserializeUsingPropertyBased(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedClass#fields()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#resolveFields()
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findNameForSerialization(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.PropertyName#<init>(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#_findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#_hasAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findNameForDeserialization(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.PropertyName#<init>(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#_findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#_hasAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#_propNameFromSimple(java.lang.String)
	CALLEE: static com.fasterxml.jackson.databind.PropertyName#construct(java.lang.String,java.lang.String)
CALLER: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#isFieldVisible(com.fasterxml.jackson.databind.introspect.AnnotatedField)
	CALLEE: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#isFieldVisible(java.lang.reflect.Field)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#getAnnotated()
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#hasIgnoreMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#_isIgnorable(com.fasterxml.jackson.databind.introspect.Annotated)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#_property(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.PropertyName#<init>(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#<init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.AnnotationIntrospector,boolean)
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedClass#memberMethods()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#resolveMemberMethods()
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#_addGetterMethod(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.AnnotationIntrospector)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getName()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#hasReturnType()
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findImplicitPropertyName(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findImplicitPropertyName(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findNameForSerialization(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findNameForSerialization(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#_propNameFromSimple(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#hasIgnoreMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#hasIgnoreMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#_property(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#hasAnyGetterAnnotation(com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#hasAnyGetterAnnotation(com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#hasAsValueAnnotation(com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#hasAsValueAnnotation(com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
	CALLEE: static com.fasterxml.jackson.databind.util.BeanUtil#okNameForRegularGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String,boolean)
	CALLEE: static com.fasterxml.jackson.databind.util.BeanUtil#okNameForIsGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String,boolean)
	CALLEE: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#isIsGetterVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
	CALLEE: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#isGetterVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
	CALLEE: static com.fasterxml.jackson.databind.util.BeanUtil#okNameForGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,boolean)
	CALLEE: com.fasterxml.jackson.databind.PropertyName#isEmpty()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#addGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.PropertyName,boolean,boolean,boolean)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#_addSetterMethod(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.AnnotationIntrospector)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findImplicitPropertyName(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findImplicitPropertyName(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findNameForDeserialization(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findNameForDeserialization(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#_propNameFromSimple(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#hasIgnoreMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#hasIgnoreMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#_property(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.PropertyName#isEmpty()
	CALLEE: static com.fasterxml.jackson.databind.util.BeanUtil#okNameForMutator(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String,boolean)
	CALLEE: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#isSetterVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#addSetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.PropertyName,boolean,boolean,boolean)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getName()
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#hasAnySetterAnnotation(com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#_hasAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#_addCreatorParam(com.fasterxml.jackson.databind.introspect.AnnotatedParameter)
	CALLEE: com.fasterxml.jackson.databind.PropertyName#<init>(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#hasCreatorAnnotation(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#hasCreatorAnnotation(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findImplicitPropertyName(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findImplicitPropertyName(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findNameForDeserialization(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findNameForDeserialization(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#_property(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.PropertyName#isEmpty()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#_property(com.fasterxml.jackson.databind.PropertyName)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#addCtor(com.fasterxml.jackson.databind.introspect.AnnotatedParameter,com.fasterxml.jackson.databind.PropertyName,boolean,boolean,boolean)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#getOwner()
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#_updateCreatorProperty(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder,java.util.List)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getInternalName()
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findNamingStrategy(com.fasterxml.jackson.databind.introspect.AnnotatedClass)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#_findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.cfg.MapperConfig#getPropertyNamingStrategy()
	CALLEE: com.fasterxml.jackson.databind.cfg.BaseSettings#getPropertyNamingStrategy()
CALLER: static com.fasterxml.jackson.databind.PropertyNamingStrategy#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.PropertyNamingStrategy.LowerCaseWithUnderscoresStrategy#<init>()
	CALLEE: com.fasterxml.jackson.databind.PropertyNamingStrategy.PascalCaseStrategy#<init>()
	CALLEE: com.fasterxml.jackson.databind.PropertyNamingStrategy.LowerCaseStrategy#<init>()
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findSerializationSortAlphabetically(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#_findSortAlpha(com.fasterxml.jackson.databind.introspect.Annotated)
CALLER: com.fasterxml.jackson.databind.cfg.MapperConfig#shouldSortPropertiesAlphabetically()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#isEnabled(com.fasterxml.jackson.databind.MapperFeature)
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findSerializationPropertyOrder(com.fasterxml.jackson.databind.introspect.AnnotatedClass)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#_findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
CALLER: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getBinaryValue(com.fasterxml.jackson.core.Base64Variant)
	CALLEE: com.fasterxml.jackson.core.io.IOContext#allocBase64Buffer()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_readBinary(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream,byte[])
	CALLEE: com.fasterxml.jackson.core.io.IOContext#releaseBase64Buffer(byte[])
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getBinaryValue(com.fasterxml.jackson.core.Base64Variant)
	CALLEE: com.fasterxml.jackson.databind.util.ByteBufferBackedOutputStream#write(byte[],int,int)
CALLER: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserializeWithUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#handleIgnoredProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeFieldName(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeEndObject()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler#processUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableAnyProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#skipChildren()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentName()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#find(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#skipChildren()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getActiveView()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#<init>(com.fasterxml.jackson.core.JsonParser)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeStartObject()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#visibleInView(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserializeWithExternalTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#handleUnknownProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableAnyProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler#handlePropertyValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler#complete(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#skipChildren()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentName()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#find(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#skipChildren()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getActiveView()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#handleIgnoredProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#visibleInView(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler#start()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
CALLER: org.glassfish.jersey.server.model.ResourceValidator#checkResource(org.glassfish.jersey.server.model.Resource)
	CALLEE: static org.glassfish.jersey.internal.Errors#warning(java.lang.Object,java.lang.String)
	CALLEE: org.glassfish.jersey.server.model.Resource#getPath()
	CALLEE: org.glassfish.jersey.server.model.Resource#getResourceLocator()
	CALLEE: org.glassfish.jersey.server.model.Resource#getResourceMethods()
	CALLEE: org.glassfish.jersey.server.model.Resource#getChildResources()
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#RESOURCE_CONTAINS_RES_METHODS_AND_LOCATOR(java.lang.Object,java.lang.Object)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#RESOURCE_EMPTY(java.lang.Object,java.lang.Object)
CALLER: static com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.StringKD#forType(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.StringKD#<init>(java.lang.Class)
CALLER: static com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.StringKD#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.StringKD#<init>(java.lang.Class)
CALLER: static com.fasterxml.jackson.databind.util.EmptyIterator#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.util.EmptyIterator#<init>()
CALLER: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.Impl#createInstance(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.SerializerFactory)
	CALLEE: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.Impl#createInstance(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.SerializerFactory)
CALLER: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty.PropertyReferring#<init>(com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty,com.fasterxml.jackson.databind.deser.UnresolvedForwardReference,java.lang.Class,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ReadableObjectId.Referring#<init>(com.fasterxml.jackson.databind.deser.UnresolvedForwardReference,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#<init>(com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#<init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.JsonDeserializer)
CALLER: com.fasterxml.jackson.core.JsonGenerationException#<init>(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#<init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation)
CALLER: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#<init>(com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#<init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.JsonDeserializer)
CALLER: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#<init>(com.fasterxml.jackson.databind.deser.impl.InnerClassProperty,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#<init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
CALLER: static org.glassfish.jersey.server.model.MethodHandler#create(java.lang.Class,boolean,java.util.Collection)
	CALLEE: org.glassfish.jersey.server.model.MethodHandler.ClassBasedMethodHandler#<init>(java.lang.Class,boolean,java.util.Collection)
CALLER: static org.glassfish.jersey.server.model.MethodHandler#create(java.lang.Object,java.util.Collection)
	CALLEE: org.glassfish.jersey.server.model.MethodHandler.InstanceBasedMethodHandler#<init>(java.lang.Object,java.util.Collection)
CALLER: static org.glassfish.jersey.server.model.Invocable#create(org.glassfish.jersey.server.model.MethodHandler,java.lang.reflect.Method,java.lang.reflect.Method,boolean,java.lang.reflect.Type)
	CALLEE: org.glassfish.jersey.server.model.Invocable#<init>(org.glassfish.jersey.server.model.MethodHandler,java.lang.reflect.Method,java.lang.reflect.Method,boolean,java.lang.reflect.Type)
CALLER: static org.glassfish.jersey.server.model.Invocable#<clinit>()
	CALLEE: static org.glassfish.jersey.server.model.Invocable#initApplyMethod()
CALLER: org.glassfish.jersey.server.model.ResourceMethod.Data#<init>(java.lang.String,java.util.Collection,java.util.Collection,boolean,boolean,long,java.util.concurrent.TimeUnit,org.glassfish.jersey.server.model.Invocable,java.util.Collection,boolean)
	CALLEE: static jersey.repackaged.com.google.common.collect.Lists#newArrayList(java.lang.Iterable)
	CALLEE: static org.glassfish.jersey.server.model.ResourceMethod.JaxrsType#access$200(java.lang.String)
CALLER: static org.glassfish.jersey.server.model.Resource.3#<clinit>()
	CALLEE: static org.glassfish.jersey.server.model.ResourceMethod.JaxrsType#values()
CALLER: static com.fasterxml.jackson.annotation.JsonAutoDetect.1#<clinit>()
	CALLEE: static com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility#values()
CALLER: org.glassfish.jersey.server.model.RuntimeResource#getFullPathRegex()
	CALLEE: org.glassfish.jersey.server.model.RuntimeResource#getRegex()
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#AMBIGUOUS_SRLS_PATH_PATTERN(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableAMBIGUOUS_SRLS_PATH_PATTERN(java.lang.Object)
CALLER: org.glassfish.jersey.server.model.RuntimeResourceModelValidator#sameHttpMethod(org.glassfish.jersey.server.model.ResourceMethod,org.glassfish.jersey.server.model.ResourceMethod)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod#getHttpMethod()
CALLER: org.glassfish.jersey.server.model.RuntimeResourceModelValidator#checkIntersectingMediaTypes(org.glassfish.jersey.server.model.RuntimeResource,java.lang.String,org.glassfish.jersey.server.model.ResourceMethod,org.glassfish.jersey.server.model.ResourceMethod)
	CALLEE: static org.glassfish.jersey.internal.Errors#fatal(java.lang.Object,java.lang.String)
	CALLEE: org.glassfish.jersey.server.model.RuntimeResource#getRegex()
	CALLEE: org.glassfish.jersey.server.model.RuntimeResourceModelValidator#getEffectiveInputTypes(org.glassfish.jersey.server.model.ResourceMethod)
	CALLEE: org.glassfish.jersey.server.model.RuntimeResourceModelValidator#getEffectiveOutputTypes(org.glassfish.jersey.server.model.ResourceMethod)
	CALLEE: static org.glassfish.jersey.message.internal.MediaTypes#intersect(java.util.List,java.util.List)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#AMBIGUOUS_FATAL_RMS(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#AMBIGUOUS_RMS_IN(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
	CALLEE: static org.glassfish.jersey.internal.Errors#hint(java.lang.Object,java.lang.String)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#AMBIGUOUS_RMS_OUT(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod#getInvocable()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod#getProducedTypes()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod#getConsumedTypes()
	CALLEE: org.glassfish.jersey.server.model.Invocable#getHandlingMethod()
	CALLEE: org.glassfish.jersey.server.model.Invocable#requiresEntity()
CALLER: static com.fasterxml.jackson.databind.AnnotationIntrospector.ReferenceProperty.Type#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector.ReferenceProperty.Type#<init>(java.lang.String,int)
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_constructConstructor(java.lang.reflect.Constructor,boolean)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_emptyAnnotationMap()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_emptyAnnotationMaps(int)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#<init>(com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.lang.reflect.Constructor,com.fasterxml.jackson.databind.introspect.AnnotationMap,com.fasterxml.jackson.databind.introspect.AnnotationMap[])
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_collectRelevantAnnotations(java.lang.annotation.Annotation[])
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_collectRelevantAnnotations(java.lang.annotation.Annotation[][])
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_addConstructorMixIns(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_addMixOvers(java.lang.reflect.Constructor,com.fasterxml.jackson.databind.introspect.AnnotatedConstructor,boolean)
	CALLEE: com.fasterxml.jackson.databind.introspect.MemberKey#<init>(java.lang.reflect.Constructor)
	CALLEE: com.fasterxml.jackson.databind.introspect.MemberKey#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#getAnnotated()
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_constructCreatorMethod(java.lang.reflect.Method)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_emptyAnnotationMap()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_emptyAnnotationMaps(int)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_collectRelevantAnnotations(java.lang.annotation.Annotation[])
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_collectRelevantAnnotations(java.lang.annotation.Annotation[][])
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#<init>(com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.lang.reflect.Method,com.fasterxml.jackson.databind.introspect.AnnotationMap,com.fasterxml.jackson.databind.introspect.AnnotationMap[])
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_addFactoryMixIns(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_addMixOvers(java.lang.reflect.Method,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,boolean)
	CALLEE: com.fasterxml.jackson.databind.introspect.MemberKey#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.MemberKey#<init>(java.lang.reflect.Method)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getAnnotated()
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_addMemberMethods(java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap,java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_findClassMethods(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_addMethodMixIns(java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap,java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_constructMethod(java.lang.reflect.Method)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_addMixOvers(java.lang.reflect.Method,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,boolean)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap#add(com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_isIncludableMemberMethod(java.lang.reflect.Method)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap#find(java.lang.reflect.Method)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap#remove(java.lang.reflect.Method)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_addMixUnders(java.lang.reflect.Method,com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getAnnotated()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#withMethod(java.lang.reflect.Method)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getDeclaringClass()
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_addMethodMixIns(java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap,java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap)
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#findSuperTypes(java.lang.Class,java.lang.Class,java.util.List)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_constructMethod(java.lang.reflect.Method)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap#add(com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_isIncludableMemberMethod(java.lang.reflect.Method)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap#find(java.lang.reflect.Method)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_addMixUnders(java.lang.reflect.Method,com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_constructMethod(java.lang.reflect.Method)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_emptyAnnotationMap()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_collectRelevantAnnotations(java.lang.annotation.Annotation[])
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#<init>(com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.lang.reflect.Method,com.fasterxml.jackson.databind.introspect.AnnotationMap,com.fasterxml.jackson.databind.introspect.AnnotationMap[])
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_addMixOvers(java.lang.reflect.Method,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,boolean)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_addOrOverrideAnnotations(com.fasterxml.jackson.databind.introspect.AnnotatedMember,java.lang.annotation.Annotation[])
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedWithParams#addOrOverrideParam(int,java.lang.annotation.Annotation)
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap#add(com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
	CALLEE: com.fasterxml.jackson.databind.introspect.MemberKey#<init>(java.lang.reflect.Method)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getAnnotated()
CALLER: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserializeUsingPropertyBasedWithUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#handledType()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#handleIgnoredProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeFieldName(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#wrapInstantiationProblem(java.lang.Throwable,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableAnyProperty#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer#bufferProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer#bufferAnyProperty(com.fasterxml.jackson.databind.deser.SettableAnyProperty,java.lang.String,java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentName()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#find(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#<init>(com.fasterxml.jackson.core.JsonParser)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeStartObject()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeEndObject()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler#processUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator#findCreatorProperty(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator#build(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator#startBuilding(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#getCreatorIndex()
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#getCreatorIndex()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer#assignParameter(int,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer#readIdProperty(java.lang.String)
CALLER: org.glassfish.jersey.uri.UriTemplate.1#compare(org.glassfish.jersey.uri.UriTemplate,org.glassfish.jersey.uri.UriTemplate)
	CALLEE: org.glassfish.jersey.uri.PatternWithGroups#getRegex()
	CALLEE: static org.glassfish.jersey.uri.UriTemplate#access$000(org.glassfish.jersey.uri.UriTemplate)
	CALLEE: org.glassfish.jersey.uri.UriTemplate#getNumberOfExplicitRegexes()
	CALLEE: org.glassfish.jersey.uri.UriTemplate#getNumberOfTemplateVariables()
	CALLEE: org.glassfish.jersey.uri.UriTemplate#getNumberOfExplicitCharacters()
CALLER: static com.fasterxml.jackson.databind.util.ClassUtil#throwAsIAE(java.lang.Throwable)
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#getMessage()
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#throwAsIAE(java.lang.Throwable,java.lang.String)
	CALLEE: org.apache.log4j.config.PropertySetterException#getMessage()
	CALLEE: org.h2.jdbc.JdbcSQLException#getMessage()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#getMessage()
	CALLEE: org.glassfish.hk2.api.MultiException#getMessage()
	CALLEE: org.glassfish.jersey.server.model.ModelValidationException#getMessage()
	CALLEE: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference#getMessage()
CALLER: com.fasterxml.jackson.databind.node.NumericNode#<init>()
	CALLEE: com.fasterxml.jackson.databind.node.ValueNode#<init>()
CALLER: com.fasterxml.jackson.databind.deser.SettableAnyProperty#getClassName()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getDeclaringClass()
CALLER: com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver#<init>(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,java.util.HashMap,java.util.HashMap)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#getTypeFactory()
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.TypeFactory)
CALLER: com.fasterxml.jackson.databind.JavaType#forcedNarrowBy(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.TypeBase#getValueHandler()
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#_narrow(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#_narrow(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.MapType#_narrow(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#_narrow(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.TypeBase#getTypeHandler()
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#withValueHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#withValueHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.MapType#withValueHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#withValueHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.MapType#withTypeHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#withTypeHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#withTypeHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#withTypeHandler(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#_deserializeUsingPropertyBased(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#wrapInstantiationProblem(java.lang.Throwable,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.JsonParser#setCurrentValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer#readIdProperty(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer#bufferProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty,java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#skipChildren()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#setCurrentValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#getName()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#skipChildren()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#setCurrentValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator#findCreatorProperty(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator#build(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator#startBuilding(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#getCreatorIndex()
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#getCreatorIndex()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer#assignParameter(int,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedClass#resolveFields()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_findFields(java.lang.Class,java.util.Map)
CALLER: com.fasterxml.jackson.databind.AnnotationIntrospector#_hasAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.introspect.Annotated#hasAnnotation(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#isFieldVisible(java.lang.reflect.Field)
	CALLEE: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility#isVisible(java.lang.reflect.Member)
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#_isIgnorable(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#_findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#<init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.AnnotationIntrospector,boolean)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#<init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.AnnotationIntrospector,boolean)
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#hasAnyGetterAnnotation(com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#_hasAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#hasAsValueAnnotation(com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#_findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
CALLER: static com.fasterxml.jackson.databind.util.BeanUtil#okNameForRegularGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String,boolean)
	CALLEE: static com.fasterxml.jackson.databind.util.BeanUtil#isCglibGetCallbacks(com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
	CALLEE: static com.fasterxml.jackson.databind.util.BeanUtil#isGroovyMetaClassGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
	CALLEE: static com.fasterxml.jackson.databind.util.BeanUtil#stdManglePropertyName(java.lang.String,int)
	CALLEE: static com.fasterxml.jackson.databind.util.BeanUtil#legacyManglePropertyName(java.lang.String,int)
CALLER: static com.fasterxml.jackson.databind.util.BeanUtil#okNameForIsGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String,boolean)
	CALLEE: static com.fasterxml.jackson.databind.util.BeanUtil#stdManglePropertyName(java.lang.String,int)
	CALLEE: static com.fasterxml.jackson.databind.util.BeanUtil#legacyManglePropertyName(java.lang.String,int)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getRawType()
CALLER: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#isIsGetterVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
	CALLEE: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#isIsGetterVisible(java.lang.reflect.Method)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getAnnotated()
CALLER: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#isGetterVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
	CALLEE: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#isGetterVisible(java.lang.reflect.Method)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getAnnotated()
CALLER: static com.fasterxml.jackson.databind.util.BeanUtil#okNameForGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,boolean)
	CALLEE: static com.fasterxml.jackson.databind.util.BeanUtil#okNameForRegularGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String,boolean)
	CALLEE: static com.fasterxml.jackson.databind.util.BeanUtil#okNameForIsGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String,boolean)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getName()
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#addGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.PropertyName,boolean,boolean,boolean)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked#<init>(java.lang.Object,com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked,com.fasterxml.jackson.databind.PropertyName,boolean,boolean,boolean)
CALLER: static com.fasterxml.jackson.databind.util.BeanUtil#okNameForMutator(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String,boolean)
	CALLEE: static com.fasterxml.jackson.databind.util.BeanUtil#stdManglePropertyName(java.lang.String,int)
	CALLEE: static com.fasterxml.jackson.databind.util.BeanUtil#legacyManglePropertyName(java.lang.String,int)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getName()
CALLER: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#isSetterVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
	CALLEE: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#isSetterVisible(java.lang.reflect.Method)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getAnnotated()
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#addSetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.PropertyName,boolean,boolean,boolean)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked#<init>(java.lang.Object,com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked,com.fasterxml.jackson.databind.PropertyName,boolean,boolean,boolean)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#_property(com.fasterxml.jackson.databind.PropertyName)
	CALLEE: com.fasterxml.jackson.databind.PropertyName#getSimpleName()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#_property(java.lang.String)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#addCtor(com.fasterxml.jackson.databind.introspect.AnnotatedParameter,com.fasterxml.jackson.databind.PropertyName,boolean,boolean,boolean)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked#<init>(java.lang.Object,com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked,com.fasterxml.jackson.databind.PropertyName,boolean,boolean,boolean)
CALLER: com.fasterxml.jackson.databind.PropertyNamingStrategy.LowerCaseWithUnderscoresStrategy#<init>()
	CALLEE: com.fasterxml.jackson.databind.PropertyNamingStrategy.PropertyNamingStrategyBase#<init>()
CALLER: com.fasterxml.jackson.databind.PropertyNamingStrategy.PascalCaseStrategy#<init>()
	CALLEE: com.fasterxml.jackson.databind.PropertyNamingStrategy.PropertyNamingStrategyBase#<init>()
CALLER: com.fasterxml.jackson.databind.PropertyNamingStrategy.LowerCaseStrategy#<init>()
	CALLEE: com.fasterxml.jackson.databind.PropertyNamingStrategy.PropertyNamingStrategyBase#<init>()
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#_findSortAlpha(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#_findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
CALLER: com.fasterxml.jackson.core.io.IOContext#allocBase64Buffer()
	CALLEE: com.fasterxml.jackson.core.io.IOContext#_verifyAlloc(java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.util.BufferRecycler#allocByteBuffer(int)
CALLER: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#_readBinary(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream,byte[])
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#loadMoreGuaranteed()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#_decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant,char,int)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant,int,int,java.lang.String)
	CALLEE: com.fasterxml.jackson.core.Base64Variant#decodeBase64Char(char)
	CALLEE: com.fasterxml.jackson.core.Base64Variant#usesPadding()
	CALLEE: com.fasterxml.jackson.core.Base64Variant#usesPaddingChar(char)
	CALLEE: com.fasterxml.jackson.core.Base64Variant#getPaddingChar()
	CALLEE: com.fasterxml.jackson.databind.util.ByteBufferBackedOutputStream#write(byte[],int,int)
CALLER: com.fasterxml.jackson.core.io.IOContext#releaseBase64Buffer(byte[])
	CALLEE: com.fasterxml.jackson.core.io.IOContext#_verifyRelease(byte[],byte[])
	CALLEE: com.fasterxml.jackson.core.util.BufferRecycler#releaseByteBuffer(int,byte[])
CALLER: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler#handlePropertyValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#skipChildren()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#<init>(com.fasterxml.jackson.core.JsonParser)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler#_deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,int,java.lang.String)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#skipChildren()
CALLER: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler#complete(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler#_deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,int,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#firstToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#asParser(com.fasterxml.jackson.core.JsonParser)
	CALLEE: static com.fasterxml.jackson.databind.jsontype.TypeDeserializer#deserializeIfNatural(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#RESOURCE_CONTAINS_RES_METHODS_AND_LOCATOR(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableRESOURCE_CONTAINS_RES_METHODS_AND_LOCATOR(java.lang.Object,java.lang.Object)
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#RESOURCE_EMPTY(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableRESOURCE_EMPTY(java.lang.Object,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.StringKD#<init>(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer#<init>(int,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.Impl#createInstance(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.SerializerFactory)
	CALLEE: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.Impl#<init>(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.SerializerFactory)
CALLER: org.glassfish.jersey.server.model.MethodHandler.ClassBasedMethodHandler#<init>(java.lang.Class,boolean,java.util.Collection)
	CALLEE: static org.glassfish.jersey.server.model.Parameter#create(java.lang.Class,java.lang.Class,java.lang.reflect.Constructor,boolean)
	CALLEE: org.glassfish.jersey.server.model.MethodHandler#<init>(java.util.Collection)
	CALLEE: org.glassfish.jersey.server.model.HandlerConstructor#<init>(java.lang.reflect.Constructor,java.util.List)
CALLER: org.glassfish.jersey.server.model.MethodHandler.InstanceBasedMethodHandler#<init>(java.lang.Object,java.util.Collection)
	CALLEE: org.glassfish.jersey.server.model.MethodHandler#<init>(java.util.Collection)
CALLER: org.glassfish.jersey.server.model.Invocable#<init>(org.glassfish.jersey.server.model.MethodHandler,java.lang.reflect.Method,java.lang.reflect.Method,boolean,java.lang.reflect.Type)
	CALLEE: javax.ws.rs.core.GenericType#getType()
	CALLEE: static org.glassfish.jersey.internal.util.ReflectionHelper#resolveGenericType(java.lang.Class,java.lang.Class,java.lang.Class,java.lang.reflect.Type)
	CALLEE: org.glassfish.jersey.internal.util.collection.ClassTypePair#rawClass()
	CALLEE: org.glassfish.jersey.internal.util.collection.ClassTypePair#type()
	CALLEE: static org.glassfish.jersey.internal.util.ReflectionHelper#findOverridingMethodOnClass(java.lang.Class,java.lang.reflect.Method)
	CALLEE: javax.ws.rs.core.GenericType#<init>(java.lang.reflect.Type)
	CALLEE: javax.ws.rs.core.GenericType#getRawType()
	CALLEE: static org.glassfish.jersey.server.model.Parameter#create(java.lang.Class,java.lang.Class,java.lang.reflect.Method,boolean)
	CALLEE: org.glassfish.jersey.server.model.MethodHandler.ClassBasedMethodHandler#getHandlerClass()
	CALLEE: org.glassfish.jersey.server.model.MethodHandler.InstanceBasedMethodHandler#getHandlerClass()
CALLER: static org.glassfish.jersey.server.model.ResourceMethod.JaxrsType#access$200(java.lang.String)
	CALLEE: static org.glassfish.jersey.server.model.ResourceMethod.JaxrsType#classify(java.lang.String)
CALLER: static org.glassfish.jersey.server.model.ResourceMethod.JaxrsType#<clinit>()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.JaxrsType.1#<init>(java.lang.String,int)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.JaxrsType.2#<init>(java.lang.String,int)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.JaxrsType.3#<init>(java.lang.String,int)
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableAMBIGUOUS_SRLS_PATH_PATTERN(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: org.glassfish.jersey.server.model.RuntimeResourceModelValidator#getEffectiveInputTypes(org.glassfish.jersey.server.model.ResourceMethod)
	CALLEE: org.glassfish.jersey.server.model.Parameter#getSource()
	CALLEE: org.glassfish.jersey.server.model.Parameter#getType()
	CALLEE: org.glassfish.jersey.server.model.Parameter#getRawType()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod#getInvocable()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod#getConsumedTypes()
	CALLEE: org.glassfish.jersey.server.model.Invocable#getParameters()
	CALLEE: org.glassfish.jersey.server.model.Parameter#getDeclaredAnnotations()
CALLER: org.glassfish.jersey.server.model.RuntimeResourceModelValidator#getEffectiveOutputTypes(org.glassfish.jersey.server.model.ResourceMethod)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod#getInvocable()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod#getProducedTypes()
	CALLEE: org.glassfish.jersey.server.model.Invocable#getRawResponseType()
	CALLEE: org.glassfish.jersey.server.model.Invocable#getHandlingMethod()
	CALLEE: org.glassfish.jersey.server.model.Invocable#getResponseType()
CALLER: static org.glassfish.jersey.message.internal.MediaTypes#intersect(java.util.List,java.util.List)
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: static org.glassfish.jersey.message.internal.MediaTypes#typeEqual(javax.ws.rs.core.MediaType,javax.ws.rs.core.MediaType)
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#AMBIGUOUS_FATAL_RMS(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableAMBIGUOUS_FATAL_RMS(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#AMBIGUOUS_RMS_IN(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableAMBIGUOUS_RMS_IN(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
CALLER: static org.glassfish.jersey.internal.Errors#hint(java.lang.Object,java.lang.String)
	CALLEE: static org.glassfish.jersey.internal.Errors#getInstance()
	CALLEE: org.glassfish.jersey.internal.Errors.ErrorMessage#<init>(java.lang.Object,java.lang.String,org.glassfish.jersey.Severity,org.glassfish.jersey.internal.Errors.1)
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#AMBIGUOUS_RMS_OUT(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableAMBIGUOUS_RMS_OUT(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_emptyAnnotationMap()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotationMap#<init>()
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_emptyAnnotationMaps(int)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_emptyAnnotationMap()
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#<init>(com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.lang.reflect.Constructor,com.fasterxml.jackson.databind.introspect.AnnotationMap,com.fasterxml.jackson.databind.introspect.AnnotationMap[])
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedWithParams#<init>(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.introspect.AnnotationMap,com.fasterxml.jackson.databind.introspect.AnnotationMap[])
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_collectRelevantAnnotations(java.lang.annotation.Annotation[])
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotationMap#<init>()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_addAnnotationsIfNotPresent(com.fasterxml.jackson.databind.introspect.AnnotationMap,java.lang.annotation.Annotation[])
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_collectRelevantAnnotations(java.lang.annotation.Annotation[][])
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_collectRelevantAnnotations(java.lang.annotation.Annotation[])
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_addMixOvers(java.lang.reflect.Constructor,com.fasterxml.jackson.databind.introspect.AnnotatedConstructor,boolean)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_addOrOverrideAnnotations(com.fasterxml.jackson.databind.introspect.AnnotatedMember,java.lang.annotation.Annotation[])
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedWithParams#addOrOverrideParam(int,java.lang.annotation.Annotation)
CALLER: com.fasterxml.jackson.databind.introspect.MemberKey#<init>(java.lang.reflect.Constructor)
	CALLEE: com.fasterxml.jackson.databind.introspect.MemberKey#<init>(java.lang.String,java.lang.Class[])
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#<init>(com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.lang.reflect.Method,com.fasterxml.jackson.databind.introspect.AnnotationMap,com.fasterxml.jackson.databind.introspect.AnnotationMap[])
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedWithParams#<init>(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.introspect.AnnotationMap,com.fasterxml.jackson.databind.introspect.AnnotationMap[])
CALLER: com.fasterxml.jackson.databind.introspect.MemberKey#<init>(java.lang.reflect.Method)
	CALLEE: com.fasterxml.jackson.databind.introspect.MemberKey#<init>(java.lang.String,java.lang.Class[])
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap#find(java.lang.reflect.Method)
	CALLEE: com.fasterxml.jackson.databind.introspect.MemberKey#<init>(java.lang.reflect.Method)
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap#remove(java.lang.reflect.Method)
	CALLEE: com.fasterxml.jackson.databind.introspect.MemberKey#<init>(java.lang.reflect.Method)
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_addMixUnders(java.lang.reflect.Method,com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_addAnnotationsIfNotPresent(com.fasterxml.jackson.databind.introspect.AnnotatedMember,java.lang.annotation.Annotation[])
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_addOrOverrideAnnotations(com.fasterxml.jackson.databind.introspect.AnnotatedMember,java.lang.annotation.Annotation[])
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_isAnnotationBundle(java.lang.annotation.Annotation)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_addFromBundle(java.lang.annotation.Annotation,java.util.List)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_addOrOverrideAnnotations(com.fasterxml.jackson.databind.introspect.AnnotatedMember,java.lang.annotation.Annotation[])
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMember#addOrOverride(java.lang.annotation.Annotation)
CALLER: com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer#readIdProperty(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.PropertyName#getSimpleName()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReader#readObjectReference(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer#bufferProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyValue.Regular#<init>(com.fasterxml.jackson.databind.deser.impl.PropertyValue,java.lang.Object,com.fasterxml.jackson.databind.deser.SettableBeanProperty)
CALLER: com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer#bufferAnyProperty(com.fasterxml.jackson.databind.deser.SettableAnyProperty,java.lang.String,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyValue.Any#<init>(com.fasterxml.jackson.databind.deser.impl.PropertyValue,java.lang.Object,com.fasterxml.jackson.databind.deser.SettableAnyProperty,java.lang.String)
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_findFields(java.lang.Class,java.util.Map)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfigBase#findMixInClassFor(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_findFields(java.lang.Class,java.util.Map)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_isIncludableField(java.lang.reflect.Field)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_constructField(java.lang.reflect.Field)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_addFieldMixIns(java.lang.Class,java.lang.Class,java.util.Map)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#<init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.AnnotationIntrospector,boolean)
	CALLEE: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition#<init>()
CALLER: static com.fasterxml.jackson.databind.util.BeanUtil#isCglibGetCallbacks(com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getRawType()
CALLER: static com.fasterxml.jackson.databind.util.BeanUtil#isGroovyMetaClassGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getRawType()
CALLER: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#isIsGetterVisible(java.lang.reflect.Method)
	CALLEE: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility#isVisible(java.lang.reflect.Member)
CALLER: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#isGetterVisible(java.lang.reflect.Method)
	CALLEE: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility#isVisible(java.lang.reflect.Member)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked#<init>(java.lang.Object,com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked,com.fasterxml.jackson.databind.PropertyName,boolean,boolean,boolean)
	CALLEE: com.fasterxml.jackson.databind.PropertyName#hasSimpleName()
	CALLEE: com.fasterxml.jackson.databind.PropertyName#isEmpty()
CALLER: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#isSetterVisible(java.lang.reflect.Method)
	CALLEE: com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility#isVisible(java.lang.reflect.Member)
CALLER: com.fasterxml.jackson.databind.PropertyNamingStrategy.PropertyNamingStrategyBase#<init>()
	CALLEE: com.fasterxml.jackson.databind.PropertyNamingStrategy#<init>()
CALLER: com.fasterxml.jackson.core.util.BufferRecycler#allocByteBuffer(int)
	CALLEE: com.fasterxml.jackson.core.util.BufferRecycler#allocByteBuffer(int,int)
CALLER: com.fasterxml.jackson.core.io.IOContext#_verifyRelease(byte[],byte[])
	CALLEE: com.fasterxml.jackson.core.io.IOContext#wrongBuf()
CALLER: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler#_deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,int,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#<init>(com.fasterxml.jackson.core.JsonParser)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeString(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeStartArray()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeEndArray()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#asParser(com.fasterxml.jackson.core.JsonParser)
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer#firstToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Segment#type(int)
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer#asParser(com.fasterxml.jackson.core.JsonParser)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getTokenLocation()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getCodec()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#<init>(com.fasterxml.jackson.databind.util.TokenBuffer.Segment,com.fasterxml.jackson.core.ObjectCodec,boolean,boolean)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getCodec()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getTokenLocation()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#setLocation(com.fasterxml.jackson.core.JsonLocation)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getTokenLocation()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCodec()
CALLER: static com.fasterxml.jackson.databind.jsontype.TypeDeserializer#deserializeIfNatural(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: static com.fasterxml.jackson.databind.jsontype.TypeDeserializer#deserializeIfNatural(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class)
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableRESOURCE_CONTAINS_RES_METHODS_AND_LOCATOR(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableRESOURCE_EMPTY(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.Impl#<init>(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.SerializerFactory)
	CALLEE: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider#<init>(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.SerializerFactory)
CALLER: static org.glassfish.jersey.internal.util.ReflectionHelper#findOverridingMethodOnClass(java.lang.Class,java.lang.reflect.Method)
	CALLEE: static org.glassfish.jersey.internal.util.ReflectionHelper#_getMethods(java.lang.Class)
	CALLEE: static org.glassfish.jersey.internal.util.ReflectionHelper#compareParameterTypes(java.lang.reflect.Type[],java.lang.reflect.Type[])
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#OVERRIDING_METHOD_CANNOT_BE_FOUND(java.lang.Object,java.lang.Object)
CALLER: javax.ws.rs.core.GenericType#<init>(java.lang.reflect.Type)
	CALLEE: static javax.ws.rs.core.GenericType#getClass(java.lang.reflect.Type)
CALLER: static org.glassfish.jersey.server.model.Parameter#create(java.lang.Class,java.lang.Class,java.lang.reflect.Method,boolean)
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#<init>(java.lang.reflect.Method)
	CALLEE: static org.glassfish.jersey.server.model.Parameter#create(java.lang.Class,java.lang.Class,boolean,java.lang.Class[],java.lang.reflect.Type[],java.lang.annotation.Annotation[][])
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#getAnnotation(java.lang.Class)
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#getParameterTypes()
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#getGenericParameterTypes()
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#getParameterAnnotations()
CALLER: org.glassfish.jersey.server.model.ResourceMethod.JaxrsType.1#<init>(java.lang.String,int)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.JaxrsType#<init>(java.lang.String,int,org.glassfish.jersey.server.model.ResourceMethod.1)
CALLER: org.glassfish.jersey.server.model.ResourceMethod.JaxrsType.2#<init>(java.lang.String,int)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.JaxrsType#<init>(java.lang.String,int,org.glassfish.jersey.server.model.ResourceMethod.1)
CALLER: org.glassfish.jersey.server.model.ResourceMethod.JaxrsType.3#<init>(java.lang.String,int)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.JaxrsType#<init>(java.lang.String,int,org.glassfish.jersey.server.model.ResourceMethod.1)
CALLER: static org.glassfish.jersey.message.internal.MediaTypes#typeEqual(javax.ws.rs.core.MediaType,javax.ws.rs.core.MediaType)
	CALLEE: javax.ws.rs.core.MediaType#getType()
	CALLEE: javax.ws.rs.core.MediaType#getSubtype()
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableAMBIGUOUS_FATAL_RMS(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableAMBIGUOUS_RMS_IN(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableAMBIGUOUS_RMS_OUT(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedWithParams#<init>(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.introspect.AnnotationMap,com.fasterxml.jackson.databind.introspect.AnnotationMap[])
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMember#<init>(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.introspect.AnnotationMap)
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_addAnnotationsIfNotPresent(com.fasterxml.jackson.databind.introspect.AnnotatedMember,java.lang.annotation.Annotation[])
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_isAnnotationBundle(java.lang.annotation.Annotation)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_addFromBundle(java.lang.annotation.Annotation,java.util.List)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_addAnnotationsIfNotPresent(com.fasterxml.jackson.databind.introspect.AnnotatedMember,java.lang.annotation.Annotation[])
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMember#addIfNotPresent(java.lang.annotation.Annotation)
CALLER: com.fasterxml.jackson.databind.deser.impl.PropertyValue.Regular#<init>(com.fasterxml.jackson.databind.deser.impl.PropertyValue,java.lang.Object,com.fasterxml.jackson.databind.deser.SettableBeanProperty)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyValue#<init>(com.fasterxml.jackson.databind.deser.impl.PropertyValue,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.impl.PropertyValue.Any#<init>(com.fasterxml.jackson.databind.deser.impl.PropertyValue,java.lang.Object,com.fasterxml.jackson.databind.deser.SettableAnyProperty,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyValue#<init>(com.fasterxml.jackson.databind.deser.impl.PropertyValue,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_constructField(java.lang.reflect.Field)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_emptyAnnotationMap()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_collectRelevantAnnotations(java.lang.annotation.Annotation[])
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#<init>(com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.lang.reflect.Field,com.fasterxml.jackson.databind.introspect.AnnotationMap)
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_addFieldMixIns(java.lang.Class,java.lang.Class,java.util.Map)
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#findSuperTypes(java.lang.Class,java.lang.Class,java.util.List)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_addOrOverrideAnnotations(com.fasterxml.jackson.databind.introspect.AnnotatedMember,java.lang.annotation.Annotation[])
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#_isIncludableField(java.lang.reflect.Field)
CALLER: com.fasterxml.jackson.core.util.BufferRecycler#allocByteBuffer(int,int)
	CALLEE: com.fasterxml.jackson.core.util.BufferRecycler#byteBufferLength(int)
	CALLEE: com.fasterxml.jackson.core.util.BufferRecycler#balloc(int)
CALLER: static com.fasterxml.jackson.databind.jsontype.TypeDeserializer#deserializeIfNatural(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getDoubleValue()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getIntValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getDoubleValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getIntValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getDoubleValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getIntValue()
CALLER: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider#<init>(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.SerializerFactory)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#<init>(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.SerializerFactory)
CALLER: static org.glassfish.jersey.internal.util.ReflectionHelper#_getMethods(java.lang.Class)
	CALLEE: static org.glassfish.jersey.internal.util.ReflectionHelper#getMethodsPA(java.lang.Class)
CALLER: static org.glassfish.jersey.internal.util.ReflectionHelper#compareParameterTypes(java.lang.reflect.Type[],java.lang.reflect.Type[])
	CALLEE: static org.glassfish.jersey.internal.util.ReflectionHelper#compareParameterTypes(java.lang.reflect.Type,java.lang.reflect.Type)
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#OVERRIDING_METHOD_CANNOT_BE_FOUND(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.internal.LocalizationMessages#localizableOVERRIDING_METHOD_CANNOT_BE_FOUND(java.lang.Object,java.lang.Object)
CALLER: org.glassfish.jersey.server.model.AnnotatedMethod#getAnnotation(java.lang.Class)
	CALLEE: org.glassfish.hk2.api.AnnotationLiteral#annotationType()
CALLER: org.glassfish.jersey.server.model.ResourceMethod.JaxrsType#<init>(java.lang.String,int,org.glassfish.jersey.server.model.ResourceMethod.1)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.JaxrsType#<init>(java.lang.String,int)
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedMember#<init>(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.introspect.AnnotationMap)
	CALLEE: com.fasterxml.jackson.databind.introspect.Annotated#<init>()
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedField#<init>(com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.lang.reflect.Field,com.fasterxml.jackson.databind.introspect.AnnotationMap)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMember#<init>(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.introspect.AnnotationMap)
CALLER: static com.fasterxml.jackson.databind.jsontype.TypeDeserializer.1#<clinit>()
	CALLEE: static com.fasterxml.jackson.core.JsonToken#values()
CALLER: com.fasterxml.jackson.databind.SerializerProvider#<init>(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.SerializerFactory)
	CALLEE: com.fasterxml.jackson.databind.DatabindContext#<init>()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfigBase#getAttributes()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfigBase#getActiveView()
	CALLEE: com.fasterxml.jackson.databind.ser.SerializerCache#getReadOnlyLookupMap()
CALLER: static org.glassfish.jersey.internal.util.ReflectionHelper#getMethodsPA(java.lang.Class)
	CALLEE: org.glassfish.jersey.internal.util.ReflectionHelper.19#<init>(java.lang.Class)
CALLER: static org.glassfish.jersey.internal.util.ReflectionHelper#compareParameterTypes(java.lang.reflect.Type,java.lang.reflect.Type)
	CALLEE: static org.glassfish.jersey.internal.util.ReflectionHelper#checkTypeBounds(java.lang.Class,java.lang.reflect.Type[])
CALLER: static org.glassfish.jersey.internal.LocalizationMessages#localizableOVERRIDING_METHOD_CANNOT_BE_FOUND(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: com.fasterxml.jackson.databind.ser.SerializerCache#getReadOnlyLookupMap()
	CALLEE: static com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap#from(java.util.HashMap)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap#instance()
CALLER: static com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap#from(java.util.HashMap)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.JsonSerializerMap#<init>(java.util.Map)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap#<init>(com.fasterxml.jackson.databind.ser.impl.JsonSerializerMap)
CALLER: com.fasterxml.jackson.databind.ser.impl.JsonSerializerMap#<init>(java.util.Map)
	CALLEE: static com.fasterxml.jackson.databind.ser.impl.JsonSerializerMap#findSize(int)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.JsonSerializerMap.Bucket#<init>(com.fasterxml.jackson.databind.ser.impl.JsonSerializerMap.Bucket,com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey#hashCode()
CALLER: org.glassfish.jersey.server.model.MethodList.2#keep(org.glassfish.jersey.server.model.AnnotatedMethod)
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#getParameterTypes()
CALLER: org.glassfish.jersey.server.model.MethodList.1#keep(org.glassfish.jersey.server.model.AnnotatedMethod)
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#getMethod()
CALLER: com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer#handleIdValue(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext#findObjectId(java.lang.Object,com.fasterxml.jackson.annotation.ObjectIdGenerator,com.fasterxml.jackson.annotation.ObjectIdResolver)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ReadableObjectId#bindItem(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#setAndReturn(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#setAndReturn(java.lang.Object,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#_deserializeUsingPropertyBased(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#handledType()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#handleIgnoredProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#<init>(com.fasterxml.jackson.core.JsonParser)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeFieldName(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#wrapInstantiationProblem(java.lang.Throwable,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableAnyProperty#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer#bufferAnyProperty(com.fasterxml.jackson.databind.deser.SettableAnyProperty,java.lang.String,java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#find(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#handlePolymorphic(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#handleUnknownProperties(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator#findCreatorProperty(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator#build(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator#startBuilding(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#_deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#getCreatorIndex()
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#getCreatorIndex()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer#assignParameter(int,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer#readIdProperty(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer#bufferProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty,java.lang.Object)
CALLER: org.glassfish.jersey.server.model.Resource.Builder.3#run()
	CALLEE: static org.glassfish.jersey.internal.Errors#error(java.lang.Object,java.lang.String,org.glassfish.jersey.Severity)
	CALLEE: static org.glassfish.jersey.server.model.Resource.Builder#access$600(org.glassfish.jersey.server.model.Resource.Builder)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#AMBIGUOUS_SRLS(java.lang.Object,java.lang.Object)
CALLER: org.eclipse.jetty.io.SelectorManager.ManagedSelector.EndPointCloser#run()
	CALLEE: static org.eclipse.jetty.io.SelectorManager.ManagedSelector#access$1100(org.eclipse.jetty.io.SelectorManager.ManagedSelector,java.io.Closeable)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#isExplicitlyNamed()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#_anyExplicitNames(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getName()
	CALLEE: com.fasterxml.jackson.databind.PropertyName#getSimpleName()
CALLER: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.CollectionReferring#handleResolvedForwardReference(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.CollectionReferringAccumulator#resolveForwardReference(java.lang.Object,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.std.MapDeserializer.MapReferring#handleResolvedForwardReference(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer.MapReferringAccumulator#resolveForwardReference(java.lang.Object,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty.PropertyReferring#handleResolvedForwardReference(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#set(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ReadableObjectId.Referring#hasId(java.lang.Object)
CALLER: org.glassfish.jersey.server.model.AnnotatedMethod#isAnnotationPresent(java.lang.Class)
	CALLEE: org.glassfish.hk2.api.AnnotationLiteral#annotationType()
CALLER: org.glassfish.jersey.server.model.AnnotatedMethod#getMetaMethodAnnotations(java.lang.Class)
	CALLEE: org.glassfish.hk2.api.AnnotationLiteral#annotationType()
CALLER: org.glassfish.hk2.internal.ActiveDescriptorBuilderImpl#build()
	CALLEE: org.glassfish.hk2.internal.ActiveDescriptorBuilderImpl.BuiltActiveDescriptor#<init>(java.lang.Class,java.util.Set,java.lang.annotation.Annotation,java.lang.Class,java.lang.String,java.util.Set,org.glassfish.hk2.api.DescriptorType,org.glassfish.hk2.api.DescriptorVisibility,int,java.lang.Boolean,java.lang.Boolean,java.lang.String,java.util.Map,org.glassfish.hk2.api.HK2Loader,org.glassfish.hk2.internal.ActiveDescriptorBuilderImpl.1)
CALLER: org.glassfish.hk2.internal.ActiveDescriptorBuilderImpl#qualifiedBy(java.lang.annotation.Annotation)
	CALLEE: org.glassfish.hk2.api.AnnotationLiteral#annotationType()
	CALLEE: org.glassfish.hk2.utilities.NamedImpl#value()
CALLER: org.glassfish.hk2.internal.ActiveDescriptorBuilderImpl#has(java.lang.String,java.lang.String)
	CALLEE: org.glassfish.hk2.internal.ActiveDescriptorBuilderImpl#has(java.lang.String,java.util.List)
CALLER: org.glassfish.hk2.internal.ActiveDescriptorBuilderImpl#buildProvideMethod()
	CALLEE: org.glassfish.hk2.internal.ActiveDescriptorBuilderImpl.BuiltActiveDescriptor#<init>(java.lang.Class,java.util.Set,java.lang.annotation.Annotation,java.lang.Class,java.lang.String,java.util.Set,org.glassfish.hk2.api.DescriptorType,org.glassfish.hk2.api.DescriptorVisibility,int,java.lang.Boolean,java.lang.Boolean,java.lang.String,java.util.Map,org.glassfish.hk2.api.HK2Loader,org.glassfish.hk2.internal.ActiveDescriptorBuilderImpl.1)
CALLER: org.glassfish.jersey.server.model.MethodList#hasReturnType(java.lang.Class)
	CALLEE: org.glassfish.jersey.server.model.MethodList#filter(org.glassfish.jersey.server.model.MethodList.Filter)
	CALLEE: org.glassfish.jersey.server.model.MethodList.3#<init>(org.glassfish.jersey.server.model.MethodList,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.type.TypeBindings#resolveType(java.lang.reflect.Type)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#_constructType(java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder#inclusion(com.fasterxml.jackson.annotation.JsonTypeInfo.As)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder#inclusion(com.fasterxml.jackson.annotation.JsonTypeInfo.As)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer#<init>(com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer,com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer#<init>(com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer,com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer#<init>(com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer,com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer#<init>(com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer,com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#getJsonValueMethod()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#reportProblem(java.lang.String)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#getAnySetterMethod()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#reportProblem(java.lang.String)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#getObjectIdInfo()
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findObjectIdInfo(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findObjectIdInfo(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findObjectReferenceInfo(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findObjectReferenceInfo(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo)
CALLER: com.fasterxml.jackson.databind.util.StdDateFormat#withLocale(java.util.Locale)
	CALLEE: com.fasterxml.jackson.databind.util.StdDateFormat#<init>(java.util.TimeZone,java.util.Locale)
CALLER: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler#complete(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer,com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator#findCreatorProperty(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator#build(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer#assignParameter(int,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler#_deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,int,java.lang.String)
CALLER: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler#handleTypePropertyValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler#_deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,int,java.lang.String)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#compareTo(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#compareTo(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder)
CALLER: jersey.repackaged.com.google.common.collect.Lists.TransformingRandomAccessList.1#transform(java.lang.Object)
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig.1#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.inject.ProviderToService#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.model.internal.ModelErrors.1#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.ApplicationHandler.WorkersToStringTransform#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.inject.Providers.2#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.1#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.model.Resource.1#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Builder.1#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.model.RuntimeResource.2#apply(java.lang.Object)
CALLER: org.glassfish.jersey.server.model.HandlerConstructor#accept(org.glassfish.jersey.server.model.ResourceModelVisitor)
	CALLEE: org.glassfish.jersey.server.model.AbstractResourceModelVisitor#visitResourceHandlerConstructor(org.glassfish.jersey.server.model.HandlerConstructor)
	CALLEE: org.glassfish.jersey.server.model.InvocableValidator#visitResourceHandlerConstructor(org.glassfish.jersey.server.model.HandlerConstructor)
CALLER: com.fasterxml.jackson.databind.node.ObjectNode#replace(java.lang.String,com.fasterxml.jackson.databind.JsonNode)
	CALLEE: com.fasterxml.jackson.databind.node.ContainerNode#nullNode()
CALLER: com.fasterxml.jackson.databind.node.ArrayNode#add(com.fasterxml.jackson.databind.JsonNode)
	CALLEE: com.fasterxml.jackson.databind.node.ContainerNode#nullNode()
	CALLEE: com.fasterxml.jackson.databind.node.ArrayNode#_add(com.fasterxml.jackson.databind.JsonNode)
CALLER: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#handledType()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#handledType()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#handledType()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#handledType()
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#handledType()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#handledType()
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#handledType()
CALLER: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#handledType()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#handledType()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#handledType()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#handledType()
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#handledType()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#handledType()
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#handledType()
CALLER: com.fasterxml.jackson.databind.deser.AbstractDeserializer#handledType()
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
CALLER: com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer#bufferMapProperty(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyValue.Map#<init>(com.fasterxml.jackson.databind.deser.impl.PropertyValue,java.lang.Object,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#findViews()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.1#<init>(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#fromMemberAnnotations(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.WithMember)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getGetter()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getName()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getDeclaringClass()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#_getterPriority(com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getFullName()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked#withoutNext()
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getField()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getName()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#getFullName()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#getDeclaringClass()
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getSetter()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getName()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getDeclaringClass()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getFullName()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked#withoutNext()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#_setterPriority(com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#findObjectIdInfo()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#fromMemberAnnotations(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.WithMember)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.8#<init>(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#findReferenceType()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#fromMemberAnnotations(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.WithMember)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.2#<init>(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getMetadata()
	CALLEE: static com.fasterxml.jackson.databind.PropertyMetadata#construct(boolean,java.lang.String,java.lang.Integer,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#_findRequired()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#_findDescription()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#_findIndex()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#_findDefaultValue()
	CALLEE: com.fasterxml.jackson.databind.PropertyMetadata#withDescription(java.lang.String)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getWrapperName()
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findWrapperName(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getPrimaryMember()
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getNonConstructorMutator()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getField()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getSetter()
CALLER: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder#completeAndClearBuffer(java.lang.Object,int)
	CALLEE: com.fasterxml.jackson.databind.util.ArrayBuilders.BooleanBuilder#_constructArray(int)
	CALLEE: com.fasterxml.jackson.databind.util.ArrayBuilders.FloatBuilder#_constructArray(int)
	CALLEE: com.fasterxml.jackson.databind.util.ArrayBuilders.ByteBuilder#_constructArray(int)
	CALLEE: com.fasterxml.jackson.databind.util.ArrayBuilders.ShortBuilder#_constructArray(int)
	CALLEE: com.fasterxml.jackson.databind.util.ArrayBuilders.IntBuilder#_constructArray(int)
	CALLEE: com.fasterxml.jackson.databind.util.ArrayBuilders.DoubleBuilder#_constructArray(int)
	CALLEE: com.fasterxml.jackson.databind.util.ArrayBuilders.LongBuilder#_constructArray(int)
	CALLEE: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder.Node#next()
	CALLEE: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder.Node#copyData(java.lang.Object,int)
CALLER: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder#appendCompletedChunk(java.lang.Object,int)
	CALLEE: com.fasterxml.jackson.databind.util.ArrayBuilders.BooleanBuilder#_constructArray(int)
	CALLEE: com.fasterxml.jackson.databind.util.ArrayBuilders.FloatBuilder#_constructArray(int)
	CALLEE: com.fasterxml.jackson.databind.util.ArrayBuilders.ByteBuilder#_constructArray(int)
	CALLEE: com.fasterxml.jackson.databind.util.ArrayBuilders.ShortBuilder#_constructArray(int)
	CALLEE: com.fasterxml.jackson.databind.util.ArrayBuilders.IntBuilder#_constructArray(int)
	CALLEE: com.fasterxml.jackson.databind.util.ArrayBuilders.DoubleBuilder#_constructArray(int)
	CALLEE: com.fasterxml.jackson.databind.util.ArrayBuilders.LongBuilder#_constructArray(int)
	CALLEE: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder.Node#<init>(java.lang.Object,int)
	CALLEE: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder.Node#linkNext(com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder.Node)
CALLER: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder#resetAndStart()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayBuilders.BooleanBuilder#_constructArray(int)
	CALLEE: com.fasterxml.jackson.databind.util.ArrayBuilders.FloatBuilder#_constructArray(int)
	CALLEE: com.fasterxml.jackson.databind.util.ArrayBuilders.ByteBuilder#_constructArray(int)
	CALLEE: com.fasterxml.jackson.databind.util.ArrayBuilders.ShortBuilder#_constructArray(int)
	CALLEE: com.fasterxml.jackson.databind.util.ArrayBuilders.IntBuilder#_constructArray(int)
	CALLEE: com.fasterxml.jackson.databind.util.ArrayBuilders.DoubleBuilder#_constructArray(int)
	CALLEE: com.fasterxml.jackson.databind.util.ArrayBuilders.LongBuilder#_constructArray(int)
	CALLEE: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder#_reset()
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer#toString()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#asParser()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#_appendNativeIds(java.lang.StringBuilder)
CALLER: com.fasterxml.jackson.databind.node.ObjectNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ValueNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ObjectNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ArrayNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.POJONode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.TextNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.BinaryNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ObjectNode#size()
	CALLEE: static com.fasterxml.jackson.databind.node.TextNode#appendQuoted(java.lang.StringBuilder,java.lang.String)
CALLER: com.fasterxml.jackson.databind.node.ArrayNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ValueNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ObjectNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ArrayNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.POJONode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.TextNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.BinaryNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ArrayNode#size()
CALLER: com.fasterxml.jackson.databind.node.POJONode#hashCode()
	CALLEE: org.glassfish.jersey.message.internal.QualitySourceMediaType#hashCode()
	CALLEE: org.glassfish.jersey.message.internal.AcceptableMediaType#hashCode()
	CALLEE: com.fasterxml.jackson.core.JsonLocation#hashCode()
	CALLEE: com.fasterxml.jackson.databind.introspect.MemberKey#hashCode()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#hashCode()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#hashCode()
	CALLEE: com.fasterxml.jackson.databind.node.LongNode#hashCode()
	CALLEE: com.fasterxml.jackson.databind.node.BigIntegerNode#hashCode()
	CALLEE: com.fasterxml.jackson.databind.node.DoubleNode#hashCode()
	CALLEE: com.fasterxml.jackson.databind.node.DecimalNode#hashCode()
	CALLEE: com.fasterxml.jackson.databind.PropertyName#hashCode()
	CALLEE: com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey#hashCode()
	CALLEE: com.fasterxml.jackson.core.io.SerializedString#hashCode()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#hashCode()
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.ConsumesProducesAcceptor#hashCode()
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#hashCode()
	CALLEE: org.traccar.database.GroupTree.TreeNode#hashCode()
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig.FeatureRegistration#hashCode()
	CALLEE: org.apache.log4j.CategoryKey#hashCode()
	CALLEE: org.slf4j.helpers.SubstituteLogger#hashCode()
	CALLEE: org.glassfish.jersey.internal.Errors.ErrorMessage#hashCode()
	CALLEE: org.glassfish.jersey.internal.OsgiRegistry.BundleSpiProvidersLoader#hashCode()
	CALLEE: com.fasterxml.jackson.databind.type.ClassKey#hashCode()
	CALLEE: javax.ws.rs.core.MediaType#hashCode()
	CALLEE: com.fasterxml.jackson.databind.JavaType#hashCode()
	CALLEE: jersey.repackaged.com.google.common.base.Predicates.AndPredicate#hashCode()
	CALLEE: org.glassfish.hk2.api.AnnotationLiteral#hashCode()
	CALLEE: org.glassfish.hk2.utilities.reflection.ParameterizedTypeImpl#hashCode()
	CALLEE: liquibase.changelog.RanChangeSet#hashCode()
	CALLEE: org.glassfish.jersey.server.model.ResourceModelIssue#hashCode()
	CALLEE: org.glassfish.jersey.server.model.Parameter#hashCode()
	CALLEE: com.fasterxml.jackson.databind.jsontype.NamedType#hashCode()
	CALLEE: com.fasterxml.jackson.databind.node.ObjectNode#hashCode()
	CALLEE: com.fasterxml.jackson.databind.node.ArrayNode#hashCode()
	CALLEE: com.fasterxml.jackson.databind.node.POJONode#hashCode()
	CALLEE: com.fasterxml.jackson.databind.node.TextNode#hashCode()
	CALLEE: com.fasterxml.jackson.databind.node.BinaryNode#hashCode()
	CALLEE: com.fasterxml.jackson.databind.node.IntNode#hashCode()
	CALLEE: com.fasterxml.jackson.annotation.ObjectIdGenerator.IdKey#hashCode()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#hashCode()
CALLER: com.fasterxml.jackson.databind.node.POJONode#asText()
	CALLEE: org.glassfish.jersey.message.internal.QualitySourceMediaType#toString()
	CALLEE: com.fasterxml.jackson.core.JsonLocation#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.MemberKey#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#toString()
	CALLEE: com.fasterxml.jackson.databind.PropertyName#toString()
	CALLEE: com.fasterxml.jackson.core.io.SerializedString#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey#toString()
	CALLEE: org.glassfish.jersey.server.model.Invocable#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#toString()
	CALLEE: org.glassfish.jersey.server.model.MethodHandler.ClassBasedMethodHandler#toString()
	CALLEE: org.glassfish.jersey.server.model.MethodHandler.InstanceBasedMethodHandler#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#toString()
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodRouting#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#toString()
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.ConsumesProducesAcceptor#toString()
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#toString()
	CALLEE: org.eclipse.jetty.webapp.WebAppContext#toString()
	CALLEE: org.eclipse.jetty.server.handler.HandlerCollection#toString()
	CALLEE: org.eclipse.jetty.server.Server#toString()
	CALLEE: org.eclipse.jetty.server.AbstractNetworkConnector#toString()
	CALLEE: org.eclipse.jetty.util.thread.QueuedThreadPool#toString()
	CALLEE: org.eclipse.jetty.server.AbstractConnectionFactory#toString()
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle.Bean#toString()
	CALLEE: org.apache.log4j.NameValue#toString()
	CALLEE: liquibase.changelog.ChangeLogParameters.ChangeLogParameter#toString()
	CALLEE: org.eclipse.jetty.server.AbstractConnector.Acceptor#toString()
	CALLEE: org.eclipse.jetty.server.HttpConfiguration#toString()
	CALLEE: org.eclipse.jetty.util.MultiException#toString()
	CALLEE: org.eclipse.jetty.http.PathMap.MappedEntry#toString()
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector#toString()
	CALLEE: liquibase.servicelocator.AssignableToPackageScanFilter#toString()
	CALLEE: org.eclipse.jetty.http.HttpField#toString()
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#toString()
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#toString()
	CALLEE: org.eclipse.jetty.servlet.ServletMapping#toString()
	CALLEE: org.glassfish.jersey.internal.OsgiRegistry.BundleSpiProvidersLoader#toString()
	CALLEE: org.h2.jdbc.JdbcSQLException#toString()
	CALLEE: liquibase.changelog.filter.ChangeSetFilterResult#toString()
	CALLEE: com.zaxxer.hikari.pool.PoolEntry#toString()
	CALLEE: org.eclipse.jetty.io.SelectChannelEndPoint#toString()
	CALLEE: org.eclipse.jetty.util.FutureCallback#toString()
	CALLEE: org.eclipse.jetty.util.ConstantThrowable#toString()
	CALLEE: javax.ws.rs.core.MediaType#toString()
	CALLEE: org.glassfish.jersey.model.internal.RankedProvider#toString()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#toString()
	CALLEE: org.glassfish.hk2.api.MultiException#toString()
	CALLEE: jersey.repackaged.com.google.common.base.Predicates.AndPredicate#toString()
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.MapType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#toString()
	CALLEE: org.glassfish.hk2.utilities.NamedImpl#toString()
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#toString()
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#toString()
	CALLEE: com.fasterxml.jackson.databind.jsontype.NamedType#toString()
	CALLEE: liquibase.changelog.RanChangeSet#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.UnresolvedId#toString()
	CALLEE: org.glassfish.jersey.server.model.ResourceModelIssue#toString()
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#toString()
	CALLEE: org.glassfish.jersey.server.model.Parameter#toString()
	CALLEE: org.glassfish.hk2.utilities.reflection.ParameterizedTypeImpl#toString()
	CALLEE: com.fasterxml.jackson.databind.type.ClassKey#toString()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException.Reference#toString()
	CALLEE: org.glassfish.jersey.server.model.Resource.Data#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ValueNode#toString()
	CALLEE: org.glassfish.jersey.server.model.Resource#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#toString()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Data#toString()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ObjectNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ArrayNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.POJONode#toString()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#toString()
	CALLEE: com.fasterxml.jackson.databind.node.TextNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.BinaryNode#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#toString()
CALLER: com.fasterxml.jackson.databind.node.ObjectNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.ObjectNode#_childrenEqual(com.fasterxml.jackson.databind.node.ObjectNode)
CALLER: com.fasterxml.jackson.databind.node.POJONode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.POJONode#_pojoEquals(com.fasterxml.jackson.databind.node.POJONode)
CALLER: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#skipChildren()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#isExpectedStartArrayToken()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#getName()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#isExpectedStartArrayToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#skipChildren()
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector.Vanilla#createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#_deserializeFromNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#finishBuild(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#_deserializeNonVanilla(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#getName()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#skipChildren()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#injectValues(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#finishBuild(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#skipChildren()
CALLER: org.glassfish.jersey.server.model.ResourceMethod#toString()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Data#toString()
CALLER: com.fasterxml.jackson.databind.deser.impl.ReadableObjectId.Referring#getLocation()
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#getLocation()
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer#deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer#_deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer#deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer#deserializeTypedFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer#deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer#deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer#_deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer#deserializeTypedFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer#_deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer#deserializeTypedFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer#_deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer#deserializeTypedFromScalar(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer#_deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer#deserializeTypedFromScalar(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer#_deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer#deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer#_deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer#deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeFieldName(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)
	CALLEE: com.fasterxml.jackson.core.JsonParser#canReadTypeId()
	CALLEE: com.fasterxml.jackson.core.JsonParser#getTypeId()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#canReadTypeId()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getTypeId()
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase#_deserializeWithNativeTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer#_deserializeTypedUsingDefaultImpl(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.util.TokenBuffer)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer#_deserializeTypedForId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.util.TokenBuffer)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#<init>(com.fasterxml.jackson.core.ObjectCodec,boolean)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentName()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getTypeId()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#canReadTypeId()
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer#deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer#_deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap#find(java.lang.String,java.lang.Class[])
	CALLEE: com.fasterxml.jackson.databind.introspect.MemberKey#<init>(java.lang.String,java.lang.Class[])
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getInternalName()
	CALLEE: com.fasterxml.jackson.databind.PropertyName#getSimpleName()
CALLER: org.glassfish.jersey.server.model.ResourceMethod#getHttpMethod()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Data#getHttpMethod()
CALLER: org.glassfish.jersey.server.model.ResourceMethod#getInvocable()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Data#getInvocable()
CALLER: org.glassfish.jersey.server.model.ResourceMethod#getProducedTypes()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Data#getProducedTypes()
CALLER: org.glassfish.jersey.server.model.ResourceMethod#getConsumedTypes()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Data#getConsumedTypes()
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#getAnnotated()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#getAnnotated()
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedWithParams#addOrOverrideParam(int,java.lang.annotation.Annotation)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotationMap#<init>()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotationMap#add(java.lang.annotation.Annotation)
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedWithParams#getAnnotation(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotationMap#get(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getFullName()
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#getName()
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedMember#addOrOverride(java.lang.annotation.Annotation)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotationMap#add(java.lang.annotation.Annotation)
CALLER: org.glassfish.jersey.server.model.ResourceMethod#getComponents()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Data#getInvocable()
CALLER: org.glassfish.jersey.server.model.ResourceMethod#accept(org.glassfish.jersey.server.model.ResourceModelVisitor)
	CALLEE: org.glassfish.jersey.server.model.AbstractResourceModelVisitor#visitResourceMethod(org.glassfish.jersey.server.model.ResourceMethod)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethodValidator#visitResourceMethod(org.glassfish.jersey.server.model.ResourceMethod)
CALLER: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)
CALLER: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#withIgnorableProperties(java.util.HashSet)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#withIgnorableProperties(java.util.HashSet)
CALLER: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#asArrayDeserializer()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#asArrayDeserializer()
CALLER: com.fasterxml.jackson.databind.node.TextNode#toString()
	CALLEE: static com.fasterxml.jackson.databind.node.TextNode#appendQuoted(java.lang.StringBuilder,java.lang.String)
CALLER: com.fasterxml.jackson.databind.node.BinaryNode#toString()
	CALLEE: static com.fasterxml.jackson.core.Base64Variants#getDefaultVariant()
	CALLEE: com.fasterxml.jackson.core.Base64Variant#encode(byte[],boolean)
CALLER: com.fasterxml.jackson.databind.node.DecimalNode#hashCode()
	CALLEE: com.fasterxml.jackson.databind.node.DecimalNode#doubleValue()
CALLER: com.fasterxml.jackson.databind.node.BinaryNode#asText()
	CALLEE: static com.fasterxml.jackson.core.Base64Variants#getDefaultVariant()
	CALLEE: com.fasterxml.jackson.core.Base64Variant#encode(byte[],boolean)
CALLER: com.fasterxml.jackson.databind.node.IntNode#asText()
	CALLEE: static com.fasterxml.jackson.core.io.NumberOutput#toString(int)
CALLER: com.fasterxml.jackson.databind.node.LongNode#asText()
	CALLEE: static com.fasterxml.jackson.core.io.NumberOutput#toString(long)
CALLER: com.fasterxml.jackson.databind.node.DoubleNode#asText()
	CALLEE: static com.fasterxml.jackson.core.io.NumberOutput#toString(double)
CALLER: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer#_parse(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer.Std#_deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#constructCalendar(java.util.Date)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#findClass(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#parseDate(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#weirdKeyException(java.lang.Class,java.lang.String,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer#_parseInt(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer#_parseLong(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer#_parseDouble(java.lang.String)
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedWithParams#getParameter(int)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#getGenericParameterType(int)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getGenericParameterType(int)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedWithParams#getParameterAnnotations(int)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#<init>(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,java.lang.reflect.Type,com.fasterxml.jackson.databind.introspect.AnnotationMap,int)
CALLER: com.fasterxml.jackson.databind.util.StdDateFormat#parse(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.StdDateFormat#parse(java.lang.String,java.text.ParsePosition)
CALLER: com.fasterxml.jackson.databind.util.StdDateFormat#parse(java.lang.String,java.text.ParsePosition)
	CALLEE: com.fasterxml.jackson.databind.util.StdDateFormat#looksLikeISO8601(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.StdDateFormat#parseAsISO8601(java.lang.String,java.text.ParsePosition)
	CALLEE: static com.fasterxml.jackson.core.io.NumberInput#inLongRange(java.lang.String,boolean)
	CALLEE: com.fasterxml.jackson.databind.util.StdDateFormat#parseAsRFC1123(java.lang.String,java.text.ParsePosition)
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getParameterCount()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getRawParameterTypes()
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getRawParameterType(int)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getRawParameterTypes()
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#addField(com.fasterxml.jackson.databind.introspect.AnnotatedField,com.fasterxml.jackson.databind.PropertyName,boolean,boolean,boolean)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked#<init>(java.lang.Object,com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked,com.fasterxml.jackson.databind.PropertyName,boolean,boolean,boolean)
CALLER: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap#instance()
	CALLEE: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap#<init>(com.fasterxml.jackson.databind.ser.impl.JsonSerializerMap)
CALLER: com.fasterxml.jackson.annotation.ObjectIdGenerator.IdKey#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#equals(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.ConsumesProducesAcceptor#equals(java.lang.Object)
	CALLEE: org.traccar.database.GroupTree.TreeNode#equals(java.lang.Object)
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig.FeatureRegistration#equals(java.lang.Object)
	CALLEE: org.apache.log4j.CategoryKey#equals(java.lang.Object)
	CALLEE: org.slf4j.helpers.SubstituteLogger#equals(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.Errors.ErrorMessage#equals(java.lang.Object)
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#equals(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.OsgiRegistry.BundleSpiProvidersLoader#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.ClassKey#equals(java.lang.Object)
	CALLEE: javax.ws.rs.core.MediaType#equals(java.lang.Object)
	CALLEE: jersey.repackaged.com.google.common.base.Predicates.AndPredicate#equals(java.lang.Object)
	CALLEE: org.glassfish.hk2.api.AnnotationLiteral#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#equals(java.lang.Object)
	CALLEE: org.glassfish.hk2.utilities.reflection.ParameterizedTypeImpl#equals(java.lang.Object)
	CALLEE: liquibase.changelog.RanChangeSet#equals(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.model.ResourceModelIssue#equals(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.model.Parameter#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.jsontype.NamedType#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.NullNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.MemberKey#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.ObjectNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.ArrayNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.POJONode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.BooleanNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.TextNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.BinaryNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.IntNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.LongNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.BigIntegerNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.DoubleNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.DecimalNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.annotation.ObjectIdGenerator.IdKey#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.PropertyName#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.io.SerializedString#equals(java.lang.Object)
	CALLEE: org.glassfish.jersey.message.internal.AcceptableMediaType#equals(java.lang.Object)
	CALLEE: org.glassfish.jersey.message.internal.QualitySourceMediaType#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.JsonLocation#equals(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#hasReturnType()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getRawReturnType()
CALLER: com.fasterxml.jackson.databind.introspect.Annotated#hasAnnotation(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedWithParams#getAnnotation(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#getAnnotation(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#getAnnotation(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#trimByVisibility()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#_trimByVisibility(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#mergeAnnotations(boolean)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#_mergeAnnotations(int,com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked[])
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked#withValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap)
CALLER: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#<init>(com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer,com.fasterxml.jackson.databind.util.NameTransformer)
CALLER: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer)
CALLER: com.fasterxml.jackson.databind.deser.std.ThrowableDeserializer#unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ThrowableDeserializer#<init>(com.fasterxml.jackson.databind.deser.BeanDeserializer,com.fasterxml.jackson.databind.util.NameTransformer)
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializer#unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#<init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.util.NameTransformer)
CALLER: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ThrowableDeserializer#unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer)
CALLER: com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase#findBackReference(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#findBackReference(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#findBackReference(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase#findBackReference(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#findBackReference(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#getContentDeserializer()
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#getContentDeserializer()
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#getContentDeserializer()
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#getContentDeserializer()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#getContentDeserializer()
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#getContentDeserializer()
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#withName(com.fasterxml.jackson.databind.PropertyName)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#<init>(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder,com.fasterxml.jackson.databind.PropertyName)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getPrimaryMember()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getAccessor()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getMutator()
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#addAll(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder)
	CALLEE: static com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#merge(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked,com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked)
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedMember#fixAccess()
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#checkAndFixAccess(java.lang.reflect.Member)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#getMember()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getMember()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#getMember()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#getMember()
CALLER: com.fasterxml.jackson.databind.deser.SettableAnyProperty.AnySetterReferring#handleResolvedForwardReference(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodRouting#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#toString()
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.ConsumesProducesAcceptor#toString()
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#toString()
	CALLEE: org.eclipse.jetty.webapp.WebAppContext#toString()
	CALLEE: org.eclipse.jetty.server.handler.HandlerCollection#toString()
	CALLEE: org.eclipse.jetty.server.Server#toString()
	CALLEE: org.eclipse.jetty.server.AbstractNetworkConnector#toString()
	CALLEE: org.eclipse.jetty.util.thread.QueuedThreadPool#toString()
	CALLEE: org.eclipse.jetty.server.AbstractConnectionFactory#toString()
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle.Bean#toString()
	CALLEE: org.apache.log4j.NameValue#toString()
	CALLEE: liquibase.changelog.ChangeLogParameters.ChangeLogParameter#toString()
	CALLEE: org.eclipse.jetty.server.AbstractConnector.Acceptor#toString()
	CALLEE: org.eclipse.jetty.server.HttpConfiguration#toString()
	CALLEE: org.eclipse.jetty.util.MultiException#toString()
	CALLEE: org.eclipse.jetty.http.PathMap.MappedEntry#toString()
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector#toString()
	CALLEE: liquibase.servicelocator.AssignableToPackageScanFilter#toString()
	CALLEE: org.eclipse.jetty.http.HttpField#toString()
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#toString()
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#toString()
	CALLEE: org.eclipse.jetty.servlet.ServletMapping#toString()
	CALLEE: org.glassfish.jersey.internal.OsgiRegistry.BundleSpiProvidersLoader#toString()
	CALLEE: org.h2.jdbc.JdbcSQLException#toString()
	CALLEE: liquibase.changelog.filter.ChangeSetFilterResult#toString()
	CALLEE: com.zaxxer.hikari.pool.PoolEntry#toString()
	CALLEE: org.eclipse.jetty.io.SelectChannelEndPoint#toString()
	CALLEE: org.eclipse.jetty.util.FutureCallback#toString()
	CALLEE: org.eclipse.jetty.util.ConstantThrowable#toString()
	CALLEE: javax.ws.rs.core.MediaType#toString()
	CALLEE: org.glassfish.jersey.model.internal.RankedProvider#toString()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#toString()
	CALLEE: org.glassfish.hk2.api.MultiException#toString()
	CALLEE: org.glassfish.jersey.message.internal.QualitySourceMediaType#toString()
	CALLEE: jersey.repackaged.com.google.common.base.Predicates.AndPredicate#toString()
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.MapType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#toString()
	CALLEE: org.glassfish.hk2.utilities.NamedImpl#toString()
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#toString()
	CALLEE: com.fasterxml.jackson.core.JsonLocation#toString()
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#toString()
	CALLEE: com.fasterxml.jackson.databind.jsontype.NamedType#toString()
	CALLEE: liquibase.changelog.RanChangeSet#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.UnresolvedId#toString()
	CALLEE: org.glassfish.jersey.server.model.ResourceModelIssue#toString()
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#toString()
	CALLEE: org.glassfish.jersey.server.model.Parameter#toString()
	CALLEE: org.glassfish.hk2.utilities.reflection.ParameterizedTypeImpl#toString()
	CALLEE: com.fasterxml.jackson.databind.type.ClassKey#toString()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException.Reference#toString()
	CALLEE: org.glassfish.jersey.server.model.Resource.Data#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ValueNode#toString()
	CALLEE: org.glassfish.jersey.server.model.Resource#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableAnyProperty#set(java.lang.Object,java.lang.String,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#toString()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Data#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.MemberKey#toString()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ObjectNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ArrayNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.POJONode#toString()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#toString()
	CALLEE: com.fasterxml.jackson.databind.node.TextNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.BinaryNode#toString()
	CALLEE: com.fasterxml.jackson.databind.PropertyName#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ReadableObjectId.Referring#hasId(java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.io.SerializedString#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey#toString()
	CALLEE: org.glassfish.jersey.server.model.Invocable#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#toString()
	CALLEE: org.glassfish.jersey.server.model.MethodHandler.ClassBasedMethodHandler#toString()
	CALLEE: org.glassfish.jersey.server.model.MethodHandler.InstanceBasedMethodHandler#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#toString()
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#withSimpleName(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#<init>(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder,com.fasterxml.jackson.databind.PropertyName)
	CALLEE: com.fasterxml.jackson.databind.PropertyName#withSimpleName(java.lang.String)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getConstructorParameter()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#getOwner()
CALLER: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider#serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.StringKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.ClassKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.DateKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: org.h2.jdbc.JdbcSQLException#getMessage()
	CALLEE: com.fasterxml.jackson.databind.util.RootNameLookup#findRootName(java.lang.Class,com.fasterxml.jackson.databind.cfg.MapperConfig)
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#getMessage()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfigBase#getRootName()
	CALLEE: org.glassfish.hk2.api.MultiException#getMessage()
	CALLEE: org.glassfish.jersey.server.model.ModelValidationException#getMessage()
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#getMessage()
	CALLEE: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference#getMessage()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeFieldName(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeStartObject()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeEndObject()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#<init>(java.lang.String,java.lang.Throwable)
	CALLEE: com.fasterxml.jackson.databind.SerializationConfig#isEnabled(com.fasterxml.jackson.databind.SerializationFeature)
	CALLEE: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider#_serializeNull(com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#findTypedValueSerializer(java.lang.Class,boolean,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.PropertyName#simpleAsEncoded(com.fasterxml.jackson.databind.cfg.MapperConfig)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeFieldName(com.fasterxml.jackson.core.SerializableString)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NullSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BooleanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CalendarSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.DateSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.UUIDSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.LongSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntLikeSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.ShortSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.FloatSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.IterableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.RawSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.CalendarKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedField#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#getFullName()
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedField#getAnnotation(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotationMap#get(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getAnnotated()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getAnnotated()
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getMember()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getMember()
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#removeNonVisible(boolean)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#_removeNonVisible(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#removeIgnored()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#_removeIgnored(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#isExplicitlyIncluded()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#_anyExplicits(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#anyIgnorals()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#_anyIgnorals(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#anyVisible()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#_anyVisible(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#explode(java.util.Collection)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#_explode(java.util.Collection,java.util.Map,com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#findExplicitNames()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#_findExplicitNames(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked,java.util.Set)
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#withMethod(java.lang.reflect.Method)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#<init>(com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.lang.reflect.Method,com.fasterxml.jackson.databind.introspect.AnnotationMap,com.fasterxml.jackson.databind.introspect.AnnotationMap[])
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedMember#addIfNotPresent(java.lang.annotation.Annotation)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotationMap#addIfNotPresent(java.lang.annotation.Annotation)
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#AMBIGUOUS_SRLS(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableAMBIGUOUS_SRLS(java.lang.Object,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.CollectionReferringAccumulator#resolveForwardReference(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ReadableObjectId.Referring#hasId(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.std.MapDeserializer.MapReferringAccumulator#resolveForwardReference(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ReadableObjectId.Referring#hasId(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.impl.ReadableObjectId.Referring#hasId(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#equals(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.ConsumesProducesAcceptor#equals(java.lang.Object)
	CALLEE: org.traccar.database.GroupTree.TreeNode#equals(java.lang.Object)
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig.FeatureRegistration#equals(java.lang.Object)
	CALLEE: org.apache.log4j.CategoryKey#equals(java.lang.Object)
	CALLEE: org.slf4j.helpers.SubstituteLogger#equals(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.Errors.ErrorMessage#equals(java.lang.Object)
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#equals(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.OsgiRegistry.BundleSpiProvidersLoader#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.ClassKey#equals(java.lang.Object)
	CALLEE: javax.ws.rs.core.MediaType#equals(java.lang.Object)
	CALLEE: jersey.repackaged.com.google.common.base.Predicates.AndPredicate#equals(java.lang.Object)
	CALLEE: org.glassfish.hk2.api.AnnotationLiteral#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#equals(java.lang.Object)
	CALLEE: org.glassfish.hk2.utilities.reflection.ParameterizedTypeImpl#equals(java.lang.Object)
	CALLEE: liquibase.changelog.RanChangeSet#equals(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.model.ResourceModelIssue#equals(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.model.Parameter#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.jsontype.NamedType#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.NullNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.MemberKey#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.ObjectNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.ArrayNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.POJONode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.BooleanNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.TextNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.BinaryNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.IntNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.LongNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.BigIntegerNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.DoubleNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.DecimalNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.annotation.ObjectIdGenerator.IdKey#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference#getUnresolvedId()
	CALLEE: com.fasterxml.jackson.databind.PropertyName#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.io.SerializedString#equals(java.lang.Object)
	CALLEE: org.glassfish.jersey.message.internal.AcceptableMediaType#equals(java.lang.Object)
	CALLEE: org.glassfish.jersey.message.internal.QualitySourceMediaType#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.JsonLocation#equals(java.lang.Object)
CALLER: org.glassfish.hk2.internal.ActiveDescriptorBuilderImpl.BuiltActiveDescriptor#<init>(java.lang.Class,java.util.Set,java.lang.annotation.Annotation,java.lang.Class,java.lang.String,java.util.Set,org.glassfish.hk2.api.DescriptorType,org.glassfish.hk2.api.DescriptorVisibility,int,java.lang.Boolean,java.lang.Boolean,java.lang.String,java.util.Map,org.glassfish.hk2.api.HK2Loader,org.glassfish.hk2.internal.ActiveDescriptorBuilderImpl.1)
	CALLEE: org.glassfish.hk2.internal.ActiveDescriptorBuilderImpl.BuiltActiveDescriptor#<init>(java.lang.Class,java.util.Set,java.lang.annotation.Annotation,java.lang.Class,java.lang.String,java.util.Set,org.glassfish.hk2.api.DescriptorType,org.glassfish.hk2.api.DescriptorVisibility,int,java.lang.Boolean,java.lang.Boolean,java.lang.String,java.util.Map,org.glassfish.hk2.api.HK2Loader)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer#<init>(com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase#<init>(com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase,com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer#<init>(com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer#<init>(com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer,com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer#<init>(com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase#<init>(com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase,com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer#<init>(com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer#<init>(com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer,com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler#_deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,int,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#<init>(com.fasterxml.jackson.core.JsonParser)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeString(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeStartArray()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeEndArray()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#asParser(com.fasterxml.jackson.core.JsonParser)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#compareTo(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getName()
CALLER: org.glassfish.jersey.server.model.InvocableValidator#visitResourceHandlerConstructor(org.glassfish.jersey.server.model.HandlerConstructor)
	CALLEE: static org.glassfish.jersey.server.model.InvocableValidator#isSingleton(java.lang.Class)
	CALLEE: static org.glassfish.jersey.server.model.ResourceMethodValidator#validateParameter(org.glassfish.jersey.server.model.Parameter,java.lang.Object,java.lang.String,java.lang.String,boolean)
	CALLEE: org.glassfish.jersey.server.model.HandlerConstructor#getConstructor()
	CALLEE: org.glassfish.jersey.server.model.HandlerConstructor#getParameters()
CALLER: com.fasterxml.jackson.databind.node.ContainerNode#nullNode()
	CALLEE: com.fasterxml.jackson.databind.node.JsonNodeFactory#nullNode()
CALLER: com.fasterxml.jackson.databind.deser.impl.PropertyValue.Map#<init>(com.fasterxml.jackson.databind.deser.impl.PropertyValue,java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyValue#<init>(com.fasterxml.jackson.databind.deser.impl.PropertyValue,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#fromMemberAnnotations(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.WithMember)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.1#withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.8#withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.2#withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.4#withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.5#withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.6#withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.7#withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.3#withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#_getterPriority(com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getName()
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getFullName()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getParameterCount()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getName()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getDeclaringClass()
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked#withoutNext()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked#<init>(java.lang.Object,com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked,com.fasterxml.jackson.databind.PropertyName,boolean,boolean,boolean)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#_setterPriority(com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getName()
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#_findRequired()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#fromMemberAnnotations(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.WithMember)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.4#<init>(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#_findDescription()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#fromMemberAnnotations(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.WithMember)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.5#<init>(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#_findIndex()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#fromMemberAnnotations(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.WithMember)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.6#<init>(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#_findDefaultValue()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#fromMemberAnnotations(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.WithMember)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.7#<init>(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder)
CALLER: com.fasterxml.jackson.databind.PropertyMetadata#withDescription(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.PropertyMetadata#<init>(java.lang.Boolean,java.lang.String,java.lang.Integer,java.lang.String)
CALLER: com.fasterxml.jackson.databind.util.ArrayBuilders.BooleanBuilder#_constructArray(int)
	CALLEE: com.fasterxml.jackson.databind.util.ArrayBuilders.BooleanBuilder#_constructArray(int)
CALLER: com.fasterxml.jackson.databind.util.ArrayBuilders.FloatBuilder#_constructArray(int)
	CALLEE: com.fasterxml.jackson.databind.util.ArrayBuilders.FloatBuilder#_constructArray(int)
CALLER: com.fasterxml.jackson.databind.util.ArrayBuilders.ByteBuilder#_constructArray(int)
	CALLEE: com.fasterxml.jackson.databind.util.ArrayBuilders.ByteBuilder#_constructArray(int)
CALLER: com.fasterxml.jackson.databind.util.ArrayBuilders.ShortBuilder#_constructArray(int)
	CALLEE: com.fasterxml.jackson.databind.util.ArrayBuilders.ShortBuilder#_constructArray(int)
CALLER: com.fasterxml.jackson.databind.util.ArrayBuilders.IntBuilder#_constructArray(int)
	CALLEE: com.fasterxml.jackson.databind.util.ArrayBuilders.IntBuilder#_constructArray(int)
CALLER: com.fasterxml.jackson.databind.util.ArrayBuilders.DoubleBuilder#_constructArray(int)
	CALLEE: com.fasterxml.jackson.databind.util.ArrayBuilders.DoubleBuilder#_constructArray(int)
CALLER: com.fasterxml.jackson.databind.util.ArrayBuilders.LongBuilder#_constructArray(int)
	CALLEE: com.fasterxml.jackson.databind.util.ArrayBuilders.LongBuilder#_constructArray(int)
CALLER: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder#_reset()
	CALLEE: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder.Node#getData()
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer#_appendNativeIds(java.lang.StringBuilder)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Segment#findObjectId(int)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Segment#findTypeId(int)
CALLER: static com.fasterxml.jackson.databind.node.TextNode#appendQuoted(java.lang.StringBuilder,java.lang.String)
	CALLEE: static com.fasterxml.jackson.core.io.CharTypes#appendQuoted(java.lang.StringBuilder,java.lang.String)
CALLER: com.fasterxml.jackson.databind.node.POJONode#_pojoEquals(com.fasterxml.jackson.databind.node.POJONode)
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.ConsumesProducesAcceptor#equals(java.lang.Object)
	CALLEE: org.traccar.database.GroupTree.TreeNode#equals(java.lang.Object)
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig.FeatureRegistration#equals(java.lang.Object)
	CALLEE: org.apache.log4j.CategoryKey#equals(java.lang.Object)
	CALLEE: org.slf4j.helpers.SubstituteLogger#equals(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.Errors.ErrorMessage#equals(java.lang.Object)
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#equals(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.OsgiRegistry.BundleSpiProvidersLoader#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.ClassKey#equals(java.lang.Object)
	CALLEE: javax.ws.rs.core.MediaType#equals(java.lang.Object)
	CALLEE: jersey.repackaged.com.google.common.base.Predicates.AndPredicate#equals(java.lang.Object)
	CALLEE: org.glassfish.hk2.api.AnnotationLiteral#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#equals(java.lang.Object)
	CALLEE: org.glassfish.hk2.utilities.reflection.ParameterizedTypeImpl#equals(java.lang.Object)
	CALLEE: liquibase.changelog.RanChangeSet#equals(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.model.ResourceModelIssue#equals(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.model.Parameter#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.jsontype.NamedType#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.NullNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.MemberKey#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.ObjectNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.ArrayNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.POJONode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.BooleanNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.TextNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.BinaryNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.IntNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.LongNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.BigIntegerNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.DoubleNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.DecimalNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.annotation.ObjectIdGenerator.IdKey#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.PropertyName#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.io.SerializedString#equals(java.lang.Object)
	CALLEE: org.glassfish.jersey.message.internal.AcceptableMediaType#equals(java.lang.Object)
	CALLEE: org.glassfish.jersey.message.internal.QualitySourceMediaType#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.JsonLocation#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#equals(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#_deserializeFromNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
CALLER: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#finishBuild(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#wrapInstantiationProblem(java.lang.Throwable,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getMember()
CALLER: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#_deserializeNonVanilla(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#skipChildren()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#getName()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#skipChildren()
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.CreatorCollector.Vanilla#createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#injectValues(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getActiveView()
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#visibleInView(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#_deserializeWithCreator(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer#_deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.LongDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.CharacterDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ByteDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ShortDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.FloatDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigDecimalDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#isExpectedStartArrayToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getTypeId()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#canReadTypeId()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.NoClassDefFoundDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ByteDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ShortDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.FloatDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.DoubleDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.BooleanDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.CharDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.IntDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.LongDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#wrongTokenException(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken,java.lang.String)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#isExpectedStartArrayToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeFieldName(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeStartObject()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeString(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.JsonParser#canReadTypeId()
	CALLEE: com.fasterxml.jackson.core.JsonParser#getTypeId()
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#canReadTypeId()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getTypeId()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#asParser(com.fasterxml.jackson.core.JsonParser)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase#_deserializeWithNativeTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#<init>(com.fasterxml.jackson.core.ObjectCodec,boolean)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer#_locateTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase#_findDeserializer(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer#_usesExternalId()
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer#_usesExternalId()
	CALLEE: static com.fasterxml.jackson.core.util.JsonParserSequence#createFlattened(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonParser)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer#_deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.LongDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.CharacterDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ByteDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ShortDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.FloatDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigDecimalDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.NoClassDefFoundDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ByteDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ShortDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.FloatDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.DoubleDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.BooleanDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.CharDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.IntDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.LongDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#wrongTokenException(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeFieldName(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeStartObject()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeString(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.JsonParser#canReadTypeId()
	CALLEE: com.fasterxml.jackson.core.JsonParser#getTypeId()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#canReadTypeId()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getTypeId()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#asParser(com.fasterxml.jackson.core.JsonParser)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase#_deserializeWithNativeTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#<init>(com.fasterxml.jackson.core.ObjectCodec,boolean)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase#_findDeserializer(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
	CALLEE: static com.fasterxml.jackson.core.util.JsonParserSequence#createFlattened(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonParser)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase#baseTypeName()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getTypeId()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#canReadTypeId()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase#_deserializeWithNativeTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.LongDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.CharacterDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ByteDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ShortDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.FloatDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigDecimalDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.NoClassDefFoundDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ByteDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ShortDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.FloatDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.DoubleDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.BooleanDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.CharDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.IntDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.LongDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase#_findDeserializer(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase#_findDefaultImplDeserializer(com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer#_deserializeTypedUsingDefaultImpl(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.util.TokenBuffer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.NoClassDefFoundDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ByteDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ShortDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.FloatDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.DoubleDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.BooleanDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.CharDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.IntDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.LongDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.LongDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.CharacterDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ByteDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ShortDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.FloatDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigDecimalDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#wrongTokenException(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeEndObject()
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#asParser(com.fasterxml.jackson.core.JsonParser)
	CALLEE: static com.fasterxml.jackson.databind.jsontype.TypeDeserializer#deserializeIfNatural(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer#deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase#baseTypeName()
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase#_findDefaultImplDeserializer(com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer#_deserializeTypedForId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.util.TokenBuffer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigDecimalDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.NoClassDefFoundDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ByteDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ShortDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.FloatDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.DoubleDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.BooleanDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.CharDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.IntDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.LongDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.LongDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.CharacterDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ByteDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ShortDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.FloatDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeFieldName(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeString(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#asParser(com.fasterxml.jackson.core.JsonParser)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#<init>(com.fasterxml.jackson.core.ObjectCodec,boolean)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase#_findDeserializer(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
	CALLEE: static com.fasterxml.jackson.core.util.JsonParserSequence#createFlattened(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonParser)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentName()
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer#<init>(com.fasterxml.jackson.core.ObjectCodec,boolean)
	CALLEE: com.fasterxml.jackson.core.JsonGenerator#<init>()
	CALLEE: static com.fasterxml.jackson.core.json.JsonWriteContext#createRootContext(com.fasterxml.jackson.core.json.DupDetector)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Segment#<init>()
CALLER: com.fasterxml.jackson.databind.introspect.AnnotationMap#add(java.lang.annotation.Annotation)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotationMap#_add(java.lang.annotation.Annotation)
CALLER: org.glassfish.jersey.server.model.ResourceMethodValidator#visitResourceMethod(org.glassfish.jersey.server.model.ResourceMethod)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod#getType()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethodValidator#visitJaxrsResourceMethod(org.glassfish.jersey.server.model.ResourceMethod)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethodValidator#visitSubResourceLocator(org.glassfish.jersey.server.model.ResourceMethod)
CALLER: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#<init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.deser.SettableBeanProperty[],com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
CALLER: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#withIgnorableProperties(java.util.HashSet)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#withIgnorableProperties(java.util.HashSet)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#<init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.deser.SettableBeanProperty[],com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
CALLER: static com.fasterxml.jackson.core.io.NumberOutput#toString(long)
	CALLEE: static com.fasterxml.jackson.core.io.NumberOutput#toString(int)
CALLER: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer#_parseDouble(java.lang.String)
	CALLEE: static com.fasterxml.jackson.core.io.NumberInput#parseDouble(java.lang.String)
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#<init>(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,java.lang.reflect.Type,com.fasterxml.jackson.databind.introspect.AnnotationMap,int)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMember#<init>(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.introspect.AnnotationMap)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMember#getContextClass()
CALLER: com.fasterxml.jackson.databind.util.StdDateFormat#parseAsISO8601(java.lang.String,java.text.ParsePosition)
	CALLEE: static com.fasterxml.jackson.databind.util.StdDateFormat#_cloneFormat(java.text.DateFormat,java.lang.String,java.util.TimeZone,java.util.Locale)
	CALLEE: static com.fasterxml.jackson.databind.util.StdDateFormat#hasTimeZone(java.lang.String)
CALLER: com.fasterxml.jackson.databind.util.StdDateFormat#parseAsRFC1123(java.lang.String,java.text.ParsePosition)
	CALLEE: static com.fasterxml.jackson.databind.util.StdDateFormat#_cloneFormat(java.text.DateFormat,java.lang.String,java.util.TimeZone,java.util.Locale)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#_trimByVisibility(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked#trimByVisibility()
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#_mergeAnnotations(int,com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked[])
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#_mergeAnnotations(int,com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked[])
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMember#getAllAnnotations()
	CALLEE: static com.fasterxml.jackson.databind.introspect.AnnotationMap#merge(com.fasterxml.jackson.databind.introspect.AnnotationMap,com.fasterxml.jackson.databind.introspect.AnnotationMap)
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#<init>(com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.lang.reflect.Method,com.fasterxml.jackson.databind.introspect.AnnotationMap,com.fasterxml.jackson.databind.introspect.AnnotationMap[])
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked#withValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked#<init>(java.lang.Object,com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked,com.fasterxml.jackson.databind.PropertyName,boolean,boolean,boolean)
CALLER: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#<init>(com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer,com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#<init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.util.NameTransformer)
CALLER: com.fasterxml.jackson.databind.deser.std.ThrowableDeserializer#<init>(com.fasterxml.jackson.databind.deser.BeanDeserializer,com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#<init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.util.NameTransformer)
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializer#<init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#<init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.util.NameTransformer)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#<init>(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder,com.fasterxml.jackson.databind.PropertyName)
	CALLEE: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition#<init>()
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getAccessor()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getGetter()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getField()
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getMutator()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getField()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getSetter()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getConstructorParameter()
CALLER: static com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#merge(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked,com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked#append(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked)
CALLER: com.fasterxml.jackson.databind.PropertyName#withSimpleName(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.PropertyName#<init>(java.lang.String,java.lang.String)
CALLER: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider#_serializeNull(com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: org.h2.jdbc.JdbcSQLException#getMessage()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#getMessage()
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#getMessage()
	CALLEE: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference#getMessage()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#<init>(java.lang.String,java.lang.Throwable)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getDefaultNullValueSerializer()
	CALLEE: com.fasterxml.jackson.databind.ser.std.NullSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.SerializerProvider#findTypedValueSerializer(java.lang.Class,boolean,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#constructType(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.SerializerCache#typedValueSerializer(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#findValueSerializer(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#createTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#<init>(com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.SerializerCache#addTypedSerializer(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap#typedValueSerializer(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.PropertyName#simpleAsEncoded(com.fasterxml.jackson.databind.cfg.MapperConfig)
	CALLEE: com.fasterxml.jackson.core.io.SerializedString#<init>(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#compileString(java.lang.String)
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer#writeFieldName(com.fasterxml.jackson.core.SerializableString)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#_append(com.fasterxml.jackson.core.JsonToken,java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.json.JsonWriteContext#writeFieldName(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.io.SerializedString#getValue()
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedField#getFullName()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#getName()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#getDeclaringClass()
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#_removeNonVisible(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked#withoutNonVisible()
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#_removeIgnored(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked#withoutIgnored()
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#_anyExplicits(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked)
	CALLEE: com.fasterxml.jackson.databind.PropertyName#hasSimpleName()
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#_explode(java.util.Collection,java.util.Map,com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#<init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.AnnotationIntrospector,boolean)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked#withNext(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked)
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableAMBIGUOUS_SRLS(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference#getUnresolvedId()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ReadableObjectId#getKey()
CALLER: org.glassfish.hk2.internal.ActiveDescriptorBuilderImpl.BuiltActiveDescriptor#<init>(java.lang.Class,java.util.Set,java.lang.annotation.Annotation,java.lang.Class,java.lang.String,java.util.Set,org.glassfish.hk2.api.DescriptorType,org.glassfish.hk2.api.DescriptorVisibility,int,java.lang.Boolean,java.lang.Boolean,java.lang.String,java.util.Map,org.glassfish.hk2.api.HK2Loader)
	CALLEE: org.glassfish.hk2.utilities.AbstractActiveDescriptor#<init>(java.util.Set,java.lang.Class,java.lang.String,java.util.Set,org.glassfish.hk2.api.DescriptorType,org.glassfish.hk2.api.DescriptorVisibility,int,java.lang.Boolean,java.lang.Boolean,java.lang.String,java.util.Map)
	CALLEE: org.glassfish.hk2.utilities.DescriptorImpl#setLoader(org.glassfish.hk2.api.HK2Loader)
	CALLEE: org.glassfish.hk2.utilities.AbstractActiveDescriptor#setReified(boolean)
	CALLEE: org.glassfish.hk2.utilities.AbstractActiveDescriptor#setScopeAsAnnotation(java.lang.annotation.Annotation)
	CALLEE: org.glassfish.hk2.utilities.DescriptorImpl#setImplementation(java.lang.String)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase#<init>(com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.TypeDeserializer#<init>()
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.1#withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.1#withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.8#withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.8#withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.2#withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.2#withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
CALLER: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#_deserializeWithCreator(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: static com.fasterxml.jackson.databind.JsonMappingException#from(com.fasterxml.jackson.core.JsonParser,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.JavaType#isAbstract()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#isAbstract()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.NoClassDefFoundDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.EnumDeserializer.FactoryBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ByteDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.ShortDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.FloatDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.DoubleDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.BooleanDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.CharDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.AbstractDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.IntDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.LongDeser#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.CalendarDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.SqlDateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.TimestampDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.IntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BooleanDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.LongDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.DoubleDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.CharacterDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ByteDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.ShortDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.FloatDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigDecimalDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.std.DateDeserializers.DateDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.ValueInstantiator#createUsingDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdValueInstantiator#createUsingDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#_deserializeUsingPropertyBased(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer#_locateTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#wrongTokenException(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken,java.lang.String)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#isExpectedStartArrayToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase#baseTypeName()
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase#idFromBaseType()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#isExpectedStartArrayToken()
CALLER: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase#_findDeserializer(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.JavaType#narrowBy(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#findContextualValueDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase#_findDefaultImplDeserializer(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver#typeFromId(com.fasterxml.jackson.databind.DatabindContext,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver#typeFromId(com.fasterxml.jackson.databind.DatabindContext,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase#_handleUnknownTypeId(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.JavaType)
CALLER: static com.fasterxml.jackson.core.util.JsonParserSequence#createFlattened(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonParser)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#<init>(com.fasterxml.jackson.core.JsonParser[])
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#addFlattenedActiveParsers(java.util.List)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase#baseTypeName()
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
CALLER: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase#_findDefaultImplDeserializer(com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#isBogusClass(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#findContextualValueDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
CALLER: static org.glassfish.jersey.server.model.ResourceMethodValidator.2#<clinit>()
	CALLEE: static org.glassfish.jersey.server.model.ResourceMethod.JaxrsType#values()
CALLER: org.glassfish.jersey.server.model.ResourceMethod#getType()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Data#getType()
CALLER: org.glassfish.jersey.server.model.ResourceMethodValidator#visitJaxrsResourceMethod(org.glassfish.jersey.server.model.ResourceMethod)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethodValidator#checkMethod(org.glassfish.jersey.server.model.ResourceMethod)
CALLER: org.glassfish.jersey.server.model.ResourceMethodValidator#visitSubResourceLocator(org.glassfish.jersey.server.model.ResourceMethod)
	CALLEE: static org.glassfish.jersey.internal.Errors#fatal(java.lang.Object,java.lang.String)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod#getInvocable()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethodValidator#checkParameters(org.glassfish.jersey.server.model.ResourceMethod)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethodValidator#checkValueProviders(org.glassfish.jersey.server.model.ResourceMethod)
	CALLEE: org.glassfish.jersey.server.model.Invocable#getRawResponseType()
	CALLEE: org.glassfish.jersey.server.model.Invocable#getHandlingMethod()
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#SUBRES_LOC_RETURNS_VOID(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked#trimByVisibility()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked#trimByVisibility()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked#withNext(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked)
CALLER: static com.fasterxml.jackson.databind.introspect.AnnotationMap#merge(com.fasterxml.jackson.databind.introspect.AnnotationMap,com.fasterxml.jackson.databind.introspect.AnnotationMap)
	CALLEE: org.glassfish.hk2.api.AnnotationLiteral#annotationType()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotationMap#<init>(java.util.HashMap)
CALLER: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#<init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#<init>(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler#renameAll(com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#renameAll(com.fasterxml.jackson.databind.util.NameTransformer)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked#append(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked#append(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked#withNext(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked)
CALLER: com.fasterxml.jackson.databind.ser.SerializerCache#typedValueSerializer(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey#<init>(java.lang.Class,boolean)
CALLER: com.fasterxml.jackson.databind.SerializerProvider#findValueSerializer(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#constructType(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.SerializerCache#untypedValueSerializer(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.SerializerCache#untypedValueSerializer(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#_createAndCacheUntypedSerializer(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getUnknownTypeSerializer(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap#untypedValueSerializer(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#createTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#introspectClassAnnotations(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#getDefaultTyper(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfigBase#getSubtypeResolver()
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver#collectAndResolveSubtypes(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#getClassInfo()
	CALLEE: com.fasterxml.jackson.databind.SerializationConfig#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder#buildTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection)
CALLER: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#<init>(com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.JsonSerializer#<init>()
CALLER: com.fasterxml.jackson.databind.ser.SerializerCache#addTypedSerializer(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey#<init>(java.lang.Class,boolean)
CALLER: com.fasterxml.jackson.databind.cfg.MapperConfig#compileString(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.io.SerializedString#<init>(java.lang.String)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked#withoutNonVisible()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked#withoutNonVisible()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked#withNext(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked#withoutIgnored()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked#withoutIgnored()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked#withNext(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked#withNext(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked#<init>(java.lang.Object,com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked,com.fasterxml.jackson.databind.PropertyName,boolean,boolean,boolean)
CALLER: org.glassfish.hk2.utilities.AbstractActiveDescriptor#setScopeAsAnnotation(java.lang.annotation.Annotation)
	CALLEE: org.glassfish.hk2.utilities.AbstractActiveDescriptor#setScopeAnnotation(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.1#withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findViews(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findViews(com.fasterxml.jackson.databind.introspect.Annotated)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.8#withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findObjectIdInfo(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findObjectIdInfo(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findObjectReferenceInfo(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findObjectReferenceInfo(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.2#withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findReferenceType(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findReferenceType(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
CALLER: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#_deserializeUsingPropertyBased(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#mappingException(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#wrapInstantiationProblem(java.lang.Throwable,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer#readIdProperty(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer#bufferProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty,java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#skipChildren()
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#getName()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#skipChildren()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializerBase#wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator#findCreatorProperty(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator#build(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator#startBuilding(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#getCreatorIndex()
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#getCreatorIndex()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer#assignParameter(int,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase#idFromBaseType()
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver#idFromValueAndType(java.lang.Object,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver#idFromValueAndType(java.lang.Object,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver#typeFromId(com.fasterxml.jackson.databind.DatabindContext,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#getTypeFactory()
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver#_typeFromId(java.lang.String,com.fasterxml.jackson.databind.type.TypeFactory)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.MinimalClassNameIdResolver#_typeFromId(java.lang.String,com.fasterxml.jackson.databind.type.TypeFactory)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver#typeFromId(com.fasterxml.jackson.databind.DatabindContext,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver#_typeFromId(java.lang.String)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase#_handleUnknownTypeId(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver#getDescForKnownTypeIds()
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver#getDescForKnownTypeIds()
	CALLEE: com.fasterxml.jackson.databind.DeserializationContext#unknownTypeException(com.fasterxml.jackson.databind.JavaType,java.lang.String,java.lang.String)
CALLER: com.fasterxml.jackson.core.util.JsonParserSequence#<init>(com.fasterxml.jackson.core.JsonParser[])
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#<init>(com.fasterxml.jackson.core.JsonParser)
CALLER: static com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#<init>()
CALLER: org.glassfish.jersey.server.model.ResourceMethodValidator#checkMethod(org.glassfish.jersey.server.model.ResourceMethod)
	CALLEE: static org.glassfish.jersey.server.model.ResourceMethodValidator#isConcreteType(java.lang.reflect.Type)
	CALLEE: org.glassfish.jersey.server.model.MethodHandler.ClassBasedMethodHandler#getHandlerClass()
	CALLEE: org.glassfish.jersey.server.model.MethodHandler.InstanceBasedMethodHandler#getHandlerClass()
	CALLEE: org.glassfish.jersey.server.model.Invocable#getHandler()
	CALLEE: org.glassfish.jersey.server.model.Invocable#getResponseType()
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#TYPE_OF_METHOD_NOT_RESOLVABLE_TO_CONCRETE_TYPE(java.lang.Object,java.lang.Object)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#METHOD_EMPTY_PATH_ANNOTATION(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.server.model.Parameter#isAnnotationPresent(java.lang.Class)
	CALLEE: static org.glassfish.jersey.internal.Errors#warning(java.lang.Object,java.lang.String)
	CALLEE: static org.glassfish.jersey.internal.Errors#fatal(java.lang.Object,java.lang.String)
	CALLEE: static org.glassfish.jersey.internal.Errors#hint(java.lang.Object,java.lang.String)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod#getHttpMethod()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod#getInvocable()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethodValidator#checkParameters(org.glassfish.jersey.server.model.ResourceMethod)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethodValidator#checkValueProviders(org.glassfish.jersey.server.model.ResourceMethod)
	CALLEE: org.glassfish.jersey.server.model.Invocable#getHandlingMethod()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod#isSuspendDeclared()
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#GET_RETURNS_VOID(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.model.Invocable#requiresEntity()
	CALLEE: org.glassfish.jersey.server.model.Invocable#isInflector()
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#GET_CONSUMES_ENTITY(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.model.Invocable#getParameters()
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#GET_CONSUMES_FORM_PARAM(java.lang.Object)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#MULTIPLE_HTTP_METHOD_DESIGNATORS(java.lang.Object,java.lang.Object)
CALLER: org.glassfish.jersey.server.model.ResourceMethodValidator#checkParameters(org.glassfish.jersey.server.model.ResourceMethod)
	CALLEE: static org.glassfish.jersey.server.model.ResourceMethodValidator#validateParameter(org.glassfish.jersey.server.model.Parameter,java.lang.Object,java.lang.String,java.lang.String,boolean)
	CALLEE: org.glassfish.jersey.server.model.Parameter#getSource()
	CALLEE: org.glassfish.jersey.server.model.Parameter#getAnnotations()
	CALLEE: static org.glassfish.jersey.internal.Errors#fatal(java.lang.Object,java.lang.String)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod#getInvocable()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod#getType()
	CALLEE: org.glassfish.jersey.server.model.Invocable#getHandlingMethod()
	CALLEE: org.glassfish.jersey.server.model.Invocable#getParameters()
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#SUBRES_LOC_HAS_ENTITY_PARAM(java.lang.Object)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#AMBIGUOUS_NON_ANNOTATED_PARAMETER(java.lang.Object,java.lang.Object)
CALLER: org.glassfish.jersey.server.model.ResourceMethodValidator#checkValueProviders(org.glassfish.jersey.server.model.ResourceMethod)
	CALLEE: static org.glassfish.jersey.internal.Errors#fatal(java.lang.Object,java.lang.String)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod#getInvocable()
	CALLEE: org.glassfish.jersey.server.model.Invocable#getHandlingMethod()
	CALLEE: org.glassfish.jersey.server.model.Invocable#getValueProviders(org.glassfish.hk2.api.ServiceLocator)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#ERROR_PARAMETER_MISSING_VALUE_PROVIDER(java.lang.Object,java.lang.Object)
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#SUBRES_LOC_RETURNS_VOID(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableSUBRES_LOC_RETURNS_VOID(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler#renameAll(com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#getValueDeserializer()
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ThrowableDeserializer#unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#getName()
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.util.NameTransformer.2#transform(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.NameTransformer.3#transform(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.NameTransformer.4#transform(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.NameTransformer.1#transform(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#withSimpleName(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler#<init>(java.util.List)
CALLER: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#renameAll(com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.JsonDeserializer#unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer#unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer#unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.deser.std.ThrowableDeserializer#unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.deser.BeanDeserializer#unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer#unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#<init>(java.util.Collection,boolean)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#getName()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#iterator()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.IteratorImpl#hasNext()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.IteratorImpl#next()
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#getValueDeserializer()
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)
	CALLEE: com.fasterxml.jackson.databind.util.NameTransformer.2#transform(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.NameTransformer.3#transform(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.NameTransformer.4#transform(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.NameTransformer.1#transform(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#withSimpleName(java.lang.String)
CALLER: com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey#<init>(java.lang.Class,boolean)
	CALLEE: static com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey#hash(java.lang.Class,boolean)
CALLER: com.fasterxml.jackson.databind.ser.SerializerCache#untypedValueSerializer(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey#<init>(java.lang.Class,boolean)
CALLER: com.fasterxml.jackson.databind.ser.SerializerCache#untypedValueSerializer(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey#<init>(com.fasterxml.jackson.databind.JavaType,boolean)
CALLER: com.fasterxml.jackson.databind.SerializerProvider#_createAndCacheUntypedSerializer(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#constructType(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#<init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#_createUntypedSerializer(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.ser.SerializerCache#addAndResolveNonTypedSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.SerializerProvider#handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.LongSerializer#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntLikeSerializer#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.ShortSerializer#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.FloatSerializer#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSerializer#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.SerializationConfig#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#isEnabled(com.fasterxml.jackson.databind.MapperFeature)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#getAnnotationIntrospector()
	CALLEE: static com.fasterxml.jackson.databind.AnnotationIntrospector#nopInstance()
CALLER: org.glassfish.hk2.utilities.AbstractActiveDescriptor#setScopeAnnotation(java.lang.Class)
	CALLEE: org.glassfish.hk2.utilities.DescriptorImpl#setScope(java.lang.String)
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findViews(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#_findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver#idFromValueAndType(java.lang.Object,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver#_idFrom(java.lang.Object,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver#idFromValueAndType(java.lang.Object,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver#idFromValue(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver#_typeFromId(java.lang.String,com.fasterxml.jackson.databind.type.TypeFactory)
	CALLEE: org.h2.jdbc.JdbcSQLException#getMessage()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#getMessage()
	CALLEE: org.glassfish.hk2.api.MultiException#getMessage()
	CALLEE: org.glassfish.jersey.server.model.ModelValidationException#getMessage()
	CALLEE: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference#getMessage()
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#getMessage()
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#constructFromCanonical(java.lang.String)
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#findClass(java.lang.String)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.MinimalClassNameIdResolver#_typeFromId(java.lang.String,com.fasterxml.jackson.databind.type.TypeFactory)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver#_typeFromId(java.lang.String,com.fasterxml.jackson.databind.type.TypeFactory)
CALLER: com.fasterxml.jackson.databind.DeserializationContext#unknownTypeException(com.fasterxml.jackson.databind.JavaType,java.lang.String,java.lang.String)
	CALLEE: static com.fasterxml.jackson.databind.JsonMappingException#from(com.fasterxml.jackson.core.JsonParser,java.lang.String)
CALLER: com.fasterxml.jackson.core.util.JsonParserDelegate#<init>(com.fasterxml.jackson.core.JsonParser)
	CALLEE: com.fasterxml.jackson.core.JsonParser#<init>()
CALLER: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.deser.std.StdDeserializer#<init>(java.lang.Class)
CALLER: org.glassfish.jersey.server.model.ResourceMethod#isSuspendDeclared()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Data#isSuspended()
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#GET_RETURNS_VOID(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableGET_RETURNS_VOID(java.lang.Object)
CALLER: org.glassfish.jersey.server.model.Invocable#requiresEntity()
	CALLEE: org.glassfish.jersey.server.model.Parameter#getSource()
	CALLEE: org.glassfish.jersey.server.model.Invocable#getParameters()
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#GET_CONSUMES_ENTITY(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableGET_CONSUMES_ENTITY(java.lang.Object)
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#GET_CONSUMES_FORM_PARAM(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableGET_CONSUMES_FORM_PARAM(java.lang.Object)
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#MULTIPLE_HTTP_METHOD_DESIGNATORS(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableMULTIPLE_HTTP_METHOD_DESIGNATORS(java.lang.Object,java.lang.Object)
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#TYPE_OF_METHOD_NOT_RESOLVABLE_TO_CONCRETE_TYPE(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableTYPE_OF_METHOD_NOT_RESOLVABLE_TO_CONCRETE_TYPE(java.lang.Object,java.lang.Object)
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#METHOD_EMPTY_PATH_ANNOTATION(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableMETHOD_EMPTY_PATH_ANNOTATION(java.lang.Object,java.lang.Object)
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#SUBRES_LOC_HAS_ENTITY_PARAM(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableSUBRES_LOC_HAS_ENTITY_PARAM(java.lang.Object)
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#AMBIGUOUS_NON_ANNOTATED_PARAMETER(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableAMBIGUOUS_NON_ANNOTATED_PARAMETER(java.lang.Object,java.lang.Object)
CALLER: org.glassfish.jersey.server.model.Invocable#getValueProviders(org.glassfish.hk2.api.ServiceLocator)
	CALLEE: static org.glassfish.jersey.server.spi.internal.ParameterValueHelper#createValueProviders(org.glassfish.hk2.api.ServiceLocator,org.glassfish.jersey.server.model.Parameterized)
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#ERROR_PARAMETER_MISSING_VALUE_PROVIDER(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableERROR_PARAMETER_MISSING_VALUE_PROVIDER(java.lang.Object,java.lang.Object)
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableSUBRES_LOC_RETURNS_VOID(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: com.fasterxml.jackson.databind.deser.SettableBeanProperty#withSimpleName(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.PropertyName#<init>(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.PropertyName#withSimpleName(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#withName(com.fasterxml.jackson.databind.PropertyName)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#withName(com.fasterxml.jackson.databind.PropertyName)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#withName(com.fasterxml.jackson.databind.PropertyName)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#withName(com.fasterxml.jackson.databind.PropertyName)
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#withName(com.fasterxml.jackson.databind.PropertyName)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#withName(com.fasterxml.jackson.databind.PropertyName)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#withName(com.fasterxml.jackson.databind.PropertyName)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#withName(com.fasterxml.jackson.databind.PropertyName)
CALLER: com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey#<init>(com.fasterxml.jackson.databind.JavaType,boolean)
	CALLEE: static com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey#hash(com.fasterxml.jackson.databind.JavaType,boolean)
CALLER: com.fasterxml.jackson.databind.SerializerProvider#_createUntypedSerializer(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializerFactory#createSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType)
CALLER: com.fasterxml.jackson.databind.ser.SerializerCache#addAndResolveNonTypedSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey#<init>(com.fasterxml.jackson.databind.JavaType,boolean)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#resolve(com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#resolve(com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver#_idFrom(java.lang.Object,java.lang.Class)
	CALLEE: static com.fasterxml.jackson.databind.type.TypeFactory#defaultInstance()
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.type.TypeBase#toCanonical()
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#getOuterClass(java.lang.Class)
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#findEnumType(java.util.EnumSet)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#constructCollectionType(java.lang.Class,java.lang.Class)
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#findEnumType(java.util.EnumMap)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#constructMapType(java.lang.Class,java.lang.Class,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver#idFromValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#constructType(java.lang.reflect.Type)
	CALLEE: com.fasterxml.jackson.databind.DeserializationConfig#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#introspectClassAnnotations(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findTypeName(com.fasterxml.jackson.databind.introspect.AnnotatedClass)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findTypeName(com.fasterxml.jackson.databind.introspect.AnnotatedClass)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#isAnnotationProcessingEnabled()
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#getClassInfo()
	CALLEE: static com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver#_defaultTypeId(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.SerializationConfig#getAnnotationIntrospector()
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableGET_RETURNS_VOID(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableGET_CONSUMES_ENTITY(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableGET_CONSUMES_FORM_PARAM(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableMULTIPLE_HTTP_METHOD_DESIGNATORS(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableTYPE_OF_METHOD_NOT_RESOLVABLE_TO_CONCRETE_TYPE(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableMETHOD_EMPTY_PATH_ANNOTATION(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableSUBRES_LOC_HAS_ENTITY_PARAM(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableAMBIGUOUS_NON_ANNOTATED_PARAMETER(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.server.spi.internal.ParameterValueHelper#createValueProviders(org.glassfish.hk2.api.ServiceLocator,org.glassfish.jersey.server.model.Parameterized)
	CALLEE: static org.glassfish.jersey.internal.inject.Providers#getProviders(org.glassfish.hk2.api.ServiceLocator,java.lang.Class)
	CALLEE: org.glassfish.jersey.server.model.Parameter#getSource()
	CALLEE: org.glassfish.jersey.server.model.Invocable#getParameters()
	CALLEE: org.glassfish.jersey.server.spi.internal.ParameterValueHelper.1#<init>()
	CALLEE: static org.glassfish.jersey.server.spi.internal.ParameterValueHelper#getValueFactory(java.util.Collection,org.glassfish.jersey.server.model.Parameter)
	CALLEE: static org.glassfish.jersey.server.spi.internal.ParameterValueHelper#wrapParamFactory(org.glassfish.hk2.api.Factory,org.glassfish.jersey.server.model.Parameter.Source)
	CALLEE: org.glassfish.jersey.server.model.Parameter#isQualified()
	CALLEE: static org.glassfish.jersey.server.model.Parameter#overrideSource(org.glassfish.jersey.server.model.Parameter,org.glassfish.jersey.server.model.Parameter.Source)
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableERROR_PARAMETER_MISSING_VALUE_PROVIDER(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: com.fasterxml.jackson.databind.deser.impl.MethodProperty#withName(com.fasterxml.jackson.databind.PropertyName)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#withName(com.fasterxml.jackson.databind.PropertyName)
CALLER: com.fasterxml.jackson.databind.deser.impl.FieldProperty#withName(com.fasterxml.jackson.databind.PropertyName)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#withName(com.fasterxml.jackson.databind.PropertyName)
CALLER: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#withName(com.fasterxml.jackson.databind.PropertyName)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#withName(com.fasterxml.jackson.databind.PropertyName)
CALLER: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#withName(com.fasterxml.jackson.databind.PropertyName)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#withName(com.fasterxml.jackson.databind.PropertyName)
CALLER: com.fasterxml.jackson.databind.deser.CreatorProperty#withName(com.fasterxml.jackson.databind.PropertyName)
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#withName(com.fasterxml.jackson.databind.PropertyName)
CALLER: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#withName(com.fasterxml.jackson.databind.PropertyName)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#withName(com.fasterxml.jackson.databind.PropertyName)
CALLER: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#withName(com.fasterxml.jackson.databind.PropertyName)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#<init>(com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty,com.fasterxml.jackson.databind.PropertyName)
CALLER: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#withName(com.fasterxml.jackson.databind.PropertyName)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#withName(com.fasterxml.jackson.databind.PropertyName)
CALLER: static com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey#hash(com.fasterxml.jackson.databind.JavaType,boolean)
	CALLEE: com.fasterxml.jackson.databind.JavaType#hashCode()
CALLER: com.fasterxml.jackson.databind.ser.BeanSerializerFactory#createSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#getClassInfo()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getConfig()
	CALLEE: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#findSerializerFromAnnotation(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#modifyTypeByAnnotation(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializerFactory#_createSerializer2(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getTypeFactory()
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#<init>(com.fasterxml.jackson.databind.util.Converter,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.JavaType#hasRawClass(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.SerializationConfig#introspect(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#findSerializationConverter()
CALLER: static com.fasterxml.jackson.databind.util.ClassUtil#findEnumType(java.util.EnumSet)
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#findEnumType(java.lang.Enum)
	CALLEE: com.fasterxml.jackson.databind.util.ClassUtil.EnumTypeLocator#enumTypeFor(java.util.EnumSet)
CALLER: com.fasterxml.jackson.databind.type.TypeFactory#constructCollectionType(java.lang.Class,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#constructType(java.lang.reflect.Type)
	CALLEE: static com.fasterxml.jackson.databind.type.CollectionType#construct(java.lang.Class,com.fasterxml.jackson.databind.JavaType)
CALLER: static com.fasterxml.jackson.databind.util.ClassUtil#findEnumType(java.util.EnumMap)
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#findEnumType(java.lang.Enum)
	CALLEE: com.fasterxml.jackson.databind.util.ClassUtil.EnumTypeLocator#enumTypeFor(java.util.EnumMap)
CALLER: com.fasterxml.jackson.databind.type.TypeFactory#constructMapType(java.lang.Class,java.lang.Class,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#constructType(java.lang.reflect.Type)
	CALLEE: static com.fasterxml.jackson.databind.type.MapType#construct(java.lang.Class,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)
CALLER: static org.glassfish.jersey.server.spi.internal.ParameterValueHelper#wrapParamFactory(org.glassfish.hk2.api.Factory,org.glassfish.jersey.server.model.Parameter.Source)
	CALLEE: org.glassfish.jersey.server.spi.internal.ParamValueFactoryWithSource#<init>(org.glassfish.hk2.api.Factory,org.glassfish.jersey.server.model.Parameter.Source)
CALLER: org.glassfish.jersey.server.model.Parameter#isQualified()
	CALLEE: org.glassfish.hk2.api.AnnotationLiteral#annotationType()
	CALLEE: org.glassfish.jersey.server.model.Parameter#getAnnotations()
CALLER: static org.glassfish.jersey.server.model.Parameter#overrideSource(org.glassfish.jersey.server.model.Parameter,org.glassfish.jersey.server.model.Parameter.Source)
	CALLEE: org.glassfish.jersey.server.model.Parameter#<init>(java.lang.annotation.Annotation[],java.lang.annotation.Annotation,org.glassfish.jersey.server.model.Parameter.Source,java.lang.String,java.lang.Class,java.lang.reflect.Type,boolean,java.lang.String)
CALLER: com.fasterxml.jackson.databind.deser.impl.MethodProperty#withName(com.fasterxml.jackson.databind.PropertyName)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#<init>(com.fasterxml.jackson.databind.deser.impl.MethodProperty,com.fasterxml.jackson.databind.PropertyName)
CALLER: com.fasterxml.jackson.databind.deser.impl.FieldProperty#withName(com.fasterxml.jackson.databind.PropertyName)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#<init>(com.fasterxml.jackson.databind.deser.impl.FieldProperty,com.fasterxml.jackson.databind.PropertyName)
CALLER: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#withName(com.fasterxml.jackson.databind.PropertyName)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#<init>(com.fasterxml.jackson.databind.deser.impl.SetterlessProperty,com.fasterxml.jackson.databind.PropertyName)
CALLER: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#withName(com.fasterxml.jackson.databind.PropertyName)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#<init>(com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty,com.fasterxml.jackson.databind.PropertyName)
CALLER: com.fasterxml.jackson.databind.deser.CreatorProperty#withName(com.fasterxml.jackson.databind.PropertyName)
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#<init>(com.fasterxml.jackson.databind.deser.CreatorProperty,com.fasterxml.jackson.databind.PropertyName)
CALLER: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#withName(com.fasterxml.jackson.databind.PropertyName)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#<init>(com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty,com.fasterxml.jackson.databind.PropertyName)
CALLER: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#<init>(com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty,com.fasterxml.jackson.databind.PropertyName)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#<init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.PropertyName)
CALLER: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#withName(com.fasterxml.jackson.databind.PropertyName)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#<init>(com.fasterxml.jackson.databind.deser.impl.InnerClassProperty,com.fasterxml.jackson.databind.PropertyName)
CALLER: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#findSerializerFromAnnotation(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider#serializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#findConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findSerializer(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findSerializer(com.fasterxml.jackson.databind.introspect.Annotated)
CALLER: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#modifyTypeByAnnotation(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#getName()
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findSerializationType(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.SerializationConfig#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.JavaType#widenBy(java.lang.Class)
	CALLEE: static com.fasterxml.jackson.databind.ser.BasicSerializerFactory#modifySecondaryTypesByAnnotation(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findSerializationType(com.fasterxml.jackson.databind.introspect.Annotated)
CALLER: com.fasterxml.jackson.databind.ser.BeanSerializerFactory#_createSerializer2(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#iterator()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#next()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#hasNext()
	CALLEE: com.fasterxml.jackson.databind.BeanDescription#getBeanClass()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getUnknownTypeSerializer(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getConfig()
	CALLEE: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#findSerializerByAnnotations(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#usesStaticTyping(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#buildContainerSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializerFactory#customSerializers()
	CALLEE: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#findSerializerByLookup(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,boolean)
	CALLEE: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#findSerializerByPrimaryType(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializerFactory#findBeanSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#findSerializerByAddonType(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean)
	CALLEE: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig#hasSerializerModifiers()
	CALLEE: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig#serializerModifiers()
CALLER: com.fasterxml.jackson.databind.SerializerProvider#getTypeFactory()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#getTypeFactory()
CALLER: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#<init>(com.fasterxml.jackson.databind.util.Converter,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#<init>(com.fasterxml.jackson.databind.JavaType)
CALLER: static com.fasterxml.jackson.databind.util.ClassUtil.EnumTypeLocator#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.util.ClassUtil.EnumTypeLocator#<init>()
CALLER: com.fasterxml.jackson.databind.deser.impl.MethodProperty#<init>(com.fasterxml.jackson.databind.deser.impl.MethodProperty,com.fasterxml.jackson.databind.PropertyName)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#<init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.PropertyName)
CALLER: com.fasterxml.jackson.databind.deser.impl.FieldProperty#<init>(com.fasterxml.jackson.databind.deser.impl.FieldProperty,com.fasterxml.jackson.databind.PropertyName)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#<init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.PropertyName)
CALLER: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#<init>(com.fasterxml.jackson.databind.deser.impl.SetterlessProperty,com.fasterxml.jackson.databind.PropertyName)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#<init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.PropertyName)
CALLER: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#<init>(com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty,com.fasterxml.jackson.databind.PropertyName)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#<init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.PropertyName)
CALLER: com.fasterxml.jackson.databind.deser.CreatorProperty#<init>(com.fasterxml.jackson.databind.deser.CreatorProperty,com.fasterxml.jackson.databind.PropertyName)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#<init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.PropertyName)
CALLER: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#<init>(com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty,com.fasterxml.jackson.databind.PropertyName)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#<init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.PropertyName)
CALLER: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#<init>(com.fasterxml.jackson.databind.deser.impl.InnerClassProperty,com.fasterxml.jackson.databind.PropertyName)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#withName(com.fasterxml.jackson.databind.PropertyName)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#withName(com.fasterxml.jackson.databind.PropertyName)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#withName(com.fasterxml.jackson.databind.PropertyName)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#withName(com.fasterxml.jackson.databind.PropertyName)
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#withName(com.fasterxml.jackson.databind.PropertyName)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#withName(com.fasterxml.jackson.databind.PropertyName)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#withName(com.fasterxml.jackson.databind.PropertyName)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#withName(com.fasterxml.jackson.databind.PropertyName)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#<init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.PropertyName)
CALLER: com.fasterxml.jackson.databind.SerializerProvider#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.SerializationConfig#getAnnotationIntrospector()
CALLER: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider#serializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#isBogusClass(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#getHandlerInstantiator()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#canOverrideAccessModifiers()
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#createInstance(java.lang.Class,boolean)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#_handleResolvable(com.fasterxml.jackson.databind.JsonSerializer)
CALLER: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#findConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getTypeFactory()
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#<init>(com.fasterxml.jackson.databind.util.Converter,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#findConverter(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated)
CALLER: com.fasterxml.jackson.databind.JavaType#widenBy(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.JavaType#_assertSubclass(java.lang.Class,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.JavaType#_widen(java.lang.Class)
CALLER: static com.fasterxml.jackson.databind.ser.BasicSerializerFactory#modifySecondaryTypesByAnnotation(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.SerializationConfig#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findSerializationContentType(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findSerializationContentType(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findSerializationKeyType(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findSerializationKeyType(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.JavaType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.JavaType#getKeyType()
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#getKeyType()
	CALLEE: com.fasterxml.jackson.databind.type.MapType#widenKey(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#widenContentsBy(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.MapType#widenContentsBy(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#widenContentsBy(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#widenContentsBy(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#findSerializerByAnnotations(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#checkAndFixAccess(java.lang.reflect.Member)
	CALLEE: com.fasterxml.jackson.databind.DatabindContext#canOverrideAccessModifiers()
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#findJsonValueMethod()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getAnnotated()
	CALLEE: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#findSerializerFromAnnotation(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#<init>(java.lang.reflect.Method,com.fasterxml.jackson.databind.JsonSerializer)
CALLER: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#usesStaticTyping(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#isEnabled(com.fasterxml.jackson.databind.MapperFeature)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#getClassInfo()
	CALLEE: com.fasterxml.jackson.databind.SerializationConfig#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findSerializationTyping(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findSerializationTyping(com.fasterxml.jackson.databind.introspect.Annotated)
CALLER: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#buildContainerSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#isTrueMapType()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#isTrueCollectionType()
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#getClassInfo()
	CALLEE: com.fasterxml.jackson.databind.JavaType#useStaticType()
	CALLEE: com.fasterxml.jackson.databind.JavaType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.JavaType#isMapLikeType()
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#isMapLikeType()
	CALLEE: com.fasterxml.jackson.databind.JavaType#isCollectionLikeType()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#isCollectionLikeType()
	CALLEE: com.fasterxml.jackson.databind.JavaType#isArrayType()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#isArrayType()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#iterator()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#next()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#hasNext()
	CALLEE: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#createTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getConfig()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializerFactory#customSerializers()
	CALLEE: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig#hasSerializerModifiers()
	CALLEE: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig#serializerModifiers()
	CALLEE: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#_findContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#_findKeySerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#buildMapSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#buildCollectionSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#buildArraySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)
CALLER: com.fasterxml.jackson.databind.ser.BeanSerializerFactory#customSerializers()
	CALLEE: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig#serializers()
CALLER: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#findSerializerByLookup(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,boolean)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
CALLER: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#findSerializerByPrimaryType(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean)
	CALLEE: static com.fasterxml.jackson.databind.type.TypeFactory#unknownType()
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#findTypeParameters(com.fasterxml.jackson.databind.JavaType,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.annotation.JsonFormat.Value#getShape()
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#findExpectedFormat(com.fasterxml.jackson.annotation.JsonFormat.Value)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getConfig()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getTypeFactory()
	CALLEE: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#findOptionalStdSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean)
	CALLEE: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#buildMapEntrySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#buildEnumSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
CALLER: com.fasterxml.jackson.databind.ser.BeanSerializerFactory#findBeanSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.JavaType#isEnumType()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializerFactory#isPotentialBeanType(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializerFactory#constructBeanSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription)
CALLER: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#findSerializerByAddonType(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean)
	CALLEE: static com.fasterxml.jackson.databind.type.TypeFactory#unknownType()
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#findTypeParameters(com.fasterxml.jackson.databind.JavaType,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#getTypeFactory()
	CALLEE: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#buildIteratorSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#buildIterableSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.JavaType)
CALLER: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig#serializerModifiers()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#<init>(java.lang.Object[])
CALLER: com.fasterxml.jackson.databind.ser.std.StdSerializer#<init>(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.JsonSerializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
CALLER: com.fasterxml.jackson.databind.util.ClassUtil.EnumTypeLocator#<init>()
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil.EnumTypeLocator#locateField(java.lang.Class,java.lang.String,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#findConverter(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.DatabindContext#converterInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findSerializationConverter(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findSerializationConverter(com.fasterxml.jackson.databind.introspect.Annotated)
CALLER: com.fasterxml.jackson.databind.JavaType#_widen(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#_narrow(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#_narrow(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.MapType#_narrow(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#_narrow(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.type.MapType#widenKey(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.MapType#<init>(java.lang.Class,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.JavaType#widenBy(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.type.ArrayType#widenContentsBy(java.lang.Class)
	CALLEE: static com.fasterxml.jackson.databind.type.ArrayType#construct(com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.JavaType#widenBy(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.type.MapType#widenContentsBy(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.MapType#<init>(java.lang.Class,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.JavaType#widenBy(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.type.CollectionType#widenContentsBy(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#<init>(java.lang.Class,com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.JavaType#widenBy(java.lang.Class)
CALLER: static com.fasterxml.jackson.databind.ser.std.SerializableSerializer#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#<init>()
CALLER: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#<init>(java.lang.reflect.Method,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#<init>(java.lang.Class,boolean)
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findSerializationTyping(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#_findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
CALLER: static com.fasterxml.jackson.databind.annotation.JsonSerialize.Typing#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.annotation.JsonSerialize.Typing#<init>(java.lang.String,int)
CALLER: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#_findContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider#serializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findContentSerializer(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findContentSerializer(com.fasterxml.jackson.databind.introspect.Annotated)
CALLER: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#_findKeySerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider#serializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findKeySerializer(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findKeySerializer(com.fasterxml.jackson.databind.introspect.Annotated)
CALLER: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#buildMapSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#iterator()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#next()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#hasNext()
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findPropertiesToIgnore(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findPropertiesToIgnore(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#getClassInfo()
	CALLEE: com.fasterxml.jackson.databind.SerializationConfig#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializerFactory#customSerializers()
	CALLEE: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig#hasSerializerModifiers()
	CALLEE: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig#serializerModifiers()
	CALLEE: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#findFilterId(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: static com.fasterxml.jackson.databind.ser.std.MapSerializer#construct(java.lang.String[],com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#findSuppressableContentValue(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#withContentInclusion(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#buildCollectionSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.JavaType#isEnumType()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#iterator()
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#isJacksonStdImpl(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#next()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#hasNext()
	CALLEE: com.fasterxml.jackson.annotation.JsonFormat.Value#getShape()
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#findExpectedFormat(com.fasterxml.jackson.annotation.JsonFormat.Value)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializerFactory#customSerializers()
	CALLEE: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig#hasSerializerModifiers()
	CALLEE: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig#serializerModifiers()
	CALLEE: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#buildEnumSetSerializer(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#isIndexedList(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#buildIndexedListSerializer(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#buildCollectionSerializer(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)
CALLER: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#buildArraySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#iterator()
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#isJacksonStdImpl(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#next()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#hasNext()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializerFactory#customSerializers()
	CALLEE: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig#hasSerializerModifiers()
	CALLEE: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig#serializerModifiers()
	CALLEE: static com.fasterxml.jackson.databind.ser.std.StdArraySerializers#findStandardImpl(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#<init>(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)
CALLER: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig#serializers()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#<init>(java.lang.Object[])
CALLER: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#findOptionalStdSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getConfig()
	CALLEE: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory#findSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
CALLER: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#buildMapEntrySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#createTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdScalarSerializer#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdScalarSerializer#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdScalarSerializer#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdScalarSerializer#<init>(java.lang.Class)
CALLER: static com.fasterxml.jackson.databind.ser.BasicSerializerFactory.1#<clinit>()
	CALLEE: static com.fasterxml.jackson.annotation.JsonInclude.Include#values()
	CALLEE: static com.fasterxml.jackson.annotation.JsonFormat.Shape#values()
CALLER: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#buildEnumSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#iterator()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#next()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#hasNext()
	CALLEE: com.fasterxml.jackson.annotation.JsonFormat.Value#getShape()
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#findExpectedFormat(com.fasterxml.jackson.annotation.JsonFormat.Value)
	CALLEE: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig#hasSerializerModifiers()
	CALLEE: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig#serializerModifiers()
	CALLEE: static com.fasterxml.jackson.databind.ser.std.EnumSerializer#construct(java.lang.Class,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.annotation.JsonFormat.Value)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#removeProperty(java.lang.String)
CALLER: com.fasterxml.jackson.databind.ser.BeanSerializerFactory#isPotentialBeanType(java.lang.Class)
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#canBeABeanType(java.lang.Class)
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#isProxyType(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.ser.BeanSerializerFactory#constructBeanSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMember#fixAccess()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getType(com.fasterxml.jackson.databind.type.TypeBindings)
	CALLEE: com.fasterxml.jackson.databind.introspect.Annotated#getType(com.fasterxml.jackson.databind.type.TypeBindings)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#getType(com.fasterxml.jackson.databind.type.TypeBindings)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#isEnabled(com.fasterxml.jackson.databind.MapperFeature)
	CALLEE: com.fasterxml.jackson.databind.PropertyName#<init>(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#canOverrideAccessModifiers()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#iterator()
	CALLEE: com.fasterxml.jackson.databind.BeanProperty.Std#<init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.PropertyMetadata)
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#next()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#hasNext()
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#getClassAnnotations()
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#getClassInfo()
	CALLEE: com.fasterxml.jackson.databind.BeanDescription#getBeanClass()
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#bindingsForBeanType()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getName()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#getName()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#getName()
	CALLEE: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#createTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getUnknownTypeSerializer(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getConfig()
	CALLEE: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#findSerializerFromAnnotation(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig#hasSerializerModifiers()
	CALLEE: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig#serializerModifiers()
	CALLEE: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#findFilterId(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: static com.fasterxml.jackson.databind.ser.std.MapSerializer#construct(java.lang.String[],com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializerFactory#constructBeanSerializerBuilder(com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializerFactory#findBeanProperties(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findAndAddVirtualProperties(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.util.List)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializerFactory#filterBeanProperties(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializerFactory#constructObjectIdHandler(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,java.util.List)
	CALLEE: com.fasterxml.jackson.databind.ser.AnyGetterWriter#<init>(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializerFactory#processViews(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#getName()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder#setAnyGetter(com.fasterxml.jackson.databind.ser.AnyGetterWriter)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder#setFilterId(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder#setProperties(java.util.List)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder#setObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder#setConfig(com.fasterxml.jackson.databind.SerializationConfig)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder#createDummy()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder#build()
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findAndAddVirtualProperties(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.util.List)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#hasKnownClassAnnotations()
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#findAnyGetter()
CALLER: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#buildIteratorSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#createTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#<init>(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#buildIterableSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#createTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.ser.std.IterableSerializer#<init>(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findSerializationConverter(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#_findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#_classIfExplicit(java.lang.Class,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.ser.std.StdSerializer#<init>(java.lang.Class,boolean)
	CALLEE: com.fasterxml.jackson.databind.JsonSerializer#<init>()
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findContentSerializer(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findContentSerializer(com.fasterxml.jackson.databind.introspect.Annotated)
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findKeySerializer(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findKeySerializer(com.fasterxml.jackson.databind.introspect.Annotated)
CALLER: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#findFilterId(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#getClassInfo()
	CALLEE: com.fasterxml.jackson.databind.SerializationConfig#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findFilterId(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findFilterId(com.fasterxml.jackson.databind.introspect.Annotated)
CALLER: static com.fasterxml.jackson.databind.ser.std.MapSerializer#construct(java.lang.String[],com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.JavaType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.JavaType#getKeyType()
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#getKeyType()
	CALLEE: static com.fasterxml.jackson.databind.util.ArrayBuilders#arrayToSet(java.lang.Object[])
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#<init>(java.util.HashSet,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#withFilterId(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.JavaType#isFinal()
CALLER: static com.fasterxml.jackson.databind.ser.std.MapSerializer#<clinit>()
	CALLEE: static com.fasterxml.jackson.databind.type.TypeFactory#unknownType()
CALLER: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#findSuppressableContentValue(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#findSerializationInclusionForContent(com.fasterxml.jackson.annotation.JsonInclude.Include)
CALLER: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#buildEnumSetSerializer(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
CALLER: static com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#<init>()
CALLER: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#buildIndexedListSerializer(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#<init>(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer)
CALLER: static com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#<init>()
CALLER: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#buildCollectionSerializer(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#<init>(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer)
CALLER: static com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#<clinit>()
	CALLEE: static com.fasterxml.jackson.databind.type.TypeFactory#defaultInstance()
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#uncheckedSimpleType(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#<init>()
CALLER: static com.fasterxml.jackson.databind.ser.std.StdArraySerializers#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer#<init>()
CALLER: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#<init>(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ArraySerializerBase#<init>(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: static com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap#emptyForProperties()
CALLER: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory#findSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory#hasSupertypeStartingWith(java.lang.Class,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory#doesImplement(java.lang.Class,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory#instantiate(java.lang.String)
CALLER: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: static com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap#emptyForProperties()
	CALLEE: com.fasterxml.jackson.databind.ser.ContainerSerializer#<init>(com.fasterxml.jackson.databind.JavaType)
CALLER: static com.fasterxml.jackson.annotation.JsonInclude.Include#<clinit>()
	CALLEE: com.fasterxml.jackson.annotation.JsonInclude.Include#<init>(java.lang.String,int)
CALLER: static com.fasterxml.jackson.databind.ser.std.EnumSerializer#construct(java.lang.Class,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.annotation.JsonFormat.Value)
	CALLEE: static com.fasterxml.jackson.databind.util.EnumValues#constructFromName(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class)
	CALLEE: static com.fasterxml.jackson.databind.ser.std.EnumSerializer#_isShapeWrittenUsingIndex(java.lang.Class,com.fasterxml.jackson.annotation.JsonFormat.Value,boolean)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSerializer#<init>(com.fasterxml.jackson.databind.util.EnumValues,java.lang.Boolean)
CALLER: com.fasterxml.jackson.databind.ser.BeanSerializerFactory#constructBeanSerializerBuilder(com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder#<init>(com.fasterxml.jackson.databind.BeanDescription)
CALLER: com.fasterxml.jackson.databind.ser.BeanSerializerFactory#findBeanProperties(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#findReferenceType()
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector.ReferenceProperty#isBackReference()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMember#fixAccess()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getAccessor()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#isTypeId()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#isEnabled(com.fasterxml.jackson.databind.MapperFeature)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#canOverrideAccessModifiers()
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#findProperties()
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#bindingsForBeanType()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getConfig()
	CALLEE: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#usesStaticTyping(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializerFactory#removeIgnorableTypes(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializerFactory#removeSetterlessGetters(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializerFactory#constructPropertyBuilder(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializerFactory#_constructWriter(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.ser.PropertyBuilder,boolean,com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder#setTypeId(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findAndAddVirtualProperties(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.util.List)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#constructType(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#_findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#_constructVirtualProperty(com.fasterxml.jackson.databind.annotation.JsonAppend.Attr,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#_constructVirtualProperty(com.fasterxml.jackson.databind.annotation.JsonAppend.Prop,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass)
CALLER: com.fasterxml.jackson.databind.ser.BeanSerializerFactory#filterBeanProperties(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List)
	CALLEE: static com.fasterxml.jackson.databind.util.ArrayBuilders#arrayToSet(java.lang.Object[])
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findPropertiesToIgnore(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findPropertiesToIgnore(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#getClassInfo()
	CALLEE: com.fasterxml.jackson.databind.SerializationConfig#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#getName()
CALLER: com.fasterxml.jackson.databind.ser.BeanSerializerFactory#constructObjectIdHandler(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,java.util.List)
	CALLEE: com.fasterxml.jackson.databind.PropertyName#getSimpleName()
	CALLEE: com.fasterxml.jackson.databind.introspect.ObjectIdInfo#getPropertyName()
	CALLEE: com.fasterxml.jackson.databind.introspect.ObjectIdInfo#getGeneratorType()
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#findTypeParameters(com.fasterxml.jackson.databind.JavaType,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.DatabindContext#objectIdGeneratorInstance(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#getClassInfo()
	CALLEE: com.fasterxml.jackson.databind.BeanDescription#getBeanClass()
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#getObjectIdInfo()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getTypeFactory()
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator#<init>(com.fasterxml.jackson.databind.introspect.ObjectIdInfo,com.fasterxml.jackson.databind.ser.BeanPropertyWriter)
	CALLEE: static com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter#construct(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.annotation.ObjectIdGenerator,boolean)
	CALLEE: com.fasterxml.jackson.databind.DatabindContext#constructType(java.lang.reflect.Type)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#getName()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#getType()
	CALLEE: com.fasterxml.jackson.databind.introspect.ObjectIdInfo#getAlwaysAsId()
CALLER: com.fasterxml.jackson.databind.ser.BeanSerializerFactory#processViews(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#isEnabled(com.fasterxml.jackson.databind.MapperFeature)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializerFactory#constructFilteredBeanWriter(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,java.lang.Class[])
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder#setFilteredProperties(com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder#getProperties()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#getViews()
CALLER: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#<init>(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase#<init>(java.lang.Class,com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer)
CALLER: com.fasterxml.jackson.databind.ser.std.IterableSerializer#<init>(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase#<init>(java.lang.Class,com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer)
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findContentSerializer(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#_findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findKeySerializer(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#_findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findFilterId(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#_findFilterId(com.fasterxml.jackson.databind.introspect.Annotated)
CALLER: com.fasterxml.jackson.databind.ser.std.MapSerializer#<init>(java.util.HashSet,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: static com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap#emptyForProperties()
	CALLEE: com.fasterxml.jackson.databind.ser.ContainerSerializer#<init>(java.lang.Class,boolean)
CALLER: com.fasterxml.jackson.databind.ser.std.MapSerializer#withFilterId(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#_ensureOverride()
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#<init>(com.fasterxml.jackson.databind.ser.std.MapSerializer,java.lang.Object,boolean)
CALLER: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase#<init>(java.lang.Class,com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer)
CALLER: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#<init>(com.fasterxml.jackson.databind.JsonSerializer)
CALLER: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#<init>(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase#<init>(java.lang.Class,com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer)
CALLER: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#<init>(com.fasterxml.jackson.databind.JsonSerializer)
CALLER: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#<init>(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase#<init>(java.lang.Class,com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer)
CALLER: com.fasterxml.jackson.databind.type.TypeFactory#uncheckedSimpleType(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.ArraySerializerBase#<init>(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty)
CALLER: static com.fasterxml.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer#<clinit>()
	CALLEE: static com.fasterxml.jackson.databind.type.TypeFactory#defaultInstance()
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#uncheckedSimpleType(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.ArraySerializerBase#<init>(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#<init>(java.lang.Class)
CALLER: static com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#<clinit>()
	CALLEE: static com.fasterxml.jackson.databind.type.TypeFactory#defaultInstance()
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#uncheckedSimpleType(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.TypedPrimitiveArraySerializer#<init>(java.lang.Class)
CALLER: static com.fasterxml.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer#<clinit>()
	CALLEE: static com.fasterxml.jackson.databind.type.TypeFactory#defaultInstance()
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#uncheckedSimpleType(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.ArraySerializerBase#<init>(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty)
CALLER: static com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#<clinit>()
	CALLEE: static com.fasterxml.jackson.databind.type.TypeFactory#defaultInstance()
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#uncheckedSimpleType(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.TypedPrimitiveArraySerializer#<init>(java.lang.Class)
CALLER: static com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#<clinit>()
	CALLEE: static com.fasterxml.jackson.databind.type.TypeFactory#defaultInstance()
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#uncheckedSimpleType(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.TypedPrimitiveArraySerializer#<init>(java.lang.Class)
CALLER: static com.fasterxml.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer#<clinit>()
	CALLEE: static com.fasterxml.jackson.databind.type.TypeFactory#defaultInstance()
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#uncheckedSimpleType(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.ArraySerializerBase#<init>(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.ser.std.ArraySerializerBase#<init>(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.ContainerSerializer#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.ser.ContainerSerializer#<init>(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#<init>(com.fasterxml.jackson.databind.JavaType)
CALLER: static com.fasterxml.jackson.databind.util.EnumValues#constructFromName(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findEnumValue(java.lang.Enum)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#compileString(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.SerializationConfig#getAnnotationIntrospector()
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#findEnumType(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.util.EnumValues#<init>(java.lang.Class,java.util.Map)
CALLER: static com.fasterxml.jackson.databind.ser.std.EnumSerializer#_isShapeWrittenUsingIndex(java.lang.Class,com.fasterxml.jackson.annotation.JsonFormat.Value,boolean)
	CALLEE: com.fasterxml.jackson.annotation.JsonFormat.Value#getShape()
	CALLEE: com.fasterxml.jackson.annotation.JsonFormat.Shape#isNumeric()
CALLER: com.fasterxml.jackson.databind.ser.std.EnumSerializer#<init>(com.fasterxml.jackson.databind.util.EnumValues,java.lang.Boolean)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdScalarSerializer#<init>(java.lang.Class,boolean)
	CALLEE: com.fasterxml.jackson.databind.util.EnumValues#getEnumClass()
CALLER: com.fasterxml.jackson.databind.ser.BeanSerializerFactory#removeIgnorableTypes(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#introspectClassAnnotations(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#isIgnorableType(com.fasterxml.jackson.databind.introspect.AnnotatedClass)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#isIgnorableType(com.fasterxml.jackson.databind.introspect.AnnotatedClass)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#getClassInfo()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getRawType()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#getRawType()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getAccessor()
	CALLEE: com.fasterxml.jackson.databind.SerializationConfig#getAnnotationIntrospector()
CALLER: com.fasterxml.jackson.databind.ser.BeanSerializerFactory#removeSetterlessGetters(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#couldDeserialize()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#isExplicitlyIncluded()
CALLER: com.fasterxml.jackson.databind.ser.BeanSerializerFactory#constructPropertyBuilder(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.ser.PropertyBuilder#<init>(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription)
CALLER: com.fasterxml.jackson.databind.ser.BeanSerializerFactory#_constructWriter(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.ser.PropertyBuilder,boolean,com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.JavaType#isMapLikeType()
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#isMapLikeType()
	CALLEE: com.fasterxml.jackson.databind.JavaType#isCollectionLikeType()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#isCollectionLikeType()
	CALLEE: com.fasterxml.jackson.databind.DatabindContext#canOverrideAccessModifiers()
	CALLEE: com.fasterxml.jackson.databind.BeanProperty.Std#<init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.PropertyMetadata)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getFullName()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getMetadata()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getWrapperName()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMember#fixAccess()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getConfig()
	CALLEE: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#findSerializerFromAnnotation(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#handlePrimaryContextualization(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#isCollectionMapOrArray(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializerFactory#findPropertyContentTypeSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializerFactory#findPropertyTypeSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getType(com.fasterxml.jackson.databind.type.TypeBindings)
	CALLEE: com.fasterxml.jackson.databind.ser.PropertyBuilder#buildWriter(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.introspect.AnnotatedMember,boolean)
	CALLEE: com.fasterxml.jackson.databind.ser.PropertyBuilder#getClassAnnotations()
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#resolve(com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.introspect.Annotated#getType(com.fasterxml.jackson.databind.type.TypeBindings)
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#_constructVirtualProperty(com.fasterxml.jackson.databind.annotation.JsonAppend.Attr,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.PropertyName#<init>(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: static com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition#construct(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.PropertyMetadata,com.fasterxml.jackson.annotation.JsonInclude.Include)
	CALLEE: com.fasterxml.jackson.databind.PropertyName#hasSimpleName()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#getAnnotations()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#getRawType()
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#_propertyName(java.lang.String,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.introspect.VirtualAnnotatedMember#<init>(com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.lang.Class,java.lang.String,java.lang.Class)
	CALLEE: static com.fasterxml.jackson.databind.ser.impl.AttributePropertyWriter#construct(java.lang.String,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.JavaType)
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#_constructVirtualProperty(com.fasterxml.jackson.databind.annotation.JsonAppend.Prop,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass)
	CALLEE: com.fasterxml.jackson.databind.PropertyName#getSimpleName()
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#constructType(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#getHandlerInstantiator()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#canOverrideAccessModifiers()
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#createInstance(java.lang.Class,boolean)
	CALLEE: static com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition#construct(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.PropertyMetadata,com.fasterxml.jackson.annotation.JsonInclude.Include)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#getRawType()
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#_propertyName(java.lang.String,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.introspect.VirtualAnnotatedMember#<init>(com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.lang.Class,java.lang.String,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator#<init>(com.fasterxml.jackson.databind.introspect.ObjectIdInfo,com.fasterxml.jackson.databind.ser.BeanPropertyWriter)
	CALLEE: com.fasterxml.jackson.databind.introspect.ObjectIdInfo#getScope()
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator#<init>(java.lang.Class,com.fasterxml.jackson.databind.ser.BeanPropertyWriter)
CALLER: static com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter#construct(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.annotation.ObjectIdGenerator,boolean)
	CALLEE: com.fasterxml.jackson.databind.PropertyName#getSimpleName()
	CALLEE: static com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter#construct(com.fasterxml.jackson.databind.JavaType,java.lang.String,com.fasterxml.jackson.annotation.ObjectIdGenerator,boolean)
CALLER: com.fasterxml.jackson.databind.DatabindContext#constructType(java.lang.reflect.Type)
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#constructType(java.lang.reflect.Type)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getTypeFactory()
CALLER: com.fasterxml.jackson.databind.ser.BeanSerializerFactory#constructFilteredBeanWriter(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,java.lang.Class[])
	CALLEE: static com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter#constructViewBased(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,java.lang.Class[])
CALLER: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase#<init>(java.lang.Class,com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: static com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap#emptyForProperties()
	CALLEE: com.fasterxml.jackson.databind.ser.ContainerSerializer#<init>(java.lang.Class,boolean)
	CALLEE: com.fasterxml.jackson.databind.JavaType#isFinal()
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#_findFilterId(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#_findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.ser.ContainerSerializer#<init>(java.lang.Class,boolean)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#<init>(java.lang.Class,boolean)
CALLER: com.fasterxml.jackson.databind.ser.std.MapSerializer#<init>(com.fasterxml.jackson.databind.ser.std.MapSerializer,java.lang.Object,boolean)
	CALLEE: com.fasterxml.jackson.databind.ser.ContainerSerializer#<init>(java.lang.Class,boolean)
CALLER: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#<init>(com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#<init>(com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.TypedPrimitiveArraySerializer#<init>(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ArraySerializerBase#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.ser.ContainerSerializer#<init>(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#<init>(java.lang.Class)
CALLER: static com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Empty#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Empty#<init>(boolean)
CALLER: com.fasterxml.jackson.databind.ser.PropertyBuilder#<init>(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription)
	CALLEE: com.fasterxml.jackson.databind.SerializationConfig#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.SerializationConfig#getSerializationInclusion()
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#findSerializationInclusion(com.fasterxml.jackson.annotation.JsonInclude.Include)
CALLER: com.fasterxml.jackson.databind.SerializerProvider#handlePrimaryContextualization(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.LongSerializer#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntLikeSerializer#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.ShortSerializer#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.FloatSerializer#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSerializer#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.ser.BeanSerializerFactory#findPropertyContentTypeSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfigBase#getSubtypeResolver()
	CALLEE: com.fasterxml.jackson.databind.JavaType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver#collectAndResolveSubtypes(com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findPropertyContentTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findPropertyContentTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#createTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.SerializationConfig#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder#buildTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection)
CALLER: com.fasterxml.jackson.databind.ser.BeanSerializerFactory#findPropertyTypeSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfigBase#getSubtypeResolver()
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver#collectAndResolveSubtypes(com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findPropertyTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findPropertyTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#createTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.SerializationConfig#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder#buildTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection)
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#_propertyName(java.lang.String,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.PropertyName#<init>(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.PropertyName#<init>(java.lang.String,java.lang.String)
CALLER: com.fasterxml.jackson.databind.introspect.VirtualAnnotatedMember#<init>(com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.lang.Class,java.lang.String,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMember#<init>(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.introspect.AnnotationMap)
CALLER: static com.fasterxml.jackson.databind.ser.impl.AttributePropertyWriter#construct(java.lang.String,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.AttributePropertyWriter#<init>(java.lang.String,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.JavaType)
CALLER: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator#<init>(java.lang.Class,com.fasterxml.jackson.databind.ser.BeanPropertyWriter)
	CALLEE: com.fasterxml.jackson.annotation.ObjectIdGenerators.PropertyGenerator#<init>(java.lang.Class)
CALLER: static com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter#construct(com.fasterxml.jackson.databind.JavaType,java.lang.String,com.fasterxml.jackson.annotation.ObjectIdGenerator,boolean)
	CALLEE: com.fasterxml.jackson.core.io.SerializedString#<init>(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.SerializableString,com.fasterxml.jackson.annotation.ObjectIdGenerator,com.fasterxml.jackson.databind.JsonSerializer,boolean)
CALLER: static com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter#constructViewBased(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,java.lang.Class[])
	CALLEE: com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter.SingleView#<init>(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter.MultiView#<init>(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,java.lang.Class[])
CALLER: com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase#<init>(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#<init>(java.lang.Class,boolean)
CALLER: com.fasterxml.jackson.databind.ser.std.ArraySerializerBase#<init>(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.ContainerSerializer#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Empty#<init>(boolean)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap#<init>(boolean)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder#buildTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder#idResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection,boolean,boolean)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#<init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer#<init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#<init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#<init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer#<init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty,java.lang.String)
CALLER: com.fasterxml.jackson.databind.ser.impl.AttributePropertyWriter#<init>(java.lang.String,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition#findInclusion()
	CALLEE: com.fasterxml.jackson.databind.ser.impl.AttributePropertyWriter#<init>(java.lang.String,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.annotation.JsonInclude.Include)
CALLER: com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter.SingleView#<init>(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#<init>(com.fasterxml.jackson.databind.ser.BeanPropertyWriter)
CALLER: com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter.MultiView#<init>(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,java.lang.Class[])
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#<init>(com.fasterxml.jackson.databind.ser.BeanPropertyWriter)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#<init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase#<init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer#<init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#<init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#<init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase#<init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#<init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase#<init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer#<init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer#<init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty,java.lang.String)
CALLER: com.fasterxml.jackson.databind.ser.impl.AttributePropertyWriter#<init>(java.lang.String,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.annotation.JsonInclude.Include)
	CALLEE: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter#<init>(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.annotation.JsonInclude.Include)
CALLER: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#<init>(com.fasterxml.jackson.databind.ser.BeanPropertyWriter)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#<init>(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,com.fasterxml.jackson.core.io.SerializedString)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase#<init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.TypeSerializer#<init>()
CALLER: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter#<init>(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.annotation.JsonInclude.Include)
	CALLEE: com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition#getPrimaryMember()
	CALLEE: static com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter#_suppressNulls(com.fasterxml.jackson.annotation.JsonInclude.Include)
	CALLEE: static com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter#_suppressableValue(com.fasterxml.jackson.annotation.JsonInclude.Include)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#<init>(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JavaType,boolean,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#<init>(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,com.fasterxml.jackson.core.io.SerializedString)
	CALLEE: com.fasterxml.jackson.databind.ser.PropertyWriter#<init>()
CALLER: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#<init>(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JavaType,boolean,java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.io.SerializedString#<init>(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition#getMetadata()
	CALLEE: com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition#getWrapperName()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getName()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#findViews()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getMetadata()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getWrapperName()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#getMember()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getMember()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#getMember()
	CALLEE: static com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap#emptyForProperties()
	CALLEE: com.fasterxml.jackson.databind.ser.PropertyWriter#<init>()
	CALLEE: com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition#getName()
	CALLEE: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition#findViews()
	CALLEE: com.fasterxml.jackson.databind.introspect.VirtualAnnotatedMember#getMember()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#getMember()
CALLER: com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition#getName()
	CALLEE: com.fasterxml.jackson.databind.PropertyName#getSimpleName()
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.4#withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.4#withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.5#withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.5#withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.6#withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.6#withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.7#withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.7#withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
CALLER: com.fasterxml.jackson.databind.SerializerProvider#getConfig()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getConfig()
CALLER: org.glassfish.jersey.server.model.MethodList.3#keep(org.glassfish.jersey.server.model.AnnotatedMethod)
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#getMethod()
CALLER: com.fasterxml.jackson.databind.SerializationConfig#introspectClassAnnotations(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#getClassIntrospector()
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicClassIntrospector#forClassAnnotations(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver)
CALLER: org.glassfish.jersey.server.spi.internal.ParameterValueHelper.1#compare(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.server.spi.internal.ParameterValueHelper.1#compare(org.glassfish.jersey.server.spi.internal.ValueFactoryProvider,org.glassfish.jersey.server.spi.internal.ValueFactoryProvider)
CALLER: com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#equals(java.lang.Object)
CALLER: org.glassfish.jersey.message.internal.AcceptableMediaType#equals(java.lang.Object)
	CALLEE: javax.ws.rs.core.MediaType#equals(java.lang.Object)
CALLER: org.glassfish.jersey.message.internal.QualitySourceMediaType#equals(java.lang.Object)
	CALLEE: javax.ws.rs.core.MediaType#equals(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.impl.PropertyValue.Regular#assign(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.MethodProperty#set(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.FieldProperty#set(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty#set(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.SetterlessProperty#set(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.InnerClassProperty#set(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty#set(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty#set(java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#set(java.lang.Object,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.deser.impl.PropertyValue.Any#assign(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.deser.SettableAnyProperty#set(java.lang.Object,java.lang.String,java.lang.Object)
CALLER: org.glassfish.jersey.server.model.ResourceMethod.Builder#nameBindings(java.util.Collection)
	CALLEE: jersey.repackaged.com.google.common.collect.Collections2.TransformedCollection#iterator()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#getGenericType()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#getRawType()
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getConstructorParameters()
	CALLEE: static com.fasterxml.jackson.databind.util.EmptyIterator#instance()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.MemberIterator#<init>(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked)
CALLER: org.glassfish.jersey.server.model.Invocable#accept(org.glassfish.jersey.server.model.ResourceModelVisitor)
	CALLEE: org.glassfish.jersey.server.model.AbstractResourceModelVisitor#visitInvocable(org.glassfish.jersey.server.model.Invocable)
	CALLEE: org.glassfish.jersey.server.model.InvocableValidator#visitInvocable(org.glassfish.jersey.server.model.Invocable)
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getType(com.fasterxml.jackson.databind.type.TypeBindings)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedWithParams#getType(com.fasterxml.jackson.databind.type.TypeBindings,java.lang.reflect.TypeVariable[])
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#getRawType()
	CALLEE: static com.fasterxml.jackson.databind.type.TypeFactory#defaultInstance()
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#constructType(java.lang.reflect.Type)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#getAnnotation(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotationMap#get(java.lang.Class)
CALLER: org.glassfish.jersey.server.model.MethodList#nameStartsWith(java.lang.String)
	CALLEE: org.glassfish.jersey.server.model.MethodList#filter(org.glassfish.jersey.server.model.MethodList.Filter)
	CALLEE: org.glassfish.jersey.server.model.MethodList.4#<init>(org.glassfish.jersey.server.model.MethodList,java.lang.String)
CALLER: com.fasterxml.jackson.core.JsonLocation#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.JsonLocation#getByteOffset()
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.ConsumesProducesAcceptor#equals(java.lang.Object)
	CALLEE: org.traccar.database.GroupTree.TreeNode#equals(java.lang.Object)
	CALLEE: org.glassfish.jersey.model.internal.CommonConfig.FeatureRegistration#equals(java.lang.Object)
	CALLEE: org.apache.log4j.CategoryKey#equals(java.lang.Object)
	CALLEE: org.slf4j.helpers.SubstituteLogger#equals(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.Errors.ErrorMessage#equals(java.lang.Object)
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#equals(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.OsgiRegistry.BundleSpiProvidersLoader#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.ClassKey#equals(java.lang.Object)
	CALLEE: javax.ws.rs.core.MediaType#equals(java.lang.Object)
	CALLEE: jersey.repackaged.com.google.common.base.Predicates.AndPredicate#equals(java.lang.Object)
	CALLEE: org.glassfish.hk2.api.AnnotationLiteral#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#equals(java.lang.Object)
	CALLEE: org.glassfish.hk2.utilities.reflection.ParameterizedTypeImpl#equals(java.lang.Object)
	CALLEE: liquibase.changelog.RanChangeSet#equals(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.model.ResourceModelIssue#equals(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.model.Parameter#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.jsontype.NamedType#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.NullNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.MemberKey#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.ObjectNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.ArrayNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.POJONode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.BooleanNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.TextNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.BinaryNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.IntNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.LongNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.BigIntegerNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.DoubleNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.node.DecimalNode#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.annotation.ObjectIdGenerator.IdKey#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.PropertyName#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.io.SerializedString#equals(java.lang.Object)
	CALLEE: org.glassfish.jersey.message.internal.AcceptableMediaType#equals(java.lang.Object)
	CALLEE: org.glassfish.jersey.message.internal.QualitySourceMediaType#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.JsonLocation#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#equals(java.lang.Object)
CALLER: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#nextToken()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#nextToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#switchToNext()
CALLER: com.fasterxml.jackson.core.util.JsonParserDelegate#getDoubleValue()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getDoubleValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getDoubleValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getDoubleValue()
CALLER: com.fasterxml.jackson.core.util.JsonParserDelegate#getDecimalValue()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getDecimalValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getDecimalValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getDecimalValue()
CALLER: com.fasterxml.jackson.core.util.JsonParserDelegate#getNumberValue()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getNumberValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getNumberValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getNumberValue()
CALLER: com.fasterxml.jackson.core.util.JsonParserDelegate#getBigIntegerValue()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getBigIntegerValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getBigIntegerValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getBigIntegerValue()
CALLER: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getText()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getText()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getText()
CALLER: com.fasterxml.jackson.core.util.JsonParserDelegate#getEmbeddedObject()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getEmbeddedObject()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getEmbeddedObject()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getEmbeddedObject()
CALLER: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentTokenId()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentTokenId()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentTokenId()
CALLER: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
CALLER: com.fasterxml.jackson.core.util.JsonParserDelegate#getValueAsString()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getValueAsString()
	CALLEE: com.fasterxml.jackson.core.JsonParser#getValueAsString()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getValueAsString()
CALLER: com.fasterxml.jackson.core.util.JsonParserDelegate#skipChildren()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#skipChildren()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#skipChildren()
CALLER: com.fasterxml.jackson.core.util.JsonParserDelegate#setCurrentValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#setCurrentValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.JsonParser#setCurrentValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#setCurrentValue(java.lang.Object)
CALLER: com.fasterxml.jackson.core.util.JsonParserDelegate#isExpectedStartArrayToken()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#isExpectedStartArrayToken()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#isExpectedStartArrayToken()
CALLER: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentName()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getCurrentName()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getCurrentName()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentName()
CALLER: com.fasterxml.jackson.core.util.JsonParserDelegate#getByteValue()
	CALLEE: com.fasterxml.jackson.core.JsonParser#getByteValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getByteValue()
CALLER: com.fasterxml.jackson.core.util.JsonParserDelegate#getBinaryValue(com.fasterxml.jackson.core.Base64Variant)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getBinaryValue(com.fasterxml.jackson.core.Base64Variant)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getBinaryValue(com.fasterxml.jackson.core.Base64Variant)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getBinaryValue(com.fasterxml.jackson.core.Base64Variant)
CALLER: com.fasterxml.jackson.core.util.JsonParserDelegate#getTextLength()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getTextLength()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getTextLength()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getTextLength()
CALLER: com.fasterxml.jackson.core.util.JsonParserDelegate#getTextOffset()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getTextOffset()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getTextOffset()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getTextOffset()
CALLER: com.fasterxml.jackson.core.util.JsonParserDelegate#getTextCharacters()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getTextCharacters()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getTextCharacters()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getTextCharacters()
CALLER: com.fasterxml.jackson.core.util.JsonParserDelegate#getObjectId()
	CALLEE: com.fasterxml.jackson.core.JsonParser#getObjectId()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getObjectId()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getObjectId()
CALLER: com.fasterxml.jackson.core.util.JsonParserDelegate#canReadObjectId()
	CALLEE: com.fasterxml.jackson.core.JsonParser#canReadObjectId()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#canReadObjectId()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#canReadObjectId()
CALLER: com.fasterxml.jackson.core.util.JsonParserDelegate#getIntValue()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getIntValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getIntValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getIntValue()
CALLER: com.fasterxml.jackson.core.util.JsonParserDelegate#nextValue()
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#nextValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#nextValue()
CALLER: com.fasterxml.jackson.core.util.JsonParserDelegate#getLongValue()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getLongValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getLongValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getLongValue()
CALLER: com.fasterxml.jackson.core.util.JsonParserDelegate#getNumberType()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getNumberType()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getNumberType()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getNumberType()
CALLER: com.fasterxml.jackson.core.util.JsonParserDelegate#getFloatValue()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getFloatValue()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getFloatValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getFloatValue()
CALLER: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentLocation()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getCurrentLocation()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getCurrentLocation()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentLocation()
CALLER: com.fasterxml.jackson.core.util.JsonParserDelegate#getShortValue()
	CALLEE: com.fasterxml.jackson.core.JsonParser#getShortValue()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getShortValue()
CALLER: com.fasterxml.jackson.core.util.JsonParserDelegate#getTokenLocation()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getTokenLocation()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getTokenLocation()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getTokenLocation()
CALLER: com.fasterxml.jackson.core.util.JsonParserDelegate#getValueAsString(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getValueAsString(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getValueAsString(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getValueAsString(java.lang.String)
CALLER: com.fasterxml.jackson.core.util.JsonParserDelegate#readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream)
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream)
CALLER: com.fasterxml.jackson.core.util.JsonParserDelegate#getParsingContext()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#getParsingContext()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getParsingContext()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getParsingContext()
CALLER: com.fasterxml.jackson.core.util.JsonParserDelegate#getTypeId()
	CALLEE: com.fasterxml.jackson.core.JsonParser#getTypeId()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getTypeId()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getTypeId()
CALLER: com.fasterxml.jackson.core.util.JsonParserDelegate#canReadTypeId()
	CALLEE: com.fasterxml.jackson.core.JsonParser#canReadTypeId()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#canReadTypeId()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#canReadTypeId()
CALLER: com.fasterxml.jackson.core.util.JsonParserDelegate#getCodec()
	CALLEE: com.fasterxml.jackson.core.json.ReaderBasedJsonParser#getCodec()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#getCodec()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCodec()
CALLER: com.fasterxml.jackson.core.util.JsonParserDelegate#hasTextCharacters()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#hasTextCharacters()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#hasTextCharacters()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#hasTextCharacters()
CALLER: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap#typedValueSerializer(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey#<init>(java.lang.Class,boolean)
	CALLEE: com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey#resetTyped(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.JsonSerializerMap#find(com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey)
CALLER: com.fasterxml.jackson.core.util.JsonParserSequence#addFlattenedActiveParsers(java.util.List)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#addFlattenedActiveParsers(java.util.List)
CALLER: com.fasterxml.jackson.databind.ser.std.NullSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeNull()
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.ser.std.MapSerializer#withContentInclusion(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#_ensureOverride()
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#<init>(com.fasterxml.jackson.databind.ser.std.MapSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedField#withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#<init>(com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.lang.reflect.Field,com.fasterxml.jackson.databind.introspect.AnnotationMap)
CALLER: com.fasterxml.jackson.databind.ser.PropertyBuilder#buildWriter(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.introspect.AnnotatedMember,boolean)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.JavaType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#getClassAnnotations()
	CALLEE: com.fasterxml.jackson.databind.BeanDescription#getType()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getName()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#findInclusion()
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findUnwrappingNameTransformer(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findUnwrappingNameTransformer(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#withContentTypeHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.MapType#withContentTypeHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#withContentTypeHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#withContentTypeHandler(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.SerializationConfig#isEnabled(com.fasterxml.jackson.databind.SerializationFeature)
	CALLEE: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider#serializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#<init>(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JavaType,boolean,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.PropertyBuilder#findSerializationType(com.fasterxml.jackson.databind.introspect.Annotated,boolean,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.ser.PropertyBuilder#getDefaultValue(java.lang.String,com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: static com.fasterxml.jackson.databind.util.ArrayBuilders#getArrayComparator(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findNullSerializer(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findNullSerializer(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#assignNullSerializer(com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#unwrappingWriter(com.fasterxml.jackson.databind.util.NameTransformer)
CALLER: com.fasterxml.jackson.databind.ser.PropertyBuilder#getClassAnnotations()
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#getClassAnnotations()
CALLER: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap#untypedValueSerializer(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey#<init>(java.lang.Class,boolean)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.JsonSerializerMap#find(com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey)
	CALLEE: com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey#resetUntyped(java.lang.Class)
CALLER: com.fasterxml.jackson.core.util.JsonParserSequence#close()
	CALLEE: com.fasterxml.jackson.core.base.ParserBase#close()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer.Parser#close()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#close()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserSequence#switchToNext()
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findSerializer(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#_findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#getRawType()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getRawType()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#getRawType()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#getRawType()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#getRawType()
	CALLEE: com.fasterxml.jackson.databind.ser.std.RawSerializer#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#resolve(com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#resolve(com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#resolve(com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getTypeFactory()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#findValueSerializer(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#withDelegate(com.fasterxml.jackson.databind.util.Converter,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer)
CALLER: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder#createDummy()
	CALLEE: com.fasterxml.jackson.databind.BeanDescription#getType()
	CALLEE: static com.fasterxml.jackson.databind.ser.BeanSerializer#createDummy(com.fasterxml.jackson.databind.JavaType)
CALLER: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder#build()
	CALLEE: com.fasterxml.jackson.databind.BeanDescription#getType()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder,com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])
CALLER: com.fasterxml.jackson.databind.util.ClassUtil.EnumTypeLocator#enumTypeFor(java.util.EnumSet)
	CALLEE: com.fasterxml.jackson.databind.util.ClassUtil.EnumTypeLocator#get(java.lang.Object,java.lang.reflect.Field)
CALLER: com.fasterxml.jackson.databind.util.ClassUtil.EnumTypeLocator#enumTypeFor(java.util.EnumMap)
	CALLEE: com.fasterxml.jackson.databind.util.ClassUtil.EnumTypeLocator#get(java.lang.Object,java.lang.reflect.Field)
CALLER: org.glassfish.jersey.server.model.Parameter#isAnnotationPresent(java.lang.Class)
	CALLEE: org.glassfish.jersey.server.model.Parameter#getAnnotation(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.Base#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.BeanProperty.Std#getMember()
	CALLEE: com.fasterxml.jackson.databind.util.StdDateFormat#setTimeZone(java.util.TimeZone)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#getMember()
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findFormat(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findFormat(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.annotation.JsonFormat.Value#getTimeZone()
	CALLEE: com.fasterxml.jackson.annotation.JsonFormat.Value#hasPattern()
	CALLEE: com.fasterxml.jackson.annotation.JsonFormat.Value#getPattern()
	CALLEE: com.fasterxml.jackson.annotation.JsonFormat.Value#hasLocale()
	CALLEE: com.fasterxml.jackson.annotation.JsonFormat.Value#getLocale()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#getDateFormat()
	CALLEE: com.fasterxml.jackson.annotation.JsonFormat.Value#getShape()
	CALLEE: com.fasterxml.jackson.databind.util.StdDateFormat#clone()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getConfig()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.annotation.JsonFormat.Shape#isNumeric()
	CALLEE: com.fasterxml.jackson.databind.ser.std.CalendarSerializer#withFormat(java.lang.Boolean,java.text.DateFormat)
	CALLEE: com.fasterxml.jackson.databind.ser.std.DateSerializer#withFormat(java.lang.Boolean,java.text.DateFormat)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getLocale()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getTimeZone()
	CALLEE: static com.fasterxml.jackson.databind.util.StdDateFormat#getISO8601Format(java.util.TimeZone,java.util.Locale)
CALLER: com.fasterxml.jackson.databind.ser.std.NumberSerializers.LongSerializer#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.Base#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntLikeSerializer#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.Base#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.ser.std.NumberSerializers.ShortSerializer#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.Base#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.ser.std.NumberSerializers.FloatSerializer#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.Base#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.Base#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.SerializationConfig#introspect(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#getClassIntrospector()
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicClassIntrospector#forSerialization(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver)
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findSerializationType(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#_findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#_classIfExplicit(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findSerializationContentType(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#_findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#_classIfExplicit(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findSerializationKeyType(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#_findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#_classIfExplicit(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.Linked#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#toString()
CALLER: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#skipChildren()
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#skipChildren()
CALLER: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.DatabindContext#isEnabled(com.fasterxml.jackson.databind.MapperFeature)
	CALLEE: com.fasterxml.jackson.databind.DatabindContext#constructType(java.lang.reflect.Type)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#handlePrimaryContextualization(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#findPrimaryPropertySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#isNaturalTypeWithStdHandling(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer,boolean)
CALLER: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.BeanProperty.Std#getMember()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider#serializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findContentSerializer(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findContentSerializer(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#findConvertingContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.ContainerSerializer#hasContentTypeAnnotation(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#findValueSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#getMember()
CALLER: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.BeanProperty.Std#getMember()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider#serializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findContentSerializer(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findKeySerializer(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findContentSerializer(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findKeySerializer(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#findConvertingContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.ContainerSerializer#hasContentTypeAnnotation(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#findValueSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#findKeySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#getMember()
CALLER: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.BeanProperty.Std#getMember()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider#serializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findContentSerializer(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findContentSerializer(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#findConvertingContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.ContainerSerializer#hasContentTypeAnnotation(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#findValueSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.IterableSerializer#withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#getMember()
CALLER: com.fasterxml.jackson.databind.ser.std.MapSerializer#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.BeanProperty.Std#getMember()
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findFilterId(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#withFilterId(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#withContentInclusion(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findFilterId(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.util.HashSet,boolean)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#getMember()
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findPropertiesToIgnore(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findPropertiesToIgnore(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findSerializationSortAlphabetically(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findSerializationSortAlphabetically(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider#serializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findContentSerializer(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findKeySerializer(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findContentSerializer(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findKeySerializer(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#findConvertingContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.ContainerSerializer#hasContentTypeAnnotation(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#findValueSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#findKeySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findSerializationInclusionForContent(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.annotation.JsonInclude.Include)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findSerializationInclusionForContent(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.annotation.JsonInclude.Include)
CALLER: com.fasterxml.jackson.databind.ser.std.EnumSerializer#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findFormat(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findFormat(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.BeanProperty.Std#getMember()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getAnnotationIntrospector()
	CALLEE: static com.fasterxml.jackson.databind.ser.std.EnumSerializer#_isShapeWrittenUsingIndex(java.lang.Class,com.fasterxml.jackson.annotation.JsonFormat.Value,boolean)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSerializer#<init>(com.fasterxml.jackson.databind.util.EnumValues,java.lang.Boolean)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#getType()
	CALLEE: com.fasterxml.jackson.databind.BeanProperty.Std#getType()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#getMember()
CALLER: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.BeanProperty.Std#getMember()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#findValueSerializer(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider#serializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findContentSerializer(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findContentSerializer(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#findConvertingContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#isDefaultSerializer(com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#<init>(com.fasterxml.jackson.databind.ser.impl.StringArraySerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#getMember()
CALLER: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.BeanProperty.Std#getMember()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#findValueSerializer(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider#serializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findContentSerializer(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#<init>(com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findContentSerializer(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#findConvertingContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#isDefaultSerializer(com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#getMember()
CALLER: com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer#deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
	CALLEE: com.fasterxml.jackson.core.base.ParserMinimalBase#getCurrentToken()
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer#deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer#deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer#deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
	CALLEE: com.fasterxml.jackson.core.util.JsonParserDelegate#getCurrentToken()
CALLER: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.BeanProperty.Std#getMember()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#findValueSerializer(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider#serializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findContentSerializer(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#<init>(com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findContentSerializer(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#findConvertingContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#isDefaultSerializer(com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#getMember()
CALLER: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#getName()
CALLER: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#getName()
	CALLEE: com.fasterxml.jackson.core.io.SerializedString#getValue()
CALLER: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeStartObject()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeEndObject()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#isEnabled(com.fasterxml.jackson.databind.SerializationFeature)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#failForEmpty(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.ser.std.StringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StringSerializer#serialize(java.lang.String,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.BooleanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BooleanSerializer#serialize(java.lang.Boolean,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.NumberSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializer#serialize(java.lang.Number,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.core.JsonLocation#toString()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeString(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.MemberKey#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#toString()
	CALLEE: com.fasterxml.jackson.databind.node.BinaryNode#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#toString()
	CALLEE: com.fasterxml.jackson.core.io.SerializedString#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey#toString()
	CALLEE: org.glassfish.jersey.server.model.Invocable#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#toString()
	CALLEE: org.glassfish.jersey.server.model.MethodHandler.ClassBasedMethodHandler#toString()
	CALLEE: org.glassfish.jersey.server.model.MethodHandler.InstanceBasedMethodHandler#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#toString()
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodRouting#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#toString()
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.ConsumesProducesAcceptor#toString()
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#toString()
	CALLEE: org.eclipse.jetty.webapp.WebAppContext#toString()
	CALLEE: org.eclipse.jetty.server.handler.HandlerCollection#toString()
	CALLEE: org.eclipse.jetty.server.Server#toString()
	CALLEE: org.eclipse.jetty.server.AbstractNetworkConnector#toString()
	CALLEE: org.eclipse.jetty.util.thread.QueuedThreadPool#toString()
	CALLEE: org.eclipse.jetty.server.AbstractConnectionFactory#toString()
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle.Bean#toString()
	CALLEE: org.apache.log4j.NameValue#toString()
	CALLEE: liquibase.changelog.ChangeLogParameters.ChangeLogParameter#toString()
	CALLEE: org.eclipse.jetty.server.AbstractConnector.Acceptor#toString()
	CALLEE: org.eclipse.jetty.server.HttpConfiguration#toString()
	CALLEE: org.eclipse.jetty.util.MultiException#toString()
	CALLEE: org.eclipse.jetty.http.PathMap.MappedEntry#toString()
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector#toString()
	CALLEE: liquibase.servicelocator.AssignableToPackageScanFilter#toString()
	CALLEE: org.eclipse.jetty.http.HttpField#toString()
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#toString()
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#toString()
	CALLEE: org.eclipse.jetty.servlet.ServletMapping#toString()
	CALLEE: org.glassfish.jersey.internal.OsgiRegistry.BundleSpiProvidersLoader#toString()
	CALLEE: org.h2.jdbc.JdbcSQLException#toString()
	CALLEE: liquibase.changelog.filter.ChangeSetFilterResult#toString()
	CALLEE: com.zaxxer.hikari.pool.PoolEntry#toString()
	CALLEE: org.eclipse.jetty.io.SelectChannelEndPoint#toString()
	CALLEE: org.eclipse.jetty.util.FutureCallback#toString()
	CALLEE: org.eclipse.jetty.util.ConstantThrowable#toString()
	CALLEE: javax.ws.rs.core.MediaType#toString()
	CALLEE: org.glassfish.jersey.model.internal.RankedProvider#toString()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#toString()
	CALLEE: org.glassfish.hk2.api.MultiException#toString()
	CALLEE: org.glassfish.jersey.message.internal.QualitySourceMediaType#toString()
	CALLEE: jersey.repackaged.com.google.common.base.Predicates.AndPredicate#toString()
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.MapType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#toString()
	CALLEE: org.glassfish.hk2.utilities.NamedImpl#toString()
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#toString()
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#toString()
	CALLEE: com.fasterxml.jackson.databind.jsontype.NamedType#toString()
	CALLEE: liquibase.changelog.RanChangeSet#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.UnresolvedId#toString()
	CALLEE: org.glassfish.jersey.server.model.ResourceModelIssue#toString()
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#toString()
	CALLEE: org.glassfish.jersey.server.model.Parameter#toString()
	CALLEE: org.glassfish.hk2.utilities.reflection.ParameterizedTypeImpl#toString()
	CALLEE: com.fasterxml.jackson.databind.type.ClassKey#toString()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException.Reference#toString()
	CALLEE: org.glassfish.jersey.server.model.Resource.Data#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ValueNode#toString()
	CALLEE: org.glassfish.jersey.server.model.Resource#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#toString()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Data#toString()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ObjectNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ArrayNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.POJONode#toString()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#toString()
	CALLEE: com.fasterxml.jackson.databind.node.TextNode#toString()
	CALLEE: com.fasterxml.jackson.databind.PropertyName#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#toString()
CALLER: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serialize(java.lang.Integer,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.CalendarSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CalendarSerializer#serialize(java.util.Calendar,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.DateSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.DateSerializer#serialize(java.util.Date,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.UUIDSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.UUIDSerializer#serialize(java.util.UUID,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.NumberSerializers.LongSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.LongSerializer#serialize(java.lang.Long,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntLikeSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntLikeSerializer#serialize(java.lang.Number,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.NumberSerializers.ShortSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.ShortSerializer#serialize(java.lang.Short,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.NumberSerializers.FloatSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.FloatSerializer#serialize(java.lang.Float,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serialize(java.lang.Double,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.RawSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.JsonSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NonTypedScalarSerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdScalarSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NullSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ArraySerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
CALLER: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.RawSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.CalendarKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.StringKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.ClassKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.DateKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NullSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BooleanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CalendarSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.DateSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.UUIDSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.LongSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntLikeSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.ShortSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.FloatSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.IterableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#convertValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#defaultSerializeNull(com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#_findSerializer(java.lang.Object,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: static com.fasterxml.jackson.databind.JsonMappingException#wrapWithPath(java.lang.Throwable,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.RawSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.CalendarKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.StringKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.ClassKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.DateKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#findTypedValueSerializer(java.lang.Class,boolean,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NullSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BooleanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CalendarSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.DateSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.UUIDSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.LongSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntLikeSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.ShortSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.FloatSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.IterableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#defaultSerializeNull(com.fasterxml.jackson.core.JsonGenerator)
CALLER: com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer#serialize(java.nio.ByteBuffer,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serialize(java.net.InetAddress,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serialize(java.net.InetSocketAddress,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serialize(java.util.TimeZone,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serialize(com.fasterxml.jackson.databind.JsonSerializable,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#serialize(java.lang.Object[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serialize(java.util.Map.Entry,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.IterableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.IterableSerializer#serialize(java.lang.Iterable,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.MapSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serialize(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#serialize(java.util.EnumSet,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serialize(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#serialize(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serialize(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#serialize(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#serialize(java.lang.String[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer#serialize(boolean[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serialize(byte[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serialize(char[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#serialize(short[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer#serialize(int[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#serialize(long[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#serialize(float[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer#serialize(double[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.EnumSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSerializer#serialize(java.lang.Enum,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder#typeProperty(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder#typeProperty(java.lang.String)
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedWithParams#replaceParameterAnnotations(int,com.fasterxml.jackson.databind.introspect.AnnotationMap)
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#getIndex()
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#equals(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#hashCode()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#hashCode()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#hashCode()
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#getMember()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#getMember()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getMember()
CALLER: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#serialize(java.util.Iterator,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.4#withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#hasRequiredMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#hasRequiredMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.5#withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findPropertyDescription(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findPropertyDescription(com.fasterxml.jackson.databind.introspect.Annotated)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.6#withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findPropertyIndex(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findPropertyIndex(com.fasterxml.jackson.databind.introspect.Annotated)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.7#withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findPropertyDefaultValue(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findPropertyDefaultValue(com.fasterxml.jackson.databind.introspect.Annotated)
CALLER: org.glassfish.jersey.server.model.InvocableValidator#visitInvocable(org.glassfish.jersey.server.model.Invocable)
	CALLEE: static org.glassfish.jersey.internal.inject.Providers#getProviderContracts(java.lang.Class)
	CALLEE: static org.glassfish.jersey.internal.Errors#warning(java.lang.Object,java.lang.String)
	CALLEE: static org.glassfish.jersey.internal.inject.Providers#isProvider(java.lang.Class)
	CALLEE: static org.glassfish.jersey.internal.Errors#fatal(java.lang.Object,java.lang.String)
	CALLEE: org.glassfish.jersey.server.model.MethodHandler.ClassBasedMethodHandler#getHandlerClass()
	CALLEE: org.glassfish.jersey.server.model.MethodHandler.InstanceBasedMethodHandler#getHandlerClass()
	CALLEE: org.glassfish.jersey.server.model.Invocable#getHandler()
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#RESOURCE_IMPLEMENTS_PROVIDER(java.lang.Object,java.lang.Object)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#RESOURCE_MULTIPLE_SCOPE_ANNOTATIONS(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedWithParams#getType(com.fasterxml.jackson.databind.type.TypeBindings,java.lang.reflect.TypeVariable[])
	CALLEE: static com.fasterxml.jackson.databind.type.TypeFactory#unknownType()
	CALLEE: com.fasterxml.jackson.databind.type.TypeBindings#_addPlaceholder(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.type.TypeBindings#addBinding(java.lang.String,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.type.TypeBindings#resolveType(java.lang.reflect.Type)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#getGenericType()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getGenericType()
	CALLEE: com.fasterxml.jackson.databind.type.TypeBindings#childInstance()
CALLER: com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey#resetTyped(java.lang.Class)
	CALLEE: static com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey#hash(java.lang.Class,boolean)
CALLER: com.fasterxml.jackson.databind.ser.impl.JsonSerializerMap#find(com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey)
	CALLEE: com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey#hashCode()
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#<init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer#<init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty,java.lang.String)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#<init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#<init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty,java.lang.String)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer#forProperty(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer#<init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty,java.lang.String)
CALLER: com.fasterxml.jackson.databind.ser.std.MapSerializer#<init>(com.fasterxml.jackson.databind.ser.std.MapSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.ContainerSerializer#<init>(java.lang.Class,boolean)
CALLER: com.fasterxml.jackson.databind.ser.PropertyBuilder#findSerializationType(com.fasterxml.jackson.databind.introspect.Annotated,boolean,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getName()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#getName()
	CALLEE: com.fasterxml.jackson.databind.JavaType#widenBy(java.lang.Class)
	CALLEE: static com.fasterxml.jackson.databind.ser.BasicSerializerFactory#modifySecondaryTypesByAnnotation(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findSerializationTyping(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findSerializationType(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findSerializationType(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findSerializationTyping(com.fasterxml.jackson.databind.introspect.Annotated)
CALLER: static com.fasterxml.jackson.databind.ser.PropertyBuilder.1#<clinit>()
	CALLEE: static com.fasterxml.jackson.annotation.JsonInclude.Include#values()
CALLER: com.fasterxml.jackson.databind.ser.PropertyBuilder#getDefaultValue(java.lang.String,com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.ser.PropertyBuilder#getDefaultBean()
	CALLEE: com.fasterxml.jackson.databind.ser.PropertyBuilder#_throwWrapped(java.lang.Exception,java.lang.String,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#getValue(java.lang.Object)
CALLER: static com.fasterxml.jackson.databind.util.ArrayBuilders#getArrayComparator(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.ArrayBuilders.1#<init>(java.lang.Class,int,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findNullSerializer(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#_findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#unwrappingWriter(com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter#<init>(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,com.fasterxml.jackson.databind.util.NameTransformer)
CALLER: com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey#resetUntyped(java.lang.Class)
	CALLEE: static com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey#hash(java.lang.Class,boolean)
CALLER: com.fasterxml.jackson.databind.ser.std.RawSerializer#<init>(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#<init>(java.lang.Class,boolean)
CALLER: com.fasterxml.jackson.databind.SerializerProvider#findValueSerializer(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.ser.SerializerCache#untypedValueSerializer(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getUnknownTypeSerializer(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap#untypedValueSerializer(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#_createAndCacheUntypedSerializer(com.fasterxml.jackson.databind.JavaType)
CALLER: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#withDelegate(com.fasterxml.jackson.databind.util.Converter,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#<init>(com.fasterxml.jackson.databind.util.Converter,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer)
CALLER: static com.fasterxml.jackson.databind.ser.BeanSerializer#createDummy(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder,com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])
CALLER: static com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.PropertyName#<init>(java.lang.String)
CALLER: com.fasterxml.jackson.databind.ser.BeanSerializer#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder,com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])
	CALLEE: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder,com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])
CALLER: org.glassfish.jersey.server.model.Parameter#getAnnotation(java.lang.Class)
	CALLEE: org.glassfish.hk2.api.AnnotationLiteral#annotationType()
CALLER: com.fasterxml.jackson.databind.ser.std.NumberSerializers.Base#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findFormat(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findFormat(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.BeanProperty.Std#getMember()
	CALLEE: com.fasterxml.jackson.annotation.JsonFormat.Value#getShape()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#getMember()
CALLER: com.fasterxml.jackson.databind.ser.std.CalendarSerializer#withFormat(java.lang.Boolean,java.text.DateFormat)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CalendarSerializer#withFormat(java.lang.Boolean,java.text.DateFormat)
CALLER: com.fasterxml.jackson.databind.ser.std.DateSerializer#withFormat(java.lang.Boolean,java.text.DateFormat)
	CALLEE: com.fasterxml.jackson.databind.ser.std.DateSerializer#withFormat(java.lang.Boolean,java.text.DateFormat)
CALLER: com.fasterxml.jackson.databind.SerializerProvider#getLocale()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#getLocale()
CALLER: com.fasterxml.jackson.databind.SerializerProvider#getTimeZone()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#getTimeZone()
CALLER: static com.fasterxml.jackson.databind.util.StdDateFormat#getISO8601Format(java.util.TimeZone,java.util.Locale)
	CALLEE: static com.fasterxml.jackson.databind.util.StdDateFormat#_cloneFormat(java.text.DateFormat,java.lang.String,java.util.TimeZone,java.util.Locale)
CALLER: com.fasterxml.jackson.databind.introspect.BasicClassIntrospector#forSerialization(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicClassIntrospector#forSerialization(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver)
CALLER: com.fasterxml.jackson.databind.SerializerProvider#findPrimaryPropertySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.ser.SerializerCache#untypedValueSerializer(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getUnknownTypeSerializer(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#handlePrimaryContextualization(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap#untypedValueSerializer(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#_createAndCacheUntypedSerializer(com.fasterxml.jackson.databind.JavaType)
CALLER: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#isNaturalTypeWithStdHandling(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#isDefaultSerializer(com.fasterxml.jackson.databind.JsonSerializer)
CALLER: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer,boolean)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#<init>(com.fasterxml.jackson.databind.ser.std.JsonValueSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer,boolean)
CALLER: com.fasterxml.jackson.databind.ser.std.StdSerializer#findConvertingContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.DatabindContext#converterInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.BeanProperty.Std#getMember()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getTypeFactory()
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#<init>(com.fasterxml.jackson.databind.util.Converter,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#findValueSerializer(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findSerializationContentConverter(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findSerializationContentConverter(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#getMember()
CALLER: com.fasterxml.jackson.databind.ser.ContainerSerializer#hasContentTypeAnnotation(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.BeanProperty.Std#getMember()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findSerializationContentType(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findSerializationContentType(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#getType()
	CALLEE: com.fasterxml.jackson.databind.BeanProperty.Std#getType()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#getMember()
CALLER: com.fasterxml.jackson.databind.SerializerProvider#findValueSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.ser.SerializerCache#untypedValueSerializer(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getUnknownTypeSerializer(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap#untypedValueSerializer(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#_createAndCacheUntypedSerializer(com.fasterxml.jackson.databind.JavaType)
CALLER: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#<init>(com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)
CALLER: com.fasterxml.jackson.databind.SerializerProvider#findKeySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#createKeySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#_handleContextualResolvable(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#<init>(com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer)
CALLER: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)
CALLER: com.fasterxml.jackson.databind.ser.std.IterableSerializer#withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.IterableSerializer#withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)
CALLER: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)
CALLER: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)
CALLER: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findSerializationInclusionForContent(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.annotation.JsonInclude.Include)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#_findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.ser.std.MapSerializer#withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.util.HashSet,boolean)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#_ensureOverride()
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#<init>(com.fasterxml.jackson.databind.ser.std.MapSerializer,java.lang.Object,boolean)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#<init>(com.fasterxml.jackson.databind.ser.std.MapSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.util.HashSet)
CALLER: com.fasterxml.jackson.databind.ser.std.StdSerializer#isDefaultSerializer(com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#isJacksonStdImpl(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#<init>(com.fasterxml.jackson.databind.ser.impl.StringArraySerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ArraySerializerBase#<init>(com.fasterxml.jackson.databind.ser.std.ArraySerializerBase,com.fasterxml.jackson.databind.BeanProperty)
CALLER: static com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer.1#<clinit>()
	CALLEE: static com.fasterxml.jackson.core.JsonToken#values()
CALLER: com.fasterxml.jackson.databind.SerializerProvider#isEnabled(com.fasterxml.jackson.databind.SerializationFeature)
	CALLEE: com.fasterxml.jackson.databind.SerializationConfig#isEnabled(com.fasterxml.jackson.databind.SerializationFeature)
CALLER: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#failForEmpty(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#<init>(java.lang.String)
CALLER: com.fasterxml.jackson.databind.ser.std.StringSerializer#serialize(java.lang.String,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeString(java.lang.String)
CALLER: com.fasterxml.jackson.databind.ser.std.BooleanSerializer#serialize(java.lang.Boolean,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeBoolean(boolean)
CALLER: com.fasterxml.jackson.databind.ser.std.NumberSerializer#serialize(java.lang.Number,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeNumber(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeNumber(long)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeNumber(int)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeNumber(java.math.BigInteger)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeNumber(java.math.BigDecimal)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeNumber(float)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeNumber(double)
CALLER: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serialize(java.lang.Integer,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeNumber(int)
CALLER: com.fasterxml.jackson.databind.ser.std.CalendarSerializer#serialize(java.util.Calendar,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeString(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeNumber(long)
	CALLEE: com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase#_asTimestamp(com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CalendarSerializer#_timestamp(java.util.Calendar)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#defaultSerializeDateValue(java.util.Date,com.fasterxml.jackson.core.JsonGenerator)
CALLER: com.fasterxml.jackson.databind.ser.std.DateSerializer#serialize(java.util.Date,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeString(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeNumber(long)
	CALLEE: com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase#_asTimestamp(com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#defaultSerializeDateValue(java.util.Date,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.ser.std.DateSerializer#_timestamp(java.util.Date)
CALLER: com.fasterxml.jackson.databind.ser.std.UUIDSerializer#serialize(java.util.UUID,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeString(char[],int,int)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#canWriteBinaryNatively()
	CALLEE: static com.fasterxml.jackson.databind.ser.std.UUIDSerializer#_asBytes(java.util.UUID)
	CALLEE: com.fasterxml.jackson.core.JsonGenerator#writeBinary(byte[])
	CALLEE: static com.fasterxml.jackson.databind.ser.std.UUIDSerializer#_appendInt(int,char[],int)
	CALLEE: static com.fasterxml.jackson.databind.ser.std.UUIDSerializer#_appendShort(int,char[],int)
CALLER: com.fasterxml.jackson.databind.ser.std.NumberSerializers.LongSerializer#serialize(java.lang.Long,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeNumber(long)
CALLER: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntLikeSerializer#serialize(java.lang.Number,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeNumber(int)
CALLER: com.fasterxml.jackson.databind.ser.std.NumberSerializers.ShortSerializer#serialize(java.lang.Short,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeNumber(short)
CALLER: com.fasterxml.jackson.databind.ser.std.NumberSerializers.FloatSerializer#serialize(java.lang.Float,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeNumber(float)
CALLER: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serialize(java.lang.Double,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeNumber(double)
CALLER: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.core.JsonGenerator#setCurrentValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.IterableSerializer#serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
CALLER: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#isEnabled(com.fasterxml.jackson.databind.SerializationFeature)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#failForEmpty(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer#writeTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer#writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer#writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
CALLER: com.fasterxml.jackson.databind.ser.std.NonTypedScalarSerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BooleanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.StdScalarSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BooleanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CalendarSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.DateSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.UUIDSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.LongSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntLikeSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.ShortSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.FloatSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
CALLER: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
CALLER: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serializeWithType(java.lang.Integer,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
CALLER: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serializeWithType(java.lang.Double,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
CALLER: com.fasterxml.jackson.databind.ser.std.NullSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeNull()
CALLER: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.RawSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.JsonSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NonTypedScalarSerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdScalarSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NullSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ArraySerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
CALLER: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.RawSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.JsonSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NonTypedScalarSerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdScalarSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NullSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ArraySerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#convertValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#_findSerializer(java.lang.Object,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.CalendarKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.StringKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.ClassKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.DateKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: static com.fasterxml.jackson.databind.JsonMappingException#wrapWithPath(java.lang.Throwable,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#findValueSerializer(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NullSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BooleanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CalendarSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.DateSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.UUIDSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.LongSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntLikeSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.ShortSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.FloatSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.IterableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NonTypedScalarSerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdScalarSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NullSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ArraySerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#defaultSerializeNull(com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.ser.std.RawSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.RawSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.JsonSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
CALLER: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serializeWithType(java.net.InetAddress,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
CALLER: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serializeWithType(java.net.InetSocketAddress,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
CALLER: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serializeWithType(java.util.TimeZone,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
CALLER: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serializeWithType(com.fasterxml.jackson.databind.JsonSerializable,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
CALLER: com.fasterxml.jackson.databind.ser.std.ArraySerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.core.JsonGenerator#setCurrentValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer#serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer#serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer#serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
CALLER: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serializeWithType(java.util.Map.Entry,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
CALLER: com.fasterxml.jackson.databind.ser.std.MapSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serializeWithType(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
CALLER: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serializeWithType(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
CALLER: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serializeWithType(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
CALLER: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serializeWithType(byte[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
CALLER: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serializeWithType(char[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
CALLER: com.fasterxml.jackson.databind.SerializerProvider#defaultSerializeNull(com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeNull()
	CALLEE: com.fasterxml.jackson.databind.ser.std.NullSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#_findSerializer(java.lang.Object,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#findValueSerializer(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer#serialize(java.nio.ByteBuffer,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.core.JsonGenerator#writeBinary(byte[],int,int)
	CALLEE: com.fasterxml.jackson.databind.util.ByteBufferBackedInputStream#<init>(java.nio.ByteBuffer)
	CALLEE: com.fasterxml.jackson.core.JsonGenerator#writeBinary(java.io.InputStream,int)
CALLER: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serialize(java.net.InetAddress,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeString(java.lang.String)
CALLER: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serialize(java.net.InetSocketAddress,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeString(java.lang.String)
CALLER: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serialize(java.util.TimeZone,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeString(java.lang.String)
CALLER: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serialize(com.fasterxml.jackson.databind.JsonSerializable,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.type.TypeBase#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.NullNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.ObjectNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.ArrayNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.POJONode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.BooleanNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.TextNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.BinaryNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.IntNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.LongNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.BigIntegerNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.DoubleNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.DecimalNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#serialize(java.lang.Object[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeEndArray()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#isEnabled(com.fasterxml.jackson.databind.SerializationFeature)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#serializeContents(java.lang.Object[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.core.JsonGenerator#writeStartArray(int)
CALLER: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serialize(java.util.Map.Entry,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeStartObject()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeEndObject()
	CALLEE: com.fasterxml.jackson.core.JsonGenerator#setCurrentValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serializeUsing(java.util.Map.Entry,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serializeDynamic(java.util.Map.Entry,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.IterableSerializer#serialize(java.lang.Iterable,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeStartArray()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeEndArray()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#isEnabled(com.fasterxml.jackson.databind.SerializationFeature)
	CALLEE: com.fasterxml.jackson.databind.ser.std.IterableSerializer#hasSingleElement(java.lang.Iterable)
	CALLEE: com.fasterxml.jackson.databind.ser.std.IterableSerializer#serializeContents(java.lang.Iterable,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.MapSerializer#serialize(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeStartObject()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeEndObject()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#isEnabled(com.fasterxml.jackson.databind.SerializationFeature)
	CALLEE: com.fasterxml.jackson.core.JsonGenerator#setCurrentValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#_orderEntries(java.util.Map)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#findPropertyFilter(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serializeFilteredFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.PropertyFilter,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serializeOptionalFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serializeFieldsUsing(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serializeFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#serialize(java.util.EnumSet,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeEndArray()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#isEnabled(com.fasterxml.jackson.databind.SerializationFeature)
	CALLEE: com.fasterxml.jackson.core.JsonGenerator#writeStartArray(int)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#serializeContents(java.util.EnumSet,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serialize(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeEndArray()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#isEnabled(com.fasterxml.jackson.databind.SerializationFeature)
	CALLEE: com.fasterxml.jackson.core.JsonGenerator#writeStartArray(int)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#_serializeUnwrapped(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serializeContents(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,int)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serializeUsingCustom(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,int)
CALLER: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#serialize(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeEndArray()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#isEnabled(com.fasterxml.jackson.databind.SerializationFeature)
	CALLEE: com.fasterxml.jackson.core.JsonGenerator#writeStartArray(int)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#serializeContents(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serialize(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeEndArray()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#isEnabled(com.fasterxml.jackson.databind.SerializationFeature)
	CALLEE: com.fasterxml.jackson.core.JsonGenerator#writeStartArray(int)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#_serializeUnwrapped(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serializeContents(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serializeUsingCustom(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#serialize(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeEndArray()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#isEnabled(com.fasterxml.jackson.databind.SerializationFeature)
	CALLEE: com.fasterxml.jackson.core.JsonGenerator#writeStartArray(int)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#serializeContents(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#serialize(java.lang.String[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeEndArray()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#isEnabled(com.fasterxml.jackson.databind.SerializationFeature)
	CALLEE: com.fasterxml.jackson.core.JsonGenerator#writeStartArray(int)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#serializeContents(java.lang.String[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer#serialize(boolean[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeEndArray()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#isEnabled(com.fasterxml.jackson.databind.SerializationFeature)
	CALLEE: com.fasterxml.jackson.core.JsonGenerator#writeStartArray(int)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer#serializeContents(boolean[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serialize(byte[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#getBase64Variant()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getConfig()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int)
CALLER: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serialize(char[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeEndArray()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeString(char[],int,int)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#isEnabled(com.fasterxml.jackson.databind.SerializationFeature)
	CALLEE: com.fasterxml.jackson.core.JsonGenerator#writeStartArray(int)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#_writeArrayContents(com.fasterxml.jackson.core.JsonGenerator,char[])
CALLER: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#serialize(short[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeEndArray()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#isEnabled(com.fasterxml.jackson.databind.SerializationFeature)
	CALLEE: com.fasterxml.jackson.core.JsonGenerator#writeStartArray(int)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#serializeContents(short[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer#serialize(int[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeEndArray()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#isEnabled(com.fasterxml.jackson.databind.SerializationFeature)
	CALLEE: com.fasterxml.jackson.core.JsonGenerator#writeStartArray(int)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer#serializeContents(int[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#serialize(long[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeEndArray()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#isEnabled(com.fasterxml.jackson.databind.SerializationFeature)
	CALLEE: com.fasterxml.jackson.core.JsonGenerator#writeStartArray(int)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#serializeContents(long[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#serialize(float[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeEndArray()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#isEnabled(com.fasterxml.jackson.databind.SerializationFeature)
	CALLEE: com.fasterxml.jackson.core.JsonGenerator#writeStartArray(int)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#serializeContents(float[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer#serialize(double[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeEndArray()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#isEnabled(com.fasterxml.jackson.databind.SerializationFeature)
	CALLEE: com.fasterxml.jackson.core.JsonGenerator#writeStartArray(int)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer#serializeContents(double[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.EnumSerializer#serialize(java.lang.Enum,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeString(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeNumber(int)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#isEnabled(com.fasterxml.jackson.databind.SerializationFeature)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSerializer#_serializeAsIndex(com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.EnumValues#serializedValueFor(java.lang.Enum)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeString(com.fasterxml.jackson.core.SerializableString)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder#typeProperty(java.lang.String)
	CALLEE: com.fasterxml.jackson.annotation.JsonTypeInfo.Id#getDefaultPropertyName()
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedWithParams#replaceParameterAnnotations(int,com.fasterxml.jackson.databind.introspect.AnnotationMap)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedWithParams#getParameter(int)
CALLER: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#serialize(java.util.Iterator,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeStartArray()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeEndArray()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#isEnabled(com.fasterxml.jackson.databind.SerializationFeature)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#hasSingleElement(java.util.Iterator)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#serializeContents(java.util.Iterator,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#RESOURCE_IMPLEMENTS_PROVIDER(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableRESOURCE_IMPLEMENTS_PROVIDER(java.lang.Object,java.lang.Object)
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#RESOURCE_MULTIPLE_SCOPE_ANNOTATIONS(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableRESOURCE_MULTIPLE_SCOPE_ANNOTATIONS(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.type.TypeBindings#childInstance()
	CALLEE: com.fasterxml.jackson.databind.type.TypeBindings#<init>(com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.type.TypeBindings,java.lang.Class,com.fasterxml.jackson.databind.JavaType)
CALLER: com.fasterxml.jackson.databind.ser.PropertyBuilder#getDefaultBean()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#canOverrideAccessModifiers()
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#getClassInfo()
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#instantiateBean(boolean)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#getAnnotated()
CALLER: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter#<init>(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#<init>(com.fasterxml.jackson.databind.ser.BeanPropertyWriter)
CALLER: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap#untypedValueSerializer(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey#<init>(com.fasterxml.jackson.databind.JavaType,boolean)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.JsonSerializerMap#find(com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey)
	CALLEE: com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey#resetUntyped(com.fasterxml.jackson.databind.JavaType)
CALLER: com.fasterxml.jackson.databind.SerializerProvider#_createAndCacheUntypedSerializer(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#<init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#_createUntypedSerializer(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.ser.SerializerCache#addAndResolveNonTypedSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder,com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])
	CALLEE: com.fasterxml.jackson.annotation.JsonFormat.Value#getShape()
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#findExpectedFormat(com.fasterxml.jackson.annotation.JsonFormat.Value)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#<init>(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder#getTypeId()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder#getAnyGetter()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder#getFilterId()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder#getObjectIdWriter()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder#getBeanDescription()
CALLER: static com.fasterxml.jackson.databind.ser.std.NumberSerializers.1#<clinit>()
	CALLEE: static com.fasterxml.jackson.annotation.JsonFormat.Shape#values()
CALLER: com.fasterxml.jackson.databind.ser.std.CalendarSerializer#withFormat(java.lang.Boolean,java.text.DateFormat)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CalendarSerializer#<init>(java.lang.Boolean,java.text.DateFormat)
CALLER: com.fasterxml.jackson.databind.ser.std.DateSerializer#withFormat(java.lang.Boolean,java.text.DateFormat)
	CALLEE: com.fasterxml.jackson.databind.ser.std.DateSerializer#<init>(java.lang.Boolean,java.text.DateFormat)
CALLER: com.fasterxml.jackson.databind.introspect.BasicClassIntrospector#forSerialization(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicClassIntrospector#_findStdTypeDesc(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicClassIntrospector#_findStdJdkCollectionDesc(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicClassIntrospector#collectProperties(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver,boolean,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.LRUMap#putIfAbsent(java.lang.Object,java.lang.Object)
	CALLEE: static com.fasterxml.jackson.databind.introspect.BasicBeanDescription#forSerialization(com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector)
CALLER: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#<init>(com.fasterxml.jackson.databind.ser.std.JsonValueSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer,boolean)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#<init>(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#handledType()
	CALLEE: static com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#_notNullClass(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findSerializationContentConverter(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#_findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#_classIfExplicit(java.lang.Class,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#<init>(com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ArraySerializerBase#<init>(com.fasterxml.jackson.databind.ser.std.ArraySerializerBase,com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.ser.BasicSerializerFactory#createKeySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#introspectClassAnnotations(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#canOverrideAccessModifiers()
	CALLEE: static com.fasterxml.jackson.databind.util.ClassUtil#checkAndFixAccess(java.lang.reflect.Member)
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#iterator()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#next()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#hasNext()
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#findJsonValueMethod()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getAnnotated()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getRawReturnType()
	CALLEE: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig#hasSerializerModifiers()
	CALLEE: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig#serializerModifiers()
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#<init>(java.lang.reflect.Method,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.SerializationConfig#introspect(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig#hasKeySerializers()
	CALLEE: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig#keySerializers()
	CALLEE: static com.fasterxml.jackson.databind.ser.std.StdKeySerializers#getStdKeySerializer(com.fasterxml.jackson.databind.SerializationConfig,java.lang.Class,boolean)
	CALLEE: static com.fasterxml.jackson.databind.ser.std.StdKeySerializers#getDefault()
CALLER: com.fasterxml.jackson.databind.SerializerProvider#_handleContextualResolvable(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#<init>(com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.ContainerSerializer#<init>(java.lang.Class,boolean)
CALLER: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#<init>(com.fasterxml.jackson.databind.ser.impl.IteratorSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)
CALLER: com.fasterxml.jackson.databind.ser.std.IterableSerializer#withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.IterableSerializer#<init>(com.fasterxml.jackson.databind.ser.std.IterableSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)
CALLER: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#<init>(com.fasterxml.jackson.databind.ser.std.EnumSetSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)
CALLER: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#<init>(com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)
CALLER: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#<init>(com.fasterxml.jackson.databind.ser.std.CollectionSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)
CALLER: com.fasterxml.jackson.databind.ser.std.MapSerializer#<init>(com.fasterxml.jackson.databind.ser.std.MapSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.util.HashSet)
	CALLEE: com.fasterxml.jackson.databind.ser.ContainerSerializer#<init>(java.lang.Class,boolean)
CALLER: com.fasterxml.jackson.databind.ser.std.ArraySerializerBase#<init>(com.fasterxml.jackson.databind.ser.std.ArraySerializerBase,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.ContainerSerializer#<init>(java.lang.Class,boolean)
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer#writeNumber(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#_append(com.fasterxml.jackson.core.JsonToken,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase#_asTimestamp(com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#isEnabled(com.fasterxml.jackson.databind.SerializationFeature)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#handledType()
CALLER: com.fasterxml.jackson.databind.SerializerProvider#defaultSerializeDateValue(java.util.Date,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeString(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeNumber(long)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#isEnabled(com.fasterxml.jackson.databind.SerializationFeature)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#_dateFormat()
CALLER: static com.fasterxml.jackson.databind.ser.std.UUIDSerializer#_asBytes(java.util.UUID)
	CALLEE: static com.fasterxml.jackson.databind.ser.std.UUIDSerializer#_appendInt(int,byte[],int)
CALLER: com.fasterxml.jackson.core.JsonGenerator#writeBinary(byte[])
	CALLEE: static com.fasterxml.jackson.core.Base64Variants#getDefaultVariant()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int)
CALLER: static com.fasterxml.jackson.databind.ser.std.UUIDSerializer#_appendInt(int,char[],int)
	CALLEE: static com.fasterxml.jackson.databind.ser.std.UUIDSerializer#_appendShort(int,char[],int)
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer#writeNumber(short)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#_append(com.fasterxml.jackson.core.JsonToken,java.lang.Object)
CALLER: com.fasterxml.jackson.core.JsonGenerator#setCurrentValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#getOutputContext()
	CALLEE: com.fasterxml.jackson.core.json.JsonWriteContext#setCurrentValue(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#serializeContents(java.util.Iterator,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.IterableSerializer#serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.IterableSerializer#serializeContents(java.lang.Iterable,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#serializeContents(java.util.EnumSet,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#serializeContents(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#serializeContents(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serializeWithType(java.lang.Integer,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serialize(java.lang.Integer,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serializeWithType(java.lang.Double,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serialize(java.lang.Double,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serializeWithType(java.net.InetAddress,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serialize(java.net.InetAddress,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serializeWithType(java.net.InetSocketAddress,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serialize(java.net.InetSocketAddress,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serializeWithType(java.util.TimeZone,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serialize(java.util.TimeZone,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serializeWithType(com.fasterxml.jackson.databind.JsonSerializable,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.type.TypeBase#serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.node.ValueNode#serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.node.ObjectNode#serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.node.ArrayNode#serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
CALLER: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#serializeContents(java.lang.Object[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#serializeContents(java.lang.String[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer#serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer#serializeContents(boolean[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#serializeContents(short[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer#serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer#serializeContents(int[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#serializeContents(long[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#serializeContents(float[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer#serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer#serializeContents(double[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serializeWithType(java.util.Map.Entry,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.core.JsonGenerator#setCurrentValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serializeUsing(java.util.Map.Entry,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serializeDynamic(java.util.Map.Entry,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer#writeTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer#writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer#writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
CALLER: com.fasterxml.jackson.databind.ser.std.MapSerializer#serializeWithType(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer#writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#isEnabled(com.fasterxml.jackson.databind.SerializationFeature)
	CALLEE: com.fasterxml.jackson.core.JsonGenerator#setCurrentValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#_orderEntries(java.util.Map)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#findPropertyFilter(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serializeFilteredFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.PropertyFilter,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serializeOptionalFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serializeFieldsUsing(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serializeFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer#writeTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer#writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
CALLER: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serializeWithType(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serializeContents(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,int)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serializeUsingCustom(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,int)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
CALLER: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serializeWithType(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serializeContents(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serializeUsingCustom(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
CALLER: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serializeWithType(byte[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#getBase64Variant()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getConfig()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
CALLER: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serializeWithType(char[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeString(char[],int,int)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#isEnabled(com.fasterxml.jackson.databind.SerializationFeature)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#_writeArrayContents(com.fasterxml.jackson.core.JsonGenerator,char[])
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
CALLER: com.fasterxml.jackson.databind.SerializerProvider#findValueSerializer(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#constructType(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.SerializerCache#untypedValueSerializer(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.SerializerCache#untypedValueSerializer(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#_createAndCacheUntypedSerializer(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getUnknownTypeSerializer(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap#untypedValueSerializer(java.lang.Class)
CALLER: com.fasterxml.jackson.core.JsonGenerator#writeBinary(byte[],int,int)
	CALLEE: static com.fasterxml.jackson.core.Base64Variants#getDefaultVariant()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int)
CALLER: com.fasterxml.jackson.core.JsonGenerator#writeBinary(java.io.InputStream,int)
	CALLEE: static com.fasterxml.jackson.core.Base64Variants#getDefaultVariant()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,int)
CALLER: com.fasterxml.jackson.databind.type.TypeBase#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.type.TypeBase#toCanonical()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeString(java.lang.String)
CALLER: com.fasterxml.jackson.databind.node.NullNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#defaultSerializeNull(com.fasterxml.jackson.core.JsonGenerator)
CALLER: com.fasterxml.jackson.databind.node.ObjectNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeEndObject()
	CALLEE: com.fasterxml.jackson.databind.node.DoubleNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.DecimalNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeFieldName(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeStartObject()
	CALLEE: com.fasterxml.jackson.databind.node.NullNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.ObjectNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.ArrayNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.POJONode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.BooleanNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.TextNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.BinaryNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.IntNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.LongNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.BigIntegerNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.node.ArrayNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeEndArray()
	CALLEE: com.fasterxml.jackson.databind.node.NullNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.ObjectNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.ArrayNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.POJONode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.BooleanNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.TextNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.BinaryNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.IntNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.LongNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.BigIntegerNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.DoubleNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.DecimalNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.core.JsonGenerator#writeStartArray(int)
CALLER: com.fasterxml.jackson.databind.node.POJONode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeObject(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#defaultSerializeNull(com.fasterxml.jackson.core.JsonGenerator)
CALLER: com.fasterxml.jackson.databind.node.BooleanNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeBoolean(boolean)
CALLER: com.fasterxml.jackson.databind.node.TextNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeString(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeNull()
CALLER: com.fasterxml.jackson.databind.node.BinaryNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#getBase64Variant()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getConfig()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int)
CALLER: com.fasterxml.jackson.databind.node.IntNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeNumber(int)
CALLER: com.fasterxml.jackson.databind.node.LongNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeNumber(long)
CALLER: com.fasterxml.jackson.databind.node.BigIntegerNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeNumber(java.math.BigInteger)
CALLER: com.fasterxml.jackson.databind.node.DoubleNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeNumber(double)
CALLER: com.fasterxml.jackson.databind.node.DecimalNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeNumber(java.math.BigDecimal)
CALLER: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#serializeContents(java.lang.Object[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.CalendarKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.StringKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.DateKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Single#serializerFor(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Double#serializerFor(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Multi#serializerFor(java.lang.Class)
	CALLEE: static com.fasterxml.jackson.databind.JsonMappingException#wrapWithPath(java.lang.Throwable,java.lang.Object,int)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NullSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BooleanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CalendarSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.DateSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.UUIDSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.LongSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntLikeSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.ShortSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.FloatSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.IterableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#defaultSerializeNull(com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#serializeContentsUsing(java.lang.Object[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#serializeTypedContents(java.lang.Object[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Empty#serializerFor(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#hasGenericTypes()
	CALLEE: com.fasterxml.jackson.databind.JavaType#hasGenericTypes()
	CALLEE: com.fasterxml.jackson.databind.DatabindContext#constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#_findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#_findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.RawSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.ClassKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.core.JsonGenerator#writeStartArray(int)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeStartArray()
CALLER: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serializeUsing(java.util.Map.Entry,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ArraySerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.RawSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.CalendarKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.StringKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.ClassKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.DateKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: org.eclipse.jetty.http.PathMap.MappedEntry#getValue()
	CALLEE: org.eclipse.jetty.http.PathMap.MappedEntry#getKey()
	CALLEE: com.fasterxml.jackson.databind.ser.std.NullSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BooleanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CalendarSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.DateSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.UUIDSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.LongSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntLikeSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.ShortSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.FloatSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.IterableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#isEnabled(com.fasterxml.jackson.databind.SerializationFeature)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NonTypedScalarSerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdScalarSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NullSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#defaultSerializeNull(com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#findNullKeySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.FailingSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.RawSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.JsonSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
CALLER: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serializeDynamic(java.util.Map.Entry,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.CalendarKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.StringKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.ClassKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.DateKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Single#serializerFor(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Double#serializerFor(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Multi#serializerFor(java.lang.Class)
	CALLEE: org.eclipse.jetty.http.PathMap.MappedEntry#getValue()
	CALLEE: org.eclipse.jetty.http.PathMap.MappedEntry#getKey()
	CALLEE: com.fasterxml.jackson.databind.ser.std.NullSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BooleanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CalendarSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.DateSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.UUIDSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.LongSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntLikeSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.ShortSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.FloatSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.IterableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#isEnabled(com.fasterxml.jackson.databind.SerializationFeature)
	CALLEE: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NonTypedScalarSerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdScalarSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NullSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ArraySerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#defaultSerializeNull(com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Empty#serializerFor(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#hasGenericTypes()
	CALLEE: com.fasterxml.jackson.databind.JavaType#hasGenericTypes()
	CALLEE: com.fasterxml.jackson.databind.DatabindContext#constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#findNullKeySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#_findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#_findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.FailingSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.RawSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.RawSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.JsonSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
CALLER: com.fasterxml.jackson.databind.ser.std.IterableSerializer#hasSingleElement(java.lang.Iterable)
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: com.fasterxml.jackson.databind.JsonNode#iterator()
	CALLEE: com.fasterxml.jackson.databind.util.EmptyIterator#next()
	CALLEE: com.fasterxml.jackson.databind.util.EmptyIterator#hasNext()
CALLER: com.fasterxml.jackson.databind.ser.std.IterableSerializer#serializeContents(java.lang.Iterable,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.RawSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.RawSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.CalendarKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.StringKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.ClassKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.DateKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: com.fasterxml.jackson.databind.JsonNode#iterator()
	CALLEE: com.fasterxml.jackson.databind.util.EmptyIterator#next()
	CALLEE: com.fasterxml.jackson.databind.util.EmptyIterator#hasNext()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#findValueSerializer(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NullSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BooleanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CalendarSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.DateSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.UUIDSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.LongSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntLikeSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.ShortSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.FloatSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.IterableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NonTypedScalarSerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdScalarSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NullSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ArraySerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#defaultSerializeNull(com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.JsonSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
CALLER: com.fasterxml.jackson.databind.ser.std.StdSerializer#findPropertyFilter(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#<init>(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getFilterProvider()
CALLER: com.fasterxml.jackson.databind.ser.std.MapSerializer#serializeFilteredFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.PropertyFilter,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Single#serializerFor(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Double#serializerFor(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Multi#serializerFor(java.lang.Class)
	CALLEE: org.eclipse.jetty.http.PathMap.MappedEntry#getValue()
	CALLEE: org.eclipse.jetty.http.PathMap.MappedEntry#getKey()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getDefaultNullValueSerializer()
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Empty#serializerFor(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#hasGenericTypes()
	CALLEE: com.fasterxml.jackson.databind.JavaType#hasGenericTypes()
	CALLEE: com.fasterxml.jackson.databind.DatabindContext#constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#findNullKeySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapProperty#<init>(com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#_findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#_findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapProperty#reset(java.lang.Object,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.JsonSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StringSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.UUIDSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.IterableSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.ser.std.MapSerializer#serializeOptionalFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.CalendarKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.StringKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Double#serializerFor(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Multi#serializerFor(java.lang.Class)
	CALLEE: org.eclipse.jetty.http.PathMap.MappedEntry#getValue()
	CALLEE: org.eclipse.jetty.http.PathMap.MappedEntry#getKey()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getDefaultNullValueSerializer()
	CALLEE: com.fasterxml.jackson.databind.ser.std.NullSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BooleanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CalendarSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.DateSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.UUIDSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.LongSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntLikeSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.ShortSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.FloatSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.IterableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Empty#serializerFor(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#hasGenericTypes()
	CALLEE: com.fasterxml.jackson.databind.JavaType#hasGenericTypes()
	CALLEE: com.fasterxml.jackson.databind.DatabindContext#constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#findNullKeySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#_findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#_findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serializeTypedFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.FailingSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.RawSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.JsonSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StringSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.UUIDSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.IterableSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.ClassKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.DateKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Single#serializerFor(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.ser.std.MapSerializer#serializeFieldsUsing(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.FailingSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.JsonSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.CalendarKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.StringKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.ClassKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.DateKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: org.eclipse.jetty.http.PathMap.MappedEntry#getValue()
	CALLEE: org.eclipse.jetty.http.PathMap.MappedEntry#getKey()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: com.fasterxml.jackson.databind.ser.std.NullSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BooleanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CalendarSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.DateSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.UUIDSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.LongSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntLikeSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.ShortSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.FloatSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.IterableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NonTypedScalarSerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdScalarSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NullSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ArraySerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#defaultSerializeNull(com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#findNullKeySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.ser.std.RawSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.RawSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
CALLER: com.fasterxml.jackson.databind.ser.std.MapSerializer#serializeFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Double#serializerFor(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Multi#serializerFor(java.lang.Class)
	CALLEE: org.eclipse.jetty.http.PathMap.MappedEntry#getValue()
	CALLEE: org.eclipse.jetty.http.PathMap.MappedEntry#getKey()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: com.fasterxml.jackson.databind.ser.std.NullSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BooleanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CalendarSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.DateSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.UUIDSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.LongSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntLikeSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.ShortSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.FloatSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.IterableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#defaultSerializeNull(com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Empty#serializerFor(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#hasGenericTypes()
	CALLEE: com.fasterxml.jackson.databind.JavaType#hasGenericTypes()
	CALLEE: com.fasterxml.jackson.databind.DatabindContext#constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#findNullKeySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#_findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#_findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serializeTypedFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.FailingSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.RawSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.CalendarKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.StringKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.ClassKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.DateKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Single#serializerFor(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#serializeContents(java.util.EnumSet,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.RawSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.CalendarKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.StringKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.ClassKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.DateKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#findValueSerializer(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NullSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BooleanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CalendarSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.DateSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.UUIDSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.LongSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntLikeSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.ShortSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.FloatSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.IterableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#_serializeUnwrapped(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serializeContents(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,int)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serializeUsingCustom(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,int)
CALLER: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serializeContents(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,int)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeString(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#defaultSerializeNull(com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,int)
CALLER: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serializeUsingCustom(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,int)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.RawSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.CalendarKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.StringKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.ClassKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.DateKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NullSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BooleanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CalendarSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.DateSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.UUIDSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.LongSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntLikeSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.ShortSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.FloatSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.IterableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#defaultSerializeNull(com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,int)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#serializeContents(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.RawSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.CalendarKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.StringKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.ClassKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.DateKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Single#serializerFor(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Double#serializerFor(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Multi#serializerFor(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NullSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BooleanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CalendarSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.DateSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.UUIDSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.LongSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntLikeSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.ShortSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.FloatSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.IterableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#defaultSerializeNull(com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Empty#serializerFor(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#hasGenericTypes()
	CALLEE: com.fasterxml.jackson.databind.JavaType#hasGenericTypes()
	CALLEE: com.fasterxml.jackson.databind.DatabindContext#constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,int)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#serializeContentsUsing(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#serializeTypedContents(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase#_findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase#_findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#_serializeUnwrapped(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serializeContents(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serializeUsingCustom(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serializeContents(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeString(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#defaultSerializeNull(com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,int)
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serializeUsingCustom(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serializeUsingCustom(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.RawSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.CalendarKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.StringKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.ClassKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.DateKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: com.fasterxml.jackson.databind.ser.std.NullSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BooleanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CalendarSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.DateSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.UUIDSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.LongSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntLikeSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.ShortSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.FloatSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.IterableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#defaultSerializeNull(com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,int)
CALLER: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#serializeContents(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.RawSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.CalendarKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.StringKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.ClassKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.DateKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Single#serializerFor(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Double#serializerFor(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Multi#serializerFor(java.lang.Class)
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: com.fasterxml.jackson.databind.ser.std.NullSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BooleanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CalendarSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.DateSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.UUIDSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.LongSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntLikeSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.ShortSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.FloatSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.IterableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NonTypedScalarSerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdScalarSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NullSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ArraySerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#defaultSerializeNull(com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Empty#serializerFor(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#hasGenericTypes()
	CALLEE: com.fasterxml.jackson.databind.JavaType#hasGenericTypes()
	CALLEE: com.fasterxml.jackson.databind.DatabindContext#constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,int)
	CALLEE: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase#_findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase#_findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#serializeContentsUsing(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.RawSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.JsonSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
CALLER: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#serializeContents(java.lang.String[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeString(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeNull()
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#serializeContentsSlow(java.lang.String[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer)
CALLER: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer#serializeContents(boolean[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeBoolean(boolean)
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer#writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeObject(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#_writeArrayContents(com.fasterxml.jackson.core.JsonGenerator,char[])
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeString(char[],int,int)
CALLER: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#serializeContents(short[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeNumber(int)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeNumber(short)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer#serializeContents(int[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeNumber(int)
CALLER: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#serializeContents(long[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeNumber(long)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#serializeContents(float[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeNumber(float)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer#serializeContents(double[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeNumber(double)
CALLER: com.fasterxml.jackson.databind.ser.std.EnumSerializer#_serializeAsIndex(com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#isEnabled(com.fasterxml.jackson.databind.SerializationFeature)
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer#writeString(com.fasterxml.jackson.core.SerializableString)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#_append(com.fasterxml.jackson.core.JsonToken,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeNull()
CALLER: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#serializeContents(java.util.Iterator,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ArraySerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.RawSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.RawSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.JsonSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.CalendarKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.StringKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.ClassKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.DateKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: org.glassfish.jersey.server.internal.scanning.PackageNamesScanner#hasNext()
	CALLEE: org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.VfsResourceFinder#hasNext()
	CALLEE: org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.JarZipSchemeScanner#hasNext()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeScanner#hasNext()
	CALLEE: org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory.BundleSchemeScanner#hasNext()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeScanner.1#hasNext()
	CALLEE: org.glassfish.jersey.server.internal.scanning.PackageNamesScanner#next()
	CALLEE: org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.VfsResourceFinder#next()
	CALLEE: org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.JarZipSchemeScanner#next()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeScanner#next()
	CALLEE: org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory.BundleSchemeScanner#next()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeScanner.1#next()
	CALLEE: org.glassfish.jersey.server.internal.scanning.JarFileScanner#hasNext()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FilesScanner#next()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FilesScanner#hasNext()
	CALLEE: org.glassfish.jersey.servlet.WebAppResourcesScanner#next()
	CALLEE: org.glassfish.jersey.servlet.WebAppResourcesScanner#hasNext()
	CALLEE: org.glassfish.jersey.servlet.WebAppResourcesScanner.1#hasNext()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FilesScanner.1#hasNext()
	CALLEE: org.glassfish.jersey.servlet.WebAppResourcesScanner.1#next()
	CALLEE: org.glassfish.jersey.server.internal.scanning.JarFileScanner#next()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FilesScanner.1#next()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#findValueSerializer(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NullSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BooleanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CalendarSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.DateSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.UUIDSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.LongSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntLikeSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.ShortSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.FloatSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.IterableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NonTypedScalarSerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdScalarSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NullSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#defaultSerializeNull(com.fasterxml.jackson.core.JsonGenerator)
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableRESOURCE_IMPLEMENTS_PROVIDER(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableRESOURCE_MULTIPLE_SCOPE_ANNOTATIONS(java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey#resetUntyped(com.fasterxml.jackson.databind.JavaType)
	CALLEE: static com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey#hash(com.fasterxml.jackson.databind.JavaType,boolean)
CALLER: static com.fasterxml.jackson.databind.introspect.BasicBeanDescription#forSerialization(com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector)
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#<init>(com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#getJsonValueMethod()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#getAnyGetter()
CALLER: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig#keySerializers()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayIterator#<init>(java.lang.Object[])
CALLER: static com.fasterxml.jackson.databind.ser.std.StdKeySerializers#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.StringKeySerializer#<init>()
CALLER: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#<init>(com.fasterxml.jackson.databind.ser.impl.IteratorSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase#<init>(com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)
CALLER: com.fasterxml.jackson.databind.ser.std.IterableSerializer#<init>(com.fasterxml.jackson.databind.ser.std.IterableSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase#<init>(com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)
CALLER: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#<init>(com.fasterxml.jackson.databind.ser.std.EnumSetSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase#<init>(com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)
CALLER: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#<init>(com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase#<init>(com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)
CALLER: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#<init>(com.fasterxml.jackson.databind.ser.std.CollectionSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase#<init>(com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)
CALLER: com.fasterxml.jackson.databind.SerializerProvider#_dateFormat()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#getDateFormat()
	CALLEE: com.fasterxml.jackson.databind.util.StdDateFormat#clone()
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer#getOutputContext()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#getOutputContext()
CALLER: com.fasterxml.jackson.databind.type.TypeBase#serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.type.TypeBase#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
CALLER: com.fasterxml.jackson.databind.node.ValueNode#serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.node.NullNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.POJONode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.BooleanNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.TextNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.BinaryNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.IntNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.LongNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.BigIntegerNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.DoubleNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.DecimalNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
CALLER: com.fasterxml.jackson.databind.node.ObjectNode#serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.node.DecimalNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer#writeTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer#writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer#writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeFieldName(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.node.NullNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.ObjectNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.ArrayNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.POJONode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.BooleanNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.TextNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.BinaryNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.IntNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.LongNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.BigIntegerNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.DoubleNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.node.ArrayNode#serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.node.NullNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.ObjectNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.ArrayNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.POJONode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.BooleanNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.TextNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.BinaryNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.IntNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.LongNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.BigIntegerNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.DoubleNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.node.DecimalNode#serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
CALLER: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#serializeContentsUsing(java.lang.Object[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: static com.fasterxml.jackson.databind.JsonMappingException#wrapWithPath(java.lang.Throwable,java.lang.Object,int)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NullSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BooleanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CalendarSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.DateSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.UUIDSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.LongSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntLikeSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.ShortSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.FloatSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.IterableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NonTypedScalarSerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdScalarSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NullSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ArraySerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#defaultSerializeNull(com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.ser.std.RawSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.RawSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.JsonSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.CalendarKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.StringKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.ClassKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.DateKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
CALLER: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#serializeTypedContents(java.lang.Object[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ArraySerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.RawSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.JsonSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Single#serializerFor(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Double#serializerFor(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Multi#serializerFor(java.lang.Class)
	CALLEE: static com.fasterxml.jackson.databind.JsonMappingException#wrapWithPath(java.lang.Throwable,java.lang.Object,int)
	CALLEE: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NonTypedScalarSerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdScalarSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NullSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#defaultSerializeNull(com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Empty#serializerFor(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#_findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.type.ArrayType#hasGenericTypes()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#hasGenericTypes()
	CALLEE: com.fasterxml.jackson.databind.JavaType#hasGenericTypes()
CALLER: com.fasterxml.jackson.databind.JavaType#hasGenericTypes()
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#containedTypeCount()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#containedTypeCount()
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#containedTypeCount()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#containedTypeCount()
CALLER: com.fasterxml.jackson.databind.DatabindContext#constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getConfig()
CALLER: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#_findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap#findAndAddSecondarySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#_findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap#findAndAddSecondarySerializer(java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.ser.std.StdSerializer#wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String)
	CALLEE: static com.fasterxml.jackson.databind.JsonMappingException#wrapWithPath(java.lang.Throwable,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#isEnabled(com.fasterxml.jackson.databind.SerializationFeature)
CALLER: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#_findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap#findAndAddSecondarySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#_findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap#findAndAddSecondarySerializer(java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.SerializerProvider#getFilterProvider()
	CALLEE: com.fasterxml.jackson.databind.SerializationConfig#getFilterProvider()
CALLER: com.fasterxml.jackson.databind.ser.std.MapProperty#<init>(com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.PropertyWriter#<init>()
CALLER: com.fasterxml.jackson.databind.ser.std.MapSerializer#_findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap#findAndAddSecondarySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.ser.std.MapSerializer#_findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap#findAndAddSecondarySerializer(java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.ser.std.MapSerializer#serializeTypedFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.CalendarKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.StringKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.ClassKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.DateKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Single#serializerFor(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Double#serializerFor(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Multi#serializerFor(java.lang.Class)
	CALLEE: org.eclipse.jetty.http.PathMap.MappedEntry#getValue()
	CALLEE: org.eclipse.jetty.http.PathMap.MappedEntry#getKey()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getDefaultNullValueSerializer()
	CALLEE: com.fasterxml.jackson.databind.ser.std.NullSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BooleanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CalendarSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.DateSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.UUIDSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.LongSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntLikeSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.ShortSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.FloatSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.IterableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NonTypedScalarSerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdScalarSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NullSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ArraySerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Empty#serializerFor(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#hasGenericTypes()
	CALLEE: com.fasterxml.jackson.databind.JavaType#hasGenericTypes()
	CALLEE: com.fasterxml.jackson.databind.DatabindContext#constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#findNullKeySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#_findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#_findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.FailingSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.RawSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.RawSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.JsonSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.JsonSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StringSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.UUIDSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.IterableSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.ser.std.StdSerializer#wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,int)
	CALLEE: static com.fasterxml.jackson.databind.JsonMappingException#wrapWithPath(java.lang.Throwable,java.lang.Object,int)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#isEnabled(com.fasterxml.jackson.databind.SerializationFeature)
CALLER: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#serializeContentsUsing(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.CalendarKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NullSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BooleanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CalendarSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.DateSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.UUIDSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.LongSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntLikeSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.ShortSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.FloatSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.IterableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NonTypedScalarSerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdScalarSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NullSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ArraySerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#defaultSerializeNull(com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,int)
	CALLEE: com.fasterxml.jackson.databind.ser.std.RawSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.RawSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.JsonSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.StringKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.ClassKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.DateKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#serializeTypedContents(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Single#serializerFor(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Double#serializerFor(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Multi#serializerFor(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NonTypedScalarSerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdScalarSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NullSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ArraySerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#defaultSerializeNull(com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Empty#serializerFor(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#hasGenericTypes()
	CALLEE: com.fasterxml.jackson.databind.JavaType#hasGenericTypes()
	CALLEE: com.fasterxml.jackson.databind.DatabindContext#constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,int)
	CALLEE: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase#_findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase#_findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.RawSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.JsonSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
CALLER: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase#_findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap#findAndAddSecondarySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase#_findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap#findAndAddSecondarySerializer(java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#serializeContentsUsing(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.CalendarKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.StringKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#next()
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: com.fasterxml.jackson.databind.ser.std.NullSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BooleanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CalendarSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.DateSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.UUIDSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.LongSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntLikeSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.ShortSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.FloatSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.IterableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NonTypedScalarSerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdScalarSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NullSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ArraySerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#defaultSerializeNull(com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,int)
	CALLEE: com.fasterxml.jackson.databind.ser.std.RawSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.RawSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.JsonSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.ClassKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.DateKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#serializeContentsSlow(java.lang.String[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.RawSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.CalendarKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.StringKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.ClassKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.DateKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NullSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BooleanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CalendarSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.DateSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.UUIDSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.LongSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntLikeSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.ShortSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.FloatSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.IterableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#defaultSerializeNull(com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#getAnyGetter()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#reportProblem(java.lang.String)
CALLER: static com.fasterxml.jackson.databind.ser.std.StdKeySerializers.ClassKeySerializer#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.ClassKeySerializer#<init>()
CALLER: static com.fasterxml.jackson.databind.ser.std.StdKeySerializers.DateKeySerializer#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.DateKeySerializer#<init>()
CALLER: static com.fasterxml.jackson.databind.ser.std.StdKeySerializers.CalendarKeySerializer#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.CalendarKeySerializer#<init>()
CALLER: com.fasterxml.jackson.databind.ser.std.StdKeySerializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.StringKeySerializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase#<init>(com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.ContainerSerializer#<init>(com.fasterxml.jackson.databind.ser.ContainerSerializer)
CALLER: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap#findAndAddSecondarySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#findValueSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Empty#newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.SerializerAndMapResult#<init>(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Single#newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Double#newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Multi#newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer)
CALLER: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap#findAndAddSecondarySerializer(java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#findValueSerializer(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Empty#newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.SerializerAndMapResult#<init>(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Single#newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Double#newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Multi#newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer)
CALLER: com.fasterxml.jackson.databind.ser.impl.FailingSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.core.JsonGenerationException#<init>(java.lang.String)
CALLER: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.ClassKeySerializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#<init>(java.lang.Class,boolean)
CALLER: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.DateKeySerializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.CalendarKeySerializer#<init>()
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.ser.ContainerSerializer#<init>(com.fasterxml.jackson.databind.ser.ContainerSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#<init>(java.lang.Class,boolean)
CALLER: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Empty#newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Single#<init>(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer)
CALLER: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Single#<init>(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap#<init>(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeEndArray()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#canWriteTypeId()
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeEndObject()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeEndArray()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#canWriteTypeId()
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase#idFromValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#_writeArraySuffix(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeString(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeStartArray()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#canWriteTypeId()
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase#idFromValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeTypeId(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeStartObject()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeStartArray()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#canWriteTypeId()
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase#idFromValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeTypeId(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#_validTypeId(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.JsonGenerator#writeArrayFieldStart(java.lang.String)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#_writeArrayPrefix(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeEndArray()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#canWriteTypeId()
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeEndObject()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#canWriteTypeId()
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase#idFromValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#_writeScalarSuffix(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeString(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeStartArray()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#canWriteTypeId()
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase#idFromValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeTypeId(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeFieldName(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeStartObject()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#canWriteTypeId()
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase#idFromValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeTypeId(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#_validTypeId(java.lang.String)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#_writeScalarPrefix(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeEndObject()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeEndArray()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#canWriteTypeId()
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer#writeTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeEndObject()
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeEndObject()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#canWriteTypeId()
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase#idFromValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#_writeObjectSuffix(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeStartObject()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeString(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeStartArray()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#canWriteTypeId()
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase#idFromValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeTypeId(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer#writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeStartObject()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#canWriteTypeId()
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase#idFromValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeTypeId(java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.JsonGenerator#writeStringField(java.lang.String,java.lang.String)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeStartObject()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#canWriteTypeId()
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase#idFromValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeTypeId(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#_validTypeId(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.JsonGenerator#writeObjectFieldStart(java.lang.String)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#_writeObjectPrefix(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer#writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeStartObject()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#canWriteTypeId()
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase#idFromValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeTypeId(java.lang.Object)
CALLER: org.glassfish.jersey.server.model.MethodList.4#keep(org.glassfish.jersey.server.model.AnnotatedMethod)
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#getMethod()
CALLER: com.fasterxml.jackson.databind.SerializationConfig#getDefaultVisibilityChecker()
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#isEnabled(com.fasterxml.jackson.databind.MapperFeature)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#getDefaultVisibilityChecker()
	CALLEE: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#withFieldVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility)
	CALLEE: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#withGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility)
	CALLEE: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#withIsGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility)
CALLER: com.fasterxml.jackson.databind.type.TypeBindings#findType(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.type.TypeBindings#findType(java.lang.String,boolean)
CALLER: org.glassfish.jersey.server.model.ResourceMethod.Builder#nameBindings(java.lang.annotation.Annotation[])
	CALLEE: static jersey.repackaged.com.google.common.collect.Collections2#transform(java.util.Collection,jersey.repackaged.com.google.common.base.Function)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Builder#nameBindings(java.util.Collection)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Builder.1#<init>(org.glassfish.jersey.server.model.ResourceMethod.Builder)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.MemberIterator#next()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.MemberIterator#next()
CALLER: org.glassfish.jersey.server.internal.routing.Routing.Builder#buildStage()
	CALLEE: org.glassfish.jersey.server.internal.routing.RuntimeModelBuilder#<init>(org.glassfish.hk2.api.ServiceLocator,org.glassfish.jersey.server.internal.JerseyResourceContext,javax.ws.rs.core.Configuration,org.glassfish.jersey.message.MessageBodyWorkers,org.glassfish.jersey.server.internal.ProcessingProviders,org.glassfish.jersey.server.model.ResourceMethodInvoker.Builder)
	CALLEE: org.glassfish.jersey.server.internal.routing.RuntimeModelBuilder#buildModel(org.glassfish.jersey.server.model.RuntimeResourceModel,boolean)
	CALLEE: org.glassfish.jersey.server.internal.routing.RoutingStage#<init>(org.glassfish.jersey.server.internal.routing.Router)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder#typeIdVisibility(boolean)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder#typeIdVisibility(boolean)
CALLER: org.glassfish.jersey.server.model.MethodHandler#accept(org.glassfish.jersey.server.model.ResourceModelVisitor)
	CALLEE: org.glassfish.jersey.server.model.AbstractResourceModelVisitor#visitMethodHandler(org.glassfish.jersey.server.model.MethodHandler)
CALLER: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#hasKnownClassAnnotations()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#hasAnnotations()
CALLER: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#findAnyGetter()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getRawType()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getName()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#getRawType()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#getName()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#getRawType()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#getName()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#getName()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#getRawType()
CALLER: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#findSerializationInclusionForContent(com.fasterxml.jackson.annotation.JsonInclude.Include)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findSerializationInclusionForContent(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.annotation.JsonInclude.Include)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findSerializationInclusionForContent(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.annotation.JsonInclude.Include)
CALLER: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#removeProperty(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getName()
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#isTypeId()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#fromMemberAnnotations(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.WithMember)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.3#<init>(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder)
CALLER: com.fasterxml.jackson.databind.introspect.Annotated#getType(com.fasterxml.jackson.databind.type.TypeBindings)
	CALLEE: com.fasterxml.jackson.databind.type.TypeBindings#resolveType(java.lang.reflect.Type)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#getGenericType()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getGenericType()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#getGenericType()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#getGenericType()
CALLER: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#findSerializationInclusion(com.fasterxml.jackson.annotation.JsonInclude.Include)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findSerializationInclusion(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.annotation.JsonInclude.Include)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findSerializationInclusion(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.annotation.JsonInclude.Include)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#findInclusion()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#getAccessor()
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findSerializationInclusion(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.annotation.JsonInclude.Include)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findSerializationInclusion(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.annotation.JsonInclude.Include)
CALLER: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#findSerializationConverter()
	CALLEE: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#_createConverter(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findSerializationConverter(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findSerializationConverter(com.fasterxml.jackson.databind.introspect.Annotated)
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getFullName()
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedField#getValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#getFullName()
CALLER: com.fasterxml.jackson.databind.ser.std.RawSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.MemberKey#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#toString()
	CALLEE: com.fasterxml.jackson.core.io.SerializedString#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey#toString()
	CALLEE: org.glassfish.jersey.server.model.Invocable#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#toString()
	CALLEE: org.glassfish.jersey.server.model.MethodHandler.ClassBasedMethodHandler#toString()
	CALLEE: org.glassfish.jersey.server.model.MethodHandler.InstanceBasedMethodHandler#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#toString()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeRawValue(java.lang.String)
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodRouting#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#toString()
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.ConsumesProducesAcceptor#toString()
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#toString()
	CALLEE: org.eclipse.jetty.webapp.WebAppContext#toString()
	CALLEE: org.eclipse.jetty.server.handler.HandlerCollection#toString()
	CALLEE: org.eclipse.jetty.server.Server#toString()
	CALLEE: org.eclipse.jetty.server.AbstractNetworkConnector#toString()
	CALLEE: org.eclipse.jetty.util.thread.QueuedThreadPool#toString()
	CALLEE: org.eclipse.jetty.server.AbstractConnectionFactory#toString()
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle.Bean#toString()
	CALLEE: org.apache.log4j.NameValue#toString()
	CALLEE: liquibase.changelog.ChangeLogParameters.ChangeLogParameter#toString()
	CALLEE: org.eclipse.jetty.server.AbstractConnector.Acceptor#toString()
	CALLEE: org.eclipse.jetty.server.HttpConfiguration#toString()
	CALLEE: org.eclipse.jetty.util.MultiException#toString()
	CALLEE: org.eclipse.jetty.http.PathMap.MappedEntry#toString()
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector#toString()
	CALLEE: liquibase.servicelocator.AssignableToPackageScanFilter#toString()
	CALLEE: org.eclipse.jetty.http.HttpField#toString()
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#toString()
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#toString()
	CALLEE: org.eclipse.jetty.servlet.ServletMapping#toString()
	CALLEE: org.glassfish.jersey.internal.OsgiRegistry.BundleSpiProvidersLoader#toString()
	CALLEE: org.h2.jdbc.JdbcSQLException#toString()
	CALLEE: liquibase.changelog.filter.ChangeSetFilterResult#toString()
	CALLEE: com.zaxxer.hikari.pool.PoolEntry#toString()
	CALLEE: org.eclipse.jetty.io.SelectChannelEndPoint#toString()
	CALLEE: org.eclipse.jetty.util.FutureCallback#toString()
	CALLEE: org.eclipse.jetty.util.ConstantThrowable#toString()
	CALLEE: javax.ws.rs.core.MediaType#toString()
	CALLEE: org.glassfish.jersey.model.internal.RankedProvider#toString()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#toString()
	CALLEE: org.glassfish.hk2.api.MultiException#toString()
	CALLEE: org.glassfish.jersey.message.internal.QualitySourceMediaType#toString()
	CALLEE: jersey.repackaged.com.google.common.base.Predicates.AndPredicate#toString()
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.MapType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#toString()
	CALLEE: org.glassfish.hk2.utilities.NamedImpl#toString()
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#toString()
	CALLEE: com.fasterxml.jackson.core.JsonLocation#toString()
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#toString()
	CALLEE: com.fasterxml.jackson.databind.jsontype.NamedType#toString()
	CALLEE: liquibase.changelog.RanChangeSet#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.UnresolvedId#toString()
	CALLEE: org.glassfish.jersey.server.model.ResourceModelIssue#toString()
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#toString()
	CALLEE: org.glassfish.jersey.server.model.Parameter#toString()
	CALLEE: org.glassfish.hk2.utilities.reflection.ParameterizedTypeImpl#toString()
	CALLEE: com.fasterxml.jackson.databind.type.ClassKey#toString()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException.Reference#toString()
	CALLEE: org.glassfish.jersey.server.model.Resource.Data#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ValueNode#toString()
	CALLEE: org.glassfish.jersey.server.model.Resource#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#toString()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Data#toString()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ObjectNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ArrayNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.POJONode#toString()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod#toString()
	CALLEE: com.fasterxml.jackson.databind.node.TextNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.BinaryNode#toString()
	CALLEE: com.fasterxml.jackson.databind.PropertyName#toString()
CALLER: com.fasterxml.jackson.databind.ser.BeanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeStartObject()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeEndObject()
	CALLEE: com.fasterxml.jackson.core.JsonGenerator#setCurrentValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#_serializeWithObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,boolean)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#serializeFieldsFiltered(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#serializeFields(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.util.StdDateFormat#format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)
	CALLEE: static com.fasterxml.jackson.databind.util.StdDateFormat#_cloneFormat(java.text.DateFormat,java.lang.String,java.util.TimeZone,java.util.Locale)
CALLER: com.fasterxml.jackson.databind.ser.std.RawSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.ser.std.RawSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeCustomTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer#writeTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer#writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer#writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#serializeFieldsFiltered(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#serializeFields(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#_serializeWithObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#_customTypeId(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeCustomTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer#writeCustomTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeCustomTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeCustomTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer#writeCustomTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeCustomTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer#writeCustomTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeCustomTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeString(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeStartArray()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#canWriteTypeId()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeTypeId(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase#idFromValueAndType(java.lang.Object,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeFieldName(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeStartObject()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#canWriteTypeId()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeTypeId(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#_validTypeId(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase#idFromValueAndType(java.lang.Object,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#_writeScalarPrefix(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
CALLER: com.fasterxml.jackson.databind.introspect.BasicBeanDescription#instantiateBean(boolean)
	CALLEE: org.h2.jdbc.JdbcSQLException#getMessage()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#getMessage()
	CALLEE: org.glassfish.hk2.api.MultiException#getMessage()
	CALLEE: org.glassfish.jersey.server.model.ModelValidationException#getMessage()
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#getMessage()
	CALLEE: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference#getMessage()
	CALLEE: org.apache.log4j.config.PropertySetterException#getMessage()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#getDefaultConstructor()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#getAnnotated()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMember#fixAccess()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#getAnnotated()
CALLER: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#resolve(com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.ContainerSerializer#withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#assignSerializer(com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter.SingleView#assignSerializer(com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter.MultiView#assignSerializer(com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter#assignSerializer(com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.AnyGetterWriter#resolve(com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#setNonTrivialBaseType(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter#getGenericPropertyType()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#getGenericPropertyType()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#getSerializationType()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#hasSerializer()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#hasNullSerializer()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#willSuppressNulls()
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#containedTypeCount()
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#isContainerType()
	CALLEE: com.fasterxml.jackson.databind.JavaType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#getContentType()
	CALLEE: com.fasterxml.jackson.databind.type.TypeBase#getTypeHandler()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#containedTypeCount()
	CALLEE: com.fasterxml.jackson.databind.type.MapLikeType#containedTypeCount()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionLikeType#containedTypeCount()
	CALLEE: com.fasterxml.jackson.databind.DatabindContext#constructType(java.lang.reflect.Type)
	CALLEE: com.fasterxml.jackson.databind.JavaType#isFinal()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#assignNullSerializer(com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#findValueSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#findNullValueSerializer(com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter.SingleView#assignNullSerializer(com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter.MultiView#assignNullSerializer(com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#findConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.BeanPropertyWriter)
CALLER: com.fasterxml.jackson.databind.ser.BeanSerializer#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#handledType()
CALLER: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#getName()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#getType()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#withFilterId(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#asArraySerializer()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#getMember()
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#withObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#withIgnorals(java.lang.String[])
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#withFilterId(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#asArraySerializer()
	CALLEE: com.fasterxml.jackson.databind.type.TypeFactory#findTypeParameters(com.fasterxml.jackson.databind.JavaType,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#introspectClassAnnotations(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.PropertyName#getSimpleName()
	CALLEE: com.fasterxml.jackson.databind.DatabindContext#objectIdGeneratorInstance(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findPropertiesToIgnore(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findPropertiesToIgnore(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findObjectIdInfo(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findObjectIdInfo(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findObjectReferenceInfo(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findObjectReferenceInfo(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findFormat(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findFormat(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.introspect.ObjectIdInfo#<init>(com.fasterxml.jackson.databind.PropertyName,java.lang.Class,java.lang.Class,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.BeanProperty.Std#getMember()
	CALLEE: com.fasterxml.jackson.annotation.JsonFormat.Value#getShape()
	CALLEE: com.fasterxml.jackson.databind.introspect.ObjectIdInfo#getPropertyName()
	CALLEE: com.fasterxml.jackson.databind.introspect.ObjectIdInfo#getGeneratorType()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getConfig()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getTypeFactory()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getAnnotationIntrospector()
	CALLEE: static com.fasterxml.jackson.databind.ser.std.EnumSerializer#construct(java.lang.Class,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.annotation.JsonFormat.Value)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findFilterId(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator#<init>(com.fasterxml.jackson.databind.introspect.ObjectIdInfo,com.fasterxml.jackson.databind.ser.BeanPropertyWriter)
	CALLEE: static com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter#construct(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.annotation.ObjectIdGenerator,boolean)
	CALLEE: com.fasterxml.jackson.databind.DatabindContext#constructType(java.lang.reflect.Type)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#handlePrimaryContextualization(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findFilterId(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#findValueSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.introspect.ObjectIdInfo#getAlwaysAsId()
	CALLEE: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter#withAlwaysAsId(boolean)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter#withSerializer(com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#withObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#withIgnorals(java.lang.String[])
CALLER: com.fasterxml.jackson.databind.ser.std.StdKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodRouting#toString()
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.ConsumesProducesAcceptor#toString()
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#toString()
	CALLEE: org.eclipse.jetty.webapp.WebAppContext#toString()
	CALLEE: org.eclipse.jetty.server.handler.HandlerCollection#toString()
	CALLEE: org.eclipse.jetty.server.Server#toString()
	CALLEE: org.eclipse.jetty.server.AbstractNetworkConnector#toString()
	CALLEE: org.eclipse.jetty.util.thread.QueuedThreadPool#toString()
	CALLEE: org.eclipse.jetty.server.AbstractConnectionFactory#toString()
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle.Bean#toString()
	CALLEE: org.apache.log4j.NameValue#toString()
	CALLEE: liquibase.changelog.ChangeLogParameters.ChangeLogParameter#toString()
	CALLEE: org.eclipse.jetty.server.AbstractConnector.Acceptor#toString()
	CALLEE: org.eclipse.jetty.server.HttpConfiguration#toString()
	CALLEE: org.eclipse.jetty.util.MultiException#toString()
	CALLEE: org.eclipse.jetty.http.PathMap.MappedEntry#toString()
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector#toString()
	CALLEE: liquibase.servicelocator.AssignableToPackageScanFilter#toString()
	CALLEE: org.eclipse.jetty.http.HttpField#toString()
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#toString()
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#toString()
	CALLEE: org.eclipse.jetty.servlet.ServletMapping#toString()
	CALLEE: org.glassfish.jersey.internal.OsgiRegistry.BundleSpiProvidersLoader#toString()
	CALLEE: org.h2.jdbc.JdbcSQLException#toString()
	CALLEE: liquibase.changelog.filter.ChangeSetFilterResult#toString()
	CALLEE: com.zaxxer.hikari.pool.PoolEntry#toString()
	CALLEE: org.eclipse.jetty.io.SelectChannelEndPoint#toString()
	CALLEE: org.eclipse.jetty.util.FutureCallback#toString()
	CALLEE: org.eclipse.jetty.util.ConstantThrowable#toString()
	CALLEE: javax.ws.rs.core.MediaType#toString()
	CALLEE: org.glassfish.jersey.model.internal.RankedProvider#toString()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#toString()
	CALLEE: org.glassfish.hk2.api.MultiException#toString()
	CALLEE: org.glassfish.jersey.message.internal.QualitySourceMediaType#toString()
	CALLEE: jersey.repackaged.com.google.common.base.Predicates.AndPredicate#toString()
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.MapType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#toString()
	CALLEE: org.glassfish.hk2.utilities.NamedImpl#toString()
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#toString()
	CALLEE: com.fasterxml.jackson.core.JsonLocation#toString()
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#toString()
	CALLEE: com.fasterxml.jackson.databind.jsontype.NamedType#toString()
	CALLEE: liquibase.changelog.RanChangeSet#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.UnresolvedId#toString()
	CALLEE: org.glassfish.jersey.server.model.ResourceModelIssue#toString()
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#toString()
	CALLEE: org.glassfish.jersey.server.model.Parameter#toString()
	CALLEE: org.glassfish.hk2.utilities.reflection.ParameterizedTypeImpl#toString()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeFieldName(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.type.ClassKey#toString()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException.Reference#toString()
	CALLEE: org.glassfish.jersey.server.model.Resource.Data#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ValueNode#toString()
	CALLEE: org.glassfish.jersey.server.model.Resource#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#toString()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Data#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.MemberKey#toString()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ObjectNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ArrayNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.POJONode#toString()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#toString()
	CALLEE: com.fasterxml.jackson.databind.node.TextNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.BinaryNode#toString()
	CALLEE: com.fasterxml.jackson.databind.PropertyName#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#toString()
	CALLEE: com.fasterxml.jackson.core.io.SerializedString#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey#toString()
	CALLEE: org.glassfish.jersey.server.model.Invocable#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#toString()
	CALLEE: org.glassfish.jersey.server.model.MethodHandler.ClassBasedMethodHandler#toString()
	CALLEE: org.glassfish.jersey.server.model.MethodHandler.InstanceBasedMethodHandler#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#toString()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#defaultSerializeDateKey(java.util.Date,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#toString()
CALLER: com.fasterxml.jackson.databind.JsonSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#handledType()
	CALLEE: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#handledType()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#mappingException(java.lang.String,java.lang.Object[])
CALLER: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.util.Iterator)
CALLER: com.fasterxml.jackson.databind.JsonSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.JsonSerializer#isEmpty(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StringSerializer#isEmpty(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#isEmpty(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase#isEmpty(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.UUIDSerializer#isEmpty(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#isEmpty(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.ContainerSerializer#isEmpty(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase#isEmpty(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.ser.std.StringSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StringSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.String)
CALLER: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.MemberKey#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#toString()
	CALLEE: com.fasterxml.jackson.core.io.SerializedString#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.SerializerCache.TypeKey#toString()
	CALLEE: org.glassfish.jersey.server.model.Invocable#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#toString()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#toString()
	CALLEE: org.glassfish.jersey.server.model.MethodHandler.ClassBasedMethodHandler#toString()
	CALLEE: org.glassfish.jersey.server.model.MethodHandler.InstanceBasedMethodHandler#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#toString()
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodRouting#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#toString()
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.ConsumesProducesAcceptor#toString()
	CALLEE: org.eclipse.jetty.server.handler.ContextHandler#toString()
	CALLEE: org.eclipse.jetty.webapp.WebAppContext#toString()
	CALLEE: org.eclipse.jetty.server.handler.HandlerCollection#toString()
	CALLEE: org.eclipse.jetty.server.Server#toString()
	CALLEE: org.eclipse.jetty.server.AbstractNetworkConnector#toString()
	CALLEE: org.eclipse.jetty.util.thread.QueuedThreadPool#toString()
	CALLEE: org.eclipse.jetty.server.AbstractConnectionFactory#toString()
	CALLEE: org.eclipse.jetty.util.component.ContainerLifeCycle.Bean#toString()
	CALLEE: org.apache.log4j.NameValue#toString()
	CALLEE: liquibase.changelog.ChangeLogParameters.ChangeLogParameter#toString()
	CALLEE: org.eclipse.jetty.server.AbstractConnector.Acceptor#toString()
	CALLEE: org.eclipse.jetty.server.HttpConfiguration#toString()
	CALLEE: org.eclipse.jetty.util.MultiException#toString()
	CALLEE: org.eclipse.jetty.http.PathMap.MappedEntry#toString()
	CALLEE: org.eclipse.jetty.io.SelectorManager.ManagedSelector#toString()
	CALLEE: liquibase.servicelocator.AssignableToPackageScanFilter#toString()
	CALLEE: org.eclipse.jetty.http.HttpField#toString()
	CALLEE: org.eclipse.jetty.server.session.AbstractSession#toString()
	CALLEE: org.eclipse.jetty.servlet.ServletHolder#toString()
	CALLEE: org.eclipse.jetty.servlet.ServletMapping#toString()
	CALLEE: org.glassfish.jersey.internal.OsgiRegistry.BundleSpiProvidersLoader#toString()
	CALLEE: org.h2.jdbc.JdbcSQLException#toString()
	CALLEE: liquibase.changelog.filter.ChangeSetFilterResult#toString()
	CALLEE: com.zaxxer.hikari.pool.PoolEntry#toString()
	CALLEE: org.eclipse.jetty.io.SelectChannelEndPoint#toString()
	CALLEE: org.eclipse.jetty.util.FutureCallback#toString()
	CALLEE: org.eclipse.jetty.util.ConstantThrowable#toString()
	CALLEE: javax.ws.rs.core.MediaType#toString()
	CALLEE: org.glassfish.jersey.model.internal.RankedProvider#toString()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#toString()
	CALLEE: org.glassfish.hk2.api.MultiException#toString()
	CALLEE: org.glassfish.jersey.message.internal.QualitySourceMediaType#toString()
	CALLEE: jersey.repackaged.com.google.common.base.Predicates.AndPredicate#toString()
	CALLEE: com.fasterxml.jackson.databind.type.SimpleType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.ArrayType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.MapType#toString()
	CALLEE: com.fasterxml.jackson.databind.type.CollectionType#toString()
	CALLEE: org.glassfish.hk2.utilities.NamedImpl#toString()
	CALLEE: org.glassfish.jersey.server.model.Resource.Builder#toString()
	CALLEE: com.fasterxml.jackson.core.JsonLocation#toString()
	CALLEE: com.fasterxml.jackson.core.JsonProcessingException#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.SettableBeanProperty#toString()
	CALLEE: com.fasterxml.jackson.databind.jsontype.NamedType#toString()
	CALLEE: liquibase.changelog.RanChangeSet#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.UnresolvedId#toString()
	CALLEE: org.glassfish.jersey.server.model.ResourceModelIssue#toString()
	CALLEE: org.glassfish.jersey.server.model.AnnotatedMethod#toString()
	CALLEE: org.glassfish.jersey.server.model.Parameter#toString()
	CALLEE: org.glassfish.hk2.utilities.reflection.ParameterizedTypeImpl#toString()
	CALLEE: com.fasterxml.jackson.databind.type.ClassKey#toString()
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException.Reference#toString()
	CALLEE: org.glassfish.jersey.server.model.Resource.Data#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ValueNode#toString()
	CALLEE: org.glassfish.jersey.server.model.Resource#toString()
	CALLEE: com.fasterxml.jackson.databind.deser.CreatorProperty#toString()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Data#toString()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ObjectNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.ArrayNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.POJONode#toString()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod#toString()
	CALLEE: com.fasterxml.jackson.databind.node.TextNode#toString()
	CALLEE: com.fasterxml.jackson.databind.node.BinaryNode#toString()
	CALLEE: com.fasterxml.jackson.databind.PropertyName#toString()
CALLER: com.fasterxml.jackson.databind.ser.std.UUIDSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.UUIDSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.util.UUID)
CALLER: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#convertValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.JsonSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StringSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.UUIDSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.IterableSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object[])
CALLER: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.util.Map.Entry)
CALLER: com.fasterxml.jackson.databind.ser.std.IterableSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.IterableSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Iterable)
CALLER: com.fasterxml.jackson.databind.ser.std.MapSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.util.Map)
CALLER: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.util.EnumSet)
CALLER: com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.util.Collection)
CALLER: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.util.List)
CALLER: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.util.Collection)
CALLER: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.String[])
CALLER: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,boolean[])
CALLER: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,byte[])
CALLER: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,char[])
CALLER: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,short[])
CALLER: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,int[])
CALLER: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,long[])
CALLER: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,float[])
CALLER: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,double[])
CALLER: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.CalendarKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.CalendarKeySerializer#serialize(java.util.Calendar,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.StringKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.StringKeySerializer#serialize(java.lang.String,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.ClassKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.ClassKeySerializer#serialize(java.lang.Class,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.DateKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.DateKeySerializer#serialize(java.util.Date,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Single#newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Double#<init>(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase#idFromValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver#idFromValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver#idFromValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.MinimalClassNameIdResolver#idFromValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase#handleMissingId(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#_writeArraySuffix(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeEndArray()
	CALLEE: com.fasterxml.jackson.core.JsonGenerator#writeStringField(java.lang.String,java.lang.String)
CALLER: com.fasterxml.jackson.core.JsonGenerator#writeArrayFieldStart(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeFieldName(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeStartArray()
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#_writeArrayPrefix(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeStartArray()
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#_writeScalarSuffix(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
	CALLEE: com.fasterxml.jackson.core.JsonGenerator#writeStringField(java.lang.String,java.lang.String)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#_writeObjectSuffix(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeEndObject()
	CALLEE: com.fasterxml.jackson.core.JsonGenerator#writeStringField(java.lang.String,java.lang.String)
CALLER: com.fasterxml.jackson.core.JsonGenerator#writeStringField(java.lang.String,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeFieldName(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeString(java.lang.String)
CALLER: com.fasterxml.jackson.core.JsonGenerator#writeObjectFieldStart(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeFieldName(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeStartObject()
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#_writeObjectPrefix(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeStartObject()
CALLER: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#withGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility)
	CALLEE: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#withGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility)
CALLER: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#withIsGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility)
	CALLEE: com.fasterxml.jackson.databind.introspect.VisibilityChecker.Std#withIsGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility)
CALLER: org.glassfish.jersey.server.internal.routing.RuntimeModelBuilder#<init>(org.glassfish.hk2.api.ServiceLocator,org.glassfish.jersey.server.internal.JerseyResourceContext,javax.ws.rs.core.Configuration,org.glassfish.jersey.message.MessageBodyWorkers,org.glassfish.jersey.server.internal.ProcessingProviders,org.glassfish.jersey.server.model.ResourceMethodInvoker.Builder)
	CALLEE: static org.glassfish.jersey.internal.util.collection.Values#lazy(org.glassfish.jersey.internal.util.collection.Value)
	CALLEE: org.glassfish.jersey.server.internal.routing.RuntimeModelBuilder.1#<init>(org.glassfish.jersey.server.internal.routing.RuntimeModelBuilder,org.glassfish.hk2.api.ServiceLocator,javax.ws.rs.core.Configuration,org.glassfish.jersey.server.internal.JerseyResourceContext)
CALLER: org.glassfish.jersey.server.internal.routing.RuntimeModelBuilder#buildModel(org.glassfish.jersey.server.model.RuntimeResourceModel,boolean)
	CALLEE: org.glassfish.jersey.server.model.Resource#getPathPattern()
	CALLEE: org.glassfish.jersey.server.internal.routing.RuntimeModelBuilder#createRootRouter(org.glassfish.jersey.server.internal.routing.PathMatchingRouterBuilder,boolean)
	CALLEE: org.glassfish.jersey.server.internal.routing.PathMatchingRouterBuilder#to(org.glassfish.jersey.server.internal.routing.Router)
	CALLEE: org.glassfish.jersey.server.internal.routing.PathMatchingRouterBuilder#build()
	CALLEE: org.glassfish.jersey.server.model.RuntimeResourceModel#getRuntimeResources()
	CALLEE: org.glassfish.jersey.server.model.RuntimeResource#getPathPattern()
	CALLEE: org.glassfish.jersey.server.model.RuntimeResource#getChildRuntimeResources()
	CALLEE: org.glassfish.jersey.server.model.RuntimeResource#getResourceMethods()
	CALLEE: org.glassfish.jersey.server.internal.routing.PushMatchedUriRouter#<init>()
	CALLEE: org.glassfish.jersey.server.internal.routing.PushMatchedRuntimeResourceRouter#<init>(org.glassfish.jersey.server.model.RuntimeResource)
	CALLEE: org.glassfish.jersey.server.internal.routing.RuntimeModelBuilder#createResourceMethodRouters(org.glassfish.jersey.server.model.RuntimeResource,boolean)
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodSelectingRouter#<init>(org.glassfish.jersey.message.MessageBodyWorkers,java.util.List)
	CALLEE: org.glassfish.jersey.server.internal.routing.RuntimeModelBuilder#startNextRoute(org.glassfish.jersey.server.internal.routing.PathMatchingRouterBuilder,org.glassfish.jersey.uri.PathPattern)
	CALLEE: static org.glassfish.jersey.uri.PathPattern#asClosed(org.glassfish.jersey.uri.PathPattern)
	CALLEE: org.glassfish.jersey.server.model.RuntimeResource#getResourceLocator()
	CALLEE: org.glassfish.jersey.server.internal.routing.RuntimeModelBuilder#getTemplateRouterForChildLocator(boolean,org.glassfish.jersey.server.model.RuntimeResource)
	CALLEE: org.glassfish.jersey.server.internal.routing.PushMatchedMethodRouter#<init>(org.glassfish.jersey.server.model.ResourceMethod)
	CALLEE: org.glassfish.jersey.server.internal.routing.RuntimeModelBuilder#createMethodRouter(org.glassfish.jersey.server.model.ResourceMethod)
	CALLEE: org.glassfish.jersey.server.internal.routing.RuntimeModelBuilder#getLocatorResource(org.glassfish.jersey.server.model.RuntimeResource)
	CALLEE: org.glassfish.jersey.uri.PathPattern#getTemplate()
	CALLEE: org.glassfish.jersey.server.internal.routing.RuntimeModelBuilder#getTemplateRouter(boolean,org.glassfish.jersey.uri.UriTemplate,org.glassfish.jersey.uri.UriTemplate)
CALLER: org.glassfish.jersey.server.internal.routing.RoutingStage#<init>(org.glassfish.jersey.server.internal.routing.Router)
	CALLEE: org.glassfish.jersey.process.internal.AbstractChainableStage#<init>()
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedClass#hasAnnotations()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedClass#resolveClassAnnotations()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotationMap#size()
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findSerializationInclusion(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.annotation.JsonInclude.Include)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#_findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
CALLER: com.fasterxml.jackson.databind.util.TokenBuffer#writeRawValue(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#_reportUnsupportedOperation()
CALLER: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#_serializeWithObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,boolean)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.RawSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.CalendarKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.StringKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.ClassKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.DateKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeStartObject()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeEndObject()
	CALLEE: com.fasterxml.jackson.databind.ser.std.NullSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BooleanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CalendarSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.DateSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.UUIDSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.LongSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntLikeSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.ShortSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.FloatSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.IterableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#serializeFieldsFiltered(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#serializeFields(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider#findObjectId(java.lang.Object,com.fasterxml.jackson.annotation.ObjectIdGenerator)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.WritableObjectId#writeAsField(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.WritableObjectId#generateId(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.WritableObjectId#writeAsId(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)
CALLER: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#serializeFieldsFiltered(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#prependPath(com.fasterxml.jackson.databind.JsonMappingException.Reference)
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException.Reference#<init>(java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#<init>(java.lang.String,java.lang.Throwable)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#getName()
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#findPropertyFilter(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#serializeFields(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getActiveView()
	CALLEE: com.fasterxml.jackson.databind.ser.AnyGetterWriter#getAndFilter(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.PropertyFilter)
CALLER: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#serializeFields(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#prependPath(com.fasterxml.jackson.databind.JsonMappingException.Reference)
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException.Reference#<init>(java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#<init>(java.lang.String,java.lang.Throwable)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#getName()
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getActiveView()
	CALLEE: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter#serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter.SingleView#serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter.MultiView#serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter#serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.AnyGetterWriter#getAndSerialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#_serializeWithObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.RawSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.CalendarKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.StringKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.ClassKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.DateKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NullSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BooleanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CalendarSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.DateSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.UUIDSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.LongSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntLikeSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.ShortSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.FloatSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.IterableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider#findObjectId(java.lang.Object,com.fasterxml.jackson.annotation.ObjectIdGenerator)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#_serializeObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.ser.impl.WritableObjectId)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.WritableObjectId#generateId(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.WritableObjectId#writeAsId(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)
CALLER: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#_customTypeId(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#getValue(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeCustomTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeStartObject()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeString(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeStartArray()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#canWriteTypeId()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeTypeId(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer#writeCustomTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeStartObject()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#canWriteTypeId()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeTypeId(java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.JsonGenerator#writeStringField(java.lang.String,java.lang.String)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeCustomTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeStartObject()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#canWriteTypeId()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeTypeId(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#_validTypeId(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.JsonGenerator#writeObjectFieldStart(java.lang.String)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeCustomTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#_writeObjectPrefix(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer#writeCustomTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeStartObject()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#canWriteTypeId()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeTypeId(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeCustomTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer#writeTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#canWriteTypeId()
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer#writeCustomTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeEndObject()
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeCustomTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#canWriteTypeId()
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeCustomTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#_writeObjectSuffix(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase#idFromValueAndType(java.lang.Object,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver#idFromValueAndType(java.lang.Object,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver#idFromValueAndType(java.lang.Object,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase#handleMissingId(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter.SingleView#assignNullSerializer(com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#assignNullSerializer(com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter.SingleView#assignNullSerializer(com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter.MultiView#assignNullSerializer(com.fasterxml.jackson.databind.JsonSerializer)
CALLER: com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter.MultiView#assignNullSerializer(com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#assignNullSerializer(com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter.SingleView#assignNullSerializer(com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter.MultiView#assignNullSerializer(com.fasterxml.jackson.databind.JsonSerializer)
CALLER: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#findConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.BeanPropertyWriter)
	CALLEE: com.fasterxml.jackson.databind.DatabindContext#converterInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getTypeFactory()
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#<init>(com.fasterxml.jackson.databind.util.Converter,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getAnnotationIntrospector()
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#findSerializationConverter(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#findSerializationConverter(com.fasterxml.jackson.databind.introspect.Annotated)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#findValueSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#getMember()
CALLER: com.fasterxml.jackson.databind.ser.ContainerSerializer#withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#_withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#_withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#_withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.IterableSerializer#_withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#_withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#_withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#_withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#_withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#_withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer#_withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#_withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer#_withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#_withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#_withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer#_withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer)
CALLER: com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter.SingleView#assignSerializer(com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#assignSerializer(com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter.SingleView#assignSerializer(com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter.MultiView#assignSerializer(com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter#assignSerializer(com.fasterxml.jackson.databind.JsonSerializer)
CALLER: com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter.MultiView#assignSerializer(com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#assignSerializer(com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter.SingleView#assignSerializer(com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter.MultiView#assignSerializer(com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter#assignSerializer(com.fasterxml.jackson.databind.JsonSerializer)
CALLER: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter#assignSerializer(com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#assignSerializer(com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.JsonSerializer#isUnwrappingSerializer()
	CALLEE: static com.fasterxml.jackson.databind.util.NameTransformer#chainedTransformer(com.fasterxml.jackson.databind.util.NameTransformer,com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.JsonSerializer#unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer#isUnwrappingSerializer()
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer#unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#isUnwrappingSerializer()
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)
CALLER: com.fasterxml.jackson.databind.ser.AnyGetterWriter#resolve(com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#handlePrimaryContextualization(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty)
CALLER: static com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.1#<clinit>()
	CALLEE: static com.fasterxml.jackson.annotation.JsonFormat.Shape#values()
CALLER: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter#withAlwaysAsId(boolean)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.SerializableString,com.fasterxml.jackson.annotation.ObjectIdGenerator,com.fasterxml.jackson.databind.JsonSerializer,boolean)
CALLER: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter#withSerializer(com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter#<init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.SerializableString,com.fasterxml.jackson.annotation.ObjectIdGenerator,com.fasterxml.jackson.databind.JsonSerializer,boolean)
CALLER: com.fasterxml.jackson.databind.ser.BeanSerializer#withObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#<init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.ser.BeanSerializer#withIgnorals(java.lang.String[])
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#<init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,java.lang.String[])
CALLER: com.fasterxml.jackson.databind.ser.BeanSerializer#withFilterId(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#<init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.ser.BeanSerializer#asArraySerializer()
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#<init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase)
CALLER: com.fasterxml.jackson.databind.SerializerProvider#defaultSerializeDateKey(java.util.Date,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeFieldName(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#isEnabled(com.fasterxml.jackson.databind.SerializationFeature)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#_dateFormat()
CALLER: com.fasterxml.jackson.databind.SerializerProvider#mappingException(java.lang.String,java.lang.Object[])
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#<init>(java.lang.String)
CALLER: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.util.Iterator)
	CALLEE: org.glassfish.jersey.server.internal.scanning.PackageNamesScanner#hasNext()
	CALLEE: org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.VfsResourceFinder#hasNext()
	CALLEE: org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.JarZipSchemeScanner#hasNext()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeScanner#hasNext()
	CALLEE: org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory.BundleSchemeScanner#hasNext()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeScanner.1#hasNext()
	CALLEE: org.glassfish.jersey.server.internal.scanning.JarFileScanner#hasNext()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FilesScanner#hasNext()
	CALLEE: org.glassfish.jersey.servlet.WebAppResourcesScanner#hasNext()
	CALLEE: org.glassfish.jersey.servlet.WebAppResourcesScanner.1#hasNext()
	CALLEE: org.glassfish.jersey.server.internal.scanning.FilesScanner.1#hasNext()
CALLER: com.fasterxml.jackson.databind.ser.std.StringSerializer#isEmpty(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StringSerializer#isEmpty(java.lang.String)
CALLER: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#isEmpty(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase#isEmpty(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CalendarSerializer#_timestamp(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.DateSerializer#_timestamp(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.ser.std.UUIDSerializer#isEmpty(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.UUIDSerializer#isEmpty(java.util.UUID)
CALLER: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#isEmpty(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#convertValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.JsonSerializer#isEmpty(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StringSerializer#isEmpty(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#isEmpty(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase#isEmpty(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.UUIDSerializer#isEmpty(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#isEmpty(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.ContainerSerializer#isEmpty(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase#isEmpty(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.ser.ContainerSerializer#isEmpty(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.IterableSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase#isEmpty(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase#isEmpty(java.util.Collection)
CALLER: com.fasterxml.jackson.databind.ser.std.IterableSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Iterable)
	CALLEE: jersey.repackaged.com.google.common.collect.TransformedIterator#hasNext()
	CALLEE: com.fasterxml.jackson.databind.JsonNode#iterator()
	CALLEE: com.fasterxml.jackson.databind.util.EmptyIterator#hasNext()
CALLER: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.CalendarKeySerializer#serialize(java.util.Calendar,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#defaultSerializeDateKey(long,com.fasterxml.jackson.core.JsonGenerator)
CALLER: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.StringKeySerializer#serialize(java.lang.String,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeFieldName(java.lang.String)
CALLER: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.ClassKeySerializer#serialize(java.lang.Class,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeFieldName(java.lang.String)
CALLER: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.DateKeySerializer#serialize(java.util.Date,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#defaultSerializeDateKey(java.util.Date,com.fasterxml.jackson.core.JsonGenerator)
CALLER: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Double#<init>(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap#<init>(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver#idFromValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver#_idFrom(java.lang.Object,java.lang.Class)
CALLER: org.glassfish.jersey.server.internal.routing.RuntimeModelBuilder#createResourceMethodRouters(org.glassfish.jersey.server.model.RuntimeResource,boolean)
	CALLEE: jersey.repackaged.com.google.common.collect.Lists.TransformingRandomAccessList#get(int)
	CALLEE: org.glassfish.jersey.server.model.Resource#getPathPattern()
	CALLEE: org.glassfish.jersey.uri.PathPattern#getTemplate()
	CALLEE: org.glassfish.jersey.server.model.Resource#getResourceMethods()
	CALLEE: org.glassfish.jersey.server.internal.routing.PushMatchedMethodRouter#<init>(org.glassfish.jersey.server.model.ResourceMethod)
	CALLEE: org.glassfish.jersey.server.internal.routing.RuntimeModelBuilder#createMethodRouter(org.glassfish.jersey.server.model.ResourceMethod)
	CALLEE: org.glassfish.jersey.server.internal.routing.RuntimeModelBuilder#getTemplateRouter(boolean,org.glassfish.jersey.uri.UriTemplate,org.glassfish.jersey.uri.UriTemplate)
	CALLEE: org.glassfish.jersey.server.model.RuntimeResource#getResources()
	CALLEE: org.glassfish.jersey.server.model.RuntimeResource#getParent()
	CALLEE: org.glassfish.jersey.server.model.RuntimeResource#getParentResources()
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodRouting#<init>(org.glassfish.jersey.server.model.ResourceMethod,org.glassfish.jersey.server.internal.routing.Router[])
CALLER: static org.glassfish.jersey.server.internal.routing.MethodSelectingRouter#<clinit>()
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.1#<init>()
CALLER: org.glassfish.jersey.server.internal.routing.MethodSelectingRouter#<init>(org.glassfish.jersey.message.MessageBodyWorkers,java.util.List)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod#getHttpMethod()
	CALLEE: static jersey.repackaged.com.google.common.collect.Sets#newHashSet()
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodSelectingRouter#addAllConsumesProducesCombinations(java.util.List,org.glassfish.jersey.server.internal.routing.MethodRouting)
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodSelectingRouter#createHeadEnrichedRouter()
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodSelectingRouter#createInternalRouter()
CALLER: org.glassfish.jersey.server.internal.routing.RuntimeModelBuilder#startNextRoute(org.glassfish.jersey.server.internal.routing.PathMatchingRouterBuilder,org.glassfish.jersey.uri.PathPattern)
	CALLEE: static org.glassfish.jersey.server.internal.routing.PathMatchingRouterBuilder#newRoute(org.glassfish.jersey.uri.PathPattern)
	CALLEE: org.glassfish.jersey.server.internal.routing.PathMatchingRouterBuilder#route(org.glassfish.jersey.uri.PathPattern)
CALLER: static org.glassfish.jersey.uri.PathPattern#asClosed(org.glassfish.jersey.uri.PathPattern)
	CALLEE: org.glassfish.jersey.uri.PathPattern#<init>(java.lang.String,org.glassfish.jersey.uri.PathPattern.RightHandPath)
	CALLEE: org.glassfish.jersey.uri.PathPattern#getTemplate()
	CALLEE: org.glassfish.jersey.uri.UriTemplate#getTemplate()
CALLER: org.glassfish.jersey.server.internal.routing.RuntimeModelBuilder#getTemplateRouterForChildLocator(boolean,org.glassfish.jersey.server.model.RuntimeResource)
	CALLEE: jersey.repackaged.com.google.common.collect.Lists.TransformingRandomAccessList#get(int)
	CALLEE: org.glassfish.jersey.server.model.Resource#getPathPattern()
	CALLEE: org.glassfish.jersey.server.model.Resource#getResourceLocator()
	CALLEE: org.glassfish.jersey.uri.PathPattern#getTemplate()
	CALLEE: org.glassfish.jersey.server.internal.routing.RuntimeModelBuilder#getTemplateRouter(boolean,org.glassfish.jersey.uri.UriTemplate,org.glassfish.jersey.uri.UriTemplate)
	CALLEE: org.glassfish.jersey.server.model.RuntimeResource#getResources()
	CALLEE: org.glassfish.jersey.server.model.RuntimeResource#getParentResources()
CALLER: org.glassfish.jersey.server.internal.routing.RuntimeModelBuilder#createMethodRouter(org.glassfish.jersey.server.model.ResourceMethod)
	CALLEE: org.glassfish.jersey.internal.util.collection.Values.LazyValueImpl#get()
	CALLEE: org.glassfish.jersey.internal.util.collection.Values.1#get()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod#getInvocable()
	CALLEE: org.glassfish.jersey.server.model.Invocable#getHandler()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod#getType()
	CALLEE: org.glassfish.jersey.server.internal.routing.RuntimeModelBuilder#createInflector(org.glassfish.jersey.server.model.ResourceMethod)
	CALLEE: static org.glassfish.jersey.server.internal.routing.Routers#endpoint(org.glassfish.jersey.server.internal.process.Endpoint)
	CALLEE: org.glassfish.jersey.server.internal.routing.PushMethodHandlerRouter#<init>(org.glassfish.jersey.server.model.MethodHandler,org.glassfish.jersey.server.internal.routing.Router)
	CALLEE: org.glassfish.jersey.server.internal.routing.RuntimeLocatorModelBuilder#getRouter(org.glassfish.jersey.server.model.ResourceMethod)
CALLER: org.glassfish.jersey.server.internal.routing.RuntimeModelBuilder#getLocatorResource(org.glassfish.jersey.server.model.RuntimeResource)
	CALLEE: org.glassfish.jersey.server.model.Resource#getResourceLocator()
	CALLEE: org.glassfish.jersey.server.model.RuntimeResource#getResources()
CALLER: org.glassfish.jersey.server.internal.routing.RuntimeModelBuilder#getTemplateRouter(boolean,org.glassfish.jersey.uri.UriTemplate,org.glassfish.jersey.uri.UriTemplate)
	CALLEE: org.glassfish.jersey.uri.PathPattern#getTemplate()
	CALLEE: org.glassfish.jersey.server.internal.routing.PushMatchedTemplateRouter#<init>(org.glassfish.jersey.uri.UriTemplate,org.glassfish.jersey.uri.UriTemplate)
	CALLEE: org.glassfish.jersey.server.internal.routing.PushMatchedTemplateRouter#<init>(org.glassfish.jersey.uri.UriTemplate)
CALLER: org.glassfish.jersey.server.internal.routing.RuntimeModelBuilder#createRootRouter(org.glassfish.jersey.server.internal.routing.PathMatchingRouterBuilder,boolean)
	CALLEE: static org.glassfish.jersey.server.internal.routing.Routers#noop()
	CALLEE: org.glassfish.jersey.server.internal.routing.MatchResultInitializerRouter#<init>(org.glassfish.jersey.server.internal.routing.Router)
	CALLEE: org.glassfish.jersey.server.internal.routing.PathMatchingRouterBuilder#build()
CALLER: static com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.1#<clinit>()
	CALLEE: static com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion#values()
CALLER: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider#findObjectId(java.lang.Object,com.fasterxml.jackson.annotation.ObjectIdGenerator)
	CALLEE: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider#_createObjectIdMap()
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator#newForSerialization(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.WritableObjectId#<init>(com.fasterxml.jackson.annotation.ObjectIdGenerator)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator#canUseFor(com.fasterxml.jackson.annotation.ObjectIdGenerator)
CALLER: com.fasterxml.jackson.databind.ser.AnyGetterWriter#getAndFilter(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.PropertyFilter)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#<init>(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getName()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#getName()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#getName()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#getName()
	CALLEE: com.fasterxml.jackson.databind.ser.std.NullSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BooleanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CalendarSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.DateSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.UUIDSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.LongSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntLikeSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.ShortSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.FloatSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.IterableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serializeFilteredFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.PropertyFilter,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#getValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.RawSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.CalendarKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.StringKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.ClassKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.DateKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#getValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#getValue(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter#serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Single#serializerFor(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Double#serializerFor(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Multi#serializerFor(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeFieldName(com.fasterxml.jackson.core.SerializableString)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NullSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BooleanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CalendarSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.DateSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.UUIDSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.LongSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntLikeSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.ShortSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.FloatSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.IterableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NonTypedScalarSerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdScalarSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NullSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ArraySerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Empty#serializerFor(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.std.RawSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.RawSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.JsonSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.JsonSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StringSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.UUIDSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.IterableSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.CalendarKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.StringKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.ClassKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.DateKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.AttributePropertyWriter#value(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#_findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.ArrayBuilders.1#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#_handleSelfReference(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer)
CALLER: com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter.SingleView#serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getActiveView()
	CALLEE: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter#serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter.SingleView#serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter.MultiView#serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter#serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#serializeAsOmittedField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter.MultiView#serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getActiveView()
	CALLEE: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter#serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter.SingleView#serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter.MultiView#serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter#serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#serializeAsOmittedField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Single#serializerFor(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Double#serializerFor(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Multi#serializerFor(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeFieldName(com.fasterxml.jackson.core.SerializableString)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NullSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BooleanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CalendarSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.DateSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.UUIDSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.LongSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntLikeSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.ShortSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.FloatSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.IterableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NonTypedScalarSerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdScalarSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NullSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ArraySerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Empty#serializerFor(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.std.RawSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.RawSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.JsonSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.JsonSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StringSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.UUIDSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.IterableSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.CalendarKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.StringKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.ClassKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.DateKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#_findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.ArrayBuilders.1#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#_handleSelfReference(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter#_findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter#serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Single#serializerFor(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer#isUnwrappingSerializer()
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#isUnwrappingSerializer()
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Double#serializerFor(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Multi#serializerFor(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeFieldName(com.fasterxml.jackson.core.SerializableString)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NullSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BooleanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CalendarSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.DateSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.UUIDSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.LongSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntLikeSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.ShortSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.FloatSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.IterableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NonTypedScalarSerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdScalarSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NullSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ArraySerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Empty#serializerFor(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.std.RawSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.RawSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.JsonSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.JsonSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StringSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.UUIDSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.IterableSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.CalendarKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.StringKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.ClassKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.DateKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.JsonSerializer#isUnwrappingSerializer()
	CALLEE: com.fasterxml.jackson.databind.util.ArrayBuilders.1#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#_handleSelfReference(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter#_findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#get(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.ser.AnyGetterWriter#getAndSerialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#<init>(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getName()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#getName()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#getName()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#getName()
	CALLEE: com.fasterxml.jackson.databind.ser.std.NullSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BooleanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CalendarSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.DateSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.UUIDSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.LongSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntLikeSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.ShortSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.FloatSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.IterableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serializeFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedField#getValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.RawSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.CalendarKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.StringKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.ClassKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.DateKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#getValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#getValue(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#_serializeObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.ser.impl.WritableObjectId)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.WritableObjectId#writeAsField(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer#writeTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer#writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer#writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#serializeFieldsFiltered(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#serializeFields(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#_customTypeId(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeCustomTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer#writeCustomTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeCustomTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeCustomTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer#writeCustomTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeCustomTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer#writeCustomTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeCustomTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeCustomTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
CALLER: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#_withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#<init>(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)
CALLER: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#_withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#<init>(com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer)
CALLER: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#_withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#<init>(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.ser.std.IterableSerializer#_withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.IterableSerializer#<init>(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.ser.std.MapSerializer#_withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#_withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer)
CALLER: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#_withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#_withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer)
CALLER: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#_withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#<init>(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer)
CALLER: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#_withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#<init>(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer)
CALLER: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#_withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#<init>(com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
CALLER: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#_withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#<init>(com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
CALLER: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#_withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#<init>(com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
CALLER: static com.fasterxml.jackson.databind.util.NameTransformer#chainedTransformer(com.fasterxml.jackson.databind.util.NameTransformer,com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.util.NameTransformer.Chained#<init>(com.fasterxml.jackson.databind.util.NameTransformer,com.fasterxml.jackson.databind.util.NameTransformer)
CALLER: com.fasterxml.jackson.databind.ser.BeanSerializer#unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer#<init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.util.NameTransformer)
CALLER: com.fasterxml.jackson.databind.ser.BeanSerializer#<init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#<init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.ser.BeanSerializer#<init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,java.lang.String[])
	CALLEE: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#<init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,java.lang.String[])
CALLER: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#<init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#<init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)
CALLER: com.fasterxml.jackson.databind.ser.std.CalendarSerializer#_timestamp(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CalendarSerializer#_timestamp(java.util.Calendar)
CALLER: com.fasterxml.jackson.databind.ser.std.DateSerializer#_timestamp(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.DateSerializer#_timestamp(java.util.Date)
CALLER: com.fasterxml.jackson.databind.ser.std.UUIDSerializer#isEmpty(java.util.UUID)
	CALLEE: com.fasterxml.jackson.databind.ser.std.UUIDSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.util.UUID)
CALLER: com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase#isEmpty(java.util.Collection)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.util.Collection)
CALLER: com.fasterxml.jackson.databind.SerializerProvider#defaultSerializeDateKey(long,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeFieldName(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#isEnabled(com.fasterxml.jackson.databind.SerializationFeature)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#_dateFormat()
CALLER: org.glassfish.jersey.server.model.RuntimeResource#getParentResources()
	CALLEE: static jersey.repackaged.com.google.common.collect.Lists#transform(java.util.List,jersey.repackaged.com.google.common.base.Function)
	CALLEE: org.glassfish.jersey.server.model.RuntimeResource.2#<init>(org.glassfish.jersey.server.model.RuntimeResource)
CALLER: org.glassfish.jersey.server.internal.routing.MethodSelectingRouter#addAllConsumesProducesCombinations(java.util.List,org.glassfish.jersey.server.internal.routing.MethodRouting)
	CALLEE: static jersey.repackaged.com.google.common.collect.Sets#newHashSet()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod#getProducedTypes()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod#getConsumedTypes()
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodSelectingRouter#fillMediaTypes(java.util.Set,org.glassfish.jersey.server.model.ResourceMethod,java.util.List,boolean)
	CALLEE: org.glassfish.jersey.server.internal.routing.CombinedMediaType.EffectiveMediaType#<init>(javax.ws.rs.core.MediaType,boolean)
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.ConsumesProducesAcceptor#<init>(org.glassfish.jersey.server.internal.routing.CombinedMediaType.EffectiveMediaType,org.glassfish.jersey.server.internal.routing.CombinedMediaType.EffectiveMediaType,org.glassfish.jersey.server.internal.routing.MethodRouting,org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.1)
CALLER: org.glassfish.jersey.server.internal.routing.MethodSelectingRouter#createHeadEnrichedRouter()
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.4#<init>(org.glassfish.jersey.server.internal.routing.MethodSelectingRouter)
CALLER: org.glassfish.jersey.server.internal.routing.MethodSelectingRouter#createInternalRouter()
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.2#<init>(org.glassfish.jersey.server.internal.routing.MethodSelectingRouter)
CALLER: static org.glassfish.jersey.server.internal.routing.PathMatchingRouterBuilder#newRoute(org.glassfish.jersey.uri.PathPattern)
	CALLEE: org.glassfish.jersey.server.internal.routing.PathMatchingRouterBuilder#<init>()
	CALLEE: org.glassfish.jersey.server.internal.routing.PathMatchingRouterBuilder#startNewRoute(org.glassfish.jersey.uri.PathPattern)
CALLER: static org.glassfish.jersey.server.internal.routing.RuntimeModelBuilder.2#<clinit>()
	CALLEE: static org.glassfish.jersey.server.model.ResourceMethod.JaxrsType#values()
CALLER: static org.glassfish.jersey.server.internal.routing.Routers#endpoint(org.glassfish.jersey.server.internal.process.Endpoint)
	CALLEE: org.glassfish.jersey.server.internal.routing.Routers.EndpointRouter#<init>(org.glassfish.jersey.server.internal.process.Endpoint)
CALLER: static org.glassfish.jersey.server.internal.routing.Routers#<clinit>()
	CALLEE: org.glassfish.jersey.server.internal.routing.Routers.1#<init>()
CALLER: static com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion#<clinit>()
	CALLEE: com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion#<init>(java.lang.String,int)
CALLER: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider#_createObjectIdMap()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#isEnabled(com.fasterxml.jackson.databind.SerializationFeature)
CALLER: com.fasterxml.jackson.databind.ser.impl.AttributePropertyWriter#value(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getAttribute(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#_findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.DatabindContext#constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap#findAndAddPrimarySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap#findAndAddPrimarySerializer(java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#_handleSelfReference(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#<init>(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#isEnabled(com.fasterxml.jackson.databind.SerializationFeature)
	CALLEE: com.fasterxml.jackson.databind.JsonSerializer#usesObjectId()
	CALLEE: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#usesObjectId()
CALLER: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#serializeAsOmittedField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.core.io.SerializedString#getValue()
	CALLEE: com.fasterxml.jackson.core.JsonGenerator#canOmitFields()
	CALLEE: com.fasterxml.jackson.core.JsonGenerator#writeOmittedField(java.lang.String)
CALLER: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter#_findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#findValueSerializer(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#findValueSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.DatabindContext#constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Empty#newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Single#newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.JsonSerializer#isUnwrappingSerializer()
	CALLEE: static com.fasterxml.jackson.databind.util.NameTransformer#chainedTransformer(com.fasterxml.jackson.databind.util.NameTransformer,com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.JsonSerializer#unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#isUnwrappingSerializer()
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Double#newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Multi#newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer)
CALLER: com.fasterxml.jackson.databind.ser.std.MapSerializer#_withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#_ensureOverride()
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#<init>(com.fasterxml.jackson.databind.ser.std.MapSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#<init>(com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.TypedPrimitiveArraySerializer#<init>(com.fasterxml.jackson.databind.ser.std.StdArraySerializers.TypedPrimitiveArraySerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
CALLER: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#<init>(com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.TypedPrimitiveArraySerializer#<init>(com.fasterxml.jackson.databind.ser.std.StdArraySerializers.TypedPrimitiveArraySerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
CALLER: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#<init>(com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.TypedPrimitiveArraySerializer#<init>(com.fasterxml.jackson.databind.ser.std.StdArraySerializers.TypedPrimitiveArraySerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
CALLER: com.fasterxml.jackson.databind.util.NameTransformer.Chained#<init>(com.fasterxml.jackson.databind.util.NameTransformer,com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.util.NameTransformer#<init>()
CALLER: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer#<init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#<init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.util.NameTransformer)
CALLER: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#<init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#<init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,java.lang.String[])
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#<init>(java.lang.Class)
	CALLEE: static com.fasterxml.jackson.databind.util.ArrayBuilders#arrayToSet(java.lang.Object[])
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#getName()
CALLER: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#<init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#<init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter,java.lang.Object)
CALLER: org.glassfish.jersey.server.internal.routing.MethodSelectingRouter#fillMediaTypes(java.util.Set,org.glassfish.jersey.server.model.ResourceMethod,java.util.List,boolean)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod#getInvocable()
	CALLEE: org.glassfish.jersey.server.model.Invocable#getRawResponseType()
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodSelectingRouter#fillInputTypesFromWorkers(java.util.Set,org.glassfish.jersey.server.model.Invocable)
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodSelectingRouter#fillOutputTypesFromWorkers(java.util.Set,java.lang.Class)
CALLER: org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.ConsumesProducesAcceptor#<init>(org.glassfish.jersey.server.internal.routing.CombinedMediaType.EffectiveMediaType,org.glassfish.jersey.server.internal.routing.CombinedMediaType.EffectiveMediaType,org.glassfish.jersey.server.internal.routing.MethodRouting,org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.1)
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.ConsumesProducesAcceptor#<init>(org.glassfish.jersey.server.internal.routing.CombinedMediaType.EffectiveMediaType,org.glassfish.jersey.server.internal.routing.CombinedMediaType.EffectiveMediaType,org.glassfish.jersey.server.internal.routing.MethodRouting)
CALLER: org.glassfish.jersey.server.internal.routing.PathMatchingRouterBuilder#startNewRoute(org.glassfish.jersey.uri.PathPattern)
	CALLEE: static org.glassfish.jersey.server.internal.routing.Route#of(org.glassfish.jersey.uri.PathPattern,java.util.List)
CALLER: com.fasterxml.jackson.databind.SerializerProvider#getAttribute(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.cfg.ContextAttributes.Impl#getAttribute(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap#findAndAddPrimarySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#findPrimaryPropertySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Empty#newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.SerializerAndMapResult#<init>(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Single#newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Double#newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Multi#newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer)
CALLER: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap#findAndAddPrimarySerializer(java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Empty#newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.SerializerAndMapResult#<init>(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Single#newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#findPrimaryPropertySerializer(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Double#newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Multi#newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer)
CALLER: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.TypedPrimitiveArraySerializer#<init>(com.fasterxml.jackson.databind.ser.std.StdArraySerializers.TypedPrimitiveArraySerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ArraySerializerBase#<init>(com.fasterxml.jackson.databind.ser.std.ArraySerializerBase,com.fasterxml.jackson.databind.BeanProperty)
CALLER: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#<init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: static com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#rename(com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#<init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])
CALLER: org.glassfish.jersey.server.internal.routing.MethodSelectingRouter#fillInputTypesFromWorkers(java.util.Set,org.glassfish.jersey.server.model.Invocable)
	CALLEE: org.glassfish.jersey.server.model.Parameter#getSource()
	CALLEE: org.glassfish.jersey.server.model.Parameter#getRawType()
	CALLEE: org.glassfish.jersey.server.model.Invocable#getParameters()
CALLER: static org.glassfish.jersey.server.internal.routing.Route#of(org.glassfish.jersey.uri.PathPattern,java.util.List)
	CALLEE: org.glassfish.jersey.server.internal.routing.Route#<init>(org.glassfish.jersey.uri.PathPattern,java.util.List)
CALLER: com.fasterxml.jackson.databind.SerializerProvider#findPrimaryPropertySerializer(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.cfg.MapperConfig#constructType(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.SerializerCache#untypedValueSerializer(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.SerializerCache#untypedValueSerializer(com.fasterxml.jackson.databind.JavaType)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#_createAndCacheUntypedSerializer(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getUnknownTypeSerializer(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#handlePrimaryContextualization(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap#untypedValueSerializer(java.lang.Class)
CALLER: static com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#rename(com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#rename(com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter.SingleView#rename(com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter.MultiView#rename(com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter#rename(com.fasterxml.jackson.databind.util.NameTransformer)
CALLER: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#<init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#<init>(java.lang.Class)
CALLER: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#rename(com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.PropertyName#<init>(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.NameTransformer.2#transform(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.NameTransformer.3#transform(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.NameTransformer.4#transform(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.NameTransformer.1#transform(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.io.SerializedString#toString()
	CALLEE: com.fasterxml.jackson.core.io.SerializedString#getValue()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#<init>(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,com.fasterxml.jackson.databind.PropertyName)
	CALLEE: com.fasterxml.jackson.databind.util.NameTransformer.Chained#transform(java.lang.String)
CALLER: com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter.SingleView#rename(com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter.SingleView#rename(com.fasterxml.jackson.databind.util.NameTransformer)
CALLER: com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter.MultiView#rename(com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter.MultiView#rename(com.fasterxml.jackson.databind.util.NameTransformer)
CALLER: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter#rename(com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter#rename(com.fasterxml.jackson.databind.util.NameTransformer)
CALLER: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#<init>(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,com.fasterxml.jackson.databind.PropertyName)
	CALLEE: com.fasterxml.jackson.core.io.SerializedString#<init>(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.PropertyName#getSimpleName()
	CALLEE: com.fasterxml.jackson.databind.ser.PropertyWriter#<init>()
CALLER: com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter.SingleView#rename(com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter.SingleView#<init>(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#rename(com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter.SingleView#rename(com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter.MultiView#rename(com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter#rename(com.fasterxml.jackson.databind.util.NameTransformer)
CALLER: com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter.MultiView#rename(com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter.MultiView#<init>(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,java.lang.Class[])
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#rename(com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter.SingleView#rename(com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter.MultiView#rename(com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter#rename(com.fasterxml.jackson.databind.util.NameTransformer)
CALLER: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter#rename(com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.core.io.SerializedString#<init>(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.NameTransformer.2#transform(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.NameTransformer.3#transform(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.NameTransformer.4#transform(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.NameTransformer.1#transform(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.io.SerializedString#getValue()
	CALLEE: static com.fasterxml.jackson.databind.util.NameTransformer#chainedTransformer(com.fasterxml.jackson.databind.util.NameTransformer,com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter#<init>(com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter,com.fasterxml.jackson.databind.util.NameTransformer,com.fasterxml.jackson.core.io.SerializedString)
	CALLEE: com.fasterxml.jackson.databind.util.NameTransformer.Chained#transform(java.lang.String)
CALLER: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter#<init>(com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter,com.fasterxml.jackson.databind.util.NameTransformer,com.fasterxml.jackson.core.io.SerializedString)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#<init>(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,com.fasterxml.jackson.core.io.SerializedString)
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.3#withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.3#withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
CALLER: org.glassfish.jersey.server.internal.routing.RuntimeModelBuilder.1#get()
	CALLEE: org.glassfish.jersey.server.internal.routing.RuntimeModelBuilder.1#get()
CALLER: org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.1#compare(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.1#compare(org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.ConsumesProducesAcceptor,org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.ConsumesProducesAcceptor)
CALLER: org.glassfish.jersey.server.model.ResourceMethod.Builder.1#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod.Builder.1#apply(java.lang.annotation.Annotation)
CALLER: org.glassfish.jersey.server.model.RuntimeResource.2#apply(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.model.RuntimeResource.2#apply(org.glassfish.jersey.server.model.Resource)
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#getType(com.fasterxml.jackson.databind.type.TypeBindings)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedWithParams#getType(com.fasterxml.jackson.databind.type.TypeBindings,java.lang.reflect.TypeVariable[])
CALLER: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeStartArray()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeEndArray()
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#isEnabled(com.fasterxml.jackson.databind.SerializationFeature)
	CALLEE: com.fasterxml.jackson.core.JsonGenerator#setCurrentValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#hasSingleElement(com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serializeAsArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#_serializeWithObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#_customTypeId(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serializeAsArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeCustomTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeCustomTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeCustomTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeCustomTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeCustomTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeCustomTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
CALLER: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#toString()
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#handledType()
CALLER: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#withObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#withObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#withObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)
CALLER: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#withIgnorals(java.lang.String[])
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#withIgnorals(java.lang.String[])
CALLER: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#withFilterId(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#<init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#_serializeWithObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,boolean)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#serializeFieldsFiltered(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#serializeFields(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#<init>(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#isEnabled(com.fasterxml.jackson.databind.SerializationFeature)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#serializeFieldsFiltered(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#serializeFields(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#_serializeWithObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
CALLER: com.fasterxml.jackson.databind.ser.impl.WritableObjectId#writeAsField(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.RawSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.CalendarKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.StringKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.ClassKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.DateKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeFieldName(com.fasterxml.jackson.core.SerializableString)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NullSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BooleanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CalendarSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.DateSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.UUIDSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.LongSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntLikeSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.ShortSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.FloatSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.IterableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#canWriteObjectId()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeObjectId(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.ser.impl.WritableObjectId#generateId(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator#generateId(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.ser.impl.WritableObjectId#writeAsId(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.RawSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.CalendarKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.StringKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.ClassKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.DateKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NullSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BooleanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CalendarSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.DateSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.UUIDSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.LongSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntLikeSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.ShortSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.FloatSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.IterableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#canWriteObjectId()
	CALLEE: com.fasterxml.jackson.core.JsonGenerator#writeObjectRef(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer#unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer#<init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.util.NameTransformer)
CALLER: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)
CALLER: org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.ConsumesProducesAcceptor#equals(java.lang.Object)
	CALLEE: org.glassfish.jersey.server.internal.routing.CombinedMediaType.EffectiveMediaType#equals(java.lang.Object)
CALLER: org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.ConsumesProducesAcceptor#hashCode()
	CALLEE: org.glassfish.jersey.server.internal.routing.CombinedMediaType.EffectiveMediaType#hashCode()
CALLER: org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.ConsumesProducesAcceptor#toString()
	CALLEE: org.glassfish.jersey.server.internal.routing.CombinedMediaType.EffectiveMediaType#getMediaType()
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#getValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#getDeclaringClass()
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#getValue(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#getDeclaringClass()
CALLER: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Double#newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.TypeAndSerializer#<init>(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Multi#<init>(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.TypeAndSerializer[])
CALLER: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator#canUseFor(com.fasterxml.jackson.annotation.ObjectIdGenerator)
	CALLEE: com.fasterxml.jackson.annotation.ObjectIdGenerators.Base#getScope()
CALLER: com.fasterxml.jackson.databind.util.NameTransformer.Chained#transform(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.NameTransformer.2#transform(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.NameTransformer.3#transform(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.NameTransformer.4#transform(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.NameTransformer.1#transform(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.NameTransformer.Chained#transform(java.lang.String)
CALLER: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter#getGenericPropertyType()
	CALLEE: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter#getPropertyType()
CALLER: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.3#withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#isTypeId(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#isTypeId(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
CALLER: org.glassfish.jersey.server.internal.routing.RuntimeModelBuilder.1#get()
	CALLEE: org.glassfish.jersey.server.internal.routing.RuntimeLocatorModelBuilder#<init>(org.glassfish.hk2.api.ServiceLocator,javax.ws.rs.core.Configuration,org.glassfish.jersey.server.internal.JerseyResourceContext,org.glassfish.jersey.server.internal.routing.RuntimeModelBuilder)
CALLER: org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.1#compare(org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.ConsumesProducesAcceptor,org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.ConsumesProducesAcceptor)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod#getProducedTypes()
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod#getConsumedTypes()
	CALLEE: org.glassfish.jersey.server.internal.routing.CombinedMediaType.EffectiveMediaType#getMediaType()
	CALLEE: org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.1#compare(java.util.List,java.util.List)
	CALLEE: org.glassfish.jersey.message.internal.MediaTypes.1#compare(java.lang.Object,java.lang.Object)
CALLER: org.glassfish.jersey.server.model.ResourceMethod.Builder.1#apply(java.lang.annotation.Annotation)
	CALLEE: org.glassfish.hk2.api.AnnotationLiteral#annotationType()
CALLER: org.glassfish.jersey.server.model.RuntimeResource.2#apply(org.glassfish.jersey.server.model.Resource)
	CALLEE: org.glassfish.jersey.server.model.Resource#getParent()
CALLER: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#hasSingleElement(com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getActiveView()
CALLER: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serializeAsArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#prependPath(com.fasterxml.jackson.databind.JsonMappingException.Reference)
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException.Reference#<init>(java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.JsonMappingException#<init>(java.lang.String,java.lang.Throwable)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeNull()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#getName()
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdSerializer#wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getActiveView()
	CALLEE: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter#serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter.SingleView#serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter.MultiView#serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeCustomTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeString(java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeStartArray()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#canWriteTypeId()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeTypeId(java.lang.Object)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeCustomTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeStartObject()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeStartArray()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#canWriteTypeId()
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeTypeId(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#_validTypeId(java.lang.String)
	CALLEE: com.fasterxml.jackson.core.JsonGenerator#writeArrayFieldStart(java.lang.String)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeCustomTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#_writeArrayPrefix(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeCustomTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer#writeTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#canWriteTypeId()
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeCustomTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer#writeTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#canWriteTypeId()
CALLER: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#writeCustomTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
	CALLEE: com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer#_writeArraySuffix(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
CALLER: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#withIgnorals(java.lang.String[])
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#<init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,java.lang.String[])
CALLER: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#<init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#<init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter,java.lang.Object)
CALLER: com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator#generateId(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#getName()
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#get(java.lang.Object)
CALLER: com.fasterxml.jackson.core.JsonGenerator#writeObjectRef(java.lang.Object)
	CALLEE: com.fasterxml.jackson.core.JsonGenerationException#<init>(java.lang.String)
CALLER: org.glassfish.jersey.server.internal.routing.CombinedMediaType.EffectiveMediaType#equals(java.lang.Object)
	CALLEE: javax.ws.rs.core.MediaType#equals(java.lang.Object)
	CALLEE: org.glassfish.jersey.message.internal.AcceptableMediaType#equals(java.lang.Object)
	CALLEE: org.glassfish.jersey.message.internal.QualitySourceMediaType#equals(java.lang.Object)
CALLER: org.glassfish.jersey.server.internal.routing.CombinedMediaType.EffectiveMediaType#hashCode()
	CALLEE: javax.ws.rs.core.MediaType#hashCode()
	CALLEE: org.glassfish.jersey.message.internal.QualitySourceMediaType#hashCode()
	CALLEE: org.glassfish.jersey.message.internal.AcceptableMediaType#hashCode()
CALLER: com.fasterxml.jackson.databind.introspect.AnnotatedParameter#getDeclaringClass()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedConstructor#getDeclaringClass()
	CALLEE: com.fasterxml.jackson.databind.introspect.AnnotatedMethod#getDeclaringClass()
CALLER: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Multi#<init>(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.TypeAndSerializer[])
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap#<init>(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap)
CALLER: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter#getPropertyType()
	CALLEE: com.fasterxml.jackson.databind.JavaType#getRawClass()
CALLER: com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector#isTypeId(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
	CALLEE: com.fasterxml.jackson.databind.AnnotationIntrospector#_hasAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)
CALLER: org.glassfish.jersey.server.internal.routing.RuntimeLocatorModelBuilder#<init>(org.glassfish.hk2.api.ServiceLocator,javax.ws.rs.core.Configuration,org.glassfish.jersey.server.internal.JerseyResourceContext,org.glassfish.jersey.server.internal.routing.RuntimeModelBuilder)
	CALLEE: org.glassfish.jersey.server.ResourceConfig#getProperties()
	CALLEE: static org.glassfish.jersey.server.ServerProperties#getValue(java.util.Map,java.lang.String,java.lang.Object,java.lang.Class)
	CALLEE: static jersey.repackaged.com.google.common.cache.CacheBuilder#newBuilder()
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#SUBRES_LOC_CACHE_INVALID_SIZE(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.server.internal.routing.RuntimeLocatorModelBuilder.1#<init>(org.glassfish.jersey.server.internal.routing.RuntimeLocatorModelBuilder)
	CALLEE: jersey.repackaged.com.google.common.cache.CacheBuilder#build(jersey.repackaged.com.google.common.cache.CacheLoader)
	CALLEE: jersey.repackaged.com.google.common.cache.CacheBuilder#expireAfterAccess(long,java.util.concurrent.TimeUnit)
	CALLEE: jersey.repackaged.com.google.common.cache.CacheBuilder#maximumSize(long)
CALLER: org.glassfish.jersey.server.internal.routing.MethodSelectingRouter.1#compare(java.util.List,java.util.List)
	CALLEE: org.glassfish.jersey.message.internal.MediaTypes.2#compare(java.lang.Object,java.lang.Object)
CALLER: org.glassfish.jersey.message.internal.MediaTypes.1#compare(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.message.internal.MediaTypes.1#compare(javax.ws.rs.core.MediaType,javax.ws.rs.core.MediaType)
CALLER: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter#serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.RawSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.JsonSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Multi#serializerFor(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeNull()
	CALLEE: com.fasterxml.jackson.databind.ser.std.NullSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BooleanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CalendarSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.DateSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.UUIDSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.LongSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntLikeSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.ShortSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.FloatSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.IterableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NonTypedScalarSerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdScalarSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NullSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ArraySerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Empty#serializerFor(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.std.RawSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.JsonSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StringSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.UUIDSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.IterableSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.CalendarKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.StringKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.ClassKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.DateKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Single#serializerFor(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.AttributePropertyWriter#value(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#_findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.ArrayBuilders.1#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#_handleSelfReference(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Double#serializerFor(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#serializeAsPlaceholder(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter.SingleView#serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getActiveView()
	CALLEE: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter#serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter.SingleView#serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter.MultiView#serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#serializeAsPlaceholder(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter.MultiView#serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.SerializerProvider#getActiveView()
	CALLEE: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter#serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter.SingleView#serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter.MultiView#serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#serializeAsPlaceholder(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.RawSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.JsonSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Multi#serializerFor(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeNull()
	CALLEE: com.fasterxml.jackson.databind.ser.std.NullSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BooleanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CalendarSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.DateSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.UUIDSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.LongSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntLikeSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.ShortSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.FloatSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.IterableSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnknownSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NonTypedScalarSerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdScalarSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntegerSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NumberSerializers.DoubleSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.NullSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.JsonValueSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetAddressSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.SerializableSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ArraySerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Empty#serializerFor(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.std.RawSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IteratorSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.JsonSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StringSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ToStringSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.UUIDSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.IterableSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.MapSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.EnumSetSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.CollectionSerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.BooleanArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ByteArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.CharArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.ShortArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.IntArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.LongArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.FloatArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdArraySerializers.DoubleArraySerializer#isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.CalendarKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.StringKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.ClassKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.StdKeySerializers.DateKeySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Single#serializerFor(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#_findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.ArrayBuilders.1#equals(java.lang.Object)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#_handleSelfReference(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter#_findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer#serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Double#serializerFor(java.lang.Class)
	CALLEE: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#serializeAsPlaceholder(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer#<init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,java.lang.String[])
	CALLEE: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#<init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,java.lang.String[])
CALLER: static jersey.repackaged.com.google.common.cache.CacheBuilder#newBuilder()
	CALLEE: jersey.repackaged.com.google.common.cache.CacheBuilder#<init>()
CALLER: static jersey.repackaged.com.google.common.cache.CacheBuilder#<clinit>()
	CALLEE: jersey.repackaged.com.google.common.cache.CacheBuilder.1#<init>()
	CALLEE: static jersey.repackaged.com.google.common.base.Suppliers#ofInstance(java.lang.Object)
	CALLEE: jersey.repackaged.com.google.common.cache.CacheStats#<init>(long,long,long,long,long,long)
	CALLEE: jersey.repackaged.com.google.common.cache.CacheBuilder.2#<init>()
	CALLEE: jersey.repackaged.com.google.common.cache.CacheBuilder.3#<init>()
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#SUBRES_LOC_CACHE_INVALID_SIZE(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.Localizer#localize(org.glassfish.jersey.internal.l10n.Localizable)
	CALLEE: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableSUBRES_LOC_CACHE_INVALID_SIZE(java.lang.Object,java.lang.Object)
CALLER: org.glassfish.jersey.server.internal.routing.RuntimeLocatorModelBuilder.1#<init>(org.glassfish.jersey.server.internal.routing.RuntimeLocatorModelBuilder)
	CALLEE: jersey.repackaged.com.google.common.cache.CacheLoader#<init>()
CALLER: org.glassfish.jersey.message.internal.MediaTypes.2#compare(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.message.internal.MediaTypes.2#compare(java.util.List,java.util.List)
CALLER: org.glassfish.jersey.message.internal.MediaTypes.1#compare(javax.ws.rs.core.MediaType,javax.ws.rs.core.MediaType)
	CALLEE: org.glassfish.jersey.message.internal.MediaTypes.1#rank(javax.ws.rs.core.MediaType)
CALLER: com.fasterxml.jackson.databind.ser.BeanPropertyWriter#serializeAsPlaceholder(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.util.TokenBuffer#writeNull()
	CALLEE: com.fasterxml.jackson.databind.ser.std.NullSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
	CALLEE: com.fasterxml.jackson.databind.ser.std.RawSerializer#serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
CALLER: static jersey.repackaged.com.google.common.base.Suppliers#ofInstance(java.lang.Object)
	CALLEE: jersey.repackaged.com.google.common.base.Suppliers.SupplierOfInstance#<init>(java.lang.Object)
CALLER: jersey.repackaged.com.google.common.cache.CacheStats#<init>(long,long,long,long,long,long)
	CALLEE: static jersey.repackaged.com.google.common.base.Preconditions#checkArgument(boolean)
CALLER: static jersey.repackaged.com.google.common.base.Ticker#<clinit>()
	CALLEE: jersey.repackaged.com.google.common.base.Ticker.1#<init>()
CALLER: jersey.repackaged.com.google.common.cache.CacheBuilder.3#<init>()
	CALLEE: jersey.repackaged.com.google.common.base.Ticker#<init>()
CALLER: static org.glassfish.jersey.server.internal.LocalizationMessages#localizableSUBRES_LOC_CACHE_INVALID_SIZE(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.internal.l10n.LocalizableMessageFactory#getMessage(java.lang.String,java.lang.Object[])
CALLER: org.glassfish.jersey.message.internal.MediaTypes.2#compare(java.util.List,java.util.List)
	CALLEE: org.glassfish.jersey.message.internal.MediaTypes.1#compare(java.lang.Object,java.lang.Object)
	CALLEE: org.glassfish.jersey.message.internal.MediaTypes.2#getLeastSpecific(java.util.List)
CALLER: org.glassfish.jersey.message.internal.MediaTypes.1#rank(javax.ws.rs.core.MediaType)
	CALLEE: javax.ws.rs.core.MediaType#isWildcardSubtype()
	CALLEE: javax.ws.rs.core.MediaType#isWildcardType()
CALLER: jersey.repackaged.com.google.common.base.Ticker.1#<init>()
	CALLEE: jersey.repackaged.com.google.common.base.Ticker#<init>()
CALLER: org.glassfish.jersey.server.internal.routing.PathMatchingRouterBuilder#route(org.glassfish.jersey.uri.PathPattern)
	CALLEE: org.glassfish.jersey.server.internal.routing.PathMatchingRouterBuilder#startNewRoute(org.glassfish.jersey.uri.PathPattern)
CALLER: org.glassfish.jersey.server.internal.routing.PathMatchingRouterBuilder#build()
	CALLEE: org.glassfish.jersey.server.internal.routing.PathMatchingRouterBuilder#acceptedRoutes()
	CALLEE: org.glassfish.jersey.server.internal.routing.PathMatchingRouter#<init>(java.util.List)
CALLER: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Multi#newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Single#<init>(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.TypeAndSerializer#<init>(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer)
	CALLEE: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.Multi#<init>(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.TypeAndSerializer[])
CALLER: org.glassfish.jersey.server.internal.routing.RuntimeLocatorModelBuilder#getRouter(org.glassfish.jersey.server.model.ResourceMethod)
	CALLEE: org.glassfish.jersey.server.internal.routing.SubResourceLocatorRouter#<init>(org.glassfish.hk2.api.ServiceLocator,org.glassfish.jersey.server.model.ResourceMethod,org.glassfish.jersey.server.internal.JerseyResourceContext,org.glassfish.jersey.server.internal.routing.RuntimeLocatorModelBuilder)
CALLER: jersey.repackaged.com.google.common.cache.CacheBuilder#build(jersey.repackaged.com.google.common.cache.CacheLoader)
	CALLEE: jersey.repackaged.com.google.common.cache.CacheBuilder#checkWeightWithWeigher()
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache.LocalLoadingCache#<init>(jersey.repackaged.com.google.common.cache.CacheBuilder,jersey.repackaged.com.google.common.cache.CacheLoader)
CALLER: jersey.repackaged.com.google.common.cache.CacheBuilder#expireAfterAccess(long,java.util.concurrent.TimeUnit)
	CALLEE: static jersey.repackaged.com.google.common.base.Preconditions#checkState(boolean,java.lang.String,java.lang.Object[])
	CALLEE: static jersey.repackaged.com.google.common.base.Preconditions#checkArgument(boolean,java.lang.String,java.lang.Object[])
CALLER: jersey.repackaged.com.google.common.cache.CacheBuilder#maximumSize(long)
	CALLEE: static jersey.repackaged.com.google.common.base.Preconditions#checkState(boolean,java.lang.Object)
	CALLEE: static jersey.repackaged.com.google.common.base.Preconditions#checkState(boolean,java.lang.String,java.lang.Object[])
	CALLEE: static jersey.repackaged.com.google.common.base.Preconditions#checkArgument(boolean,java.lang.Object)
CALLER: javax.ws.rs.core.MediaType#isWildcardSubtype()
	CALLEE: javax.ws.rs.core.MediaType#getSubtype()
CALLER: javax.ws.rs.core.MediaType#isWildcardType()
	CALLEE: javax.ws.rs.core.MediaType#getType()
CALLER: org.glassfish.jersey.server.internal.routing.SubResourceLocatorRouter#<init>(org.glassfish.hk2.api.ServiceLocator,org.glassfish.jersey.server.model.ResourceMethod,org.glassfish.jersey.server.internal.JerseyResourceContext,org.glassfish.jersey.server.internal.routing.RuntimeLocatorModelBuilder)
	CALLEE: org.glassfish.jersey.server.model.ResourceMethod#getInvocable()
	CALLEE: static org.glassfish.jersey.server.spi.internal.ParameterValueHelper#createValueProviders(org.glassfish.hk2.api.ServiceLocator,org.glassfish.jersey.server.model.Parameterized)
CALLER: jersey.repackaged.com.google.common.cache.CacheBuilder#checkWeightWithWeigher()
	CALLEE: static jersey.repackaged.com.google.common.base.Preconditions#checkState(boolean,java.lang.Object)
CALLER: jersey.repackaged.com.google.common.cache.LocalCache.LocalLoadingCache#<init>(jersey.repackaged.com.google.common.cache.CacheBuilder,jersey.repackaged.com.google.common.cache.CacheLoader)
	CALLEE: static jersey.repackaged.com.google.common.base.Preconditions#checkNotNull(java.lang.Object)
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache#<init>(jersey.repackaged.com.google.common.cache.CacheBuilder,jersey.repackaged.com.google.common.cache.CacheLoader)
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache.LocalManualCache#<init>(jersey.repackaged.com.google.common.cache.LocalCache,jersey.repackaged.com.google.common.cache.LocalCache.1)
CALLER: static jersey.repackaged.com.google.common.base.Preconditions#checkState(boolean,java.lang.String,java.lang.Object[])
	CALLEE: static jersey.repackaged.com.google.common.base.Preconditions#format(java.lang.String,java.lang.Object[])
CALLER: static jersey.repackaged.com.google.common.base.Preconditions#checkArgument(boolean,java.lang.String,java.lang.Object[])
	CALLEE: static jersey.repackaged.com.google.common.base.Preconditions#format(java.lang.String,java.lang.Object[])
CALLER: static jersey.repackaged.com.google.common.cache.LocalCache#<clinit>()
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache.1#<init>()
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache.2#<init>()
CALLER: jersey.repackaged.com.google.common.cache.LocalCache#<init>(jersey.repackaged.com.google.common.cache.CacheBuilder,jersey.repackaged.com.google.common.cache.CacheLoader)
	CALLEE: jersey.repackaged.com.google.common.cache.CacheBuilder#getInitialCapacity()
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache#evictsBySize()
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache#customWeigher()
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache#newSegmentArray(int)
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache#createSegment(int,long,jersey.repackaged.com.google.common.cache.AbstractCache.StatsCounter)
	CALLEE: jersey.repackaged.com.google.common.base.Suppliers.SupplierOfInstance#get()
	CALLEE: jersey.repackaged.com.google.common.cache.CacheBuilder#getConcurrencyLevel()
	CALLEE: jersey.repackaged.com.google.common.cache.CacheBuilder#getKeyStrength()
	CALLEE: jersey.repackaged.com.google.common.cache.CacheBuilder#getValueStrength()
	CALLEE: jersey.repackaged.com.google.common.cache.CacheBuilder#getKeyEquivalence()
	CALLEE: jersey.repackaged.com.google.common.cache.CacheBuilder#getValueEquivalence()
	CALLEE: jersey.repackaged.com.google.common.cache.CacheBuilder#getMaximumWeight()
	CALLEE: jersey.repackaged.com.google.common.cache.CacheBuilder#getWeigher()
	CALLEE: jersey.repackaged.com.google.common.cache.CacheBuilder#getExpireAfterAccessNanos()
	CALLEE: jersey.repackaged.com.google.common.cache.CacheBuilder#getExpireAfterWriteNanos()
	CALLEE: jersey.repackaged.com.google.common.cache.CacheBuilder#getRefreshNanos()
	CALLEE: jersey.repackaged.com.google.common.cache.CacheBuilder#getRemovalListener()
	CALLEE: static jersey.repackaged.com.google.common.cache.LocalCache#discardingQueue()
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache#recordsTime()
	CALLEE: jersey.repackaged.com.google.common.cache.CacheBuilder#getTicker(boolean)
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache#usesAccessEntries()
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache#usesWriteEntries()
	CALLEE: static jersey.repackaged.com.google.common.cache.LocalCache.EntryFactory#getFactory(jersey.repackaged.com.google.common.cache.LocalCache.Strength,boolean,boolean)
	CALLEE: jersey.repackaged.com.google.common.cache.CacheBuilder#getStatsCounterSupplier()
CALLER: jersey.repackaged.com.google.common.cache.LocalCache.LocalManualCache#<init>(jersey.repackaged.com.google.common.cache.LocalCache,jersey.repackaged.com.google.common.cache.LocalCache.1)
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache.LocalManualCache#<init>(jersey.repackaged.com.google.common.cache.LocalCache)
CALLER: jersey.repackaged.com.google.common.cache.CacheBuilder#getKeyStrength()
	CALLEE: static jersey.repackaged.com.google.common.base.MoreObjects#firstNonNull(java.lang.Object,java.lang.Object)
CALLER: jersey.repackaged.com.google.common.cache.CacheBuilder#getValueStrength()
	CALLEE: static jersey.repackaged.com.google.common.base.MoreObjects#firstNonNull(java.lang.Object,java.lang.Object)
CALLER: jersey.repackaged.com.google.common.cache.CacheBuilder#getKeyEquivalence()
	CALLEE: jersey.repackaged.com.google.common.cache.CacheBuilder#getKeyStrength()
	CALLEE: static jersey.repackaged.com.google.common.base.MoreObjects#firstNonNull(java.lang.Object,java.lang.Object)
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache.Strength.1#defaultEquivalence()
CALLER: jersey.repackaged.com.google.common.cache.CacheBuilder#getValueEquivalence()
	CALLEE: jersey.repackaged.com.google.common.cache.CacheBuilder#getValueStrength()
	CALLEE: static jersey.repackaged.com.google.common.base.MoreObjects#firstNonNull(java.lang.Object,java.lang.Object)
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache.Strength.1#defaultEquivalence()
CALLER: jersey.repackaged.com.google.common.cache.CacheBuilder#getWeigher()
	CALLEE: static jersey.repackaged.com.google.common.base.MoreObjects#firstNonNull(java.lang.Object,java.lang.Object)
CALLER: jersey.repackaged.com.google.common.cache.CacheBuilder#getRemovalListener()
	CALLEE: static jersey.repackaged.com.google.common.base.MoreObjects#firstNonNull(java.lang.Object,java.lang.Object)
CALLER: static jersey.repackaged.com.google.common.cache.CacheBuilder.NullListener#<clinit>()
	CALLEE: jersey.repackaged.com.google.common.cache.CacheBuilder.NullListener#<init>(java.lang.String,int)
CALLER: jersey.repackaged.com.google.common.cache.LocalCache#recordsTime()
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache#recordsWrite()
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache#recordsAccess()
CALLER: jersey.repackaged.com.google.common.cache.CacheBuilder#getTicker(boolean)
	CALLEE: static jersey.repackaged.com.google.common.base.Ticker#systemTicker()
CALLER: jersey.repackaged.com.google.common.cache.LocalCache#usesAccessEntries()
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache#recordsAccess()
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache#usesAccessQueue()
CALLER: jersey.repackaged.com.google.common.cache.LocalCache#usesWriteEntries()
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache#recordsWrite()
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache#usesWriteQueue()
CALLER: static jersey.repackaged.com.google.common.cache.LocalCache.EntryFactory#<clinit>()
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache.EntryFactory.1#<init>(java.lang.String,int)
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache.EntryFactory.2#<init>(java.lang.String,int)
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache.EntryFactory.3#<init>(java.lang.String,int)
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache.EntryFactory.4#<init>(java.lang.String,int)
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache.EntryFactory.5#<init>(java.lang.String,int)
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache.EntryFactory.6#<init>(java.lang.String,int)
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache.EntryFactory.7#<init>(java.lang.String,int)
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache.EntryFactory.8#<init>(java.lang.String,int)
CALLER: jersey.repackaged.com.google.common.cache.LocalCache#createSegment(int,long,jersey.repackaged.com.google.common.cache.AbstractCache.StatsCounter)
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache.Segment#<init>(jersey.repackaged.com.google.common.cache.LocalCache,int,long,jersey.repackaged.com.google.common.cache.AbstractCache.StatsCounter)
CALLER: static jersey.repackaged.com.google.common.cache.LocalCache.Strength#<clinit>()
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache.Strength.1#<init>(java.lang.String,int)
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache.Strength.2#<init>(java.lang.String,int)
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache.Strength.3#<init>(java.lang.String,int)
CALLER: static jersey.repackaged.com.google.common.base.MoreObjects#firstNonNull(java.lang.Object,java.lang.Object)
	CALLEE: static jersey.repackaged.com.google.common.base.Preconditions#checkNotNull(java.lang.Object)
CALLER: static jersey.repackaged.com.google.common.cache.CacheBuilder.OneWeigher#<clinit>()
	CALLEE: jersey.repackaged.com.google.common.cache.CacheBuilder.OneWeigher#<init>(java.lang.String,int)
CALLER: jersey.repackaged.com.google.common.cache.LocalCache#recordsWrite()
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache#expiresAfterWrite()
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache#refreshes()
CALLER: jersey.repackaged.com.google.common.cache.LocalCache#recordsAccess()
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache#expiresAfterAccess()
CALLER: jersey.repackaged.com.google.common.cache.LocalCache#usesAccessQueue()
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache#evictsBySize()
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache#expiresAfterAccess()
CALLER: jersey.repackaged.com.google.common.cache.LocalCache#usesWriteQueue()
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache#expiresAfterWrite()
CALLER: jersey.repackaged.com.google.common.cache.LocalCache.EntryFactory.1#<init>(java.lang.String,int)
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache.EntryFactory#<init>(java.lang.String,int,jersey.repackaged.com.google.common.cache.LocalCache.1)
CALLER: jersey.repackaged.com.google.common.cache.LocalCache.EntryFactory.2#<init>(java.lang.String,int)
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache.EntryFactory#<init>(java.lang.String,int,jersey.repackaged.com.google.common.cache.LocalCache.1)
CALLER: jersey.repackaged.com.google.common.cache.LocalCache.EntryFactory.3#<init>(java.lang.String,int)
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache.EntryFactory#<init>(java.lang.String,int,jersey.repackaged.com.google.common.cache.LocalCache.1)
CALLER: jersey.repackaged.com.google.common.cache.LocalCache.EntryFactory.4#<init>(java.lang.String,int)
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache.EntryFactory#<init>(java.lang.String,int,jersey.repackaged.com.google.common.cache.LocalCache.1)
CALLER: jersey.repackaged.com.google.common.cache.LocalCache.EntryFactory.5#<init>(java.lang.String,int)
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache.EntryFactory#<init>(java.lang.String,int,jersey.repackaged.com.google.common.cache.LocalCache.1)
CALLER: jersey.repackaged.com.google.common.cache.LocalCache.EntryFactory.6#<init>(java.lang.String,int)
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache.EntryFactory#<init>(java.lang.String,int,jersey.repackaged.com.google.common.cache.LocalCache.1)
CALLER: jersey.repackaged.com.google.common.cache.LocalCache.EntryFactory.7#<init>(java.lang.String,int)
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache.EntryFactory#<init>(java.lang.String,int,jersey.repackaged.com.google.common.cache.LocalCache.1)
CALLER: jersey.repackaged.com.google.common.cache.LocalCache.EntryFactory.8#<init>(java.lang.String,int)
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache.EntryFactory#<init>(java.lang.String,int,jersey.repackaged.com.google.common.cache.LocalCache.1)
CALLER: jersey.repackaged.com.google.common.cache.LocalCache.Segment#<init>(jersey.repackaged.com.google.common.cache.LocalCache,int,long,jersey.repackaged.com.google.common.cache.AbstractCache.StatsCounter)
	CALLEE: static jersey.repackaged.com.google.common.base.Preconditions#checkNotNull(java.lang.Object)
	CALLEE: static jersey.repackaged.com.google.common.cache.LocalCache#discardingQueue()
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache#usesAccessQueue()
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache#usesWriteQueue()
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache.Segment#newEntryArray(int)
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache.Segment#initTable(java.util.concurrent.atomic.AtomicReferenceArray)
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache#usesKeyReferences()
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache#usesValueReferences()
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache.WriteQueue#<init>()
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache.AccessQueue#<init>()
CALLER: jersey.repackaged.com.google.common.cache.LocalCache.Strength.1#<init>(java.lang.String,int)
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache.Strength#<init>(java.lang.String,int,jersey.repackaged.com.google.common.cache.LocalCache.1)
CALLER: jersey.repackaged.com.google.common.cache.LocalCache.Strength.2#<init>(java.lang.String,int)
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache.Strength#<init>(java.lang.String,int,jersey.repackaged.com.google.common.cache.LocalCache.1)
CALLER: jersey.repackaged.com.google.common.cache.LocalCache.Strength.3#<init>(java.lang.String,int)
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache.Strength#<init>(java.lang.String,int,jersey.repackaged.com.google.common.cache.LocalCache.1)
CALLER: jersey.repackaged.com.google.common.cache.LocalCache.EntryFactory#<init>(java.lang.String,int,jersey.repackaged.com.google.common.cache.LocalCache.1)
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache.EntryFactory#<init>(java.lang.String,int)
CALLER: jersey.repackaged.com.google.common.cache.LocalCache.Segment#initTable(java.util.concurrent.atomic.AtomicReferenceArray)
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache#customWeigher()
CALLER: jersey.repackaged.com.google.common.cache.LocalCache.WriteQueue#<init>()
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache.WriteQueue.1#<init>(jersey.repackaged.com.google.common.cache.LocalCache.WriteQueue)
CALLER: jersey.repackaged.com.google.common.cache.LocalCache.AccessQueue#<init>()
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache.AccessQueue.1#<init>(jersey.repackaged.com.google.common.cache.LocalCache.AccessQueue)
CALLER: jersey.repackaged.com.google.common.cache.LocalCache.Strength#<init>(java.lang.String,int,jersey.repackaged.com.google.common.cache.LocalCache.1)
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache.Strength#<init>(java.lang.String,int)
CALLER: jersey.repackaged.com.google.common.cache.LocalCache.WriteQueue.1#<init>(jersey.repackaged.com.google.common.cache.LocalCache.WriteQueue)
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache.AbstractReferenceEntry#<init>()
CALLER: jersey.repackaged.com.google.common.cache.LocalCache.AccessQueue.1#<init>(jersey.repackaged.com.google.common.cache.LocalCache.AccessQueue)
	CALLEE: jersey.repackaged.com.google.common.cache.LocalCache.AbstractReferenceEntry#<init>()
CALLER: jersey.repackaged.com.google.common.cache.LocalCache.Strength.1#defaultEquivalence()
	CALLEE: static jersey.repackaged.com.google.common.base.Equivalence#equals()
CALLER: static jersey.repackaged.com.google.common.base.Equivalence.Equals#<clinit>()
	CALLEE: jersey.repackaged.com.google.common.base.Equivalence.Equals#<init>()
CALLER: jersey.repackaged.com.google.common.base.Equivalence.Equals#<init>()
	CALLEE: jersey.repackaged.com.google.common.base.Equivalence#<init>()
