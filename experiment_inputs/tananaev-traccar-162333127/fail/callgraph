CALLER: org.traccar.database.DataManager#getServer()
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#executeQuerySingle(java.lang.Class)
CALLER: org.traccar.protocol.JpKorjarProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: static org.traccar.protocol.GranitProtocolDecoder#appendChecksum(org.jboss.netty.buffer.ChannelBuffer,int)
	CALLEE: static org.traccar.helper.Checksum#xor(java.nio.ByteBuffer)
CALLER: org.traccar.protocol.IntellitracFrameDecoder#<init>(int)
CALLER: org.traccar.database.DeviceManager#<init>(org.traccar.database.DataManager)
	CALLEE: static org.traccar.Context#getConfig()
	CALLEE: org.traccar.Config#getLong(java.lang.String,long)
	CALLEE: org.traccar.Config#getBoolean(java.lang.String)
	CALLEE: org.traccar.database.DeviceManager#updateGroupCache(boolean)
	CALLEE: org.traccar.database.DeviceManager#updateDeviceCache(boolean)
	CALLEE: org.traccar.database.DataManager#getLatestPositions()
	CALLEE: org.traccar.model.Message#getDeviceId()
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: org.traccar.protocol.WatchProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.protocol.WatchProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,java.lang.String,java.lang.String,java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.BaseProtocolDecoder#getLastLocation(org.traccar.model.Position,java.util.Date)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setDateReverse(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.Parser#nextCoordinate(org.traccar.helper.Parser.CoordinateFormat)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
CALLER: org.traccar.protocol.PiligrimProtocolDecoder#<init>(org.traccar.protocol.PiligrimProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.Tk103ProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setDateReverse(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.BaseProtocolDecoder#getLastLocation(org.traccar.model.Position,java.util.Date)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.helper.Parser#nextInt(int)
	CALLEE: org.traccar.protocol.Tk103ProtocolDecoder#decodeAlarm(int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: org.traccar.helper.DateBuilder#setDate(int,int,int)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.Parser#nextCoordinate()
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: static org.traccar.Context#getConfig()
	CALLEE: org.traccar.Config#getString(java.lang.String,java.lang.String)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromMph(double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: static org.traccar.helper.BitUtil#check(long,int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,boolean)
	CALLEE: org.traccar.helper.Parser#hasNext()
	CALLEE: org.traccar.helper.Parser#nextLong(int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,long)
CALLER: org.traccar.protocol.EelinkProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.EelinkProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,int,int)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.protocol.EelinkProtocolDecoder#decodeOld(org.traccar.DeviceSession,org.jboss.netty.buffer.ChannelBuffer,int,int)
	CALLEE: org.traccar.protocol.EelinkProtocolDecoder#decodeNew(org.traccar.DeviceSession,org.jboss.netty.buffer.ChannelBuffer,int)
CALLER: org.traccar.Config#getLong(java.lang.String)
	CALLEE: org.traccar.Config#getLong(java.lang.String,long)
CALLER: static org.traccar.protocol.ObdDongleProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,int,int,java.lang.String,org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.HemisphereHandler#<init>()
	CALLEE: static org.traccar.Context#getConfig()
	CALLEE: org.traccar.Config#getString(java.lang.String)
CALLER: org.traccar.database.PermissionsManager#isAdmin(long)
	CALLEE: org.traccar.model.User#getAdmin()
CALLER: org.traccar.protocol.ArnaviProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,boolean)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.Parser#nextCoordinate()
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.helper.DateBuilder#setDateReverse(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
CALLER: org.traccar.protocol.KhdProtocolEncoder#encodeCommand(int)
	CALLEE: static org.traccar.helper.Checksum#xor(java.nio.ByteBuffer)
CALLER: org.traccar.protocol.AppelloProtocolDecoder#<init>(org.traccar.protocol.AppelloProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.api.resource.GeofenceResource#update(long,org.traccar.model.Geofence)
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.api.BaseResource#getUserId()
	CALLEE: org.traccar.database.PermissionsManager#checkReadonly(long)
	CALLEE: org.traccar.database.PermissionsManager#checkGeofence(long,long)
	CALLEE: static org.traccar.Context#getGeofenceManager()
	CALLEE: org.traccar.database.GeofenceManager#updateGeofence(org.traccar.model.Geofence)
CALLER: org.traccar.protocol.TelicFrameDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.protocol.PiligrimProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,java.lang.String)
CALLER: org.traccar.protocol.Gl200ProtocolDecoder#decodeHbd(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.helper.Parser#next()
CALLER: org.traccar.helper.Parser#hasNext()
	CALLEE: org.traccar.helper.Parser#hasNext(int)
CALLER: org.traccar.protocol.GlobalSatProtocolDecoder#<init>(org.traccar.protocol.GlobalSatProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
	CALLEE: static org.traccar.Context#getConfig()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.Config#getString(java.lang.String,java.lang.String)
CALLER: org.traccar.protocol.TzoneProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: static org.traccar.GlobalChannelFactory#getFactory()
CALLER: org.traccar.DistanceHandler#handlePosition(org.traccar.model.Position)
	CALLEE: org.traccar.DistanceHandler#calculateDistance(org.traccar.model.Position)
CALLER: static org.traccar.helper.Log#warning(java.lang.String)
	CALLEE: static org.traccar.helper.Log#getLogger()
CALLER: org.traccar.location.OpenCellIdLocationProvider#<init>(java.lang.String,java.lang.String)
CALLER: org.traccar.protocol.HunterProProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.api.resource.AttributeAliasResource#remove(long)
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.api.BaseResource#getUserId()
	CALLEE: org.traccar.database.PermissionsManager#checkReadonly(long)
	CALLEE: org.traccar.database.PermissionsManager#isAdmin(long)
	CALLEE: static org.traccar.Context#getAliasesManager()
	CALLEE: org.traccar.database.AliasesManager#getAttributeAlias(long)
	CALLEE: org.traccar.model.AttributeAlias#getDeviceId()
	CALLEE: org.traccar.database.PermissionsManager#checkDevice(long,long)
	CALLEE: org.traccar.database.AliasesManager#removeArrtibuteAlias(long)
CALLER: org.traccar.protocol.HunterProProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.Parser#nextCoordinate()
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.helper.DateBuilder#setDateReverse(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
CALLER: org.traccar.database.DataManager#removeDevice(long)
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#setLong(java.lang.String,long)
	CALLEE: org.traccar.database.QueryBuilder#executeUpdate()
CALLER: org.traccar.protocol.EnforaProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.database.DataManager#clearPositionsHistory()
	CALLEE: org.traccar.Config#getInteger(java.lang.String)
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#setDate(java.lang.String,java.util.Date)
	CALLEE: org.traccar.database.QueryBuilder#executeUpdate()
CALLER: org.traccar.database.QueryBuilder#setDouble(java.lang.String,double)
	CALLEE: org.traccar.database.QueryBuilder#indexes(java.lang.String)
CALLER: org.traccar.database.DeviceManager#getGroups(long)
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.database.PermissionsManager#getGroupPermissions(long)
	CALLEE: org.traccar.database.DeviceManager#getGroupById(long)
CALLER: org.traccar.protocol.OsmAndProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.database.QueryBuilder#<init>(javax.sql.DataSource,java.lang.String,boolean)
	CALLEE: static org.traccar.database.QueryBuilder#parse(java.lang.String,java.util.Map)
CALLER: org.traccar.protocol.CellocatorProtocolDecoder#sendReply(org.jboss.netty.channel.Channel,long,byte)
CALLER: org.traccar.protocol.CguardProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.database.DataManager#getNotifications()
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#executeQuery(java.lang.Class)
CALLER: org.traccar.helper.PatternBuilder#number(java.lang.String)
CALLER: org.traccar.web.CsvBuilder#addArray(java.util.Collection)
	CALLEE: org.traccar.helper.PatternBuilder#toString()
	CALLEE: org.traccar.web.CsvBuilder#addLineEnding()
	CALLEE: org.traccar.web.CsvBuilder#addLine(java.lang.Object)
CALLER: org.traccar.protocol.TrvProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.BaseProtocolDecoder#getLastLocation(org.traccar.model.Position,java.util.Date)
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,boolean)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.DateBuilder#setDate(int,int,int)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.Parser#nextCoordinate()
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setCourse(double)
CALLER: org.traccar.protocol.ObdDongleProtocolDecoder#<init>(org.traccar.protocol.ObdDongleProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.Config#getInteger(java.lang.String)
	CALLEE: org.traccar.Config#getInteger(java.lang.String,int)
CALLER: org.traccar.protocol.RaveonProtocolDecoder#<init>(org.traccar.protocol.RaveonProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.KhdProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.protocol.KhdProtocolDecoder#readSerialNumber(org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: static org.traccar.helper.BcdUtil#readInteger(org.jboss.netty.buffer.ChannelBuffer,int)
	CALLEE: org.traccar.helper.DateBuilder#setYear(int)
	CALLEE: org.traccar.helper.DateBuilder#setMonth(int)
	CALLEE: org.traccar.helper.DateBuilder#setDay(int)
	CALLEE: org.traccar.helper.DateBuilder#setHour(int)
	CALLEE: org.traccar.helper.DateBuilder#setMinute(int)
	CALLEE: org.traccar.helper.DateBuilder#setSecond(int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: static org.traccar.helper.BcdUtil#readCoordinate(org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: static org.traccar.helper.Checksum#xor(java.nio.ByteBuffer)
CALLER: org.traccar.protocol.TelicProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
	CALLEE: org.traccar.TrackerServer#setEndianness(java.nio.ByteOrder)
CALLER: org.traccar.database.PermissionsManager#checkRegistration(long)
	CALLEE: org.traccar.model.Server#getRegistration()
	CALLEE: org.traccar.database.PermissionsManager#isAdmin(long)
CALLER: org.traccar.protocol.Gl100ProtocolDecoder#<init>(org.traccar.protocol.Gl100Protocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.RuptelaProtocolEncoder#encodeContent(java.lang.String)
	CALLEE: static org.traccar.helper.Checksum#crc16(java.lang.String,java.nio.ByteBuffer)
CALLER: org.traccar.BaseProtocolDecoder#handleEmptyMessage(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: static org.traccar.Context#getConfig()
	CALLEE: org.traccar.Config#getBoolean(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.BaseProtocolDecoder#getLastLocation(org.traccar.model.Position,java.util.Date)
CALLER: static org.traccar.protocol.BceFrameDecoder#checksum(org.jboss.netty.buffer.ChannelBuffer,int)
CALLER: org.traccar.protocol.CityeasyProtocolDecoder#<init>(org.traccar.protocol.CityeasyProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.database.GeofenceManager#getAllGeofences()
CALLER: org.traccar.database.DeviceManager#lookupConfigBoolean(long,java.lang.String,boolean)
	CALLEE: org.traccar.database.DeviceManager#lookupAttribute(long,java.lang.String,boolean)
CALLER: org.traccar.protocol.FlextrackProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.protocol.UlbotechProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: static org.traccar.protocol.Gt06ProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,int,int)
	CALLEE: static org.traccar.helper.Checksum#crc16(java.lang.String,java.nio.ByteBuffer)
CALLER: org.traccar.protocol.Avl301ProtocolDecoder#readImei(org.jboss.netty.buffer.ChannelBuffer)
CALLER: static org.traccar.reports.Route#getJson(long,java.util.Collection,java.util.Collection,java.util.Date,java.util.Date)
	CALLEE: static org.traccar.reports.ReportUtils#getDeviceList(java.util.Collection,java.util.Collection)
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.database.PermissionsManager#checkDevice(long,long)
	CALLEE: static org.traccar.Context#getDataManager()
	CALLEE: org.traccar.database.DataManager#getPositions(long,java.util.Date,java.util.Date)
	CALLEE: org.traccar.helper.PatternBuilder#toString()
CALLER: org.traccar.BaseProtocolEncoder#initDevicePassword(org.traccar.model.Command,java.lang.String)
	CALLEE: org.traccar.model.Extensible#getAttributes()
	CALLEE: static org.traccar.Context#getIdentityManager()
	CALLEE: org.traccar.model.Message#getDeviceId()
	CALLEE: org.traccar.database.DeviceManager#getDeviceById(long)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
CALLER: org.traccar.geocode.GisgraphyReverseGeocoder#<init>()
	CALLEE: org.traccar.geocode.GisgraphyReverseGeocoder#<init>(java.lang.String,int)
CALLER: org.traccar.protocol.Pt502FrameDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: org.traccar.Config#getString(java.lang.String)
	CALLEE: static org.traccar.helper.Log#info(java.lang.String)
CALLER: org.traccar.api.resource.UserResource#add(org.traccar.model.User)
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.api.BaseResource#getUserId()
	CALLEE: org.traccar.database.PermissionsManager#isAdmin(long)
	CALLEE: org.traccar.database.PermissionsManager#checkRegistration(long)
	CALLEE: org.traccar.database.PermissionsManager#addUser(org.traccar.model.User)
	CALLEE: static org.traccar.Context#getNotificationManager()
	CALLEE: org.traccar.database.NotificationManager#refresh()
CALLER: org.traccar.protocol.PiligrimProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.protocol.AuroProtocolDecoder#<init>(org.traccar.protocol.AuroProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.CellocatorProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.CellocatorProtocolDecoder#sendReply(org.jboss.netty.channel.Channel,long,byte)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromMps(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.DateBuilder#setTimeReverse(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setDateReverse(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
CALLER: org.traccar.protocol.AplicomProtocolDecoder#decodeCanData(org.jboss.netty.buffer.ChannelBuffer,org.traccar.model.Position)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: org.traccar.protocol.AtrackFrameDecoder#<init>()
CALLER: org.traccar.protocol.EelinkProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.TotemFrameDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.helper.StringFinder#<init>(java.lang.String)
CALLER: org.traccar.protocol.CguardProtocolDecoder#<init>(org.traccar.protocol.CguardProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.AplicomProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.api.resource.EventResource#get(long)
	CALLEE: static org.traccar.Context#getDataManager()
	CALLEE: org.traccar.database.DataManager#getEvent(long)
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.api.BaseResource#getUserId()
	CALLEE: org.traccar.model.Message#getDeviceId()
	CALLEE: org.traccar.database.PermissionsManager#checkDevice(long,long)
CALLER: static org.traccar.helper.Checksum#crc16(java.lang.String,java.nio.ByteBuffer)
	CALLEE: static org.traccar.helper.Checksum#crc16Reflected(java.nio.ByteBuffer,int,int[])
	CALLEE: static org.traccar.helper.Checksum#crc16Unreflected(java.nio.ByteBuffer,int,int[])
CALLER: org.traccar.database.NotificationManager#getAllNotifications()
	CALLEE: org.traccar.helper.PatternBuilder#toString()
	CALLEE: org.traccar.model.Notification#setType(java.lang.String)
	CALLEE: org.traccar.model.Extensible#setId(long)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: org.traccar.database.ConnectionManager#<init>()
	CALLEE: static org.traccar.Context#getConfig()
	CALLEE: org.traccar.Config#getLong(java.lang.String,long)
CALLER: org.traccar.protocol.Gl200Protocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocol#setSupportedCommands(java.lang.String[])
CALLER: org.traccar.protocol.WondexProtocolEncoder#encodeCommand(org.traccar.model.Command)
	CALLEE: org.traccar.BaseProtocolEncoder#initDevicePassword(org.traccar.model.Command,java.lang.String)
	CALLEE: org.traccar.model.Message#getType()
	CALLEE: org.traccar.StringProtocolEncoder#formatCommand(org.traccar.model.Command,java.lang.String,java.lang.String[])
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: org.traccar.database.DataManager#addAttributeAlias(org.traccar.model.AttributeAlias)
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String,boolean)
	CALLEE: org.traccar.database.QueryBuilder#setObject(java.lang.Object)
	CALLEE: org.traccar.database.QueryBuilder#executeUpdate()
	CALLEE: org.traccar.model.AttributeAlias#setId(long)
CALLER: org.traccar.protocol.AtrackFrameDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.database.PermissionsManager#checkReadonly(long)
	CALLEE: org.traccar.model.Server#getReadonly()
	CALLEE: org.traccar.database.PermissionsManager#isAdmin(long)
CALLER: org.traccar.protocol.OrionFrameDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.helper.Parser#nextCoordinate(org.traccar.helper.Parser.CoordinateFormat)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.Parser#hasNext()
CALLER: org.traccar.protocol.BceProtocolDecoder#<init>(org.traccar.protocol.BceProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.MainEventHandler#channelIdle(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.handler.timeout.IdleStateEvent)
	CALLEE: static org.traccar.MainEventHandler#formatChannel(org.jboss.netty.channel.Channel)
	CALLEE: static org.traccar.helper.Log#info(java.lang.String)
	CALLEE: org.traccar.MainEventHandler#closeChannel(org.jboss.netty.channel.Channel)
CALLER: org.traccar.protocol.UlbotechProtocolDecoder#decodeObd(org.traccar.model.Position,org.jboss.netty.buffer.ChannelBuffer,short)
	CALLEE: static org.traccar.helper.ObdDecoder#decode(int,java.lang.String)
CALLER: org.traccar.protocol.NavigilProtocolDecoder#<init>(org.traccar.protocol.NavigilProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.Config#getLong(java.lang.String,long)
CALLER: org.traccar.database.NotificationManager#updateNotification(org.traccar.model.Notification)
	CALLEE: org.traccar.model.Notification#getUserId()
	CALLEE: org.traccar.model.Notification#getType()
	CALLEE: org.traccar.database.NotificationManager#getUserNotificationByType(long,java.lang.String)
	CALLEE: org.traccar.model.Extensible#getAttributes()
	CALLEE: org.traccar.database.DataManager#removeNotification(org.traccar.model.Notification)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
	CALLEE: org.traccar.database.NotificationManager#getUserNotificationsUnsafe(long)
	CALLEE: org.traccar.model.Extensible#setAttributes(java.util.Map)
	CALLEE: org.traccar.database.DataManager#updateNotification(org.traccar.model.Notification)
	CALLEE: org.traccar.model.Extensible#getId()
	CALLEE: org.traccar.model.Extensible#setId(long)
	CALLEE: org.traccar.database.DataManager#addNotification(org.traccar.model.Notification)
CALLER: org.traccar.protocol.MiniFinderProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setDateReverse(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#getCourse()
	CALLEE: org.traccar.helper.Parser#hasNext(int)
	CALLEE: org.traccar.helper.Parser#nextInt(int)
	CALLEE: static org.traccar.helper.BitUtil#check(long,int)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: static org.traccar.helper.BitUtil#between(int,int,int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.helper.Parser#next()
CALLER: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.Xt013Protocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.AplicomProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: static org.traccar.protocol.AplicomProtocolDecoder#imeiFromUnitId(long)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.protocol.AplicomProtocolDecoder#decodeD(org.traccar.model.Position,org.jboss.netty.buffer.ChannelBuffer,int,int)
	CALLEE: org.traccar.protocol.AplicomProtocolDecoder#decodeE(org.traccar.model.Position,org.jboss.netty.buffer.ChannelBuffer,int)
CALLER: org.traccar.protocol.NvsProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,java.lang.String)
CALLER: org.traccar.protocol.FlextrackProtocolDecoder#<init>(org.traccar.protocol.FlextrackProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.api.resource.GroupPermissionResource#add(org.traccar.model.GroupPermission)
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.api.BaseResource#getUserId()
	CALLEE: org.traccar.database.PermissionsManager#checkAdmin(long)
	CALLEE: static org.traccar.Context#getDataManager()
	CALLEE: org.traccar.model.GroupPermission#getUserId()
	CALLEE: org.traccar.model.GroupPermission#getGroupId()
	CALLEE: org.traccar.database.DataManager#linkGroup(long,long)
	CALLEE: org.traccar.database.PermissionsManager#refreshPermissions()
	CALLEE: static org.traccar.Context#getGeofenceManager()
	CALLEE: org.traccar.database.GeofenceManager#refresh()
CALLER: org.traccar.protocol.GnxProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.XirgoProtocolDecoder#<init>(org.traccar.protocol.XirgoProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.CarscopProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.database.GeofenceManager#updateGeofence(org.traccar.model.Geofence)
	CALLEE: org.traccar.model.Extensible#getId()
	CALLEE: org.traccar.database.DataManager#updateGeofence(org.traccar.model.Geofence)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: org.traccar.protocol.Tr20ProtocolDecoder#<init>(org.traccar.protocol.Tr20Protocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.CastelProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.protocol.CastelProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,java.net.SocketAddress,org.jboss.netty.buffer.ChannelBuffer,short)
	CALLEE: org.traccar.protocol.CastelProtocolDecoder#readPosition(org.traccar.DeviceSession,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.protocol.CastelProtocolDecoder#decodeSc(org.jboss.netty.channel.Channel,java.net.SocketAddress,org.jboss.netty.buffer.ChannelBuffer,int,org.jboss.netty.buffer.ChannelBuffer,int,org.traccar.DeviceSession)
	CALLEE: org.traccar.protocol.CastelProtocolDecoder#decodeCc(org.jboss.netty.channel.Channel,java.net.SocketAddress,org.jboss.netty.buffer.ChannelBuffer,int,org.jboss.netty.buffer.ChannelBuffer,int,org.traccar.DeviceSession)
CALLER: org.traccar.web.WebServer#<init>(org.traccar.Config,javax.sql.DataSource)
	CALLEE: org.traccar.Config#getInteger(java.lang.String)
	CALLEE: org.traccar.web.WebServer#initServer()
	CALLEE: org.traccar.web.WebServer#initApi()
	CALLEE: org.traccar.Config#getBoolean(java.lang.String)
	CALLEE: org.traccar.web.WebServer#initConsole()
	CALLEE: org.traccar.Config#getString(java.lang.String,java.lang.String)
	CALLEE: org.traccar.web.WebServer#initOldWebApp()
	CALLEE: org.traccar.web.WebServer#initWebApp()
CALLER: org.traccar.events.IgnitionEventHandler#analyzePosition(org.traccar.model.Position)
	CALLEE: static org.traccar.Context#getIdentityManager()
	CALLEE: org.traccar.model.Message#getDeviceId()
	CALLEE: org.traccar.database.DeviceManager#getDeviceById(long)
	CALLEE: org.traccar.database.DeviceManager#isLatestPosition(org.traccar.model.Position)
	CALLEE: org.traccar.model.Position#getValid()
	CALLEE: org.traccar.model.Extensible#getAttributes()
	CALLEE: org.traccar.database.DeviceManager#getLastPosition(long)
	CALLEE: org.traccar.model.Extensible#getId()
	CALLEE: org.traccar.model.Event#<init>(java.lang.String,long,long)
CALLER: org.traccar.protocol.SanavProtocolDecoder#<init>(org.traccar.protocol.SanavProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.V680Protocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.RuptelaProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocol#setSupportedCommands(java.lang.String[])
CALLER: org.traccar.api.resource.DeviceResource#add(org.traccar.model.Device)
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.api.BaseResource#getUserId()
	CALLEE: org.traccar.database.PermissionsManager#checkReadonly(long)
	CALLEE: static org.traccar.Context#getDeviceManager()
	CALLEE: org.traccar.database.DeviceManager#addDevice(org.traccar.model.Device)
	CALLEE: static org.traccar.Context#getDataManager()
	CALLEE: org.traccar.model.Extensible#getId()
	CALLEE: org.traccar.database.DataManager#linkDevice(long,long)
	CALLEE: org.traccar.database.PermissionsManager#refreshPermissions()
	CALLEE: static org.traccar.Context#getGeofenceManager()
	CALLEE: org.traccar.database.GeofenceManager#refresh()
CALLER: org.traccar.protocol.T55ProtocolDecoder#<init>(org.traccar.protocol.T55Protocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.helper.DateBuilder#setDateReverse(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setDate(int,int,int)
CALLER: org.traccar.events.AlertEventHandler#analyzePosition(org.traccar.model.Position)
	CALLEE: org.traccar.model.Extensible#getAttributes()
	CALLEE: org.traccar.model.Message#getDeviceId()
	CALLEE: org.traccar.model.Extensible#getId()
	CALLEE: org.traccar.model.Event#<init>(java.lang.String,long,long)
CALLER: org.traccar.api.AsyncSocket#onWebSocketClose(int,java.lang.String)
	CALLEE: static org.traccar.Context#getConnectionManager()
	CALLEE: org.traccar.database.ConnectionManager#removeListener(long,org.traccar.database.ConnectionManager.UpdateListener)
CALLER: org.traccar.helper.PatternBuilder#or()
CALLER: org.traccar.protocol.AstraProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.DateBuilder#setDate(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#addMillis(long)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: static org.traccar.helper.BitUtil#check(long,int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
CALLER: org.traccar.WebDataHandler#handlePosition(org.traccar.model.Position)
	CALLEE: static org.traccar.Context#getAsyncHttpClient()
	CALLEE: org.traccar.WebDataHandler#formatRequest(org.traccar.model.Position)
CALLER: org.traccar.geocode.JsonReverseGeocoder#getAddress(org.traccar.geocode.AddressFormat,double,double,org.traccar.geocode.ReverseGeocoder.ReverseGeocoderCallback)
	CALLEE: static org.traccar.Context#getAsyncHttpClient()
CALLER: static org.traccar.helper.BcdUtil#readCoordinate(org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.Config#getDouble(java.lang.String,double)
CALLER: org.traccar.protocol.WondexProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.BaseProtocolDecoder#getLastLocation(org.traccar.model.Position,java.util.Date)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setDate(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.helper.Parser#hasNext()
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
CALLER: org.traccar.geofence.GeofencePolygon#<init>(java.lang.String)
	CALLEE: org.traccar.geofence.GeofencePolygon#fromWkt(java.lang.String)
CALLER: static org.traccar.helper.Log#warning(java.lang.String,java.lang.Throwable)
	CALLEE: static org.traccar.helper.Log#exceptionStack(java.lang.Throwable)
	CALLEE: static org.traccar.helper.Log#getLogger()
CALLER: org.traccar.protocol.BoxProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setDate(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
CALLER: org.traccar.database.GeofenceManager#getUserGeofences(long)
CALLER: org.traccar.protocol.MxtProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
	CALLEE: org.traccar.TrackerServer#setEndianness(java.nio.ByteOrder)
CALLER: static org.traccar.helper.Hashing#validatePassword(java.lang.String,java.lang.String,java.lang.String)
	CALLEE: static org.traccar.helper.Hashing#function(char[],byte[])
	CALLEE: static org.traccar.helper.Hashing#slowEquals(byte[],byte[])
CALLER: org.traccar.geofence.GeofenceCircle#containsPoint(double,double)
	CALLEE: static org.traccar.helper.DistanceCalculator#distance(double,double,double,double)
CALLER: org.traccar.protocol.KenjiProtocolDecoder#decodeAlarm(int)
	CALLEE: static org.traccar.helper.BitUtil#check(long,int)
CALLER: org.traccar.database.ActiveDevice#getCommandTypes()
	CALLEE: org.traccar.BaseProtocol#getSupportedCommands()
	CALLEE: org.traccar.model.CommandType#<init>(java.lang.String)
CALLER: org.traccar.protocol.HuabaoProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.JpKorjarFrameDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.protocol.TeltonikaProtocolDecoder#decodeLocation(org.traccar.model.Position,org.jboss.netty.buffer.ChannelBuffer,int)
	CALLEE: static org.traccar.helper.BitUtil#check(long,int)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,long)
	CALLEE: org.traccar.BaseProtocolDecoder#getLastLocation(org.traccar.model.Position,java.util.Date)
	CALLEE: org.traccar.protocol.TeltonikaProtocolDecoder#decodeParameter(org.traccar.model.Position,int,long)
CALLER: org.traccar.protocol.UlbotechFrameDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.database.DataManager#getGroupPermissions()
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#executeQuery(java.lang.Class)
CALLER: org.traccar.protocol.Gl100Protocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.web.WebServer#stop()
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: org.traccar.DistanceHandler#getLastPosition(long)
	CALLEE: static org.traccar.Context#getIdentityManager()
	CALLEE: org.traccar.database.DeviceManager#getLastPosition(long)
CALLER: org.traccar.api.resource.GroupResource#get(boolean,long)
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.api.BaseResource#getUserId()
	CALLEE: org.traccar.database.PermissionsManager#checkAdmin(long)
	CALLEE: static org.traccar.Context#getDeviceManager()
	CALLEE: org.traccar.database.DeviceManager#getAllGroups()
	CALLEE: org.traccar.database.PermissionsManager#checkUser(long,long)
	CALLEE: org.traccar.database.DeviceManager#getGroups(long)
CALLER: org.traccar.database.DataManager#addGroup(org.traccar.model.Group)
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String,boolean)
	CALLEE: org.traccar.database.QueryBuilder#setObject(java.lang.Object)
	CALLEE: org.traccar.database.QueryBuilder#executeUpdate()
	CALLEE: org.traccar.model.Extensible#setId(long)
CALLER: org.traccar.protocol.TeltonikaProtocolDecoder#parseIdentification(org.jboss.netty.channel.Channel,java.net.SocketAddress,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
CALLER: org.traccar.protocol.YwtProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.Tk103Protocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.database.GeofenceManager#getGroupGeofences(long)
CALLER: org.traccar.api.resource.GeofencePermissionResource#add(org.traccar.model.GeofencePermission)
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.api.BaseResource#getUserId()
	CALLEE: org.traccar.database.PermissionsManager#checkReadonly(long)
	CALLEE: org.traccar.model.GeofencePermission#getUserId()
	CALLEE: org.traccar.database.PermissionsManager#checkUser(long,long)
	CALLEE: org.traccar.model.GeofencePermission#getGeofenceId()
	CALLEE: org.traccar.database.PermissionsManager#checkGeofence(long,long)
	CALLEE: static org.traccar.Context#getDataManager()
	CALLEE: org.traccar.database.DataManager#linkGeofence(long,long)
	CALLEE: static org.traccar.Context#getGeofenceManager()
	CALLEE: org.traccar.database.GeofenceManager#refreshUserGeofences()
CALLER: org.traccar.protocol.HuabaoProtocolDecoder#sendGeneralResponse(org.jboss.netty.channel.Channel,java.net.SocketAddress,org.jboss.netty.buffer.ChannelBuffer,int,int)
	CALLEE: org.traccar.protocol.HuabaoProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,java.net.SocketAddress,int,org.jboss.netty.buffer.ChannelBuffer,org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.geocode.AddressFormat#parseObject(java.lang.String,java.text.ParsePosition)
	CALLEE: org.traccar.geocode.AddressFormat#parseObject(java.lang.String,java.text.ParsePosition)
CALLER: org.traccar.protocol.NvsProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.RitiProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
	CALLEE: org.traccar.TrackerServer#setEndianness(java.nio.ByteOrder)
CALLER: org.traccar.protocol.IdplProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: static org.traccar.web.JsonConverter#arrayToJson(java.util.Collection)
	CALLEE: org.traccar.helper.PatternBuilder#toString()
CALLER: org.traccar.MainEventHandler#channelConnected(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.ChannelStateEvent)
	CALLEE: static org.traccar.MainEventHandler#formatChannel(org.jboss.netty.channel.Channel)
	CALLEE: static org.traccar.helper.Log#info(java.lang.String)
CALLER: org.traccar.protocol.TaipProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.protocol.TaipProtocolDecoder#getTime(long,long,long)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.protocol.TaipProtocolDecoder#getTime(long)
	CALLEE: org.traccar.helper.Parser#hasNext(int)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setDateReverse(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.helper.Parser#nextCoordinate(org.traccar.helper.Parser.CoordinateFormat)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromMph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,long)
	CALLEE: org.traccar.model.Message#getDeviceId()
CALLER: org.traccar.protocol.CityeasyProtocolEncoder#encodeContent(int,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: static org.traccar.helper.Checksum#crc16(java.lang.String,java.nio.ByteBuffer)
CALLER: org.traccar.protocol.AtrackProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.database.PermissionsManager#checkGeofence(long,long)
	CALLEE: static org.traccar.Context#getGeofenceManager()
	CALLEE: org.traccar.database.GeofenceManager#checkGeofence(long,long)
	CALLEE: org.traccar.database.PermissionsManager#isAdmin(long)
CALLER: org.traccar.database.DeviceManager#getAllGroups()
	CALLEE: org.traccar.database.DeviceManager#updateGroupCache(boolean)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: org.traccar.FilterHandler#handlePosition(org.traccar.model.Position)
	CALLEE: org.traccar.FilterHandler#filter(org.traccar.model.Position)
CALLER: org.traccar.protocol.AutoFonProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.protocol.AutoFonProtocolDecoder#decodePosition(org.traccar.DeviceSession,org.jboss.netty.buffer.ChannelBuffer,boolean)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: static org.traccar.helper.BitUtil#check(long,int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: static org.traccar.helper.BitUtil#to(int,int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: static org.traccar.helper.BitUtil#from(int,int)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setDateReverse(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: static org.traccar.protocol.AutoFonProtocolDecoder#convertCoordinate(short,int)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
CALLER: static org.traccar.Main#main(java.lang.String[])
	CALLEE: static org.traccar.Context#init(java.lang.String[])
	CALLEE: static org.traccar.helper.Log#info(java.lang.String)
	CALLEE: static org.traccar.Context#getServerManager()
	CALLEE: org.traccar.ServerManager#start()
	CALLEE: static org.traccar.Context#getWebServer()
	CALLEE: org.traccar.web.WebServer#start()
CALLER: org.traccar.protocol.TotemProtocolDecoder#<init>(org.traccar.protocol.TotemProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.CastelProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,java.net.SocketAddress,org.jboss.netty.buffer.ChannelBuffer,short)
	CALLEE: static org.traccar.helper.Checksum#crc16(java.lang.String,java.nio.ByteBuffer)
CALLER: org.traccar.api.resource.AttributeAliasResource#update(long,org.traccar.model.AttributeAlias)
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.api.BaseResource#getUserId()
	CALLEE: org.traccar.database.PermissionsManager#checkReadonly(long)
	CALLEE: org.traccar.database.PermissionsManager#isAdmin(long)
	CALLEE: static org.traccar.Context#getAliasesManager()
	CALLEE: org.traccar.model.AttributeAlias#getId()
	CALLEE: org.traccar.database.AliasesManager#getAttributeAlias(long)
	CALLEE: org.traccar.model.AttributeAlias#getDeviceId()
	CALLEE: org.traccar.database.PermissionsManager#checkDevice(long,long)
	CALLEE: org.traccar.database.AliasesManager#updateAttributeAlias(org.traccar.model.AttributeAlias)
CALLER: org.traccar.protocol.BoxProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.CalAmpProtocolDecoder#decodePosition(org.traccar.DeviceSession,int,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromCps(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: static org.traccar.helper.BitUtil#from(int,int)
	CALLEE: static org.traccar.helper.BitUtil#to(int,int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,long)
CALLER: org.traccar.protocol.GpsGateProtocolDecoder#send(org.jboss.netty.channel.Channel,java.lang.String)
	CALLEE: static org.traccar.helper.Checksum#nmea(java.lang.String)
CALLER: org.traccar.protocol.Gt06ProtocolEncoder#encodeCommand(org.traccar.model.Command)
	CALLEE: static org.traccar.Context#getIdentityManager()
	CALLEE: org.traccar.model.Message#getDeviceId()
	CALLEE: org.traccar.database.DeviceManager#getDeviceById(long)
	CALLEE: org.traccar.model.Extensible#getAttributes()
	CALLEE: static org.traccar.Context#getConfig()
	CALLEE: org.traccar.Config#getBoolean(java.lang.String)
	CALLEE: org.traccar.model.Message#getType()
	CALLEE: org.traccar.protocol.Gt06ProtocolEncoder#encodeContent(java.lang.String)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: org.traccar.protocol.TopflytechProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setDate(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.Parser#nextCoordinate()
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
CALLER: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setDeviceTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setFixTime(java.util.Date)
CALLER: org.traccar.protocol.Mta6ProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,short,short)
CALLER: org.traccar.protocol.UproProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: static org.traccar.reports.Events#getJson(long,java.util.Collection,java.util.Collection,java.util.Collection,java.util.Date,java.util.Date)
	CALLEE: static org.traccar.reports.ReportUtils#getDeviceList(java.util.Collection,java.util.Collection)
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.database.PermissionsManager#checkDevice(long,long)
	CALLEE: static org.traccar.Context#getDataManager()
	CALLEE: org.traccar.database.DataManager#getEvents(long,java.lang.String,java.util.Date,java.util.Date)
	CALLEE: org.traccar.helper.PatternBuilder#toString()
CALLER: org.traccar.protocol.CguardProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setDate(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
CALLER: static org.traccar.protocol.GalileoProtocolDecoder#getTagLength(int)
CALLER: org.traccar.protocol.Stl060FrameDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.protocol.GalileoProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.database.DeviceManager#removeDevice(long)
	CALLEE: org.traccar.database.DataManager#removeDevice(long)
	CALLEE: org.traccar.model.Device#getUniqueId()
CALLER: org.traccar.database.DataManager#removeAttributeAlias(long)
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#setLong(java.lang.String,long)
	CALLEE: org.traccar.database.QueryBuilder#executeUpdate()
CALLER: org.traccar.api.resource.ReportResource#getTripsCsv(java.util.List,java.util.List,java.lang.String,java.lang.String)
	CALLEE: org.traccar.api.BaseResource#getUserId()
	CALLEE: static org.traccar.web.JsonConverter#parseDate(java.lang.String)
	CALLEE: static org.traccar.reports.Trips#getCsv(long,java.util.Collection,java.util.Collection,java.util.Date,java.util.Date)
CALLER: org.traccar.protocol.NavisProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.NavisProtocolDecoder#processHandshake(org.jboss.netty.channel.Channel,java.net.SocketAddress,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.protocol.NavisProtocolDecoder#processSingle(org.traccar.DeviceSession,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.protocol.NavisProtocolDecoder#processArray(org.traccar.DeviceSession,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.database.QueryBuilder#setDate(java.lang.String,java.util.Date)
	CALLEE: org.traccar.database.QueryBuilder#indexes(java.lang.String)
CALLER: org.traccar.protocol.CarcellProtocolEncoder#encodeCommand(org.traccar.model.Command)
	CALLEE: org.traccar.model.Message#getType()
	CALLEE: org.traccar.StringProtocolEncoder#formatCommand(org.traccar.model.Command,java.lang.String,java.lang.String[])
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: org.traccar.protocol.OsmAndProtocolDecoder#<init>(org.traccar.protocol.OsmAndProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.HuabaoProtocolDecoder#<init>(org.traccar.protocol.HuabaoProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.Jt600ProtocolDecoder#<init>(org.traccar.protocol.Jt600Protocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.GpsGateProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.Parser#nextInt(int)
CALLER: org.traccar.protocol.WialonProtocolDecoder#<init>(org.traccar.protocol.WialonProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.helper.Parser#nextInt(int)
	CALLEE: org.traccar.helper.Parser#hasNext()
	CALLEE: org.traccar.helper.Parser#next()
CALLER: org.traccar.helper.LocationTree.Item#<init>(float,float)
	CALLEE: org.traccar.helper.LocationTree.Item#<init>(float,float,java.lang.String)
CALLER: org.traccar.database.GroupTree#getNodes(java.util.Set,org.traccar.database.GroupTree.TreeNode)
	CALLEE: org.traccar.database.GroupTree.TreeNode#getChildren()
	CALLEE: org.traccar.database.GroupTree#getNodes(java.util.Set,org.traccar.database.GroupTree.TreeNode)
CALLER: org.traccar.protocol.WatchProtocolEncoder#getBinaryData(org.traccar.model.Command)
	CALLEE: org.traccar.model.Extensible#getAttributes()
CALLER: org.traccar.protocol.MegastekProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.MegastekProtocolDecoder#decodeNew(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String)
	CALLEE: org.traccar.protocol.MegastekProtocolDecoder#decodeOld(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String)
CALLER: static org.traccar.protocol.H02ProtocolDecoder#readCoordinate(org.jboss.netty.buffer.ChannelBuffer,boolean)
	CALLEE: static org.traccar.helper.BcdUtil#readInteger(org.jboss.netty.buffer.ChannelBuffer,int)
CALLER: org.traccar.protocol.AtrackProtocolDecoder#readCustomData(org.traccar.model.Position,org.jboss.netty.buffer.ChannelBuffer,java.lang.String)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,long)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,boolean)
	CALLEE: static org.traccar.protocol.AtrackProtocolDecoder#readString(org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
CALLER: org.traccar.protocol.RuptelaProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,long)
CALLER: org.traccar.HemisphereHandler#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.model.Position#getLatitude()
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#getLongitude()
	CALLEE: org.traccar.model.Position#setLongitude(double)
CALLER: org.traccar.geocode.GisgraphyReverseGeocoder#parseAddress(javax.json.JsonObject)
	CALLEE: org.traccar.geocode.Address#setStreet(java.lang.String)
	CALLEE: org.traccar.geocode.Address#setSettlement(java.lang.String)
	CALLEE: org.traccar.geocode.Address#setState(java.lang.String)
	CALLEE: org.traccar.geocode.Address#setCountry(java.lang.String)
CALLER: org.traccar.protocol.LaipacProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.Parser#nextCoordinate()
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.helper.DateBuilder#setDateReverse(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: static org.traccar.helper.Checksum#nmea(java.lang.String)
CALLER: org.traccar.protocol.GlobalSatProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.NavigilProtocolDecoder#parseTrackingData(org.traccar.DeviceSession,org.jboss.netty.buffer.ChannelBuffer,int,long)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: static org.traccar.protocol.NavigilProtocolDecoder#convertTimestamp(long)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
CALLER: org.traccar.protocol.NavigilProtocolDecoder#parseSnapshot4(org.traccar.DeviceSession,org.jboss.netty.buffer.ChannelBuffer,int)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: static org.traccar.protocol.NavigilProtocolDecoder#convertTimestamp(long)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
CALLER: org.traccar.api.resource.ReportResource#getRouteCsv(java.util.List,java.util.List,java.lang.String,java.lang.String)
	CALLEE: org.traccar.api.BaseResource#getUserId()
	CALLEE: static org.traccar.web.JsonConverter#parseDate(java.lang.String)
	CALLEE: static org.traccar.reports.Route#getCsv(long,java.util.Collection,java.util.Collection,java.util.Date,java.util.Date)
CALLER: org.traccar.helper.PatternBuilder#compile()
	CALLEE: org.traccar.helper.PatternBuilder#toString()
CALLER: org.traccar.protocol.T800xProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocol#setSupportedCommands(java.lang.String[])
CALLER: org.traccar.protocol.MeitrackProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: static org.traccar.Context#getIdentityManager()
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.database.DeviceManager#getDeviceById(long)
	CALLEE: org.traccar.model.Device#getUniqueId()
	CALLEE: org.traccar.protocol.MeitrackProtocolDecoder#decodeBinaryMessage(org.jboss.netty.channel.Channel,java.net.SocketAddress,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.protocol.MeitrackProtocolDecoder#decodeRegularMessage(org.jboss.netty.channel.Channel,java.net.SocketAddress,org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.protocol.Tr900ProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.DateBuilder#setDate(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.helper.Parser#nextCoordinate(org.traccar.helper.Parser.CoordinateFormat)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
CALLER: org.traccar.geofence.GeofencePolygon#toWkt()
	CALLEE: org.traccar.geofence.GeofencePolygon.Coordinate#getLat()
	CALLEE: org.traccar.geofence.GeofencePolygon.Coordinate#getLon()
CALLER: org.traccar.protocol.GnxProtocolDecoder#<init>(org.traccar.protocol.GnxProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.NavisProtocolDecoder#processSingle(org.traccar.DeviceSession,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.protocol.NavisProtocolDecoder#parsePosition(org.traccar.DeviceSession,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.protocol.NavisProtocolDecoder.ParseResult#getId()
	CALLEE: org.traccar.protocol.NavisProtocolDecoder#sendReply(org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.protocol.NavisProtocolDecoder.ParseResult#getPosition()
	CALLEE: org.traccar.model.Position#getFixTime()
CALLER: org.traccar.database.DeviceManager#removeGroup(long)
	CALLEE: org.traccar.database.DataManager#removeGroup(long)
CALLER: org.traccar.api.resource.GeofenceResource#add(org.traccar.model.Geofence)
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.api.BaseResource#getUserId()
	CALLEE: org.traccar.database.PermissionsManager#checkReadonly(long)
	CALLEE: static org.traccar.Context#getDataManager()
	CALLEE: org.traccar.database.DataManager#addGeofence(org.traccar.model.Geofence)
	CALLEE: org.traccar.model.Extensible#getId()
	CALLEE: org.traccar.database.DataManager#linkGeofence(long,long)
	CALLEE: static org.traccar.Context#getGeofenceManager()
	CALLEE: org.traccar.database.GeofenceManager#refreshGeofences()
CALLER: org.traccar.protocol.HuabaoProtocolDecoder#decodeAlarm(long)
	CALLEE: static org.traccar.helper.BitUtil#check(long,int)
CALLER: org.traccar.helper.Log.NettyInternalLogger#warn(java.lang.String,java.lang.Throwable)
	CALLEE: static org.traccar.helper.Log#getLogger()
CALLER: org.traccar.protocol.OrionProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.database.DataManager#getUsers()
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#executeQuery(java.lang.Class)
CALLER: org.traccar.protocol.GpsMarkerProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setDateReverse(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.Parser#nextCoordinate(org.traccar.helper.Parser.CoordinateFormat)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.helper.Parser#nextInt(int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
CALLER: org.traccar.protocol.Jt600FrameDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.model.Extensible#set(java.lang.String,long)
CALLER: org.traccar.helper.DateBuilder#<init>(java.util.Date)
	CALLEE: org.traccar.helper.DateBuilder#<init>(java.util.Date,java.util.TimeZone)
CALLER: org.traccar.api.AsyncSocket#<init>(long)
CALLER: org.traccar.database.AliasesManager#updateAttributeAlias(org.traccar.model.AttributeAlias)
	CALLEE: org.traccar.database.DataManager#updateAttributeAlias(org.traccar.model.AttributeAlias)
	CALLEE: org.traccar.model.AttributeAlias#getId()
	CALLEE: org.traccar.model.AttributeAlias#getDeviceId()
	CALLEE: org.traccar.database.AliasesManager#getAttributeAliases(long)
	CALLEE: org.traccar.model.AttributeAlias#setDeviceId(long)
	CALLEE: org.traccar.model.AttributeAlias#getAttribute()
	CALLEE: org.traccar.model.AttributeAlias#setAttribute(java.lang.String)
	CALLEE: org.traccar.model.AttributeAlias#getAlias()
	CALLEE: org.traccar.model.AttributeAlias#setAlias(java.lang.String)
CALLER: org.traccar.protocol.Tt8850Protocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.protocol.GpsmtaProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.model.Event#<init>(java.lang.String,long,long)
	CALLEE: org.traccar.model.Message#setType(java.lang.String)
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.model.Event#setPositionId(long)
CALLER: org.traccar.protocol.GalileoFrameDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.protocol.M2mProtocolDecoder#<init>(org.traccar.protocol.M2mProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.H02Protocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.FilterHandler#filterZero(org.traccar.model.Position)
	CALLEE: org.traccar.model.Position#getLatitude()
	CALLEE: org.traccar.model.Position#getLongitude()
CALLER: org.traccar.protocol.H02ProtocolEncoder#formatCommand(org.joda.time.DateTime,java.lang.String,java.lang.String,java.lang.String[])
CALLER: org.traccar.protocol.Gt02Protocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.geofence.GeofencePolygon#precalc()
	CALLEE: org.traccar.geofence.GeofencePolygon.Coordinate#getLon360()
	CALLEE: org.traccar.geofence.GeofencePolygon.Coordinate#getLat()
CALLER: org.traccar.helper.Log.NettyInternalLogger#warn(java.lang.String)
	CALLEE: org.traccar.helper.Log.NettyInternalLogger#warn(java.lang.String,java.lang.Throwable)
CALLER: org.traccar.database.DataManager#getLastEvents(long,java.lang.String,int)
	CALLEE: org.traccar.database.DataManager#getEvents(long,java.lang.String,java.util.Date,java.util.Date)
CALLER: org.traccar.protocol.M2mProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.DateBuilder#setDay(int)
	CALLEE: org.traccar.helper.DateBuilder#setMonth(int)
	CALLEE: org.traccar.helper.DateBuilder#setYear(int)
	CALLEE: org.traccar.helper.DateBuilder#setHour(int)
	CALLEE: org.traccar.helper.DateBuilder#setMinute(int)
	CALLEE: org.traccar.helper.DateBuilder#setSecond(int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
CALLER: org.traccar.database.PermissionsManager#getUsers()
CALLER: org.traccar.api.resource.GroupResource#add(org.traccar.model.Group)
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.api.BaseResource#getUserId()
	CALLEE: org.traccar.database.PermissionsManager#checkReadonly(long)
	CALLEE: static org.traccar.Context#getDeviceManager()
	CALLEE: org.traccar.database.DeviceManager#addGroup(org.traccar.model.Group)
	CALLEE: static org.traccar.Context#getDataManager()
	CALLEE: org.traccar.model.Extensible#getId()
	CALLEE: org.traccar.database.DataManager#linkGroup(long,long)
	CALLEE: org.traccar.database.PermissionsManager#refreshPermissions()
	CALLEE: static org.traccar.Context#getGeofenceManager()
	CALLEE: org.traccar.database.GeofenceManager#refresh()
CALLER: org.traccar.protocol.YwtProtocolDecoder#<init>(org.traccar.protocol.YwtProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.MegastekProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.helper.Parser#nextLong()
	CALLEE: org.traccar.helper.Parser#nextLong(int)
CALLER: org.traccar.protocol.Gt06FrameDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.protocol.NoranProtocolEncoder#encodeCommand(org.traccar.model.Command)
	CALLEE: org.traccar.model.Message#getType()
	CALLEE: org.traccar.protocol.NoranProtocolEncoder#encodeContent(java.lang.String)
	CALLEE: org.traccar.model.Extensible#getAttributes()
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: org.traccar.protocol.GatorProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.Stl060ProtocolDecoder#<init>(org.traccar.protocol.Stl060Protocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.GlobalSatProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.GlobalSatProtocolDecoder#decodeOriginal(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String)
	CALLEE: org.traccar.protocol.GlobalSatProtocolDecoder#decodeAlternative(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String)
CALLER: org.traccar.protocol.NavigilProtocolDecoder#parsePositionReport2(org.traccar.DeviceSession,org.jboss.netty.buffer.ChannelBuffer,int,long)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: static org.traccar.protocol.NavigilProtocolDecoder#convertTimestamp(long)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setValid(boolean)
CALLER: org.traccar.protocol.HomtecsProtocolDecoder#<init>(org.traccar.protocol.HomtecsProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.Config#getDouble(java.lang.String)
	CALLEE: org.traccar.Config#getDouble(java.lang.String,double)
CALLER: org.traccar.CharacterDelimiterFrameDecoder#<init>(int,java.lang.String[])
	CALLEE: static org.traccar.CharacterDelimiterFrameDecoder#convertDelimiters(java.lang.String[])
CALLER: org.traccar.helper.PatternBuilder#optional(int)
CALLER: org.traccar.protocol.FlextrackProtocolDecoder#sendAcknowledgement(org.jboss.netty.channel.Channel,java.lang.String)
CALLER: org.traccar.protocol.Jt600Protocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.web.CsvBuilder#getSortedMethods(java.lang.Object)
CALLER: org.traccar.protocol.ProgressProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
	CALLEE: org.traccar.TrackerServer#setEndianness(java.nio.ByteOrder)
CALLER: org.traccar.protocol.GatorProtocolDecoder#<init>(org.traccar.protocol.GatorProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setHour(int)
	CALLEE: org.traccar.helper.DateBuilder#setMinute(int)
	CALLEE: org.traccar.helper.DateBuilder#setSecond(int)
CALLER: org.traccar.database.DataManager#addEvent(org.traccar.model.Event)
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String,boolean)
	CALLEE: org.traccar.database.QueryBuilder#setObject(java.lang.Object)
	CALLEE: org.traccar.database.QueryBuilder#executeUpdate()
	CALLEE: org.traccar.model.Extensible#setId(long)
CALLER: org.traccar.protocol.CellocatorProtocolDecoder#<init>(org.traccar.protocol.CellocatorProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.MeiligaoProtocolEncoder#encodeContent(long,int,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.BaseProtocolEncoder#getUniqueId(long)
	CALLEE: static org.traccar.helper.Checksum#crc16(java.lang.String,java.nio.ByteBuffer)
CALLER: org.traccar.protocol.HomtecsProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.protocol.HuabaoProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: static org.traccar.protocol.GranitProtocolDecoder#decodeStructure(org.jboss.netty.buffer.ChannelBuffer,org.traccar.model.Position)
	CALLEE: static org.traccar.helper.BitUtil#check(long,int)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: static org.traccar.helper.BitUtil#from(int,int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: static org.traccar.helper.BitUtil#to(int,int)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,boolean)
CALLER: org.traccar.protocol.Gt06ProtocolDecoder#decodeStatus(org.traccar.model.Position,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: static org.traccar.helper.BitUtil#check(long,int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,boolean)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.protocol.Gt06ProtocolDecoder#decodeAlarm(short)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
CALLER: org.traccar.protocol.Tk102Protocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.protocol.WondexProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.api.AsyncSocketServlet#configure(org.eclipse.jetty.websocket.servlet.WebSocketServletFactory)
	CALLEE: static org.traccar.Context#getConfig()
	CALLEE: org.traccar.Config#getLong(java.lang.String,long)
CALLER: org.traccar.helper.LocationTree#createTree(java.util.List,int)
	CALLEE: org.traccar.helper.LocationTree#createTree(java.util.List,int)
CALLER: org.traccar.protocol.MiniFinderProtocolDecoder#<init>(org.traccar.protocol.MiniFinderProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.Mta6Protocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.database.ConnectionManager#removeActiveDevice(org.jboss.netty.channel.Channel)
	CALLEE: org.traccar.database.ActiveDevice#getChannel()
	CALLEE: org.traccar.database.ActiveDevice#getDeviceId()
	CALLEE: org.traccar.database.ConnectionManager#updateDevice(long,java.lang.String,java.util.Date)
CALLER: org.traccar.MainEventHandler#channelDisconnected(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.ChannelStateEvent)
	CALLEE: static org.traccar.MainEventHandler#formatChannel(org.jboss.netty.channel.Channel)
	CALLEE: static org.traccar.helper.Log#info(java.lang.String)
	CALLEE: org.traccar.MainEventHandler#closeChannel(org.jboss.netty.channel.Channel)
	CALLEE: static org.traccar.Context#getConnectionManager()
	CALLEE: org.traccar.database.ConnectionManager#removeActiveDevice(org.jboss.netty.channel.Channel)
CALLER: org.traccar.protocol.HuaShengFrameDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.protocol.ApelProtocolDecoder#<init>(org.traccar.protocol.ApelProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.web.WebServer#initApi()
CALLER: org.traccar.helper.DateBuilder#setCurrentDate()
	CALLEE: org.traccar.helper.DateBuilder#setYear(int)
	CALLEE: org.traccar.helper.DateBuilder#setMonth(int)
	CALLEE: org.traccar.helper.DateBuilder#setDay(int)
CALLER: org.traccar.protocol.CastelProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
	CALLEE: org.traccar.TrackerServer#setEndianness(java.nio.ByteOrder)
CALLER: org.traccar.protocol.AdmProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
	CALLEE: org.traccar.TrackerServer#setEndianness(java.nio.ByteOrder)
CALLER: org.traccar.database.DataManager#removeNotification(org.traccar.model.Notification)
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.model.Extensible#getId()
	CALLEE: org.traccar.database.QueryBuilder#setLong(java.lang.String,long)
	CALLEE: org.traccar.database.QueryBuilder#executeUpdate()
CALLER: org.traccar.protocol.MeiligaoProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.database.ActiveDevice#sendCommand(org.traccar.model.Command)
	CALLEE: org.traccar.BaseProtocol#sendCommand(org.traccar.database.ActiveDevice,org.traccar.model.Command)
CALLER: org.traccar.geocode.GoogleReverseGeocoder#<init>(int)
	CALLEE: org.traccar.geocode.JsonReverseGeocoder#<init>(java.lang.String,int)
CALLER: static org.traccar.model.MiscFormatter#toJson(java.util.Map)
CALLER: org.traccar.protocol.CastelProtocolDecoder#decodeCc(org.jboss.netty.channel.Channel,java.net.SocketAddress,org.jboss.netty.buffer.ChannelBuffer,int,org.jboss.netty.buffer.ChannelBuffer,int,org.traccar.DeviceSession)
	CALLEE: org.traccar.protocol.CastelProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,java.net.SocketAddress,int,org.jboss.netty.buffer.ChannelBuffer,short,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.protocol.CastelProtocolDecoder#readPosition(org.traccar.DeviceSession,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,long)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
CALLER: org.traccar.geocode.GoogleReverseGeocoder#<init>()
	CALLEE: org.traccar.geocode.GoogleReverseGeocoder#<init>(int)
CALLER: org.traccar.geofence.GeofenceCircle#<init>(double,double,double)
CALLER: org.traccar.database.PermissionsManager#checkUser(long,long)
	CALLEE: org.traccar.database.PermissionsManager#checkAdmin(long)
CALLER: org.traccar.protocol.OrionProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: static org.traccar.protocol.OrionProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: static org.traccar.protocol.OrionProtocolDecoder#convertCoordinate(int)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.DateBuilder#setDate(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setValid(boolean)
CALLER: org.traccar.geocode.BingMapsReverseGeocoder#parseAddress(javax.json.JsonObject)
	CALLEE: org.traccar.geocode.Address#setStreet(java.lang.String)
	CALLEE: org.traccar.geocode.Address#setSettlement(java.lang.String)
	CALLEE: org.traccar.geocode.Address#setDistrict(java.lang.String)
	CALLEE: org.traccar.geocode.Address#setState(java.lang.String)
	CALLEE: org.traccar.geocode.Address#setCountry(java.lang.String)
	CALLEE: org.traccar.geocode.Address#setPostcode(java.lang.String)
CALLER: org.traccar.protocol.Stl060ProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setDateReverse(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.helper.Parser#nextCoordinate(org.traccar.helper.Parser.CoordinateFormat)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.helper.Parser#hasNext(int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,boolean)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: org.traccar.model.Position#setValid(boolean)
CALLER: org.traccar.protocol.MeiligaoProtocolDecoder#decodeObd(org.traccar.model.Position,java.lang.String)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getLastLocation(org.traccar.model.Position,java.util.Date)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
CALLER: org.traccar.database.DataManager#unlinkGeofence(long,long)
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#setLong(java.lang.String,long)
	CALLEE: org.traccar.database.QueryBuilder#executeUpdate()
CALLER: org.traccar.database.NotificationManager#getUserNotificationsUnsafe(long)
CALLER: org.traccar.protocol.MeitrackProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
	CALLEE: org.traccar.TrackerServer#setEndianness(java.nio.ByteOrder)
CALLER: org.traccar.database.DataManager#getLatestPositions()
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#executeQuery(java.lang.Class)
CALLER: static org.traccar.protocol.AutoFonProtocolDecoder#convertCoordinate(short,int)
	CALLEE: static org.traccar.helper.BitUtil#from(int,int)
	CALLEE: static org.traccar.helper.BitUtil#check(long,int)
CALLER: org.traccar.protocol.MiniFinderProtocolEncoder#encodeCommand(org.traccar.model.Command)
	CALLEE: org.traccar.BaseProtocolEncoder#initDevicePassword(org.traccar.model.Command,java.lang.String)
	CALLEE: org.traccar.model.Message#getType()
	CALLEE: org.traccar.StringProtocolEncoder#formatCommand(org.traccar.model.Command,java.lang.String,org.traccar.StringProtocolEncoder.ValueFormatter,java.lang.String[])
	CALLEE: org.traccar.StringProtocolEncoder#formatCommand(org.traccar.model.Command,java.lang.String,java.lang.String[])
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: static org.traccar.helper.Log#warning(java.lang.Throwable)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.String,java.lang.Throwable)
CALLER: org.traccar.protocol.NavigilProtocolDecoder#parseUnitReport(org.traccar.DeviceSession,org.jboss.netty.buffer.ChannelBuffer,int)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
	CALLEE: static org.traccar.protocol.NavigilProtocolDecoder#convertTimestamp(long)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
CALLER: org.traccar.protocol.T55Protocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.GoSafeProtocolDecoder#decodePosition(org.traccar.DeviceSession,org.traccar.helper.Parser,java.util.Date)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.Parser#nextCoordinate(org.traccar.helper.Parser.CoordinateFormat)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.helper.Parser#hasNext(int)
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.helper.Parser#nextInt(int)
	CALLEE: org.traccar.helper.Parser#hasNext()
	CALLEE: static org.traccar.helper.BitUtil#check(long,int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,boolean)
CALLER: org.traccar.protocol.ManPowerProtocolDecoder#<init>(org.traccar.protocol.ManPowerProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.GpsMarkerProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.RaveonProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.Parser#nextCoordinate(org.traccar.helper.Parser.CoordinateFormat)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.helper.DateBuilder#<init>(java.util.Date)
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
CALLER: static org.traccar.GlobalChannelFactory#release()
CALLER: org.traccar.geofence.GeofencePolygon#fromWkt(java.lang.String)
	CALLEE: org.traccar.geofence.GeofencePolygon.Coordinate#setLat(double)
	CALLEE: org.traccar.geofence.GeofencePolygon.Coordinate#setLon(double)
	CALLEE: org.traccar.geofence.GeofencePolygon#precalc()
CALLER: org.traccar.database.DeviceManager#getDeviceById(long)
CALLER: org.traccar.protocol.NavigilProtocolDecoder#parsePositionReport(org.traccar.DeviceSession,org.jboss.netty.buffer.ChannelBuffer,int,long)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: static org.traccar.protocol.NavigilProtocolDecoder#convertTimestamp(long)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setValid(boolean)
CALLER: org.traccar.protocol.TytanProtocolDecoder#decodeExtraData(org.traccar.model.Position,org.jboss.netty.buffer.ChannelBuffer,int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
	CALLEE: static org.traccar.helper.BitUtil#check(long,int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,long)
CALLER: org.traccar.protocol.TytanProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: static org.traccar.helper.BitUtil#from(int,int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: static org.traccar.helper.BitUtil#to(int,int)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: static org.traccar.helper.BitUtil#check(long,int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,boolean)
	CALLEE: static org.traccar.helper.BitUtil#between(int,int,int)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.protocol.TytanProtocolDecoder#decodeExtraData(org.traccar.model.Position,org.jboss.netty.buffer.ChannelBuffer,int)
CALLER: static org.traccar.protocol.AtrackProtocolDecoder#readString(org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.protocol.XirgoProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.Gl200ProtocolDecoder#decodeFri(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.Parser#find()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: org.traccar.protocol.Gl200ProtocolDecoder#decodeLocation(org.traccar.model.Position,org.traccar.helper.Parser)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
	CALLEE: org.traccar.helper.Parser#hasNext(int)
	CALLEE: org.traccar.helper.Parser#nextInt(int)
	CALLEE: static org.traccar.helper.BitUtil#check(long,int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,boolean)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.DateBuilder#setDate(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.model.Position#getOutdated()
	CALLEE: org.traccar.model.Position#getFixTime()
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
CALLER: org.traccar.protocol.Pt3000Protocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.database.DataManager#updateGeofence(org.traccar.model.Geofence)
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#setObject(java.lang.Object)
	CALLEE: org.traccar.database.QueryBuilder#executeUpdate()
CALLER: org.traccar.protocol.DishaProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setDateReverse(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.helper.Parser#nextCoordinate()
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,boolean)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
CALLER: org.traccar.database.GeofenceManager#getAllGeofencesIds()
CALLER: org.traccar.protocol.CellocatorProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
	CALLEE: org.traccar.TrackerServer#setEndianness(java.nio.ByteOrder)
CALLER: org.traccar.api.AsyncSocket#onWebSocketConnect(org.eclipse.jetty.websocket.api.Session)
	CALLEE: static org.traccar.Context#getDeviceManager()
	CALLEE: org.traccar.database.DeviceManager#getInitialState(long)
	CALLEE: org.traccar.api.AsyncSocket#sendData(java.util.Map)
	CALLEE: static org.traccar.Context#getConnectionManager()
	CALLEE: org.traccar.database.ConnectionManager#addListener(long,org.traccar.database.ConnectionManager.UpdateListener)
CALLER: org.traccar.MainEventHandler#exceptionCaught(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.ExceptionEvent)
	CALLEE: static org.traccar.MainEventHandler#formatChannel(org.jboss.netty.channel.Channel)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.String,java.lang.Throwable)
	CALLEE: org.traccar.MainEventHandler#closeChannel(org.jboss.netty.channel.Channel)
CALLER: org.traccar.database.PermissionsManager#getDevicePermissions(long)
CALLER: org.traccar.protocol.ManPowerProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.protocol.EnforaProtocolDecoder#<init>(org.traccar.protocol.EnforaProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.TotemProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocol#setSupportedCommands(java.lang.String[])
CALLER: org.traccar.helper.PatternBuilder#expression(java.lang.String)
CALLER: org.traccar.protocol.MegastekProtocolDecoder#parseLocation(java.lang.String,org.traccar.model.Position)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.Parser#nextCoordinate()
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.helper.DateBuilder#setDateReverse(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
CALLER: org.traccar.protocol.Gl200ProtocolDecoder#decodeInf(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setDate(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.BaseProtocolDecoder#getLastLocation(org.traccar.model.Position,java.util.Date)
CALLER: org.traccar.web.WebServer#start()
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: org.traccar.protocol.GatorProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: static org.traccar.protocol.GatorProtocolDecoder#decodeId(int,int,int,int)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: static org.traccar.helper.BcdUtil#readInteger(org.jboss.netty.buffer.ChannelBuffer,int)
	CALLEE: org.traccar.helper.DateBuilder#setYear(int)
	CALLEE: org.traccar.helper.DateBuilder#setMonth(int)
	CALLEE: org.traccar.helper.DateBuilder#setDay(int)
	CALLEE: org.traccar.helper.DateBuilder#setHour(int)
	CALLEE: org.traccar.helper.DateBuilder#setMinute(int)
	CALLEE: org.traccar.helper.DateBuilder#setSecond(int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: static org.traccar.helper.BcdUtil#readCoordinate(org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,long)
CALLER: org.traccar.BasePipelineFactory#getPipeline()
	CALLEE: org.traccar.TrackerServer#isConnectionless()
	CALLEE: static org.traccar.GlobalTimer#getTimer()
	CALLEE: static org.traccar.Context#isLoggerEnabled()
	CALLEE: org.traccar.BasePipelineFactory#addDynamicHandlers(org.jboss.netty.channel.ChannelPipeline)
	CALLEE: static org.traccar.Context#getDataManager()
	CALLEE: static org.traccar.Context#getConfig()
	CALLEE: org.traccar.Config#getBoolean(java.lang.String)
	CALLEE: org.traccar.Config#getString(java.lang.String)
	CALLEE: org.traccar.WebDataHandler#<init>(java.lang.String)
CALLER: org.traccar.protocol.HaicomProtocolDecoder#<init>(org.traccar.protocol.HaicomProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.BaseProtocolEncoder#getUniqueId(long)
	CALLEE: static org.traccar.Context#getIdentityManager()
	CALLEE: org.traccar.database.DeviceManager#getDeviceById(long)
	CALLEE: org.traccar.model.Device#getUniqueId()
CALLER: org.traccar.model.Extensible#set(java.lang.String,boolean)
CALLER: org.traccar.protocol.AtrackProtocolDecoder#<init>(org.traccar.protocol.AtrackProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
	CALLEE: static org.traccar.Context#getConfig()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.Config#getBoolean(java.lang.String)
	CALLEE: org.traccar.Config#getString(java.lang.String)
CALLER: org.traccar.web.ConsoleServlet#init()
	CALLEE: static org.traccar.Context#getConfig()
	CALLEE: org.traccar.Config#getString(java.lang.String)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: org.traccar.TrackerServer#start()
	CALLEE: org.traccar.TrackerServer#getChannelGroup()
CALLER: org.traccar.protocol.AquilaProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.BasePipelineFactory.OpenChannelHandler#channelOpen(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.ChannelStateEvent)
	CALLEE: org.traccar.TrackerServer#getChannelGroup()
CALLER: org.traccar.web.CsvBuilder#addHeaderLine(java.lang.Object)
	CALLEE: org.traccar.web.CsvBuilder#getSortedMethods(java.lang.Object)
	CALLEE: org.traccar.web.CsvBuilder#addSeparator()
	CALLEE: org.traccar.web.CsvBuilder#addLineEnding()
CALLER: org.traccar.database.ConnectionManager#addListener(long,org.traccar.database.ConnectionManager.UpdateListener)
CALLER: org.traccar.protocol.BceFrameDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: static org.traccar.protocol.BceFrameDecoder#checksum(org.jboss.netty.buffer.ChannelBuffer,int)
CALLER: org.traccar.protocol.NoranProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocol#setSupportedCommands(java.lang.String[])
CALLER: org.traccar.protocol.SanavProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.protocol.XirgoProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setDate(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromMph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
	CALLEE: org.traccar.model.Position#setValid(boolean)
CALLER: org.traccar.protocol.T55ProtocolDecoder#decodeGpgga(org.traccar.DeviceSession,java.lang.String)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.DateBuilder#setCurrentDate()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.Parser#nextCoordinate()
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
CALLER: org.traccar.protocol.Gt06Protocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.TeltonikaProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocol#setSupportedCommands(java.lang.String[])
CALLER: org.traccar.protocol.GalileoProtocolDecoder#<init>(org.traccar.protocol.GalileoProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.geocode.OpenCageReverseGeocoder#<init>(java.lang.String,java.lang.String,int)
	CALLEE: org.traccar.geocode.JsonReverseGeocoder#<init>(java.lang.String,int)
CALLER: org.traccar.protocol.HomtecsProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setDate(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.helper.Parser#nextCoordinate()
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
CALLER: org.traccar.protocol.T55ProtocolDecoder#decodeTrccr(org.traccar.DeviceSession,java.lang.String)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setDate(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
CALLER: org.traccar.protocol.EelinkProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,int,int)
CALLER: org.traccar.protocol.TaipProtocolDecoder#getTime(long,long,long)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.DateBuilder#setDate(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#addMillis(long)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
CALLER: org.traccar.protocol.CastelProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,java.net.SocketAddress,int,org.jboss.netty.buffer.ChannelBuffer,short,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: static org.traccar.helper.Checksum#crc16(java.lang.String,java.nio.ByteBuffer)
CALLER: static org.traccar.GlobalTimer#release()
CALLER: org.traccar.model.User#setPassword(java.lang.String)
	CALLEE: static org.traccar.helper.Hashing#createHash(java.lang.String)
	CALLEE: org.traccar.helper.Hashing.HashingResult#getHash()
	CALLEE: org.traccar.helper.Hashing.HashingResult#getSalt()
CALLER: org.traccar.protocol.NavigilProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
	CALLEE: org.traccar.TrackerServer#setEndianness(java.nio.ByteOrder)
CALLER: static org.traccar.helper.Log#getLogger()
CALLER: org.traccar.database.ConnectionManager#updateDevice(org.traccar.model.Device)
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.model.Extensible#getId()
	CALLEE: org.traccar.database.PermissionsManager#getDeviceUsers(long)
	CALLEE: org.traccar.api.AsyncSocket#onUpdateDevice(org.traccar.model.Device)
CALLER: org.traccar.BaseDataHandler#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.DefaultDataHandler#handlePosition(org.traccar.model.Position)
	CALLEE: org.traccar.BaseEventHandler#handlePosition(org.traccar.model.Position)
	CALLEE: org.traccar.FilterHandler#handlePosition(org.traccar.model.Position)
	CALLEE: org.traccar.DistanceHandler#handlePosition(org.traccar.model.Position)
	CALLEE: org.traccar.WebDataHandler#handlePosition(org.traccar.model.Position)
	CALLEE: org.traccar.CoordinatesHandler#handlePosition(org.traccar.model.Position)
CALLER: org.traccar.StringProtocolEncoder#formatCommand(org.traccar.model.Command,java.lang.String,org.traccar.StringProtocolEncoder.ValueFormatter,java.lang.String[])
	CALLEE: org.traccar.model.Message#getDeviceId()
	CALLEE: org.traccar.BaseProtocolEncoder#getUniqueId(long)
	CALLEE: org.traccar.model.Extensible#getAttributes()
	CALLEE: org.traccar.protocol.Gps103ProtocolEncoder#formatValue(java.lang.String,java.lang.Object)
	CALLEE: org.traccar.protocol.MiniFinderProtocolEncoder#formatValue(java.lang.String,java.lang.Object)
	CALLEE: org.traccar.helper.PatternBuilder#toString()
CALLER: org.traccar.protocol.TytanProtocolDecoder#<init>(org.traccar.protocol.TytanProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.KhdProtocolDecoder#readSerialNumber(org.jboss.netty.buffer.ChannelBuffer)
CALLER: static org.traccar.protocol.MeiligaoProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,java.net.SocketAddress,org.jboss.netty.buffer.ChannelBuffer,int,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: static org.traccar.helper.Checksum#crc16(java.lang.String,java.nio.ByteBuffer)
CALLER: org.traccar.protocol.L100Protocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.BceProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: static org.traccar.helper.BitUtil#check(long,int)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,long)
CALLER: org.traccar.web.WebServer#initWebApp()
	CALLEE: org.traccar.Config#getString(java.lang.String)
	CALLEE: org.traccar.Config#getBoolean(java.lang.String)
CALLER: static org.traccar.reports.Trips#getCsv(long,java.util.Collection,java.util.Collection,java.util.Date,java.util.Date)
	CALLEE: org.traccar.web.CsvBuilder#addHeaderLine(java.lang.Object)
	CALLEE: static org.traccar.reports.ReportUtils#getDeviceList(java.util.Collection,java.util.Collection)
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.database.PermissionsManager#checkDevice(long,long)
	CALLEE: static org.traccar.reports.Trips#detectTrips(long,java.util.Date,java.util.Date)
	CALLEE: org.traccar.web.CsvBuilder#addArray(java.util.Collection)
	CALLEE: org.traccar.web.CsvBuilder#build()
CALLER: org.traccar.protocol.Jt600ProtocolDecoder#decodeU01(java.lang.String,org.jboss.netty.channel.Channel,java.net.SocketAddress)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setDateReverse(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.Parser#nextCoordinate(org.traccar.helper.Parser.CoordinateFormat)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromMph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: org.traccar.helper.Parser#nextInt(int)
	CALLEE: org.traccar.helper.Parser#nextLong()
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,long)
CALLER: org.traccar.protocol.H02ProtocolDecoder#decodeText(java.lang.String,org.jboss.netty.channel.Channel,java.net.SocketAddress)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#hasNext(int)
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.Parser#hasNext()
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.Parser#nextCoordinate()
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.helper.DateBuilder#setDateReverse(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.helper.Parser#nextLong(int)
	CALLEE: org.traccar.protocol.H02ProtocolDecoder#processStatus(org.traccar.model.Position,long)
CALLER: org.traccar.protocol.HuaShengProtocolDecoder#<init>(org.traccar.protocol.HuaShengProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.EasyTrackProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: static org.traccar.reports.Trips#detectTrips(long,java.util.Date,java.util.Date)
	CALLEE: static org.traccar.Context#getConfig()
	CALLEE: org.traccar.Config#getDouble(java.lang.String,double)
	CALLEE: org.traccar.Config#getLong(java.lang.String,long)
	CALLEE: org.traccar.Config#getBoolean(java.lang.String)
	CALLEE: static org.traccar.Context#getDataManager()
	CALLEE: org.traccar.database.DataManager#getPositions(long,java.util.Date,java.util.Date)
	CALLEE: org.traccar.model.Position#getSpeed()
	CALLEE: org.traccar.model.Position#getFixTime()
	CALLEE: static org.traccar.reports.ReportUtils#calculateDistance(org.traccar.model.Position,org.traccar.model.Position,boolean)
	CALLEE: static org.traccar.reports.Trips#calculateTrip(java.util.ArrayList,int,int)
CALLER: org.traccar.protocol.Pt502Protocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocol#setSupportedCommands(java.lang.String[])
CALLER: org.traccar.api.ObjectMapperProvider#getContext(java.lang.Class)
	CALLEE: org.traccar.api.ObjectMapperProvider#getContext(java.lang.Class)
CALLER: org.traccar.protocol.FoxProtocolDecoder#<init>(org.traccar.protocol.FoxProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.database.QueryBuilder#setInteger(java.lang.String,int)
	CALLEE: org.traccar.database.QueryBuilder#indexes(java.lang.String)
CALLER: org.traccar.protocol.AutoGradeProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setDateReverse(int,int,int)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.Parser#nextCoordinate()
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
CALLER: org.traccar.protocol.L100ProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.Parser#nextCoordinate()
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.helper.DateBuilder#setDateReverse(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
CALLER: org.traccar.protocol.ArnaviProtocolDecoder#<init>(org.traccar.protocol.ArnaviProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.CoordinatesHandler#getLastPosition(long)
	CALLEE: static org.traccar.Context#getIdentityManager()
	CALLEE: org.traccar.database.DeviceManager#getLastPosition(long)
CALLER: org.traccar.api.resource.DeviceGeofenceResource#remove(org.traccar.model.DeviceGeofence)
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.api.BaseResource#getUserId()
	CALLEE: org.traccar.database.PermissionsManager#checkReadonly(long)
	CALLEE: org.traccar.model.DeviceGeofence#getDeviceId()
	CALLEE: org.traccar.database.PermissionsManager#checkDevice(long,long)
	CALLEE: org.traccar.model.DeviceGeofence#getGeofenceId()
	CALLEE: org.traccar.database.PermissionsManager#checkGeofence(long,long)
	CALLEE: static org.traccar.Context#getDataManager()
	CALLEE: org.traccar.database.DataManager#unlinkDeviceGeofence(long,long)
	CALLEE: static org.traccar.Context#getGeofenceManager()
	CALLEE: org.traccar.database.GeofenceManager#refresh()
CALLER: org.traccar.ExtendedObjectDecoder#handleUpstream(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.ChannelEvent)
	CALLEE: org.traccar.protocol.OigoProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.HaicomProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.BceProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.MxtProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.NavisProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.Avl301ProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.Jt600ProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.TopflytechProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.Gt06ProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.GlobalSatProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.Ardi01ProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.PiligrimProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.HuabaoProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.AquilaProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.CellocatorProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.NoranProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.TaipProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.NavigilProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.GnxProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.MeiligaoProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.RaveonProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.HunterProProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.IntellitracProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.GpsGateProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.CradlepointProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.Gl200ProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.TytanProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.ManPowerProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.H02ProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.HomtecsProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.V680ProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.ProgressProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.MegastekProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.GatorProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.SupermateProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.LaipacProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.MtxProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.Tt8850ProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.Gt02ProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.OrionProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.PathAwayProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.CalAmpProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.OsmAndProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.CarcellProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.Tr20ProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.UlbotechProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.TelicProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.NvsProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.AdmProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.ThinkRaceProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.EelinkProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.Xt013ProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.L100ProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.CastelProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.RitiProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.WatchProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.TrvProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.Mta6ProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.ArnaviProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.AutoGradeProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.GoSafeProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.AstraProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.SkypatrolProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.XexunProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.TotemProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.GpsmtaProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.MiniFinderProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.UproProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.Tk103ProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.M2mProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.MeitrackProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.EnforaProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.EasyTrackProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.CguardProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.AtrackProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.ArknavX8ProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.Tr900ProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.CityeasyProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.BoxProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.AuroProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.Gl100ProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.AppelloProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.Pt502ProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.T55ProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.GpsMarkerProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.GalileoProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.KenjiProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.XirgoProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.JpKorjarProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.YwtProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.RuptelaProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.GotopProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.AutoFonProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.FlextrackProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.IdplProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.VisiontekProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.WondexProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.KhdProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.Stl060ProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.SanavProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.Pt3000ProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.WialonProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.ArknavProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.Tlt2hProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.T800xProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.SuntechProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.CarTrackProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.DishaProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.BlackKiteProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.CarscopProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.GranitProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.ApelProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.Gps103ProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.FoxProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.TramigoProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.FreedomProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.HuaShengProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.TzoneProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.TeltonikaProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.Tk102ProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.AplicomProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.ObdDongleProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.TrackboxProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.RemoteAddressHandler#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.HemisphereHandler#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.ExtendedObjectDecoder#onMessageEvent(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#onMessageEvent(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.ExtendedObjectDecoder#handleEmptyMessage(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#handleEmptyMessage(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.ExtendedObjectDecoder#saveOriginal(java.lang.Object,java.lang.Object)
CALLER: org.traccar.api.resource.CommandTypeResource#get(long)
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.api.BaseResource#getUserId()
	CALLEE: org.traccar.database.PermissionsManager#checkDevice(long,long)
	CALLEE: static org.traccar.Context#getConnectionManager()
	CALLEE: org.traccar.database.ConnectionManager#getActiveDevice(long)
	CALLEE: org.traccar.database.ActiveDevice#getCommandTypes()
CALLER: org.traccar.geocode.GeocodeFarmReverseGeocoder#<init>(java.lang.String,int)
	CALLEE: org.traccar.geocode.JsonReverseGeocoder#<init>(java.lang.String,int)
CALLER: org.traccar.api.resource.ReportResource#getEventsJson(java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String)
	CALLEE: org.traccar.api.BaseResource#getUserId()
	CALLEE: static org.traccar.web.JsonConverter#parseDate(java.lang.String)
	CALLEE: static org.traccar.reports.Events#getJson(long,java.util.Collection,java.util.Collection,java.util.Collection,java.util.Date,java.util.Date)
CALLER: org.traccar.protocol.Mta6ProtocolDecoder#<init>(org.traccar.Protocol,boolean)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.BaseProtocol#setSupportedCommands(java.lang.String[])
CALLER: org.traccar.protocol.CarcellProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.SuntechProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocol#setSupportedCommands(java.lang.String[])
CALLER: org.traccar.protocol.GoSafeProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.protocol.SuntechProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.Parser#hasNext()
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setDate(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
CALLER: org.traccar.helper.Log.NettyInternalLogger#debug(java.lang.String)
	CALLEE: org.traccar.helper.Log.NettyInternalLogger#debug(java.lang.String,java.lang.Throwable)
CALLER: org.traccar.protocol.EnforaProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.Config#getInteger(java.lang.String,int)
CALLER: org.traccar.protocol.MtxProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.Tk103ProtocolDecoder#<init>(org.traccar.protocol.Tk103Protocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.database.GeofenceManager#getGeofence(long)
CALLER: org.traccar.protocol.GranitProtocolDecoder#<init>(org.traccar.protocol.GranitProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.Gl200ProtocolDecoder#decodeIgn(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.protocol.Gl200ProtocolDecoder#decodeLocation(org.traccar.model.Position,org.traccar.helper.Parser)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
	CALLEE: org.traccar.helper.Parser#hasNext(int)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setDate(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.model.Position#getOutdated()
	CALLEE: org.traccar.model.Position#getFixTime()
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
CALLER: org.traccar.protocol.MeiligaoProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: static org.traccar.protocol.MeiligaoProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,java.net.SocketAddress,org.jboss.netty.buffer.ChannelBuffer,int,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.protocol.MeiligaoProtocolDecoder#getServer(org.jboss.netty.channel.Channel)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.protocol.MeiligaoProtocolDecoder#decodeAlarm(short)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: org.traccar.protocol.MeiligaoProtocolDecoder#identify(org.jboss.netty.buffer.ChannelBuffer,org.jboss.netty.channel.Channel,java.net.SocketAddress)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.protocol.MeiligaoProtocolDecoder#decodeRegular(org.traccar.model.Position,java.lang.String)
	CALLEE: org.traccar.protocol.MeiligaoProtocolDecoder#decodeRfid(org.traccar.model.Position,java.lang.String)
	CALLEE: org.traccar.protocol.MeiligaoProtocolDecoder#decodeObd(org.traccar.model.Position,java.lang.String)
CALLER: org.traccar.protocol.XexunProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int,int)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.Parser#nextCoordinate()
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.helper.DateBuilder#setDateReverse(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.protocol.XexunProtocolDecoder#decodeAlarm(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
CALLER: org.traccar.helper.Parser#nextLong(int)
	CALLEE: org.traccar.helper.Parser#hasNext()
	CALLEE: org.traccar.helper.Parser#next()
CALLER: org.traccar.database.GroupTree.TreeNode#setParent(org.traccar.database.GroupTree.TreeNode)
CALLER: org.traccar.ServerManager#<init>()
	CALLEE: org.traccar.ServerManager#initProtocolServer(org.traccar.Protocol)
CALLER: org.traccar.database.DataManager#addPosition(org.traccar.model.Position)
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String,boolean)
	CALLEE: org.traccar.database.QueryBuilder#setDate(java.lang.String,java.util.Date)
	CALLEE: org.traccar.database.QueryBuilder#setObject(java.lang.Object)
	CALLEE: org.traccar.database.QueryBuilder#executeUpdate()
	CALLEE: org.traccar.model.Extensible#setId(long)
CALLER: org.traccar.protocol.CityeasyProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.GpsmtaProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,boolean)
CALLER: org.traccar.api.resource.DevicePermissionResource#remove(org.traccar.model.DevicePermission)
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.api.BaseResource#getUserId()
	CALLEE: org.traccar.database.PermissionsManager#checkAdmin(long)
	CALLEE: static org.traccar.Context#getDataManager()
	CALLEE: org.traccar.model.DevicePermission#getUserId()
	CALLEE: org.traccar.model.DevicePermission#getDeviceId()
	CALLEE: org.traccar.database.DataManager#unlinkDevice(long,long)
	CALLEE: org.traccar.database.PermissionsManager#refreshPermissions()
	CALLEE: static org.traccar.Context#getGeofenceManager()
	CALLEE: org.traccar.database.GeofenceManager#refresh()
CALLER: static org.traccar.protocol.HuaShengProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,int,int,org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.protocol.TrackboxProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.protocol.H02ProtocolEncoder#encodeCommand(org.traccar.model.Command)
	CALLEE: org.traccar.protocol.H02ProtocolEncoder#encodeCommand(org.traccar.model.Command,org.joda.time.DateTime)
CALLER: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#<init>(javax.sql.DataSource,java.lang.String,boolean)
CALLER: static org.traccar.helper.PatternUtil#checkPattern(java.lang.String,java.lang.String)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: org.traccar.database.ConnectionManager#addActiveDevice(long,org.traccar.Protocol,org.jboss.netty.channel.Channel,java.net.SocketAddress)
	CALLEE: org.traccar.database.ActiveDevice#<init>(long,org.traccar.Protocol,org.jboss.netty.channel.Channel,java.net.SocketAddress)
CALLER: org.traccar.database.AliasesManager#getAttributeAlias(long)
CALLER: org.traccar.protocol.VisiontekProtocolDecoder#<init>(org.traccar.protocol.VisiontekProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.PathAwayProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.database.DataManager#linkDeviceGeofence(long,long)
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#setLong(java.lang.String,long)
	CALLEE: org.traccar.database.QueryBuilder#executeUpdate()
CALLER: org.traccar.database.GroupTree#getGroups(long)
	CALLEE: org.traccar.database.GroupTree#getNodes(java.util.Set,org.traccar.database.GroupTree.TreeNode)
	CALLEE: org.traccar.database.GroupTree.TreeNode#getGroup()
CALLER: org.traccar.database.DeviceManager#checkGroupCycles(org.traccar.model.Group)
	CALLEE: org.traccar.model.Extensible#getId()
	CALLEE: org.traccar.model.Group#getGroupId()
CALLER: org.traccar.protocol.Gl200ProtocolDecoder#decodeLocation(org.traccar.model.Position,org.traccar.helper.Parser)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.helper.Parser#hasNext(int)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setDate(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.BaseProtocolDecoder#getLastLocation(org.traccar.model.Position,java.util.Date)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.helper.Parser#nextInt(int)
	CALLEE: org.traccar.helper.Parser#skip(int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
CALLER: org.traccar.api.CorsResponseFilter#filter(javax.ws.rs.container.ContainerRequestContext,javax.ws.rs.container.ContainerResponseContext)
	CALLEE: static org.traccar.Context#getConfig()
	CALLEE: org.traccar.Config#getString(java.lang.String)
CALLER: org.traccar.protocol.AutoFonProtocolDecoder#decodePosition(org.traccar.DeviceSession,org.jboss.netty.buffer.ChannelBuffer,boolean)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.DateBuilder#setDateReverse(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: static org.traccar.protocol.AutoFonProtocolDecoder#convertCoordinate(int)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
CALLER: org.traccar.protocol.AplicomProtocolDecoder#decodeD(org.traccar.model.Position,org.jboss.netty.buffer.ChannelBuffer,int,int)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.BaseProtocolDecoder#getLastLocation(org.traccar.model.Position,java.util.Date)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,long)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.protocol.AplicomProtocolDecoder#decodeEventData(int,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: static org.traccar.Context#getConfig()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.Config#getBoolean(java.lang.String)
	CALLEE: org.traccar.protocol.AplicomProtocolDecoder#decodeCanData(org.jboss.netty.buffer.ChannelBuffer,org.traccar.model.Position)
CALLER: org.traccar.protocol.TeltonikaProtocolEncoder#encodeContent(java.lang.String)
	CALLEE: static org.traccar.helper.Checksum#crc16(java.lang.String,java.nio.ByteBuffer)
CALLER: org.traccar.database.DeviceManager#lookupServerBoolean(long,java.lang.String,boolean)
	CALLEE: org.traccar.database.DeviceManager#lookupAttribute(long,java.lang.String,boolean)
CALLER: org.traccar.BasePipelineFactory.OpenChannelHandler#<init>(org.traccar.TrackerServer)
CALLER: org.traccar.protocol.ApelProtocolDecoder#requestArchive(org.jboss.netty.channel.Channel)
	CALLEE: static org.traccar.helper.Checksum#crc32(java.nio.ByteBuffer)
CALLER: org.traccar.protocol.TramigoProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: static org.traccar.helper.DateUtil#correctYear(java.util.Date)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,boolean)
CALLER: org.traccar.database.DeviceManager#getGroupById(long)
CALLER: org.traccar.protocol.FoxProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.OigoProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: static org.traccar.helper.ObdDecoder#decode(int,java.lang.String)
	CALLEE: static org.traccar.helper.ObdDecoder#decodeData(int,int,boolean)
	CALLEE: static org.traccar.helper.ObdDecoder#decodeCodes(java.lang.String)
CALLER: org.traccar.protocol.Avl301Protocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.database.PermissionsManager#<init>(org.traccar.database.DataManager)
	CALLEE: org.traccar.database.PermissionsManager#refreshUsers()
	CALLEE: org.traccar.database.PermissionsManager#refreshPermissions()
CALLER: org.traccar.database.GeofenceManager#refresh()
	CALLEE: org.traccar.database.DataManager#getGroupGeofences()
	CALLEE: org.traccar.model.GroupGeofence#getGroupId()
	CALLEE: org.traccar.database.GeofenceManager#getGroupGeofences(long)
	CALLEE: org.traccar.model.GroupGeofence#getGeofenceId()
	CALLEE: org.traccar.database.DataManager#getDeviceGeofences()
	CALLEE: static org.traccar.Context#getDeviceManager()
	CALLEE: org.traccar.database.DeviceManager#getAllDevices()
	CALLEE: org.traccar.model.DeviceGeofence#getDeviceId()
	CALLEE: org.traccar.database.GeofenceManager#getDeviceGeofences(java.util.Map,long)
	CALLEE: org.traccar.model.DeviceGeofence#getGeofenceId()
	CALLEE: org.traccar.model.Device#getGroupId()
	CALLEE: org.traccar.model.Extensible#getId()
	CALLEE: org.traccar.database.DeviceManager#getGroupById(long)
	CALLEE: org.traccar.model.Group#getGroupId()
	CALLEE: org.traccar.model.Device#getGeofenceIds()
	CALLEE: static org.traccar.Context#getIdentityManager()
	CALLEE: org.traccar.database.DeviceManager#getLastPosition(long)
	CALLEE: org.traccar.database.GeofenceManager#getGeofence(long)
	CALLEE: org.traccar.model.Geofence#getGeometry()
	CALLEE: org.traccar.model.Position#getLatitude()
	CALLEE: org.traccar.model.Position#getLongitude()
	CALLEE: org.traccar.geofence.GeofenceCircle#containsPoint(double,double)
	CALLEE: org.traccar.geofence.GeofencePolygon#containsPoint(double,double)
	CALLEE: org.traccar.model.Device#setGeofenceIds(java.util.List)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: org.traccar.protocol.TopflytechProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.helper.PatternBuilder#any()
CALLER: org.traccar.protocol.ArknavProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.events.MotionEventHandler#analyzePosition(org.traccar.model.Position)
	CALLEE: static org.traccar.Context#getIdentityManager()
	CALLEE: org.traccar.model.Message#getDeviceId()
	CALLEE: org.traccar.database.DeviceManager#getDeviceById(long)
	CALLEE: org.traccar.database.DeviceManager#isLatestPosition(org.traccar.model.Position)
	CALLEE: org.traccar.model.Position#getValid()
	CALLEE: org.traccar.model.Position#getSpeed()
	CALLEE: org.traccar.database.DeviceManager#getLastPosition(long)
	CALLEE: org.traccar.model.Extensible#getId()
	CALLEE: org.traccar.model.Event#<init>(java.lang.String,long,long)
CALLER: org.traccar.database.DataManager#linkGroupGeofence(long,long)
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#setLong(java.lang.String,long)
	CALLEE: org.traccar.database.QueryBuilder#executeUpdate()
CALLER: org.traccar.database.GeofenceManager#getDeviceGeofencesIds(long)
	CALLEE: org.traccar.database.GeofenceManager#getDeviceGeofences(java.util.Map,long)
CALLER: org.traccar.database.DeviceManager#lookupAttribute(long,java.lang.String,boolean)
	CALLEE: org.traccar.database.DeviceManager#getDeviceById(long)
	CALLEE: org.traccar.model.Extensible#getAttributes()
	CALLEE: org.traccar.model.Device#getGroupId()
	CALLEE: org.traccar.database.DeviceManager#getGroupById(long)
	CALLEE: org.traccar.model.Group#getGroupId()
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.database.PermissionsManager#getServer()
	CALLEE: static org.traccar.Context#getConfig()
	CALLEE: org.traccar.Config#getString(java.lang.String)
CALLER: static org.traccar.helper.BitUtil#to(long,int)
	CALLEE: static org.traccar.helper.BitUtil#between(long,int,int)
CALLER: org.traccar.protocol.IntellitracProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.geocode.FactualReverseGeocoder#<init>(java.lang.String,java.lang.String,int)
	CALLEE: org.traccar.geocode.JsonReverseGeocoder#<init>(java.lang.String,int)
CALLER: static org.traccar.reports.ReportUtils#calculateDistance(org.traccar.model.Position,org.traccar.model.Position,boolean)
	CALLEE: org.traccar.model.Extensible#getAttributes()
CALLER: org.traccar.protocol.OigoProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: static org.traccar.helper.BitUtil#to(int,int)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: static org.traccar.helper.BitUtil#check(long,int)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: static org.traccar.helper.BitUtil#between(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setDate(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,long)
CALLER: org.traccar.protocol.CarcellProtocolDecoder#<init>(org.traccar.protocol.CarcellProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.database.DeviceManager#lookupServerInteger(long,java.lang.String,int)
	CALLEE: org.traccar.database.DeviceManager#lookupAttribute(long,java.lang.String,boolean)
CALLER: org.traccar.protocol.WatchProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.IntellitracFrameDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.protocol.TzoneProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.DateBuilder#setDate(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: static org.traccar.helper.BitUtil#to(int,int)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: static org.traccar.helper.BitUtil#check(long,int)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.protocol.TzoneProtocolDecoder#decodeAlarm(java.lang.Short)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
CALLER: org.traccar.protocol.OrionProtocolDecoder#<init>(org.traccar.protocol.OrionProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.api.resource.SessionResource#remove()
CALLER: org.traccar.database.DataManager#linkDevice(long,long)
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#setLong(java.lang.String,long)
	CALLEE: org.traccar.database.QueryBuilder#executeUpdate()
CALLER: org.traccar.protocol.NavisProtocolDecoder#processArray(org.traccar.DeviceSession,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.protocol.NavisProtocolDecoder#parsePosition(org.traccar.DeviceSession,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.protocol.NavisProtocolDecoder.ParseResult#getPosition()
	CALLEE: org.traccar.model.Position#getFixTime()
	CALLEE: org.traccar.protocol.NavisProtocolDecoder#sendReply(org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.protocol.Xt013ProtocolDecoder#<init>(org.traccar.protocol.Xt013Protocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.model.Extensible#set(java.lang.String,double)
CALLER: org.traccar.api.resource.CommandResource#add(org.traccar.model.Command)
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.api.BaseResource#getUserId()
	CALLEE: org.traccar.model.Message#getDeviceId()
	CALLEE: org.traccar.database.PermissionsManager#checkDevice(long,long)
	CALLEE: static org.traccar.Context#getConnectionManager()
	CALLEE: org.traccar.database.ConnectionManager#getActiveDevice(long)
	CALLEE: org.traccar.database.ActiveDevice#sendCommand(org.traccar.model.Command)
CALLER: org.traccar.protocol.Gps103Protocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocol#setSupportedCommands(java.lang.String[])
CALLER: org.traccar.protocol.TeltonikaProtocolDecoder#decodeSerial(org.traccar.model.Position,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.BaseProtocolDecoder#getLastLocation(org.traccar.model.Position,java.util.Date)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
CALLER: org.traccar.protocol.GnxProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,boolean)
	CALLEE: org.traccar.helper.DateBuilder#<init>(java.util.TimeZone)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setDateReverse(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setDeviceTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setFixTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.Parser#nextCoordinate(org.traccar.helper.Parser.CoordinateFormat)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
CALLER: org.traccar.protocol.Tlt2hProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.database.DeviceManager#lookupConfigInteger(long,java.lang.String,int)
	CALLEE: org.traccar.database.DeviceManager#lookupAttribute(long,java.lang.String,boolean)
CALLER: org.traccar.protocol.GalileoProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.model.Position#getFixTime()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,long)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
	CALLEE: static org.traccar.protocol.GalileoProtocolDecoder#getTagLength(int)
	CALLEE: org.traccar.protocol.GalileoProtocolDecoder#sendReply(org.jboss.netty.channel.Channel,int)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
CALLER: static org.traccar.reports.Events#getCsv(long,java.util.Collection,java.util.Collection,java.util.Collection,java.util.Date,java.util.Date)
	CALLEE: org.traccar.model.Event#<init>()
	CALLEE: org.traccar.web.CsvBuilder#addHeaderLine(java.lang.Object)
	CALLEE: static org.traccar.reports.ReportUtils#getDeviceList(java.util.Collection,java.util.Collection)
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.database.PermissionsManager#checkDevice(long,long)
	CALLEE: static org.traccar.Context#getDataManager()
	CALLEE: org.traccar.database.DataManager#getEvents(long,java.lang.String,java.util.Date,java.util.Date)
	CALLEE: org.traccar.web.CsvBuilder#addArray(java.util.Collection)
	CALLEE: org.traccar.web.CsvBuilder#build()
CALLER: org.traccar.helper.Log.NettyInternalLogger#info(java.lang.String)
	CALLEE: org.traccar.helper.Log.NettyInternalLogger#info(java.lang.String,java.lang.Throwable)
CALLER: static org.traccar.helper.Log#info(java.lang.String)
	CALLEE: static org.traccar.helper.Log#getLogger()
CALLER: org.traccar.Config#getBoolean(java.lang.String)
CALLER: org.traccar.helper.PatternBuilder#toString()
CALLER: org.traccar.database.QueryBuilder#addProcessors(java.util.List,java.lang.Class,java.lang.reflect.Method,java.lang.String)
	CALLEE: org.traccar.database.GroupTree.TreeNode#equals(java.lang.Object)
CALLER: org.traccar.protocol.M2mProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.Tr900ProtocolDecoder#<init>(org.traccar.protocol.Tr900Protocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.NoranProtocolDecoder#<init>(org.traccar.protocol.NoranProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.MeitrackProtocolDecoder#<init>(org.traccar.protocol.MeitrackProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.HunterProProtocolDecoder#<init>(org.traccar.protocol.HunterProProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.Mta6ProtocolDecoder#sendContinue(org.jboss.netty.channel.Channel)
CALLER: org.traccar.FilterHandler#filterFuture(org.traccar.model.Position)
	CALLEE: org.traccar.model.Position#getFixTime()
CALLER: org.traccar.protocol.ThinkRaceProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: static org.traccar.helper.BitUtil#check(long,int)
	CALLEE: static org.traccar.protocol.ThinkRaceProtocolDecoder#convertCoordinate(long,boolean)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
CALLER: org.traccar.protocol.GoSafeProtocolDecoder#<init>(org.traccar.protocol.GoSafeProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.T55ProtocolDecoder#decodeGprma(org.traccar.DeviceSession,java.lang.String)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.Parser#nextCoordinate()
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
CALLER: org.traccar.database.DataManager#getAttributeAliases()
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#executeQuery(java.lang.Class)
CALLER: org.traccar.database.DataManager#getEvents(long,java.lang.String,java.util.Date,java.util.Date)
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#setLong(java.lang.String,long)
	CALLEE: org.traccar.database.QueryBuilder#setString(java.lang.String,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#setDate(java.lang.String,java.util.Date)
	CALLEE: org.traccar.database.QueryBuilder#executeQuery(java.lang.Class)
CALLER: org.traccar.protocol.CarTrackProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.protocol.TeltonikaFrameDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.geocode.NominatimReverseGeocoder#<init>(java.lang.String,int)
	CALLEE: org.traccar.geocode.JsonReverseGeocoder#<init>(java.lang.String,int)
CALLER: org.traccar.protocol.KhdProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.geocode.GoogleReverseGeocoder#<init>(java.lang.String,int)
	CALLEE: org.traccar.geocode.JsonReverseGeocoder#<init>(java.lang.String,int)
CALLER: static org.traccar.helper.Log#exceptionStack(java.lang.Throwable)
CALLER: org.traccar.api.AsyncSocket#sendData(java.util.Map)
	CALLEE: static org.traccar.web.JsonConverter#arrayToJson(java.util.Collection)
	CALLEE: org.traccar.helper.PatternBuilder#toString()
CALLER: org.traccar.protocol.NoranProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: static org.traccar.helper.BitUtil#check(long,int)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: static org.traccar.helper.BitUtil#from(long,int)
	CALLEE: org.traccar.helper.DateBuilder#setYear(int)
	CALLEE: static org.traccar.helper.BitUtil#between(long,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setMonth(int)
	CALLEE: org.traccar.helper.DateBuilder#setDay(int)
	CALLEE: org.traccar.helper.DateBuilder#setHour(int)
	CALLEE: org.traccar.helper.DateBuilder#setMinute(int)
	CALLEE: static org.traccar.helper.BitUtil#to(long,int)
	CALLEE: org.traccar.helper.DateBuilder#setSecond(int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
CALLER: org.traccar.protocol.CradlepointProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.TytanProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.Gl200ProtocolDecoder#<init>(org.traccar.protocol.Gl200Protocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.TrackerServer#setPipelineFactory(org.jboss.netty.channel.ChannelPipelineFactory)
CALLER: org.traccar.database.DataManager#removeUser(long)
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#setLong(java.lang.String,long)
	CALLEE: org.traccar.database.QueryBuilder#executeUpdate()
CALLER: org.traccar.database.DeviceManager#updateDevice(org.traccar.model.Device)
	CALLEE: org.traccar.database.DataManager#updateDevice(org.traccar.model.Device)
	CALLEE: org.traccar.model.Extensible#getId()
	CALLEE: org.traccar.model.Device#getUniqueId()
CALLER: org.traccar.database.GroupTree#<init>(java.util.Collection,java.util.Collection)
	CALLEE: org.traccar.model.Extensible#getId()
	CALLEE: org.traccar.database.GroupTree.TreeNode#<init>(org.traccar.model.Group)
	CALLEE: org.traccar.database.GroupTree.TreeNode#getGroup()
	CALLEE: org.traccar.model.Group#getGroupId()
	CALLEE: org.traccar.database.GroupTree.TreeNode#setParent(org.traccar.database.GroupTree.TreeNode)
	CALLEE: org.traccar.database.GroupTree.TreeNode#<init>(org.traccar.model.Device)
	CALLEE: org.traccar.database.GroupTree.TreeNode#getDevice()
	CALLEE: org.traccar.model.Device#getGroupId()
CALLER: org.traccar.database.DeviceManager#getInitialState(long)
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.database.PermissionsManager#getDevicePermissions(long)
CALLER: org.traccar.location.MozillaLocationProvider#<init>(java.lang.String,java.lang.String)
CALLER: org.traccar.database.DeviceManager#lookupConfigLong(long,java.lang.String,long)
	CALLEE: org.traccar.database.DeviceManager#lookupAttribute(long,java.lang.String,boolean)
CALLER: org.traccar.protocol.RaveonProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.H02FrameDecoder#<init>(int)
CALLER: org.traccar.protocol.EasyTrackProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.CityeasyProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: static org.traccar.helper.Checksum#luhn(long)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.Parser#hasNext(int)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setDate(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: org.traccar.helper.Parser#nextCoordinate(org.traccar.helper.Parser.CoordinateFormat)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.BaseProtocolDecoder#getLastLocation(org.traccar.model.Position,java.util.Date)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
CALLER: org.traccar.protocol.TrackboxProtocolDecoder#<init>(org.traccar.protocol.TrackboxProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.ReverseGeocoderHandler#<init>(org.traccar.geocode.ReverseGeocoder,boolean)
	CALLEE: static org.traccar.Context#getConfig()
	CALLEE: org.traccar.Config#getString(java.lang.String)
	CALLEE: org.traccar.geocode.AddressFormat#<init>(java.lang.String)
	CALLEE: org.traccar.geocode.AddressFormat#<init>()
CALLER: org.traccar.protocol.Gps103ProtocolDecoder#<init>(org.traccar.protocol.Gps103Protocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.ServerManager#stop()
	CALLEE: org.traccar.TrackerServer#stop()
	CALLEE: static org.traccar.GlobalChannelFactory#release()
	CALLEE: static org.traccar.GlobalTimer#release()
CALLER: org.traccar.protocol.MxtProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.DateBuilder#setDate(int,int,int)
	CALLEE: static org.traccar.helper.BitUtil#from(long,int)
	CALLEE: static org.traccar.helper.BitUtil#between(long,int,int)
	CALLEE: static org.traccar.helper.BitUtil#to(long,int)
	CALLEE: org.traccar.helper.DateBuilder#addMillis(long)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: static org.traccar.helper.BitUtil#check(long,int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,boolean)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,long)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
CALLER: org.traccar.protocol.GpsGateProtocolDecoder#<init>(org.traccar.protocol.GpsGateProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: static org.traccar.protocol.AplicomProtocolDecoder#imeiFromUnitId(long)
	CALLEE: static org.traccar.protocol.AplicomProtocolDecoder#validateImei(long)
CALLER: org.traccar.database.PermissionsManager#addUser(org.traccar.model.User)
	CALLEE: org.traccar.database.DataManager#addUser(org.traccar.model.User)
	CALLEE: org.traccar.model.Extensible#getId()
	CALLEE: org.traccar.database.PermissionsManager#refreshPermissions()
CALLER: org.traccar.protocol.CalAmpProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,java.net.SocketAddress,int,int,int)
CALLER: static org.traccar.notification.NotificationFormatter#formatMessage(long,org.traccar.model.Event,org.traccar.model.Position)
	CALLEE: static org.traccar.Context#getIdentityManager()
	CALLEE: org.traccar.model.Message#getDeviceId()
	CALLEE: org.traccar.database.DeviceManager#getDeviceById(long)
	CALLEE: org.traccar.model.Message#getType()
	CALLEE: org.traccar.model.Device#getName()
	CALLEE: org.traccar.model.Event#getServerTime()
	CALLEE: org.traccar.model.Extensible#getAttributes()
	CALLEE: org.traccar.model.Position#getFixTime()
	CALLEE: org.traccar.model.Position#getLatitude()
	CALLEE: org.traccar.model.Position#getLongitude()
	CALLEE: org.traccar.model.Position#getSpeed()
	CALLEE: static org.traccar.notification.NotificationFormatter#formatSpeed(long,double)
	CALLEE: static org.traccar.Context#getGeofenceManager()
	CALLEE: org.traccar.model.Event#getGeofenceId()
	CALLEE: org.traccar.database.GeofenceManager#getGeofence(long)
	CALLEE: org.traccar.model.Geofence#getName()
CALLER: org.traccar.database.QueryBuilder#executeQuery(java.lang.Class)
	CALLEE: org.traccar.database.QueryBuilder#addProcessors(java.util.List,java.lang.Class,java.lang.reflect.Method,java.lang.String)
CALLER: org.traccar.geocode.MapQuestReverseGeocoder#<init>(java.lang.String,java.lang.String,int)
	CALLEE: org.traccar.geocode.JsonReverseGeocoder#<init>(java.lang.String,int)
CALLER: org.traccar.helper.DateBuilder#setTimeReverse(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setHour(int)
	CALLEE: org.traccar.helper.DateBuilder#setMinute(int)
	CALLEE: org.traccar.helper.DateBuilder#setSecond(int)
CALLER: org.traccar.protocol.WialonProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocol#setSupportedCommands(java.lang.String[])
CALLER: org.traccar.model.Geofence#setArea(java.lang.String)
	CALLEE: org.traccar.geofence.GeofenceCircle#<init>(java.lang.String)
	CALLEE: org.traccar.geofence.GeofencePolygon#<init>(java.lang.String)
CALLER: org.traccar.protocol.GotopProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.database.PermissionsManager#removeUser(long)
	CALLEE: org.traccar.database.DataManager#removeUser(long)
	CALLEE: org.traccar.database.PermissionsManager#refreshPermissions()
CALLER: static org.traccar.web.JsonConverter#parseDate(java.lang.String)
CALLER: org.traccar.protocol.AutoFonProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.protocol.CastelProtocolDecoder#decodeStat(org.traccar.model.Position,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,long)
CALLER: org.traccar.protocol.GranitProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocol#setSupportedCommands(java.lang.String[])
CALLER: org.traccar.protocol.Gt06ProtocolDecoder#decodeLbs(org.traccar.model.Position,org.jboss.netty.buffer.ChannelBuffer,boolean)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
CALLER: org.traccar.database.GeofenceManager#refreshUserGeofences()
	CALLEE: org.traccar.database.DataManager#getGeofencePermissions()
	CALLEE: org.traccar.model.GeofencePermission#getUserId()
	CALLEE: org.traccar.database.GeofenceManager#getUserGeofences(long)
	CALLEE: org.traccar.model.GeofencePermission#getGeofenceId()
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: org.traccar.protocol.KenjiProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.protocol.Mta6ProtocolDecoder.FloatReader#readFloat(org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: static org.traccar.protocol.AtrackProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,java.net.SocketAddress,long,int)
CALLER: org.traccar.helper.LocationTree#findNearest(org.traccar.helper.LocationTree.Item)
	CALLEE: org.traccar.helper.LocationTree#findNearest(org.traccar.helper.LocationTree.Item,org.traccar.helper.LocationTree.Item,int)
CALLER: org.traccar.protocol.YwtProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setDate(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.helper.Parser#nextCoordinate(org.traccar.helper.Parser.CoordinateFormat)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
CALLER: org.traccar.protocol.KhdProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocol#setSupportedCommands(java.lang.String[])
CALLER: org.traccar.database.ConnectionManager#updatePosition(org.traccar.model.Position)
	CALLEE: org.traccar.model.Message#getDeviceId()
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.database.PermissionsManager#getDeviceUsers(long)
	CALLEE: org.traccar.api.AsyncSocket#onUpdatePosition(org.traccar.model.Position)
CALLER: org.traccar.protocol.BlackKiteProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.protocol.ArnaviProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.Gt06Protocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocol#setSupportedCommands(java.lang.String[])
CALLER: org.traccar.CoordinatesHandler#handlePosition(org.traccar.model.Position)
	CALLEE: org.traccar.model.Message#getDeviceId()
	CALLEE: org.traccar.CoordinatesHandler#getLastPosition(long)
	CALLEE: org.traccar.model.Position#getLatitude()
	CALLEE: org.traccar.model.Position#getLongitude()
	CALLEE: static org.traccar.helper.DistanceCalculator#distance(double,double,double,double)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
CALLER: org.traccar.FilterHandler#filterDuplicate(org.traccar.model.Position)
	CALLEE: org.traccar.model.Message#getDeviceId()
	CALLEE: org.traccar.FilterHandler#getLastPosition(long)
	CALLEE: org.traccar.model.Position#getFixTime()
CALLER: org.traccar.database.GeofenceManager#getGroupGeofencesIds(long)
	CALLEE: org.traccar.database.GeofenceManager#getGroupGeofences(long)
CALLER: org.traccar.api.ObjectMapperProvider#<init>()
CALLER: static org.traccar.notification.NotificationFormatter#formatTitle(long,org.traccar.model.Event,org.traccar.model.Position)
	CALLEE: static org.traccar.Context#getIdentityManager()
	CALLEE: org.traccar.model.Message#getDeviceId()
	CALLEE: org.traccar.database.DeviceManager#getDeviceById(long)
	CALLEE: org.traccar.model.Message#getType()
	CALLEE: org.traccar.model.Device#getName()
CALLER: org.traccar.protocol.GpsMarkerProtocolDecoder#<init>(org.traccar.protocol.GpsMarkerProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.ArknavX8ProtocolDecoder#<init>(org.traccar.protocol.ArknavX8Protocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.NavisProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
	CALLEE: org.traccar.TrackerServer#setEndianness(java.nio.ByteOrder)
CALLER: static org.traccar.protocol.GranitProtocolDecoder#sendResponseArchive(org.jboss.netty.channel.Channel,int,int)
	CALLEE: static org.traccar.protocol.GranitProtocolDecoder#appendChecksum(org.jboss.netty.buffer.ChannelBuffer,int)
CALLER: org.traccar.database.QueryBuilder#setLong(java.lang.String,long,boolean)
	CALLEE: org.traccar.database.QueryBuilder#indexes(java.lang.String)
CALLER: org.traccar.protocol.MeiligaoProtocolDecoder#decodeRegular(org.traccar.model.Position,java.lang.String)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.Parser#hasNext()
	CALLEE: org.traccar.helper.DateBuilder#setMillis(int)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.Parser#nextCoordinate()
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.helper.DateBuilder#setDateReverse(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.helper.Parser#nextInt(int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.helper.Parser#nextLong(int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,long)
CALLER: org.traccar.protocol.HuaShengProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.Pt3000ProtocolDecoder#<init>(org.traccar.protocol.Pt3000Protocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.geocode.GeocodeFarmReverseGeocoder#<init>(int)
	CALLEE: org.traccar.geocode.JsonReverseGeocoder#<init>(java.lang.String,int)
CALLER: static org.traccar.helper.Log#debug(java.lang.String)
	CALLEE: static org.traccar.helper.Log#getLogger()
CALLER: org.traccar.protocol.WatchProtocolEncoder#getEnableFlag(org.traccar.model.Command)
	CALLEE: org.traccar.model.Extensible#getAttributes()
CALLER: org.traccar.protocol.DishaProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.TrvProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.protocol.ArknavX8Protocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.Config#load(java.lang.String)
CALLER: org.traccar.protocol.LaipacProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.Gps103ProtocolEncoder#formatValue(java.lang.String,java.lang.Object)
CALLER: org.traccar.database.DeviceManager#lookupServerLong(long,java.lang.String,long)
	CALLEE: org.traccar.database.DeviceManager#lookupAttribute(long,java.lang.String,boolean)
CALLER: org.traccar.database.DataManager#addUser(org.traccar.model.User)
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String,boolean)
	CALLEE: org.traccar.database.QueryBuilder#setObject(java.lang.Object)
	CALLEE: org.traccar.database.QueryBuilder#executeUpdate()
	CALLEE: org.traccar.model.Extensible#setId(long)
CALLER: org.traccar.protocol.MegastekProtocolDecoder#decodeNew(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,boolean)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setDateReverse(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.Parser#nextCoordinate()
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.helper.Parser#hasNext()
	CALLEE: org.traccar.helper.Parser#nextInt(int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: org.traccar.protocol.MegastekProtocolDecoder#decodeAlarm(java.lang.String)
CALLER: org.traccar.protocol.MeiligaoProtocolDecoder#<init>(org.traccar.protocol.MeiligaoProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.UlbotechProtocolDecoder#decodeJ1708(org.traccar.model.Position,org.jboss.netty.buffer.ChannelBuffer,short)
	CALLEE: static org.traccar.helper.BitUtil#between(int,int,int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
CALLER: org.traccar.database.GeofenceManager#<init>(org.traccar.database.DataManager)
	CALLEE: org.traccar.database.GeofenceManager#refreshGeofences()
CALLER: org.traccar.protocol.BceProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: static org.traccar.web.JsonConverter#objectFromJson(javax.json.JsonObject,java.lang.Class)
CALLER: static org.traccar.notification.NotificationMail#getAttributesProperties(org.traccar.model.Extensible)
	CALLEE: org.traccar.model.Extensible#getAttributes()
CALLER: org.traccar.database.DataManager#updateAttributeAlias(org.traccar.model.AttributeAlias)
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#setObject(java.lang.Object)
	CALLEE: org.traccar.database.QueryBuilder#executeUpdate()
CALLER: org.traccar.model.Extensible#set(java.lang.String,int)
CALLER: static org.traccar.notification.NotificationMail#sendMailAsync(long,org.traccar.model.Event,org.traccar.model.Position)
CALLER: org.traccar.location.MozillaLocationProvider#getLocation(int,int,long,long,org.traccar.location.LocationProvider.LocationProviderCallback)
	CALLEE: static org.traccar.Context#getAsyncHttpClient()
CALLER: org.traccar.protocol.NavisProtocolDecoder#processHandshake(org.jboss.netty.channel.Channel,java.net.SocketAddress,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.protocol.NavisProtocolDecoder#sendReply(org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.database.DataManager#updateDevice(org.traccar.model.Device)
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#setObject(java.lang.Object)
	CALLEE: org.traccar.database.QueryBuilder#executeUpdate()
CALLER: org.traccar.database.PermissionsManager#checkGroup(long,long)
	CALLEE: org.traccar.database.PermissionsManager#getGroupPermissions(long)
CALLER: org.traccar.database.ConnectionManager#getActiveDevice(long)
CALLER: org.traccar.protocol.LaipacProtocolDecoder#<init>(org.traccar.protocol.LaipacProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.FilterHandler#filter(org.traccar.model.Position)
	CALLEE: org.traccar.FilterHandler#filterInvalid(org.traccar.model.Position)
	CALLEE: org.traccar.FilterHandler#filterZero(org.traccar.model.Position)
	CALLEE: org.traccar.FilterHandler#filterDuplicate(org.traccar.model.Position)
	CALLEE: org.traccar.FilterHandler#filterFuture(org.traccar.model.Position)
	CALLEE: org.traccar.FilterHandler#filterApproximate(org.traccar.model.Position)
	CALLEE: org.traccar.FilterHandler#filterDistance(org.traccar.model.Position)
	CALLEE: org.traccar.FilterHandler#filterLimit(org.traccar.model.Position)
	CALLEE: org.traccar.model.Message#getDeviceId()
	CALLEE: static org.traccar.helper.Log#info(java.lang.String)
CALLER: org.traccar.protocol.ThinkRaceProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.Tr900Protocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.AuroProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.Parser#nextCoordinate(org.traccar.helper.Parser.CoordinateFormat)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.DateBuilder#setDateReverse(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,boolean)
CALLER: org.traccar.events.MotionEventHandler#<init>()
	CALLEE: static org.traccar.Context#getConfig()
	CALLEE: org.traccar.Config#getDouble(java.lang.String,double)
CALLER: org.traccar.protocol.ApelProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.ApelProtocolDecoder#sendSimpleMessage(org.jboss.netty.channel.Channel,short)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.protocol.ApelProtocolDecoder#requestArchive(org.jboss.netty.channel.Channel)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,boolean)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,long)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
CALLER: org.traccar.notification.EventForwarder#preparePayload(org.traccar.model.Event,org.traccar.model.Position)
	CALLEE: org.traccar.model.Message#getDeviceId()
	CALLEE: static org.traccar.Context#getIdentityManager()
	CALLEE: org.traccar.database.DeviceManager#getDeviceById(long)
	CALLEE: org.traccar.model.Event#getGeofenceId()
	CALLEE: static org.traccar.Context#getGeofenceManager()
	CALLEE: org.traccar.database.GeofenceManager#getGeofence(long)
	CALLEE: org.traccar.helper.PatternBuilder#toString()
CALLER: org.traccar.protocol.MiniFinderProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocol#setSupportedCommands(java.lang.String[])
CALLER: static org.traccar.WebDataHandler#formatSentence(org.traccar.model.Position)
	CALLEE: org.traccar.model.Position#getFixTime()
	CALLEE: org.traccar.model.Position#getLatitude()
	CALLEE: org.traccar.model.Position#getLongitude()
	CALLEE: org.traccar.model.Position#getSpeed()
	CALLEE: org.traccar.model.Position#getCourse()
	CALLEE: static org.traccar.helper.Checksum#nmea(java.lang.String)
CALLER: org.traccar.protocol.AppelloProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.ServerManager#start()
	CALLEE: org.traccar.TrackerServer#start()
CALLER: static org.traccar.helper.Log#logSystemInfo()
	CALLEE: static org.traccar.helper.Log#info(java.lang.String)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.String)
CALLER: org.traccar.api.resource.GroupGeofenceResource#add(org.traccar.model.GroupGeofence)
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.api.BaseResource#getUserId()
	CALLEE: org.traccar.database.PermissionsManager#checkReadonly(long)
	CALLEE: org.traccar.model.GroupGeofence#getGroupId()
	CALLEE: org.traccar.database.PermissionsManager#checkGroup(long,long)
	CALLEE: org.traccar.model.GroupGeofence#getGeofenceId()
	CALLEE: org.traccar.database.PermissionsManager#checkGeofence(long,long)
	CALLEE: static org.traccar.Context#getDataManager()
	CALLEE: org.traccar.database.DataManager#linkGroupGeofence(long,long)
	CALLEE: static org.traccar.Context#getGeofenceManager()
	CALLEE: org.traccar.database.GeofenceManager#refresh()
CALLER: org.traccar.protocol.Tr20Protocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.UproProtocolDecoder#<init>(org.traccar.protocol.UproProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.SupermateProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.protocol.Mta6ProtocolDecoder#parseFormatA(org.traccar.DeviceSession,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: static org.traccar.helper.BitUtil#check(long,int)
	CALLEE: org.traccar.protocol.Mta6ProtocolDecoder.FloatReader#readFloat(org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.protocol.Mta6ProtocolDecoder.TimeReader#readTime(org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,long)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: org.traccar.ReverseGeocoderHandler#handleUpstream(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.ChannelEvent)
	CALLEE: org.traccar.model.Position#getValid()
	CALLEE: org.traccar.model.Position#getLatitude()
	CALLEE: org.traccar.model.Position#getLongitude()
	CALLEE: org.traccar.geocode.JsonReverseGeocoder#getAddress(org.traccar.geocode.AddressFormat,double,double,org.traccar.geocode.ReverseGeocoder.ReverseGeocoderCallback)
CALLER: static org.traccar.GlobalChannelFactory#getDatagramFactory()
CALLER: org.traccar.helper.PatternBuilder#text(java.lang.String)
CALLER: org.traccar.api.resource.ServerResource#get()
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.database.PermissionsManager#getServer()
CALLER: static org.traccar.web.JsonConverter#objectFromJson(java.io.Reader,java.lang.Class)
	CALLEE: static org.traccar.web.JsonConverter#objectFromJson(javax.json.JsonObject,java.lang.Class)
CALLER: org.traccar.protocol.KhdProtocolEncoder#encodeCommand(org.traccar.model.Command)
	CALLEE: org.traccar.model.Message#getType()
	CALLEE: org.traccar.protocol.KhdProtocolEncoder#encodeCommand(int)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: org.traccar.database.DataManager#linkGroup(long,long)
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#setLong(java.lang.String,long)
	CALLEE: org.traccar.database.QueryBuilder#executeUpdate()
CALLER: org.traccar.BasePipelineFactory#<init>(org.traccar.TrackerServer,java.lang.String)
	CALLEE: static org.traccar.Context#getConfig()
	CALLEE: org.traccar.Config#getInteger(java.lang.String,int)
	CALLEE: org.traccar.Config#getBoolean(java.lang.String)
	CALLEE: org.traccar.FilterHandler#<init>()
	CALLEE: org.traccar.CoordinatesHandler#<init>()
	CALLEE: static org.traccar.Context#getReverseGeocoder()
	CALLEE: org.traccar.ReverseGeocoderHandler#<init>(org.traccar.geocode.ReverseGeocoder,boolean)
	CALLEE: static org.traccar.Context#getLocationProvider()
	CALLEE: org.traccar.LocationProviderHandler#<init>(org.traccar.location.LocationProvider,boolean)
	CALLEE: org.traccar.Config#hasKey(java.lang.String)
	CALLEE: org.traccar.HemisphereHandler#<init>()
	CALLEE: org.traccar.events.OverspeedEventHandler#<init>()
	CALLEE: org.traccar.events.MotionEventHandler#<init>()
	CALLEE: org.traccar.events.GeofenceEventHandler#<init>()
CALLER: org.traccar.protocol.AutoGradeProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.T55ProtocolDecoder#decodeGprmc(org.traccar.DeviceSession,java.lang.String,java.net.SocketAddress,org.jboss.netty.channel.Channel)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.Parser#nextCoordinate()
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.helper.DateBuilder#setDateReverse(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.helper.Parser#hasNext(int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.helper.Parser#hasNext()
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,boolean)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
CALLER: org.traccar.protocol.FreedomProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.ApelProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
	CALLEE: org.traccar.TrackerServer#setEndianness(java.nio.ByteOrder)
CALLER: org.traccar.protocol.Gt02ProtocolDecoder#<init>(org.traccar.protocol.Gt02Protocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: static org.traccar.Context#init(org.traccar.database.IdentityManager)
CALLER: org.traccar.protocol.FreedomProtocolDecoder#<init>(org.traccar.protocol.FreedomProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.TramigoFrameDecoder#<init>()
CALLER: org.traccar.protocol.L100FrameDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.api.resource.GroupPermissionResource#remove(org.traccar.model.GroupPermission)
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.api.BaseResource#getUserId()
	CALLEE: org.traccar.database.PermissionsManager#checkAdmin(long)
	CALLEE: static org.traccar.Context#getDataManager()
	CALLEE: org.traccar.model.GroupPermission#getUserId()
	CALLEE: org.traccar.model.GroupPermission#getGroupId()
	CALLEE: org.traccar.database.DataManager#unlinkGroup(long,long)
	CALLEE: org.traccar.database.PermissionsManager#refreshPermissions()
	CALLEE: static org.traccar.Context#getGeofenceManager()
	CALLEE: org.traccar.database.GeofenceManager#refresh()
CALLER: org.traccar.protocol.Gl200ProtocolEncoder#encodeCommand(org.traccar.model.Command)
	CALLEE: org.traccar.model.Message#getType()
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: org.traccar.database.DeviceManager#addGroup(org.traccar.model.Group)
	CALLEE: org.traccar.database.DeviceManager#checkGroupCycles(org.traccar.model.Group)
	CALLEE: org.traccar.database.DataManager#addGroup(org.traccar.model.Group)
	CALLEE: org.traccar.model.Extensible#getId()
CALLER: org.traccar.database.AliasesManager#getAllAttributeAliases(long)
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.database.PermissionsManager#getDevicePermissions(long)
	CALLEE: org.traccar.database.AliasesManager#getAttributeAliases(long)
CALLER: org.traccar.protocol.CalAmpProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: static org.traccar.helper.BitUtil#check(long,int)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.protocol.CalAmpProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,java.net.SocketAddress,int,int,int)
	CALLEE: org.traccar.protocol.CalAmpProtocolDecoder#decodePosition(org.traccar.DeviceSession,int,org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.protocol.AppelloProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.Parser#hasNext(int)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setDate(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.BaseProtocolDecoder#getLastLocation(org.traccar.model.Position,java.util.Date)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Position#setValid(boolean)
CALLER: org.traccar.protocol.PathAwayProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.protocol.CarTrackProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int,int)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.Parser#nextCoordinate()
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.helper.DateBuilder#setDateReverse(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
CALLER: org.traccar.protocol.ArknavX8Protocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.BlackKiteProtocolDecoder#<init>(org.traccar.protocol.BlackKiteProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.GranitProtocolEncoder#encodeCommand(org.traccar.model.Command)
	CALLEE: org.traccar.model.Message#getType()
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
	CALLEE: static org.traccar.protocol.GranitProtocolDecoder#appendChecksum(org.jboss.netty.buffer.ChannelBuffer,int)
CALLER: org.traccar.CharacterDelimiterFrameDecoder#<init>(int,java.lang.String)
	CALLEE: static org.traccar.CharacterDelimiterFrameDecoder#createDelimiter(java.lang.String)
CALLER: static org.traccar.helper.Log#error(java.lang.String)
	CALLEE: static org.traccar.helper.Log#getLogger()
CALLER: org.traccar.protocol.GranitFrameDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.helper.StringFinder#<init>(java.lang.String)
CALLER: org.traccar.database.DataManager#getAllGroups()
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#executeQuery(java.lang.Class)
CALLER: org.traccar.database.DataManager#unlinkGroupGeofence(long,long)
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#setLong(java.lang.String,long)
	CALLEE: org.traccar.database.QueryBuilder#executeUpdate()
CALLER: org.traccar.model.Geofence#setGeometry(org.traccar.geofence.GeofenceGeometry)
	CALLEE: org.traccar.geofence.GeofenceCircle#toWkt()
	CALLEE: org.traccar.geofence.GeofencePolygon#toWkt()
CALLER: org.traccar.database.AliasesManager#removeArrtibuteAlias(long)
	CALLEE: org.traccar.database.DataManager#removeAttributeAlias(long)
	CALLEE: org.traccar.model.AttributeAlias#getDeviceId()
	CALLEE: org.traccar.database.AliasesManager#getAttributeAliases(long)
CALLER: org.traccar.protocol.Ardi01ProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setDate(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
CALLER: org.traccar.protocol.L100Protocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.database.DataManager#initDatabaseSchema()
	CALLEE: org.traccar.Config#hasKey(java.lang.String)
	CALLEE: org.traccar.Config#getString(java.lang.String)
CALLER: org.traccar.protocol.GoSafeProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.api.AsyncSocket#onUpdateDevice(org.traccar.model.Device)
	CALLEE: org.traccar.api.AsyncSocket#sendData(java.util.Map)
CALLER: org.traccar.protocol.Gl200ProtocolDecoder#decodeIda(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: org.traccar.protocol.Gl200ProtocolDecoder#decodeLocation(org.traccar.model.Position,org.traccar.helper.Parser)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
	CALLEE: org.traccar.helper.Parser#hasNext(int)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setDate(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.model.Position#getOutdated()
	CALLEE: org.traccar.model.Position#getFixTime()
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
CALLER: org.traccar.protocol.TramigoProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
	CALLEE: org.traccar.TrackerServer#setEndianness(java.nio.ByteOrder)
CALLER: org.traccar.api.resource.ReportResource#getRouteJson(java.util.List,java.util.List,java.lang.String,java.lang.String)
	CALLEE: org.traccar.api.BaseResource#getUserId()
	CALLEE: static org.traccar.web.JsonConverter#parseDate(java.lang.String)
	CALLEE: static org.traccar.reports.Route#getJson(long,java.util.Collection,java.util.Collection,java.util.Date,java.util.Date)
CALLER: org.traccar.database.QueryBuilder#executeUpdate()
CALLER: org.traccar.protocol.AppelloProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.database.DeviceManager#getLastPosition(long)
CALLER: org.traccar.api.resource.DeviceResource#update(long,org.traccar.model.Device)
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.api.BaseResource#getUserId()
	CALLEE: org.traccar.database.PermissionsManager#checkReadonly(long)
	CALLEE: org.traccar.database.PermissionsManager#checkDevice(long,long)
	CALLEE: static org.traccar.Context#getDeviceManager()
	CALLEE: org.traccar.database.DeviceManager#updateDevice(org.traccar.model.Device)
	CALLEE: static org.traccar.Context#getGeofenceManager()
	CALLEE: org.traccar.database.GeofenceManager#refresh()
CALLER: org.traccar.helper.DateBuilder#setTime(int,int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setHour(int)
	CALLEE: org.traccar.helper.DateBuilder#setMinute(int)
	CALLEE: org.traccar.helper.DateBuilder#setSecond(int)
	CALLEE: org.traccar.helper.DateBuilder#setMillis(int)
CALLER: org.traccar.protocol.Avl301ProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,int)
CALLER: org.traccar.protocol.GlobalSatProtocolDecoder#decodeAlternative(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setDateReverse(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.helper.Parser#nextCoordinate(org.traccar.helper.Parser.CoordinateFormat)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
CALLER: org.traccar.protocol.Gps103ProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.BaseProtocolDecoder#getLastLocation(org.traccar.model.Position,java.util.Date)
	CALLEE: org.traccar.helper.Parser#nextInt(int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setDate(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: org.traccar.protocol.Gps103ProtocolDecoder#decodeAlarm(java.lang.String)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,boolean)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#addMinute(int)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.Parser#nextCoordinate(org.traccar.helper.Parser.CoordinateFormat)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
CALLER: org.traccar.protocol.CarcellProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocol#setSupportedCommands(java.lang.String[])
CALLER: org.traccar.protocol.DishaProtocolDecoder#<init>(org.traccar.protocol.DishaProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.GlobalSatProtocolDecoder#decodeOriginal(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.DateBuilder#setDay(int)
	CALLEE: org.traccar.helper.DateBuilder#setMonth(int)
	CALLEE: org.traccar.helper.DateBuilder#setYear(int)
	CALLEE: org.traccar.helper.DateBuilder#setHour(int)
	CALLEE: org.traccar.helper.DateBuilder#setMinute(int)
	CALLEE: org.traccar.helper.DateBuilder#setSecond(int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromMph(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
CALLER: org.traccar.protocol.TeltonikaProtocolDecoder#<init>(org.traccar.protocol.TeltonikaProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.database.DataManager#unlinkDeviceGeofence(long,long)
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#setLong(java.lang.String,long)
	CALLEE: org.traccar.database.QueryBuilder#executeUpdate()
CALLER: org.traccar.protocol.CradlepointProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.DateBuilder#<init>(java.util.Date)
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.Parser#nextCoordinate()
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.helper.Parser#skip(int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
CALLER: org.traccar.protocol.Pt502Protocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
	CALLEE: org.traccar.TrackerServer#setEndianness(java.nio.ByteOrder)
CALLER: org.traccar.database.DataManager#getGeofence(long)
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#setLong(java.lang.String,long)
	CALLEE: org.traccar.database.QueryBuilder#executeQuerySingle(java.lang.Class)
CALLER: org.traccar.BaseProtocolDecoder#onMessageEvent(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: static org.traccar.Context#getConnectionManager()
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.database.ConnectionManager#updateDevice(long,java.lang.String,java.util.Date)
CALLER: org.traccar.protocol.NoranProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
	CALLEE: org.traccar.TrackerServer#setEndianness(java.nio.ByteOrder)
CALLER: org.traccar.protocol.Avl301ProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.Avl301ProtocolDecoder#readImei(org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.protocol.Avl301ProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,int)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.DateBuilder#setDate(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,boolean)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
CALLER: org.traccar.DefaultDataHandler#handlePosition(org.traccar.model.Position)
	CALLEE: static org.traccar.Context#getDataManager()
	CALLEE: org.traccar.database.DataManager#addPosition(org.traccar.model.Position)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: org.traccar.protocol.AtrackProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: static org.traccar.protocol.AtrackProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,java.net.SocketAddress,long,int)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.DateBuilder#setDate(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setFixTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setDeviceTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,long)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: static org.traccar.protocol.AtrackProtocolDecoder#readString(org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: org.traccar.protocol.AtrackProtocolDecoder#readCustomData(org.traccar.model.Position,org.jboss.netty.buffer.ChannelBuffer,java.lang.String)
CALLER: org.traccar.StringProtocolEncoder#formatCommand(org.traccar.model.Command,java.lang.String,java.lang.String[])
	CALLEE: org.traccar.StringProtocolEncoder#formatCommand(org.traccar.model.Command,java.lang.String,org.traccar.StringProtocolEncoder.ValueFormatter,java.lang.String[])
CALLER: org.traccar.protocol.WatchProtocolEncoder#formatCommand(org.traccar.model.Command,java.lang.String,java.lang.String[])
	CALLEE: org.traccar.StringProtocolEncoder#formatCommand(org.traccar.model.Command,java.lang.String,java.lang.String[])
	CALLEE: org.traccar.model.Message#getDeviceId()
	CALLEE: org.traccar.BaseProtocolEncoder#getUniqueId(long)
CALLER: org.traccar.protocol.SuntechProtocolDecoder#<init>(org.traccar.protocol.SuntechProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.MeiligaoFrameDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.api.resource.AttributeAliasResource#get(long)
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.api.BaseResource#getUserId()
	CALLEE: org.traccar.database.PermissionsManager#isAdmin(long)
	CALLEE: org.traccar.database.PermissionsManager#checkDevice(long,long)
	CALLEE: static org.traccar.Context#getAliasesManager()
	CALLEE: org.traccar.database.AliasesManager#getAttributeAliases(long)
	CALLEE: org.traccar.database.AliasesManager#getAllAttributeAliases(long)
CALLER: org.traccar.api.resource.GroupResource#remove(long)
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.api.BaseResource#getUserId()
	CALLEE: org.traccar.database.PermissionsManager#checkReadonly(long)
	CALLEE: org.traccar.database.PermissionsManager#checkGroup(long,long)
	CALLEE: static org.traccar.Context#getDeviceManager()
	CALLEE: org.traccar.database.DeviceManager#removeGroup(long)
	CALLEE: org.traccar.database.PermissionsManager#refreshPermissions()
	CALLEE: static org.traccar.Context#getGeofenceManager()
	CALLEE: org.traccar.database.GeofenceManager#refresh()
CALLER: org.traccar.protocol.KhdProtocolDecoder#<init>(org.traccar.protocol.KhdProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: static org.traccar.MainEventHandler#formatChannel(org.jboss.netty.channel.Channel)
CALLER: static org.traccar.helper.DateUtil#correctYear(java.util.Date)
	CALLEE: static org.traccar.helper.DateUtil#correctDate(java.util.Date,java.util.Date,int)
CALLER: org.traccar.protocol.AuroProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.FilterHandler#<init>()
	CALLEE: static org.traccar.Context#getConfig()
	CALLEE: org.traccar.Config#getBoolean(java.lang.String)
	CALLEE: org.traccar.Config#getInteger(java.lang.String)
	CALLEE: org.traccar.Config#getLong(java.lang.String)
CALLER: org.traccar.protocol.WialonProtocolEncoder#encodeCommand(org.traccar.model.Command)
	CALLEE: org.traccar.model.Message#getType()
	CALLEE: org.traccar.StringProtocolEncoder#formatCommand(org.traccar.model.Command,java.lang.String,java.lang.String[])
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: org.traccar.protocol.ApelProtocolDecoder#sendSimpleMessage(org.jboss.netty.channel.Channel,short)
	CALLEE: static org.traccar.helper.Checksum#crc32(java.nio.ByteBuffer)
CALLER: org.traccar.protocol.GoSafeProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.Parser#nextCoordinate(org.traccar.helper.Parser.CoordinateFormat)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: org.traccar.helper.DateBuilder#setDateReverse(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.helper.Parser#hasNext(int)
	CALLEE: org.traccar.helper.Parser#find()
	CALLEE: org.traccar.protocol.GoSafeProtocolDecoder#decodePosition(org.traccar.DeviceSession,org.traccar.helper.Parser,java.util.Date)
CALLER: static org.traccar.helper.DateUtil#correctDay(java.util.Date)
	CALLEE: static org.traccar.helper.DateUtil#correctDate(java.util.Date,java.util.Date,int)
CALLER: org.traccar.MainEventHandler#messageReceived(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.MessageEvent)
	CALLEE: static org.traccar.Context#getDeviceManager()
	CALLEE: org.traccar.database.DeviceManager#updateLatestPosition(org.traccar.model.Position)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
	CALLEE: static org.traccar.Context#getIdentityManager()
	CALLEE: org.traccar.model.Message#getDeviceId()
	CALLEE: org.traccar.database.DeviceManager#getDeviceById(long)
	CALLEE: org.traccar.model.Device#getUniqueId()
	CALLEE: static org.traccar.MainEventHandler#formatChannel(org.jboss.netty.channel.Channel)
	CALLEE: org.traccar.model.Position#getFixTime()
	CALLEE: org.traccar.model.Position#getLatitude()
	CALLEE: org.traccar.model.Position#getLongitude()
	CALLEE: org.traccar.model.Position#getSpeed()
	CALLEE: org.traccar.model.Position#getCourse()
	CALLEE: org.traccar.model.Extensible#getAttributes()
	CALLEE: static org.traccar.helper.Log#info(java.lang.String)
CALLER: org.traccar.protocol.CellocatorProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.database.QueryBuilder#indexes(java.lang.String)
CALLER: org.traccar.api.ResourceErrorHandler#toResponse(java.lang.Exception)
	CALLEE: static org.traccar.helper.Log#exceptionStack(java.lang.Throwable)
CALLER: org.traccar.protocol.OigoProtocolDecoder#<init>(org.traccar.protocol.OigoProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.EasyTrackProtocolDecoder#<init>(org.traccar.protocol.EasyTrackProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.HaicomProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setDate(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: static org.traccar.helper.BitUtil#check(long,int)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
CALLER: org.traccar.protocol.MeiligaoProtocolEncoder#encodeCommand(org.traccar.model.Command)
	CALLEE: org.traccar.model.Extensible#getAttributes()
	CALLEE: org.traccar.model.Message#getType()
	CALLEE: org.traccar.model.Message#getDeviceId()
	CALLEE: org.traccar.protocol.MeiligaoProtocolEncoder#encodeContent(long,int,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: static org.traccar.reports.Trips#getJson(long,java.util.Collection,java.util.Collection,java.util.Date,java.util.Date)
	CALLEE: static org.traccar.reports.ReportUtils#getDeviceList(java.util.Collection,java.util.Collection)
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.database.PermissionsManager#checkDevice(long,long)
	CALLEE: static org.traccar.reports.Trips#detectTrips(long,java.util.Date,java.util.Date)
	CALLEE: org.traccar.helper.PatternBuilder#toString()
CALLER: org.traccar.database.DataManager#getPositions(long,java.util.Date,java.util.Date)
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#setLong(java.lang.String,long)
	CALLEE: org.traccar.database.QueryBuilder#setDate(java.lang.String,java.util.Date)
	CALLEE: org.traccar.database.QueryBuilder#executeQuery(java.lang.Class)
CALLER: org.traccar.BaseEventHandler#handlePosition(org.traccar.model.Position)
	CALLEE: org.traccar.events.AlertEventHandler#analyzePosition(org.traccar.model.Position)
	CALLEE: org.traccar.events.CommandResultEventHandler#analyzePosition(org.traccar.model.Position)
	CALLEE: org.traccar.events.OverspeedEventHandler#analyzePosition(org.traccar.model.Position)
	CALLEE: org.traccar.events.IgnitionEventHandler#analyzePosition(org.traccar.model.Position)
	CALLEE: org.traccar.events.MotionEventHandler#analyzePosition(org.traccar.model.Position)
	CALLEE: org.traccar.events.GeofenceEventHandler#analyzePosition(org.traccar.model.Position)
	CALLEE: static org.traccar.Context#getNotificationManager()
	CALLEE: org.traccar.database.NotificationManager#updateEvents(java.util.Collection,org.traccar.model.Position)
CALLER: org.traccar.web.WebServer#initServer()
	CALLEE: org.traccar.Config#getString(java.lang.String)
	CALLEE: org.traccar.Config#getInteger(java.lang.String,int)
CALLER: org.traccar.database.GeofenceManager#getAllDeviceGeofences(long)
	CALLEE: org.traccar.database.GeofenceManager#getDeviceGeofences(java.util.Map,long)
CALLER: org.traccar.protocol.H02ProtocolDecoder#processStatus(org.traccar.model.Position,long)
	CALLEE: static org.traccar.helper.BitUtil#check(long,int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,boolean)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,long)
CALLER: org.traccar.protocol.WatchProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,java.lang.String,java.lang.String,java.lang.String)
CALLER: org.traccar.helper.PatternBuilder#groupEnd(java.lang.String)
	CALLEE: org.traccar.helper.PatternBuilder#expression(java.lang.String)
CALLER: org.traccar.protocol.Mta6ProtocolDecoder.TimeReader#readTime(org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.protocol.Mta6ProtocolDecoder.FloatReader#readFloat(org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.DateBuilder#setDate(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#addMillis(long)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
CALLER: static org.traccar.notification.NotificationMail#getConfigProperies()
	CALLEE: static org.traccar.Context#getConfig()
	CALLEE: org.traccar.Config#getString(java.lang.String,java.lang.String)
	CALLEE: org.traccar.Config#getBoolean(java.lang.String)
	CALLEE: org.traccar.Config#getString(java.lang.String)
CALLER: org.traccar.protocol.ThinkRaceProtocolDecoder#<init>(org.traccar.protocol.ThinkRaceProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.geocode.MapQuestReverseGeocoder#parseAddress(javax.json.JsonObject)
	CALLEE: org.traccar.geocode.Address#setStreet(java.lang.String)
	CALLEE: org.traccar.geocode.Address#setSettlement(java.lang.String)
	CALLEE: org.traccar.geocode.Address#setDistrict(java.lang.String)
	CALLEE: org.traccar.geocode.Address#setState(java.lang.String)
	CALLEE: org.traccar.geocode.Address#setCountry(java.lang.String)
	CALLEE: org.traccar.geocode.Address#setPostcode(java.lang.String)
CALLER: org.traccar.protocol.TrackboxProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.protocol.TrackboxProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int,int)
	CALLEE: org.traccar.helper.Parser#nextCoordinate()
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.helper.DateBuilder#setDateReverse(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
CALLER: org.traccar.model.User#isPasswordValid(java.lang.String)
	CALLEE: static org.traccar.helper.Hashing#validatePassword(java.lang.String,java.lang.String,java.lang.String)
CALLER: org.traccar.protocol.BlackKiteProtocolDecoder#sendReply(org.jboss.netty.channel.Channel,int)
CALLER: org.traccar.protocol.Tt8850ProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.DateBuilder#setDate(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.helper.Parser#hasNext(int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.helper.Parser#nextInt(int)
CALLER: org.traccar.api.BaseResource#getUserId()
	CALLEE: org.traccar.api.UserSecurityContext#getUserPrincipal()
	CALLEE: org.traccar.api.UserPrincipal#getUserId()
CALLER: org.traccar.database.DataManager#getAllDevices()
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#executeQuery(java.lang.Class)
CALLER: static org.traccar.model.MiscFormatter#fromJson(javax.json.JsonObject)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: org.traccar.database.NotificationManager#getUserNotifications(long)
	CALLEE: org.traccar.database.NotificationManager#getUserNotificationsUnsafe(long)
CALLER: org.traccar.protocol.TeltonikaProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.SkypatrolProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: static org.traccar.helper.BitUtil#from(int,int)
	CALLEE: static org.traccar.helper.BitUtil#check(long,int)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,long)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.DateBuilder#setDateReverse(int,int,int)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: static org.traccar.protocol.SkypatrolProtocolDecoder#convertCoordinate(long)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
CALLER: org.traccar.protocol.CradlepointProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.geocode.GeocodeFarmReverseGeocoder#parseAddress(javax.json.JsonObject)
	CALLEE: org.traccar.geocode.Address#setStreet(java.lang.String)
	CALLEE: org.traccar.geocode.Address#setSettlement(java.lang.String)
	CALLEE: org.traccar.geocode.Address#setState(java.lang.String)
	CALLEE: org.traccar.geocode.Address#setCountry(java.lang.String)
CALLER: org.traccar.protocol.ApelProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.protocol.HomtecsProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.NavigilProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.Config#getString(java.lang.String,java.lang.String)
CALLER: org.traccar.protocol.UlbotechProtocolDecoder#decodeDriverBehavior(org.traccar.model.Position,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: static org.traccar.helper.BitUtil#check(long,int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,boolean)
CALLER: org.traccar.database.GeofenceManager#checkGeofence(long,long)
	CALLEE: org.traccar.database.GeofenceManager#getUserGeofencesIds(long)
CALLER: org.traccar.protocol.ObdDongleProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.AutoFonProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.Mta6ProtocolDecoder#parseFormatA1(org.traccar.DeviceSession,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: static org.traccar.helper.BitUtil#check(long,int)
	CALLEE: org.traccar.protocol.Mta6ProtocolDecoder.FloatReader#readFloat(org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.protocol.Mta6ProtocolDecoder.TimeReader#readTime(org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.model.Position#setValid(boolean)
CALLER: org.traccar.protocol.NvsProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.protocol.NvsProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,long)
CALLER: org.traccar.protocol.FreedomProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.protocol.FreedomProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setDate(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.helper.Parser#nextCoordinate(org.traccar.helper.Parser.CoordinateFormat)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setSpeed(double)
CALLER: org.traccar.database.DeviceManager#updateGroup(org.traccar.model.Group)
	CALLEE: org.traccar.database.DeviceManager#checkGroupCycles(org.traccar.model.Group)
	CALLEE: org.traccar.database.DataManager#updateGroup(org.traccar.model.Group)
	CALLEE: org.traccar.model.Extensible#getId()
CALLER: org.traccar.api.resource.AttributeAliasResource#add(org.traccar.model.AttributeAlias)
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.api.BaseResource#getUserId()
	CALLEE: org.traccar.database.PermissionsManager#checkReadonly(long)
	CALLEE: org.traccar.database.PermissionsManager#isAdmin(long)
	CALLEE: org.traccar.model.AttributeAlias#getDeviceId()
	CALLEE: org.traccar.database.PermissionsManager#checkDevice(long,long)
	CALLEE: static org.traccar.Context#getAliasesManager()
	CALLEE: org.traccar.database.AliasesManager#addAttributeAlias(org.traccar.model.AttributeAlias)
CALLER: org.traccar.MainEventHandler#closeChannel(org.jboss.netty.channel.Channel)
CALLER: org.traccar.events.CommandResultEventHandler#analyzePosition(org.traccar.model.Position)
	CALLEE: org.traccar.model.Extensible#getAttributes()
	CALLEE: org.traccar.model.Message#getDeviceId()
	CALLEE: org.traccar.model.Extensible#getId()
	CALLEE: org.traccar.model.Event#<init>(java.lang.String,long,long)
CALLER: org.traccar.database.DeviceManager#addDevice(org.traccar.model.Device)
	CALLEE: org.traccar.database.DataManager#addDevice(org.traccar.model.Device)
	CALLEE: org.traccar.model.Extensible#getId()
	CALLEE: org.traccar.model.Device#getUniqueId()
CALLER: org.traccar.protocol.GotopProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.GranitProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
	CALLEE: org.traccar.TrackerServer#setEndianness(java.nio.ByteOrder)
CALLER: org.traccar.protocol.XexunProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.helper.Parser#nextCoordinate()
	CALLEE: org.traccar.helper.Parser#nextCoordinate(org.traccar.helper.Parser.CoordinateFormat)
CALLER: org.traccar.protocol.Pt3000Protocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.helper.DateBuilder#setDate(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setYear(int)
	CALLEE: org.traccar.helper.DateBuilder#setMonth(int)
	CALLEE: org.traccar.helper.DateBuilder#setDay(int)
CALLER: org.traccar.protocol.TotemProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.SupermateProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.GalileoProtocolDecoder#sendReply(org.jboss.netty.channel.Channel,int)
CALLER: org.traccar.ExtendedObjectDecoder#saveOriginal(java.lang.Object,java.lang.Object)
	CALLEE: static org.traccar.Context#getConfig()
	CALLEE: org.traccar.Config#getBoolean(java.lang.String)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
CALLER: org.traccar.protocol.WialonProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.NavisProtocolDecoder#parsePosition(org.traccar.DeviceSession,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,long)
	CALLEE: static org.traccar.helper.BitUtil#check(long,int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: static org.traccar.protocol.NavisProtocolDecoder#isFormat(int,int[])
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setDateReverse(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
CALLER: org.traccar.protocol.CarcellProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,boolean)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.Parser#hasNext(int)
	CALLEE: org.traccar.helper.Parser#nextCoordinate(org.traccar.helper.Parser.CoordinateFormat)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.DateBuilder#setDateReverse(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
CALLER: org.traccar.protocol.Tlt2hProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.protocol.SkypatrolProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.RemoteAddressHandler#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
CALLER: org.traccar.protocol.TrvProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.AutoGradeProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.database.DataManager#getEvent(long)
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#setLong(java.lang.String,long)
	CALLEE: org.traccar.database.QueryBuilder#executeQuerySingle(java.lang.Class)
CALLER: org.traccar.database.GeofenceManager#refreshGeofences()
	CALLEE: org.traccar.database.DataManager#getGeofences()
	CALLEE: org.traccar.model.Extensible#getId()
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
	CALLEE: org.traccar.database.GeofenceManager#refreshUserGeofences()
	CALLEE: org.traccar.database.GeofenceManager#refresh()
CALLER: org.traccar.protocol.CastelProtocolDecoder#decodeSc(org.jboss.netty.channel.Channel,java.net.SocketAddress,org.jboss.netty.buffer.ChannelBuffer,int,org.jboss.netty.buffer.ChannelBuffer,int,org.traccar.DeviceSession)
	CALLEE: org.traccar.protocol.CastelProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,java.net.SocketAddress,int,org.jboss.netty.buffer.ChannelBuffer,short,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.protocol.CastelProtocolDecoder#readPosition(org.traccar.DeviceSession,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,long)
	CALLEE: org.traccar.protocol.CastelProtocolDecoder#createPosition(org.traccar.DeviceSession)
	CALLEE: org.traccar.protocol.CastelProtocolDecoder#decodeStat(org.traccar.model.Position,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.protocol.CastelProtocolDecoder#decodeObd(org.traccar.model.Position,org.jboss.netty.buffer.ChannelBuffer,boolean)
	CALLEE: static org.traccar.helper.ObdDecoder#decodeCodes(java.lang.String)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
CALLER: org.traccar.protocol.WondexFrameDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.helper.StringFinder#<init>(java.lang.String)
CALLER: static org.traccar.reports.Summary#calculateSummaryResult(long,java.util.Date,java.util.Date)
	CALLEE: org.traccar.reports.model.BaseReport#setDeviceId(long)
	CALLEE: static org.traccar.Context#getIdentityManager()
	CALLEE: org.traccar.database.DeviceManager#getDeviceById(long)
	CALLEE: org.traccar.model.Device#getName()
	CALLEE: org.traccar.reports.model.BaseReport#setDeviceName(java.lang.String)
	CALLEE: static org.traccar.Context#getDataManager()
	CALLEE: org.traccar.database.DataManager#getPositions(long,java.util.Date,java.util.Date)
	CALLEE: org.traccar.model.Extensible#getAttributes()
	CALLEE: org.traccar.helper.PatternBuilder#toString()
	CALLEE: org.traccar.model.Position#getFixTime()
	CALLEE: org.traccar.reports.model.SummaryReport#addEngineHours(long)
	CALLEE: org.traccar.model.Position#getSpeed()
	CALLEE: org.traccar.reports.model.BaseReport#setMaxSpeed(double)
	CALLEE: static org.traccar.Context#getDeviceManager()
	CALLEE: org.traccar.database.DeviceManager#lookupConfigBoolean(long,java.lang.String,boolean)
	CALLEE: static org.traccar.reports.ReportUtils#calculateDistance(org.traccar.model.Position,org.traccar.model.Position,boolean)
	CALLEE: org.traccar.reports.model.BaseReport#setDistance(double)
	CALLEE: org.traccar.reports.model.BaseReport#setAverageSpeed(java.lang.Double)
CALLER: org.traccar.protocol.T55Protocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: static org.traccar.CharacterDelimiterFrameDecoder#createDelimiter(java.lang.String)
CALLER: org.traccar.protocol.CastelProtocolDecoder#decodeObd(org.traccar.model.Position,org.jboss.netty.buffer.ChannelBuffer,boolean)
	CALLEE: static org.traccar.helper.ObdDecoder#decodeData(int,int,boolean)
CALLER: org.traccar.protocol.UlbotechProtocolDecoder#<init>(org.traccar.protocol.UlbotechProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
	CALLEE: static org.traccar.Context#getConfig()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.Config#getInteger(java.lang.String,int)
CALLER: org.traccar.protocol.GotopProtocolDecoder#<init>(org.traccar.protocol.GotopProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.FilterHandler#filterInvalid(org.traccar.model.Position)
	CALLEE: org.traccar.model.Position#getValid()
CALLER: org.traccar.FilterHandler#<init>(boolean,boolean,boolean,boolean,boolean,int,long)
CALLER: org.traccar.protocol.T800xProtocolEncoder#encodeCommand(org.traccar.model.Command)
	CALLEE: org.traccar.model.Message#getType()
	CALLEE: org.traccar.model.Extensible#getAttributes()
	CALLEE: org.traccar.protocol.T800xProtocolEncoder#encodeContent(org.traccar.model.Command,java.lang.String)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: org.traccar.api.resource.SessionResource#get()
	CALLEE: static org.traccar.Context#getDataManager()
	CALLEE: org.traccar.database.DataManager#login(java.lang.String,java.lang.String)
	CALLEE: org.traccar.model.Extensible#getId()
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.database.PermissionsManager#getUser(long)
CALLER: org.traccar.protocol.HuaShengProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: static org.traccar.protocol.HuaShengProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,int,int,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.DateBuilder#setYear(int)
	CALLEE: org.traccar.helper.DateBuilder#setMonth(int)
	CALLEE: org.traccar.helper.DateBuilder#setDay(int)
	CALLEE: org.traccar.helper.DateBuilder#setHour(int)
	CALLEE: org.traccar.helper.DateBuilder#setMinute(int)
	CALLEE: org.traccar.helper.DateBuilder#setSecond(int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
CALLER: org.traccar.protocol.Gps103Protocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.web.CsvBuilder#addLine(java.lang.Object)
	CALLEE: org.traccar.web.CsvBuilder#getSortedMethods(java.lang.Object)
	CALLEE: org.traccar.database.GroupTree.TreeNode#equals(java.lang.Object)
	CALLEE: org.traccar.web.CsvBuilder#addSeparator()
	CALLEE: static org.traccar.model.MiscFormatter#toJson(java.util.Map)
	CALLEE: org.traccar.helper.PatternBuilder#toString()
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
	CALLEE: org.traccar.web.CsvBuilder#addLineEnding()
CALLER: org.traccar.protocol.Tr900Protocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.protocol.MeiligaoProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocol#setSupportedCommands(java.lang.String[])
CALLER: org.traccar.CoordinatesHandler#<init>()
	CALLEE: static org.traccar.Context#getConfig()
	CALLEE: org.traccar.Config#getInteger(java.lang.String,int)
CALLER: org.traccar.protocol.TrvProtocolDecoder#<init>(org.traccar.protocol.TrvProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.Tk102ProtocolDecoder#<init>(org.traccar.protocol.Tk102Protocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.SkypatrolProtocolDecoder#<init>(org.traccar.protocol.SkypatrolProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
	CALLEE: static org.traccar.Context#getConfig()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.Config#getInteger(java.lang.String)
CALLER: org.traccar.geocode.NominatimReverseGeocoder#<init>()
	CALLEE: org.traccar.geocode.NominatimReverseGeocoder#<init>(java.lang.String,int)
CALLER: org.traccar.protocol.NavigilProtocolDecoder#parseTg2Report(org.traccar.DeviceSession,org.jboss.netty.buffer.ChannelBuffer,int)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: static org.traccar.protocol.NavigilProtocolDecoder#convertTimestamp(long)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
CALLER: org.traccar.protocol.RitiProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,long)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.Parser#nextCoordinate()
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.helper.DateBuilder#setDateReverse(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
CALLER: org.traccar.protocol.EnforaProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.helper.StringFinder#<init>(java.lang.String)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int,int)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.Parser#nextCoordinate()
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.helper.DateBuilder#setDateReverse(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
CALLER: org.traccar.database.GroupTree#getDevices(long)
	CALLEE: org.traccar.database.GroupTree#getNodes(java.util.Set,org.traccar.database.GroupTree.TreeNode)
	CALLEE: org.traccar.database.GroupTree.TreeNode#getDevice()
CALLER: org.traccar.protocol.TaipProtocolDecoder#getTime(long)
	CALLEE: org.traccar.helper.DateBuilder#<init>(java.util.Date)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#addMillis(long)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: static org.traccar.helper.DateUtil#correctDay(java.util.Date)
CALLER: org.traccar.protocol.VisiontekProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setDateReverse(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.helper.Parser#hasNext(int)
	CALLEE: org.traccar.helper.Parser#nextCoordinate(org.traccar.helper.Parser.CoordinateFormat)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,boolean)
	CALLEE: org.traccar.model.Position#setValid(boolean)
CALLER: org.traccar.protocol.CastelProtocolDecoder#readPosition(org.traccar.DeviceSession,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.DateBuilder#setDateReverse(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromCps(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
CALLER: org.traccar.protocol.AquilaProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.NavisProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.database.PermissionsManager#getGroupPermissions(long)
CALLER: org.traccar.protocol.KenjiProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.Parser#nextInt(int)
	CALLEE: org.traccar.protocol.KenjiProtocolDecoder#decodeAlarm(int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.Parser#nextCoordinate(org.traccar.helper.Parser.CoordinateFormat)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.helper.DateBuilder#setDateReverse(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
CALLER: org.traccar.database.NotificationManager#updateEvents(java.util.Collection,org.traccar.model.Position)
	CALLEE: org.traccar.database.NotificationManager#updateEvent(org.traccar.model.Event,org.traccar.model.Position)
CALLER: org.traccar.protocol.NavigilFrameDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.protocol.HaicomProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.geocode.GoogleReverseGeocoder#parseAddress(javax.json.JsonObject)
	CALLEE: org.traccar.geocode.Address#setHouse(java.lang.String)
	CALLEE: org.traccar.geocode.Address#setStreet(java.lang.String)
	CALLEE: org.traccar.geocode.Address#setSettlement(java.lang.String)
	CALLEE: org.traccar.geocode.Address#setDistrict(java.lang.String)
	CALLEE: org.traccar.geocode.Address#setState(java.lang.String)
	CALLEE: org.traccar.geocode.Address#setCountry(java.lang.String)
	CALLEE: org.traccar.geocode.Address#setPostcode(java.lang.String)
CALLER: org.traccar.geocode.OpenCageReverseGeocoder#parseAddress(javax.json.JsonObject)
	CALLEE: org.traccar.geocode.Address#setHouse(java.lang.String)
	CALLEE: org.traccar.geocode.Address#setStreet(java.lang.String)
	CALLEE: org.traccar.geocode.Address#setSuburb(java.lang.String)
	CALLEE: org.traccar.geocode.Address#setSettlement(java.lang.String)
	CALLEE: org.traccar.geocode.Address#setDistrict(java.lang.String)
	CALLEE: org.traccar.geocode.Address#setState(java.lang.String)
	CALLEE: org.traccar.geocode.Address#setCountry(java.lang.String)
	CALLEE: org.traccar.geocode.Address#setPostcode(java.lang.String)
CALLER: org.traccar.protocol.EasyTrackProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt(int)
	CALLEE: org.traccar.helper.DateBuilder#setDate(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: static org.traccar.helper.BitUtil#check(long,int)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.model.Position#setAltitude(double)
CALLER: org.traccar.protocol.Ardi01Protocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.protocol.SanavProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int,int)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.Parser#nextCoordinate()
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.helper.DateBuilder#setDateReverse(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
CALLER: org.traccar.protocol.CalAmpProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.api.resource.DeviceResource#remove(long)
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.api.BaseResource#getUserId()
	CALLEE: org.traccar.database.PermissionsManager#checkReadonly(long)
	CALLEE: org.traccar.database.PermissionsManager#checkDevice(long,long)
	CALLEE: static org.traccar.Context#getDeviceManager()
	CALLEE: org.traccar.database.DeviceManager#removeDevice(long)
	CALLEE: org.traccar.database.PermissionsManager#refreshPermissions()
	CALLEE: static org.traccar.Context#getGeofenceManager()
	CALLEE: org.traccar.database.GeofenceManager#refresh()
	CALLEE: static org.traccar.Context#getAliasesManager()
	CALLEE: org.traccar.database.AliasesManager#removeDevice(long)
CALLER: org.traccar.database.PermissionsManager#checkAdmin(long)
	CALLEE: org.traccar.database.PermissionsManager#isAdmin(long)
CALLER: org.traccar.protocol.VisiontekProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.database.DataManager#updateNotification(org.traccar.model.Notification)
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#setObject(java.lang.Object)
	CALLEE: org.traccar.database.QueryBuilder#executeUpdate()
CALLER: org.traccar.protocol.XexunProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.NavisProtocolDecoder#<init>(org.traccar.protocol.NavisProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.database.DataManager#getDeviceGeofences()
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#executeQuery(java.lang.Class)
CALLER: org.traccar.protocol.FoxProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.protocol.V680Protocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.protocol.MiniFinderProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.MeiligaoProtocolDecoder#decodeRfid(org.traccar.model.Position,java.lang.String)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setDateReverse(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.Parser#nextCoordinate()
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
CALLER: org.traccar.helper.StringFinder#find(org.jboss.netty.buffer.ChannelBuffer,int)
CALLER: org.traccar.protocol.CarTrackProtocolDecoder#<init>(org.traccar.protocol.CarTrackProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.SkypatrolProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.SupermateProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt(int)
	CALLEE: org.traccar.helper.DateBuilder#setDate(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
CALLER: org.traccar.database.PermissionsManager#getDeviceUsers(long)
CALLER: org.traccar.web.WebServer#initConsole()
CALLER: org.traccar.protocol.AquilaProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.DateBuilder#setDate(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,boolean)
	CALLEE: org.traccar.model.Position#setCourse(double)
CALLER: org.traccar.protocol.CastelProtocolDecoder#createPosition(org.traccar.DeviceSession)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.BaseProtocolDecoder#getLastLocation(org.traccar.model.Position,java.util.Date)
CALLER: org.traccar.protocol.BoxProtocolDecoder#<init>(org.traccar.protocol.BoxProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.MeitrackProtocolDecoder#decodeRegularMessage(org.jboss.netty.channel.Channel,java.net.SocketAddress,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.DateBuilder#setDate(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.helper.Parser#nextInt(int)
	CALLEE: org.traccar.helper.Parser#hasNext()
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
CALLER: org.traccar.database.ConnectionManager#updateEvent(long,org.traccar.model.Event,org.traccar.model.Position)
	CALLEE: org.traccar.api.AsyncSocket#onUpdateEvent(org.traccar.model.Event,org.traccar.model.Position)
CALLER: org.traccar.api.AsyncSocket#onUpdateEvent(org.traccar.model.Event,org.traccar.model.Position)
	CALLEE: org.traccar.api.AsyncSocket#sendData(java.util.Map)
CALLER: org.traccar.protocol.Ardi01Protocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.TeltonikaProtocolDecoder#decodeParameter(org.traccar.model.Position,int,long)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,long)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,boolean)
CALLER: org.traccar.notification.EventForwarder#forwardEvent(org.traccar.model.Event,org.traccar.model.Position)
	CALLEE: static org.traccar.Context#getAsyncHttpClient()
	CALLEE: org.traccar.notification.EventForwarder#preparePayload(org.traccar.model.Event,org.traccar.model.Position)
CALLER: org.traccar.protocol.HuaShengProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.protocol.M2mProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.protocol.VisiontekProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.TrackerServer#stop()
	CALLEE: org.traccar.TrackerServer#getChannelGroup()
CALLER: org.traccar.api.resource.GroupResource#update(long,org.traccar.model.Group)
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.api.BaseResource#getUserId()
	CALLEE: org.traccar.database.PermissionsManager#checkReadonly(long)
	CALLEE: org.traccar.database.PermissionsManager#checkGroup(long,long)
	CALLEE: static org.traccar.Context#getDeviceManager()
	CALLEE: org.traccar.database.DeviceManager#updateGroup(org.traccar.model.Group)
	CALLEE: static org.traccar.Context#getGeofenceManager()
	CALLEE: org.traccar.database.GeofenceManager#refresh()
CALLER: org.traccar.geocode.AddressFormat#<init>()
	CALLEE: org.traccar.geocode.AddressFormat#<init>(java.lang.String)
CALLER: org.traccar.CharacterDelimiterFrameDecoder#<init>(int,char)
	CALLEE: static org.traccar.CharacterDelimiterFrameDecoder#createDelimiter(char)
CALLER: org.traccar.database.NotificationManager#getUserNotificationByType(long,java.lang.String)
	CALLEE: org.traccar.database.NotificationManager#getUserNotificationsUnsafe(long)
	CALLEE: org.traccar.model.Notification#getType()
CALLER: org.traccar.database.QueryBuilder#setLong(java.lang.String,long)
	CALLEE: org.traccar.database.QueryBuilder#setLong(java.lang.String,long,boolean)
CALLER: org.traccar.protocol.RitiProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.geocode.FactualReverseGeocoder#parseAddress(javax.json.JsonObject)
	CALLEE: org.traccar.geocode.Address#setHouse(java.lang.String)
	CALLEE: org.traccar.geocode.Address#setStreet(java.lang.String)
	CALLEE: org.traccar.geocode.Address#setSettlement(java.lang.String)
	CALLEE: org.traccar.geocode.Address#setDistrict(java.lang.String)
	CALLEE: org.traccar.geocode.Address#setState(java.lang.String)
	CALLEE: org.traccar.geocode.Address#setCountry(java.lang.String)
	CALLEE: org.traccar.geocode.Address#setPostcode(java.lang.String)
CALLER: org.traccar.protocol.Gl200ProtocolDecoder#decodeBasic(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setDate(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.helper.Parser#hasNext(int)
	CALLEE: org.traccar.model.Position#getOutdated()
	CALLEE: org.traccar.model.Position#getFixTime()
CALLER: org.traccar.protocol.TzoneProtocolDecoder#<init>(org.traccar.protocol.TzoneProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.Tk103Protocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.database.GeofenceManager#getUserGeofencesIds(long)
	CALLEE: org.traccar.database.GeofenceManager#getUserGeofences(long)
CALLER: static org.traccar.protocol.AplicomProtocolDecoder#validateImei(long)
	CALLEE: static org.traccar.helper.Checksum#luhn(long)
CALLER: org.traccar.geocode.JsonReverseGeocoder#<init>(java.lang.String,int)
CALLER: org.traccar.protocol.PathAwayProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setDateReverse(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
CALLER: org.traccar.protocol.MeitrackProtocolEncoder#encodeCommand(org.traccar.model.Command)
	CALLEE: org.traccar.model.Extensible#getAttributes()
	CALLEE: org.traccar.model.Message#getType()
	CALLEE: org.traccar.protocol.MeitrackProtocolEncoder#formatCommand(org.traccar.model.Command,char,java.lang.String)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: org.traccar.protocol.NvsProtocolDecoder#<init>(org.traccar.protocol.NvsProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.FoxProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.FoxProtocolDecoder#getAttribute(java.lang.String,java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.DateBuilder#setDateReverse(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.helper.Parser#nextCoordinate()
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.helper.Parser#nextInt(int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
CALLER: org.traccar.api.resource.GroupGeofenceResource#remove(org.traccar.model.GroupGeofence)
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.api.BaseResource#getUserId()
	CALLEE: org.traccar.database.PermissionsManager#checkReadonly(long)
	CALLEE: org.traccar.model.GroupGeofence#getGroupId()
	CALLEE: org.traccar.database.PermissionsManager#checkGroup(long,long)
	CALLEE: org.traccar.model.GroupGeofence#getGeofenceId()
	CALLEE: org.traccar.database.PermissionsManager#checkGeofence(long,long)
	CALLEE: static org.traccar.Context#getDataManager()
	CALLEE: org.traccar.database.DataManager#unlinkGroupGeofence(long,long)
	CALLEE: static org.traccar.Context#getGeofenceManager()
	CALLEE: org.traccar.database.GeofenceManager#refresh()
CALLER: org.traccar.protocol.TytanProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.protocol.ArnaviProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.protocol.CalAmpProtocolDecoder#<init>(org.traccar.protocol.CalAmpProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.TrackerServer#<init>(org.jboss.netty.bootstrap.Bootstrap,java.lang.String)
	CALLEE: static org.traccar.GlobalChannelFactory#getFactory()
	CALLEE: static org.traccar.GlobalChannelFactory#getDatagramFactory()
	CALLEE: static org.traccar.Context#getConfig()
	CALLEE: org.traccar.Config#getString(java.lang.String)
	CALLEE: org.traccar.Config#getInteger(java.lang.String)
CALLER: org.traccar.protocol.WondexProtocolDecoder#<init>(org.traccar.protocol.WondexProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.web.WebServer#initOldWebApp()
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
	CALLEE: org.traccar.Config#getString(java.lang.String)
CALLER: org.traccar.protocol.Jt600ProtocolDecoder#decodeW01(java.lang.String,org.jboss.netty.channel.Channel,java.net.SocketAddress)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.Parser#nextCoordinate()
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setDateReverse(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
CALLER: org.traccar.protocol.NvsProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.database.DeviceManager#lookupConfigDouble(long,java.lang.String,double)
	CALLEE: org.traccar.database.DeviceManager#lookupAttribute(long,java.lang.String,boolean)
CALLER: org.traccar.protocol.HuabaoProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,java.net.SocketAddress,int,org.jboss.netty.buffer.ChannelBuffer,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: static org.traccar.helper.Checksum#xor(java.nio.ByteBuffer)
CALLER: org.traccar.protocol.ArknavProtocolDecoder#<init>(org.traccar.protocol.ArknavProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.database.AliasesManager#getAttributeAliases(long)
CALLER: org.traccar.protocol.KenjiProtocolDecoder#<init>(org.traccar.protocol.KenjiProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.BaseProtocol#getSupportedCommands()
CALLER: org.traccar.geofence.GeofenceCircle#<init>()
CALLER: org.traccar.database.ConnectionManager#removeListener(long,org.traccar.database.ConnectionManager.UpdateListener)
CALLER: org.traccar.api.resource.ReportResource#getEventsCsv(java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String)
	CALLEE: org.traccar.api.BaseResource#getUserId()
	CALLEE: static org.traccar.web.JsonConverter#parseDate(java.lang.String)
	CALLEE: static org.traccar.reports.Events#getCsv(long,java.util.Collection,java.util.Collection,java.util.Collection,java.util.Date,java.util.Date)
CALLER: org.traccar.protocol.GalileoProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
	CALLEE: org.traccar.TrackerServer#setEndianness(java.nio.ByteOrder)
CALLER: static org.traccar.reports.ReportUtils#getDeviceList(java.util.Collection,java.util.Collection)
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.database.PermissionsManager#getGroupDevices(long)
CALLER: org.traccar.protocol.EelinkProtocolDecoder#decodeNew(org.traccar.DeviceSession,org.jboss.netty.buffer.ChannelBuffer,int)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: static org.traccar.helper.BitUtil#check(long,int)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,long)
CALLER: static org.traccar.notification.NotificationFormatter#formatSpeed(long,double)
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.database.PermissionsManager#getUser(long)
	CALLEE: org.traccar.model.User#getSpeedUnit()
	CALLEE: static org.traccar.helper.UnitsConverter#kphFromKnots(double)
	CALLEE: static org.traccar.helper.UnitsConverter#mphFromKnots(double)
CALLER: static org.traccar.reports.Summary#getJson(long,java.util.Collection,java.util.Collection,java.util.Date,java.util.Date)
	CALLEE: static org.traccar.reports.ReportUtils#getDeviceList(java.util.Collection,java.util.Collection)
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.database.PermissionsManager#checkDevice(long,long)
	CALLEE: static org.traccar.reports.Summary#calculateSummaryResult(long,java.util.Date,java.util.Date)
	CALLEE: org.traccar.helper.PatternBuilder#toString()
CALLER: org.traccar.database.DataManager#updateGroup(org.traccar.model.Group)
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#setObject(java.lang.Object)
	CALLEE: org.traccar.database.QueryBuilder#executeUpdate()
CALLER: org.traccar.protocol.NavigilProtocolDecoder#sendAcknowledgment(org.jboss.netty.channel.Channel,int)
	CALLEE: static org.traccar.helper.Checksum#crc16(java.lang.String,java.nio.ByteBuffer)
CALLER: org.traccar.protocol.WialonProtocolDecoder#decodePosition(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setDateReverse(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.helper.Parser#nextCoordinate()
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.helper.Parser#hasNext()
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
CALLER: org.traccar.protocol.HaicomProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.database.DataManager#getGeofencePermissions()
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#executeQuery(java.lang.Class)
CALLER: org.traccar.protocol.L100ProtocolDecoder#<init>(org.traccar.protocol.L100Protocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.TopflytechProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.Jt600ProtocolDecoder#decodeBinary(org.jboss.netty.buffer.ChannelBuffer,org.jboss.netty.channel.Channel,java.net.SocketAddress)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: static org.traccar.helper.BcdUtil#readInteger(org.jboss.netty.buffer.ChannelBuffer,int)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.DateBuilder#setDay(int)
	CALLEE: org.traccar.helper.DateBuilder#setMonth(int)
	CALLEE: org.traccar.helper.DateBuilder#setYear(int)
	CALLEE: org.traccar.helper.DateBuilder#setHour(int)
	CALLEE: org.traccar.helper.DateBuilder#setMinute(int)
	CALLEE: org.traccar.helper.DateBuilder#setSecond(int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: static org.traccar.protocol.Jt600ProtocolDecoder#convertCoordinate(int)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,long)
CALLER: org.traccar.database.DataManager#initDatabase()
	CALLEE: org.traccar.Config#getString(java.lang.String)
	CALLEE: org.traccar.Config#getString(java.lang.String,java.lang.String)
	CALLEE: org.traccar.Config#getInteger(java.lang.String)
CALLER: org.traccar.protocol.CalAmpProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.events.GeofenceEventHandler#analyzePosition(org.traccar.model.Position)
	CALLEE: static org.traccar.Context#getIdentityManager()
	CALLEE: org.traccar.model.Message#getDeviceId()
	CALLEE: org.traccar.database.DeviceManager#getDeviceById(long)
	CALLEE: org.traccar.database.DeviceManager#isLatestPosition(org.traccar.model.Position)
	CALLEE: org.traccar.model.Position#getValid()
	CALLEE: org.traccar.database.GeofenceManager#getCurrentDeviceGeofences(org.traccar.model.Position)
	CALLEE: org.traccar.model.Device#getGeofenceIds()
	CALLEE: org.traccar.model.Device#setGeofenceIds(java.util.List)
	CALLEE: org.traccar.model.Extensible#getId()
	CALLEE: org.traccar.model.Event#<init>(java.lang.String,long,long)
	CALLEE: org.traccar.model.Event#setGeofenceId(long)
CALLER: org.traccar.database.DataManager#addNotification(org.traccar.model.Notification)
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String,boolean)
	CALLEE: org.traccar.database.QueryBuilder#setObject(java.lang.Object)
	CALLEE: org.traccar.database.QueryBuilder#executeUpdate()
	CALLEE: org.traccar.model.Extensible#setId(long)
CALLER: org.traccar.protocol.RuptelaProtocolEncoder#encodeCommand(org.traccar.model.Command)
	CALLEE: org.traccar.model.Message#getType()
	CALLEE: org.traccar.model.Extensible#getAttributes()
	CALLEE: org.traccar.protocol.RuptelaProtocolEncoder#encodeContent(java.lang.String)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: org.traccar.protocol.AdmProtocolDecoder#<init>(org.traccar.protocol.AdmProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.database.DeviceManager#getDevices(long)
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.database.PermissionsManager#getDevicePermissions(long)
CALLER: org.traccar.protocol.ArknavProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.OsmAndProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.protocol.OsmAndProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,org.jboss.netty.handler.codec.http.HttpResponseStatus)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: org.traccar.model.Position#getFixTime()
CALLER: org.traccar.api.resource.PositionResource#get(long,java.lang.String,java.lang.String)
	CALLEE: static org.traccar.Context#getDeviceManager()
	CALLEE: org.traccar.api.BaseResource#getUserId()
	CALLEE: org.traccar.database.DeviceManager#getInitialState(long)
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.database.PermissionsManager#checkDevice(long,long)
	CALLEE: static org.traccar.Context#getDataManager()
	CALLEE: static org.traccar.web.JsonConverter#parseDate(java.lang.String)
	CALLEE: org.traccar.database.DataManager#getPositions(long,java.util.Date,java.util.Date)
CALLER: org.traccar.LocationProviderHandler#handleUpstream(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.ChannelEvent)
	CALLEE: org.traccar.model.Position#getOutdated()
	CALLEE: org.traccar.model.Position#getValid()
	CALLEE: org.traccar.model.Extensible#getAttributes()
	CALLEE: org.traccar.location.BaseLocationProvider#getLocation(java.util.Map,org.traccar.location.LocationProvider.LocationProviderCallback)
CALLER: org.traccar.geofence.GeofenceCircle#<init>(java.lang.String)
	CALLEE: org.traccar.geofence.GeofenceCircle#fromWkt(java.lang.String)
CALLER: org.traccar.protocol.Gps103ProtocolEncoder#encodeCommand(org.traccar.model.Command)
	CALLEE: org.traccar.model.Message#getType()
	CALLEE: org.traccar.StringProtocolEncoder#formatCommand(org.traccar.model.Command,java.lang.String,java.lang.String[])
	CALLEE: org.traccar.StringProtocolEncoder#formatCommand(org.traccar.model.Command,java.lang.String,org.traccar.StringProtocolEncoder.ValueFormatter,java.lang.String[])
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: org.traccar.protocol.Gl200ProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.Gl200ProtocolDecoder#decodeHbd(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String)
	CALLEE: org.traccar.protocol.Gl200ProtocolDecoder#decodeInf(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String)
	CALLEE: org.traccar.protocol.Gl200ProtocolDecoder#decodeObd(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String)
	CALLEE: org.traccar.protocol.Gl200ProtocolDecoder#decodeFri(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String)
	CALLEE: org.traccar.protocol.Gl200ProtocolDecoder#decodeIgn(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String)
	CALLEE: org.traccar.protocol.Gl200ProtocolDecoder#decodeIda(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String)
	CALLEE: org.traccar.protocol.Gl200ProtocolDecoder#decodeOther(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String,java.lang.String)
	CALLEE: org.traccar.protocol.Gl200ProtocolDecoder#decodeBasic(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
CALLER: static org.traccar.protocol.NavisProtocolDecoder#checksum(org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.database.DeviceManager#lookupServerDouble(long,java.lang.String,double)
	CALLEE: org.traccar.database.DeviceManager#lookupAttribute(long,java.lang.String,boolean)
CALLER: org.traccar.protocol.T800xProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.protocol.T800xProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,int,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: static org.traccar.helper.BitUtil#check(long,int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,boolean)
	CALLEE: org.traccar.protocol.T800xProtocolDecoder#decodeAlarm(short)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,long)
	CALLEE: static org.traccar.helper.BcdUtil#readInteger(org.jboss.netty.buffer.ChannelBuffer,int)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.DateBuilder#setYear(int)
	CALLEE: org.traccar.helper.DateBuilder#setMonth(int)
	CALLEE: org.traccar.helper.DateBuilder#setDay(int)
	CALLEE: org.traccar.helper.DateBuilder#setHour(int)
	CALLEE: org.traccar.helper.DateBuilder#setMinute(int)
	CALLEE: org.traccar.helper.DateBuilder#setSecond(int)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: static org.traccar.protocol.T800xProtocolDecoder#readSwappedFloat(org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.BaseProtocolDecoder#getLastLocation(org.traccar.model.Position,java.util.Date)
CALLER: org.traccar.database.ActiveDevice#write(java.lang.Object)
	CALLEE: org.traccar.database.ActiveDevice#getChannel()
CALLER: org.traccar.protocol.PathAwayProtocolDecoder#<init>(org.traccar.protocol.PathAwayProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.H02ProtocolDecoder#<init>(org.traccar.protocol.H02Protocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.database.DataManager#removeGroup(long)
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#setLong(java.lang.String,long)
	CALLEE: org.traccar.database.QueryBuilder#executeUpdate()
CALLER: org.traccar.protocol.NvsFrameDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.helper.PatternBuilder#optional()
	CALLEE: org.traccar.helper.PatternBuilder#optional(int)
CALLER: org.traccar.protocol.SuntechProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: static org.traccar.helper.ObdDecoder#decodeData(int,int,boolean)
	CALLEE: static org.traccar.helper.ObdDecoder#createEntry(java.lang.String,java.lang.Object)
CALLER: org.traccar.protocol.CarTrackProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.MtxProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.protocol.Avl301Protocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.WialonProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.protocol.WialonProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,java.lang.String,java.lang.Integer)
	CALLEE: org.traccar.protocol.WialonProtocolDecoder#decodePosition(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.BaseProtocolDecoder#getLastLocation(org.traccar.model.Position,java.util.Date)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
CALLER: org.traccar.protocol.Pt3000ProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.Parser#nextCoordinate()
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.helper.DateBuilder#setDateReverse(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
CALLER: org.traccar.protocol.UlbotechProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,long)
	CALLEE: static org.traccar.helper.BitUtil#check(long,int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,boolean)
	CALLEE: org.traccar.protocol.UlbotechProtocolDecoder#decodeAlarm(int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: static org.traccar.helper.BitUtil#from(int,int)
	CALLEE: static org.traccar.helper.BitUtil#to(int,int)
	CALLEE: org.traccar.protocol.UlbotechProtocolDecoder#decodeObd(org.traccar.model.Position,org.jboss.netty.buffer.ChannelBuffer,short)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
	CALLEE: org.traccar.protocol.UlbotechProtocolDecoder#decodeDriverBehavior(org.traccar.model.Position,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.protocol.UlbotechProtocolDecoder#decodeJ1708(org.traccar.model.Position,org.jboss.netty.buffer.ChannelBuffer,short)
	CALLEE: org.traccar.BaseProtocolDecoder#getLastLocation(org.traccar.model.Position,java.util.Date)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
CALLER: org.traccar.protocol.XexunFrameDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.helper.StringFinder#<init>(java.lang.String)
CALLER: org.traccar.protocol.GranitProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.helper.StringFinder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.BaseProtocolDecoder#getLastLocation(org.traccar.model.Position,java.util.Date)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: static org.traccar.protocol.GranitProtocolDecoder#sendResponseCurrent(org.jboss.netty.channel.Channel,int,long)
	CALLEE: static org.traccar.protocol.GranitProtocolDecoder#decodeStructure(org.jboss.netty.buffer.ChannelBuffer,org.traccar.model.Position)
	CALLEE: static org.traccar.protocol.GranitProtocolDecoder#sendResponseArchive(org.jboss.netty.channel.Channel,int,int)
CALLER: org.traccar.api.resource.GeofenceResource#get(boolean,long,long,long)
	CALLEE: static org.traccar.Context#getGeofenceManager()
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.api.BaseResource#getUserId()
	CALLEE: org.traccar.database.PermissionsManager#checkAdmin(long)
	CALLEE: org.traccar.database.GeofenceManager#getAllGeofencesIds()
	CALLEE: org.traccar.database.PermissionsManager#checkUser(long,long)
	CALLEE: org.traccar.database.GeofenceManager#getUserGeofencesIds(long)
	CALLEE: org.traccar.database.PermissionsManager#checkGroup(long,long)
	CALLEE: org.traccar.database.GeofenceManager#getGroupGeofencesIds(long)
	CALLEE: org.traccar.database.PermissionsManager#checkDevice(long,long)
	CALLEE: org.traccar.database.GeofenceManager#getDeviceGeofencesIds(long)
	CALLEE: org.traccar.database.GeofenceManager#getGeofences(java.util.Set)
CALLER: org.traccar.geocode.NominatimReverseGeocoder#parseAddress(javax.json.JsonObject)
	CALLEE: org.traccar.geocode.Address#setHouse(java.lang.String)
	CALLEE: org.traccar.geocode.Address#setStreet(java.lang.String)
	CALLEE: org.traccar.geocode.Address#setSuburb(java.lang.String)
	CALLEE: org.traccar.geocode.Address#setSettlement(java.lang.String)
	CALLEE: org.traccar.geocode.Address#setDistrict(java.lang.String)
	CALLEE: org.traccar.geocode.Address#setState(java.lang.String)
	CALLEE: org.traccar.geocode.Address#setCountry(java.lang.String)
	CALLEE: org.traccar.geocode.Address#setPostcode(java.lang.String)
CALLER: org.traccar.protocol.H02ProtocolEncoder#encodeCommand(org.traccar.model.Command,org.joda.time.DateTime)
	CALLEE: org.traccar.model.Message#getDeviceId()
	CALLEE: org.traccar.BaseProtocolEncoder#getUniqueId(long)
	CALLEE: org.traccar.model.Message#getType()
	CALLEE: org.traccar.protocol.H02ProtocolEncoder#formatCommand(org.joda.time.DateTime,java.lang.String,java.lang.String,java.lang.String[])
	CALLEE: org.traccar.model.Extensible#getAttributes()
	CALLEE: org.traccar.helper.PatternBuilder#toString()
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: org.traccar.protocol.SupermateProtocolDecoder#<init>(org.traccar.protocol.SupermateProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: static org.traccar.reports.ReportUtils#calculateDistance(org.traccar.model.Position,org.traccar.model.Position)
	CALLEE: static org.traccar.reports.ReportUtils#calculateDistance(org.traccar.model.Position,org.traccar.model.Position,boolean)
CALLER: org.traccar.protocol.GpsmtaProtocolDecoder#<init>(org.traccar.protocol.GpsmtaProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.database.DataManager#unlinkGroup(long,long)
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#setLong(java.lang.String,long)
	CALLEE: org.traccar.database.QueryBuilder#executeUpdate()
CALLER: org.traccar.database.DataManager#unlinkDevice(long,long)
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#setLong(java.lang.String,long)
	CALLEE: org.traccar.database.QueryBuilder#executeUpdate()
CALLER: org.traccar.protocol.MtxProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setDate(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
CALLER: org.traccar.DistanceHandler#calculateDistance(org.traccar.model.Position)
	CALLEE: org.traccar.model.Message#getDeviceId()
	CALLEE: org.traccar.DistanceHandler#getLastPosition(long)
	CALLEE: org.traccar.model.Extensible#getAttributes()
	CALLEE: org.traccar.model.Position#getLatitude()
	CALLEE: org.traccar.model.Position#getLongitude()
	CALLEE: static org.traccar.helper.DistanceCalculator#distance(double,double,double,double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
CALLER: org.traccar.protocol.Gl200ProtocolDecoder#decodeObd(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: org.traccar.protocol.Gl200ProtocolDecoder#decodeLocation(org.traccar.model.Position,org.traccar.helper.Parser)
	CALLEE: org.traccar.helper.Parser#hasNext(int)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setDate(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.model.Position#getOutdated()
	CALLEE: org.traccar.model.Position#getFixTime()
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
CALLER: org.traccar.protocol.AuroProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.database.QueryBuilder#executeQuerySingle(java.lang.Class)
	CALLEE: org.traccar.database.QueryBuilder#executeQuery(java.lang.Class)
CALLER: org.traccar.database.PermissionsManager#refreshPermissions()
	CALLEE: static org.traccar.Context#getDeviceManager()
	CALLEE: org.traccar.database.DeviceManager#getAllGroups()
	CALLEE: org.traccar.database.DeviceManager#getAllDevices()
	CALLEE: org.traccar.database.GroupTree#<init>(java.util.Collection,java.util.Collection)
	CALLEE: org.traccar.database.DataManager#getGroupPermissions()
	CALLEE: org.traccar.model.GroupPermission#getUserId()
	CALLEE: org.traccar.database.PermissionsManager#getGroupPermissions(long)
	CALLEE: org.traccar.database.PermissionsManager#getDevicePermissions(long)
	CALLEE: org.traccar.model.GroupPermission#getGroupId()
	CALLEE: org.traccar.database.GroupTree#getGroups(long)
	CALLEE: org.traccar.model.Extensible#getId()
	CALLEE: org.traccar.database.GroupTree#getDevices(long)
	CALLEE: org.traccar.database.DataManager#getDevicePermissions()
	CALLEE: org.traccar.model.DevicePermission#getUserId()
	CALLEE: org.traccar.model.DevicePermission#getDeviceId()
	CALLEE: org.traccar.database.PermissionsManager#getGroupDevices(long)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
	CALLEE: org.traccar.database.PermissionsManager#getDeviceUsers(long)
CALLER: org.traccar.protocol.UlbotechProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: static org.traccar.model.MiscFormatter#toJsonString(java.util.Map)
	CALLEE: static org.traccar.model.MiscFormatter#toJson(java.util.Map)
	CALLEE: org.traccar.helper.PatternBuilder#toString()
CALLER: org.traccar.protocol.CguardProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.protocol.Gl200ProtocolDecoder#decodeOther(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String,java.lang.String)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.protocol.Gl200ProtocolDecoder#decodeLocation(org.traccar.model.Position,org.traccar.helper.Parser)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
	CALLEE: org.traccar.helper.Parser#hasNext(int)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.DateBuilder#setDate(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.model.Position#getOutdated()
	CALLEE: org.traccar.model.Position#getFixTime()
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: static org.traccar.Context#getConfig()
	CALLEE: org.traccar.Config#getBoolean(java.lang.String)
CALLER: org.traccar.database.DataManager#getGroupGeofences()
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#executeQuery(java.lang.Class)
CALLER: org.traccar.protocol.AplicomFrameDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.events.OverspeedEventHandler#<init>()
	CALLEE: static org.traccar.Context#getConfig()
	CALLEE: org.traccar.Config#getBoolean(java.lang.String)
CALLER: org.traccar.protocol.TramigoFrameDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.api.resource.ReportResource#getSummaryCsv(java.util.List,java.util.List,java.lang.String,java.lang.String)
	CALLEE: org.traccar.api.BaseResource#getUserId()
	CALLEE: static org.traccar.web.JsonConverter#parseDate(java.lang.String)
	CALLEE: static org.traccar.reports.Summary#getCsv(long,java.util.Collection,java.util.Collection,java.util.Date,java.util.Date)
CALLER: org.traccar.protocol.CarscopProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.Parser#nextCoordinate()
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.helper.DateBuilder#setDate(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
CALLER: org.traccar.protocol.WondexProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocol#setSupportedCommands(java.lang.String[])
CALLER: org.traccar.database.AliasesManager#addAttributeAlias(org.traccar.model.AttributeAlias)
	CALLEE: org.traccar.database.DataManager#addAttributeAlias(org.traccar.model.AttributeAlias)
	CALLEE: org.traccar.model.AttributeAlias#getId()
	CALLEE: org.traccar.model.AttributeAlias#getDeviceId()
	CALLEE: org.traccar.database.AliasesManager#getAttributeAliases(long)
CALLER: org.traccar.Config#getString(java.lang.String)
CALLER: org.traccar.helper.DateBuilder#<init>(java.util.TimeZone)
	CALLEE: org.traccar.helper.DateBuilder#<init>(java.util.Date,java.util.TimeZone)
CALLER: org.traccar.protocol.H02ProtocolDecoder#decodeBinary(org.jboss.netty.buffer.ChannelBuffer,org.jboss.netty.channel.Channel,java.net.SocketAddress)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: static org.traccar.helper.BcdUtil#readInteger(org.jboss.netty.buffer.ChannelBuffer,int)
	CALLEE: org.traccar.helper.DateBuilder#setHour(int)
	CALLEE: org.traccar.helper.DateBuilder#setMinute(int)
	CALLEE: org.traccar.helper.DateBuilder#setSecond(int)
	CALLEE: org.traccar.helper.DateBuilder#setDay(int)
	CALLEE: org.traccar.helper.DateBuilder#setMonth(int)
	CALLEE: org.traccar.helper.DateBuilder#setYear(int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: static org.traccar.protocol.H02ProtocolDecoder#readCoordinate(org.jboss.netty.buffer.ChannelBuffer,boolean)
	CALLEE: org.traccar.protocol.H02ProtocolDecoder#decodeBattery(int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.protocol.H02ProtocolDecoder#processStatus(org.traccar.model.Position,long)
CALLER: static org.traccar.protocol.OrionProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.helper.Log.NettyInternalLogger#error(java.lang.String,java.lang.Throwable)
	CALLEE: static org.traccar.helper.Log#getLogger()
CALLER: org.traccar.protocol.MegastekProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.BaseProtocolDecoder#findDeviceId(java.net.SocketAddress,java.lang.String[])
	CALLEE: static org.traccar.Context#getIdentityManager()
	CALLEE: org.traccar.database.DeviceManager#getDeviceByUniqueId(java.lang.String)
	CALLEE: org.traccar.model.Extensible#getId()
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.String)
CALLER: org.traccar.BaseProtocol#sendCommand(org.traccar.database.ActiveDevice,org.traccar.model.Command)
	CALLEE: org.traccar.model.Message#getType()
	CALLEE: org.traccar.database.ActiveDevice#write(java.lang.Object)
	CALLEE: org.traccar.model.Extensible#getAttributes()
	CALLEE: org.traccar.database.ActiveDevice#getChannel()
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.BlackKiteProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.model.Position#getFixTime()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: static org.traccar.helper.BitUtil#check(long,int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,boolean)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
	CALLEE: org.traccar.protocol.BlackKiteProtocolDecoder#sendReply(org.jboss.netty.channel.Channel,int)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
CALLER: org.traccar.protocol.BlackKiteProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
	CALLEE: org.traccar.TrackerServer#setEndianness(java.nio.ByteOrder)
CALLER: org.traccar.protocol.Gl100ProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.DateBuilder#setDate(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
CALLER: org.traccar.database.PermissionsManager#refreshUsers()
	CALLEE: org.traccar.database.DataManager#getServer()
	CALLEE: org.traccar.database.DataManager#getUsers()
	CALLEE: org.traccar.model.Extensible#getId()
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: org.traccar.protocol.ObdDongleProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.protocol.Gt06ProtocolDecoder#decodeGps(org.traccar.model.Position,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.helper.DateBuilder#<init>(java.util.TimeZone)
	CALLEE: org.traccar.helper.DateBuilder#setDate(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: static org.traccar.helper.BitUtil#to(int,int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: static org.traccar.helper.BitUtil#from(int,int)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: static org.traccar.helper.BitUtil#check(long,int)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,boolean)
CALLER: org.traccar.protocol.Gt02ProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.BaseProtocolDecoder#getLastLocation(org.traccar.model.Position,java.util.Date)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.DateBuilder#setDate(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: static org.traccar.helper.BitUtil#check(long,int)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
CALLER: org.traccar.database.GeofenceManager#getGeofences(java.util.Set)
	CALLEE: org.traccar.database.GeofenceManager#getGeofence(long)
CALLER: org.traccar.api.resource.GeofencePermissionResource#remove(org.traccar.model.GeofencePermission)
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.api.BaseResource#getUserId()
	CALLEE: org.traccar.database.PermissionsManager#checkReadonly(long)
	CALLEE: org.traccar.model.GeofencePermission#getUserId()
	CALLEE: org.traccar.database.PermissionsManager#checkUser(long,long)
	CALLEE: org.traccar.model.GeofencePermission#getGeofenceId()
	CALLEE: org.traccar.database.PermissionsManager#checkGeofence(long,long)
	CALLEE: static org.traccar.Context#getDataManager()
	CALLEE: org.traccar.database.DataManager#unlinkGeofence(long,long)
	CALLEE: static org.traccar.Context#getGeofenceManager()
	CALLEE: org.traccar.database.GeofenceManager#refreshUserGeofences()
CALLER: org.traccar.notification.EventForwarder#<init>()
	CALLEE: static org.traccar.Context#getConfig()
	CALLEE: org.traccar.Config#getString(java.lang.String,java.lang.String)
CALLER: static org.traccar.protocol.GranitProtocolDecoder#sendResponseCurrent(org.jboss.netty.channel.Channel,int,long)
	CALLEE: static org.traccar.protocol.GranitProtocolDecoder#appendChecksum(org.jboss.netty.buffer.ChannelBuffer,int)
CALLER: org.traccar.protocol.Tlt2hProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.Parser#nextCoordinate()
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.helper.DateBuilder#setDateReverse(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
CALLER: org.traccar.TrackerServer#getPipelineFactory()
CALLER: org.traccar.protocol.MeiligaoProtocolDecoder#getServer(org.jboss.netty.channel.Channel)
	CALLEE: static org.traccar.Context#getConfig()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.Config#getString(java.lang.String)
CALLER: org.traccar.database.PermissionsManager#getUser(long)
CALLER: org.traccar.model.Event#<init>()
CALLER: org.traccar.protocol.JpKorjarProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.FlextrackProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.database.DataManager#updateLatestPosition(org.traccar.model.Position)
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#setDate(java.lang.String,java.util.Date)
	CALLEE: org.traccar.database.QueryBuilder#setObject(java.lang.Object)
	CALLEE: org.traccar.database.QueryBuilder#executeUpdate()
CALLER: org.traccar.protocol.TramigoProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: static org.traccar.protocol.Gt06ProtocolDecoder#isSupported(int)
	CALLEE: static org.traccar.protocol.Gt06ProtocolDecoder#hasGps(int)
	CALLEE: static org.traccar.protocol.Gt06ProtocolDecoder#hasLbs(int)
	CALLEE: static org.traccar.protocol.Gt06ProtocolDecoder#hasStatus(int)
CALLER: org.traccar.database.PermissionsManager#getGroupDevices(long)
CALLER: org.traccar.api.resource.SessionResource#add(java.lang.String,java.lang.String)
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.database.PermissionsManager#login(java.lang.String,java.lang.String)
	CALLEE: org.traccar.model.Extensible#getId()
CALLER: static org.traccar.model.MiscFormatter#toXmlString(java.util.Map)
	CALLEE: static org.traccar.model.MiscFormatter#format(java.lang.Object)
CALLER: org.traccar.protocol.CastelProtocolDecoder#<init>(org.traccar.protocol.CastelProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.XexunProtocolDecoder#<init>(org.traccar.protocol.XexunProtocol,boolean)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.ProgressProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.api.resource.DevicePermissionResource#add(org.traccar.model.DevicePermission)
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.api.BaseResource#getUserId()
	CALLEE: org.traccar.database.PermissionsManager#checkAdmin(long)
	CALLEE: static org.traccar.Context#getDataManager()
	CALLEE: org.traccar.model.DevicePermission#getUserId()
	CALLEE: org.traccar.model.DevicePermission#getDeviceId()
	CALLEE: org.traccar.database.DataManager#linkDevice(long,long)
	CALLEE: org.traccar.database.PermissionsManager#refreshPermissions()
	CALLEE: static org.traccar.Context#getGeofenceManager()
	CALLEE: org.traccar.database.GeofenceManager#refresh()
CALLER: org.traccar.database.DataManager#getUser(long)
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#setLong(java.lang.String,long)
	CALLEE: org.traccar.database.QueryBuilder#executeQuerySingle(java.lang.Class)
CALLER: org.traccar.database.DataManager#<init>(org.traccar.Config)
	CALLEE: org.traccar.database.DataManager#initDatabase()
	CALLEE: org.traccar.database.DataManager#initDatabaseSchema()
CALLER: org.traccar.protocol.TzoneProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.api.resource.ReportResource#getTripsJson(java.util.List,java.util.List,java.lang.String,java.lang.String)
	CALLEE: org.traccar.api.BaseResource#getUserId()
	CALLEE: static org.traccar.web.JsonConverter#parseDate(java.lang.String)
	CALLEE: static org.traccar.reports.Trips#getJson(long,java.util.Collection,java.util.Collection,java.util.Date,java.util.Date)
CALLER: org.traccar.protocol.Gt06ProtocolDecoder#<init>(org.traccar.protocol.Gt06Protocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
	CALLEE: static org.traccar.Context#getConfig()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.Config#hasKey(java.lang.String)
	CALLEE: org.traccar.Config#getInteger(java.lang.String)
CALLER: org.traccar.protocol.TaipProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.api.resource.EventResource#get(long,java.lang.String,int)
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.api.BaseResource#getUserId()
	CALLEE: org.traccar.database.PermissionsManager#checkDevice(long,long)
	CALLEE: static org.traccar.Context#getDataManager()
	CALLEE: org.traccar.database.DataManager#getLastEvents(long,java.lang.String,int)
CALLER: org.traccar.geocode.BingMapsReverseGeocoder#<init>(java.lang.String,java.lang.String,int)
	CALLEE: org.traccar.geocode.JsonReverseGeocoder#<init>(java.lang.String,int)
CALLER: org.traccar.protocol.GpsGateProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.protocol.GpsGateProtocolDecoder#send(org.jboss.netty.channel.Channel,java.lang.String)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int,int)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.Parser#nextCoordinate()
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.helper.DateBuilder#setDateReverse(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setAltitude(double)
CALLER: org.traccar.database.DataManager#getDevicePermissions()
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#executeQuery(java.lang.Class)
CALLER: org.traccar.protocol.Stl060FrameDecoder#<init>(int)
	CALLEE: org.traccar.CharacterDelimiterFrameDecoder#<init>(int,char)
CALLER: org.traccar.database.QueryBuilder#setObject(java.lang.Object)
	CALLEE: org.traccar.database.GroupTree.TreeNode#equals(java.lang.Object)
	CALLEE: org.traccar.database.QueryBuilder#setBoolean(java.lang.String,boolean)
	CALLEE: org.traccar.database.QueryBuilder#setInteger(java.lang.String,int)
	CALLEE: org.traccar.database.QueryBuilder#setLong(java.lang.String,long,boolean)
	CALLEE: org.traccar.database.QueryBuilder#setDouble(java.lang.String,double)
	CALLEE: org.traccar.database.QueryBuilder#setString(java.lang.String,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#setDate(java.lang.String,java.util.Date)
	CALLEE: static org.traccar.Context#getConfig()
	CALLEE: org.traccar.Config#getBoolean(java.lang.String)
	CALLEE: static org.traccar.model.MiscFormatter#toXmlString(java.util.Map)
	CALLEE: static org.traccar.model.MiscFormatter#toJsonString(java.util.Map)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: org.traccar.protocol.RaveonProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.protocol.Tk102ProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.Parser#nextCoordinate()
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.helper.DateBuilder#setDateReverse(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
CALLER: org.traccar.database.DeviceManager#updateDeviceCache(boolean)
	CALLEE: static org.traccar.Context#getGeofenceManager()
	CALLEE: org.traccar.database.DataManager#getAllDevices()
	CALLEE: org.traccar.model.Extensible#getId()
	CALLEE: org.traccar.model.Device#getUniqueId()
	CALLEE: org.traccar.model.Device#getName()
	CALLEE: org.traccar.model.Device#setName(java.lang.String)
	CALLEE: org.traccar.model.Device#getGroupId()
	CALLEE: org.traccar.model.Device#setGroupId(long)
	CALLEE: org.traccar.model.Extensible#getAttributes()
	CALLEE: org.traccar.model.Extensible#setAttributes(java.util.Map)
	CALLEE: org.traccar.model.Device#setUniqueId(java.lang.String)
	CALLEE: org.traccar.database.DeviceManager#getLastPosition(long)
	CALLEE: org.traccar.database.GeofenceManager#getCurrentDeviceGeofences(org.traccar.model.Position)
	CALLEE: org.traccar.model.Device#setGeofenceIds(java.util.List)
	CALLEE: org.traccar.model.Device#setStatus(java.lang.String)
CALLER: org.traccar.database.DataManager#updateDeviceStatus(org.traccar.model.Device)
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#setObject(java.lang.Object)
	CALLEE: org.traccar.database.QueryBuilder#executeUpdate()
CALLER: org.traccar.ServerManager#initProtocolServer(org.traccar.Protocol)
	CALLEE: static org.traccar.Context#getConfig()
	CALLEE: org.traccar.BaseProtocol#getName()
	CALLEE: org.traccar.Config#hasKey(java.lang.String)
	CALLEE: org.traccar.protocol.HuabaoProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.OrionProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.JpKorjarProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.GoSafeProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.BoxProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.Mta6Protocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.H02Protocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.ArknavX8Protocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.TzoneProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.CguardProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.Tr20Protocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.CellocatorProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.AdmProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.FlextrackProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.HunterProProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.HuaShengProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.LaipacProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.TotemProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.MegastekProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.NavisProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.Avl301Protocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.Tk102Protocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.SkypatrolProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.Jt600Protocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.Stl060Protocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.AutoGradeProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.IntellitracProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.HaicomProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.ThinkRaceProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.Gt06Protocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.EnforaProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.ObdDongleProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.TytanProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.DishaProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.VisiontekProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.Tlt2hProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.OigoProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.Tk103Protocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.Pt3000Protocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.GatorProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.UproProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.SupermateProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.T55Protocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.GalileoProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.SuntechProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.TeltonikaProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.CarTrackProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.GpsmtaProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.OsmAndProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.FreedomProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.SanavProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.WatchProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.TelicProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.ProgressProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.HomtecsProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.BlackKiteProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.GranitProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.TrvProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.XirgoProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.IdplProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.MeitrackProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.TrackboxProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.RaveonProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.EelinkProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.PathAwayProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.Tt8850Protocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.MxtProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.YwtProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.AstraProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.Gl200Protocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.WialonProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.AtrackProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.GnxProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.CradlepointProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.KenjiProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.GpsMarkerProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.T800xProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.KhdProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.AutoFonProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.XexunProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.GlobalSatProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.NvsProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.RuptelaProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.NoranProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.L100Protocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.Ardi01Protocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.GotopProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.ArnaviProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.Gl100Protocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.CastelProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.NavigilProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.BceProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.EasyTrackProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.CityeasyProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.CalAmpProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.ArknavProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.GpsGateProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.Xt013Protocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.Tr900Protocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.PiligrimProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.MeiligaoProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.FoxProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.AppelloProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.TopflytechProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.MiniFinderProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.RitiProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.AquilaProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.Gps103Protocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.ManPowerProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.AuroProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.TramigoProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.AplicomProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.Gt02Protocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.TaipProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.V680Protocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.ApelProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.WondexProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.CarscopProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.UlbotechProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.Pt502Protocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.M2mProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.CarcellProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.protocol.MtxProtocol#initTrackerServers(java.util.List)
CALLER: org.traccar.protocol.CradlepointProtocolDecoder#<init>(org.traccar.protocol.CradlepointProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.Xt013ProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setDate(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
CALLER: org.traccar.database.PermissionsManager#updateServer(org.traccar.model.Server)
	CALLEE: org.traccar.database.DataManager#updateServer(org.traccar.model.Server)
CALLER: org.traccar.protocol.AstraProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.Pt502ProtocolEncoder#encodeCommand(org.traccar.model.Command)
	CALLEE: org.traccar.model.Message#getType()
	CALLEE: org.traccar.StringProtocolEncoder#formatCommand(org.traccar.model.Command,java.lang.String,java.lang.String[])
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: org.traccar.protocol.AdmProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.protocol.H02FrameDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.protocol.Mta6ProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.protocol.Mta6ProtocolDecoder#sendContinue(org.jboss.netty.channel.Channel)
	CALLEE: org.traccar.protocol.Mta6ProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,short,short)
	CALLEE: org.traccar.protocol.Mta6ProtocolDecoder#parseFormatA1(org.traccar.DeviceSession,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.protocol.Mta6ProtocolDecoder#parseFormatA(org.traccar.DeviceSession,org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.geofence.GeofencePolygon#<init>()
CALLER: org.traccar.database.DataManager#linkGeofence(long,long)
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#setLong(java.lang.String,long)
	CALLEE: org.traccar.database.QueryBuilder#executeUpdate()
CALLER: static org.traccar.model.MiscFormatter#format(java.lang.Object)
	CALLEE: org.traccar.helper.PatternBuilder#toString()
CALLER: org.traccar.protocol.NoranProtocolEncoder#encodeContent(java.lang.String)
CALLER: org.traccar.protocol.BoxProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: static org.traccar.helper.BitUtil#to(int,int)
	CALLEE: static org.traccar.helper.BitUtil#between(int,int,int)
CALLER: org.traccar.BaseProtocolDecoder#getLastLocation(org.traccar.model.Position,java.util.Date)
	CALLEE: org.traccar.model.Message#getDeviceId()
	CALLEE: org.traccar.model.Position#setOutdated(boolean)
	CALLEE: static org.traccar.Context#getIdentityManager()
	CALLEE: org.traccar.database.DeviceManager#getLastPosition(long)
	CALLEE: org.traccar.model.Position#getFixTime()
	CALLEE: org.traccar.model.Position#setFixTime(java.util.Date)
	CALLEE: org.traccar.model.Position#getValid()
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#getLatitude()
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#getLongitude()
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#getAltitude()
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Position#getSpeed()
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#getCourse()
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setDeviceTime(java.util.Date)
CALLER: org.traccar.protocol.T800xProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,int,org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.protocol.RitiProtocolDecoder#<init>(org.traccar.protocol.RitiProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.helper.PatternBuilder#groupEnd()
	CALLEE: org.traccar.helper.PatternBuilder#expression(java.lang.String)
CALLER: org.traccar.protocol.MeitrackProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocol#setSupportedCommands(java.lang.String[])
CALLER: org.traccar.database.NotificationManager#<init>(org.traccar.database.DataManager)
	CALLEE: org.traccar.database.NotificationManager#refresh()
CALLER: org.traccar.BasePipelineFactory.StandardLoggingHandler#log(org.jboss.netty.channel.ChannelEvent)
	CALLEE: static org.traccar.helper.Log#debug(java.lang.String)
CALLER: org.traccar.protocol.ThinkRaceProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.FilterHandler#filterDistance(org.traccar.model.Position)
	CALLEE: org.traccar.model.Message#getDeviceId()
	CALLEE: org.traccar.FilterHandler#getLastPosition(long)
	CALLEE: org.traccar.model.Position#getLatitude()
	CALLEE: org.traccar.model.Position#getLongitude()
	CALLEE: static org.traccar.helper.DistanceCalculator#distance(double,double,double,double)
CALLER: org.traccar.helper.PatternBuilder#groupBegin()
	CALLEE: org.traccar.helper.PatternBuilder#expression(java.lang.String)
CALLER: org.traccar.database.DataManager#updateServer(org.traccar.model.Server)
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#setObject(java.lang.Object)
	CALLEE: org.traccar.database.QueryBuilder#executeUpdate()
CALLER: org.traccar.protocol.GpsMarkerProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.protocol.TotemProtocolEncoder#encodeCommand(org.traccar.model.Command)
	CALLEE: org.traccar.BaseProtocolEncoder#initDevicePassword(org.traccar.model.Command,java.lang.String)
	CALLEE: org.traccar.model.Message#getType()
	CALLEE: org.traccar.StringProtocolEncoder#formatCommand(org.traccar.model.Command,java.lang.String,java.lang.String[])
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: org.traccar.protocol.AutoFonFrameDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.protocol.CastelProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.FilterHandler#filterApproximate(org.traccar.model.Position)
	CALLEE: org.traccar.model.Extensible#getAttributes()
CALLER: org.traccar.protocol.FlextrackProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.protocol.FlextrackProtocolDecoder#sendAcknowledgement(org.jboss.netty.channel.Channel,java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setDate(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.Parser#nextCoordinate(org.traccar.helper.Parser.CoordinateFormat)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.helper.Parser#nextInt(int)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
CALLER: org.traccar.database.DataManager#addDevice(org.traccar.model.Device)
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String,boolean)
	CALLEE: org.traccar.database.QueryBuilder#setObject(java.lang.Object)
	CALLEE: org.traccar.database.QueryBuilder#executeUpdate()
	CALLEE: org.traccar.model.Extensible#setId(long)
CALLER: org.traccar.protocol.V680ProtocolDecoder#<init>(org.traccar.protocol.V680Protocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.database.PermissionsManager#checkDevice(long,long)
	CALLEE: org.traccar.database.PermissionsManager#getDevicePermissions(long)
CALLER: org.traccar.protocol.AplicomProtocolDecoder#<init>(org.traccar.protocol.AplicomProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.FilterHandler#filterLimit(org.traccar.model.Position)
	CALLEE: org.traccar.model.Message#getDeviceId()
	CALLEE: org.traccar.FilterHandler#getLastPosition(long)
	CALLEE: org.traccar.model.Position#getFixTime()
CALLER: org.traccar.protocol.LaipacProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.protocol.Tlt2hProtocolDecoder#<init>(org.traccar.protocol.Tlt2hProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: static org.traccar.Context#init(java.lang.String[])
	CALLEE: org.traccar.Config#load(java.lang.String)
	CALLEE: org.traccar.Config#getBoolean(java.lang.String)
	CALLEE: static org.traccar.helper.Log#setupLogger(org.traccar.Config)
	CALLEE: org.traccar.Config#hasKey(java.lang.String)
	CALLEE: org.traccar.database.DataManager#<init>(org.traccar.Config)
	CALLEE: org.traccar.database.DeviceManager#<init>(org.traccar.database.DataManager)
	CALLEE: org.traccar.Config#getString(java.lang.String,java.lang.String)
	CALLEE: org.traccar.Config#getString(java.lang.String)
	CALLEE: org.traccar.Config#getInteger(java.lang.String)
	CALLEE: org.traccar.geocode.NominatimReverseGeocoder#<init>(java.lang.String,int)
	CALLEE: org.traccar.geocode.GisgraphyReverseGeocoder#<init>(java.lang.String,int)
	CALLEE: org.traccar.geocode.MapQuestReverseGeocoder#<init>(java.lang.String,java.lang.String,int)
	CALLEE: org.traccar.geocode.OpenCageReverseGeocoder#<init>(java.lang.String,java.lang.String,int)
	CALLEE: org.traccar.geocode.BingMapsReverseGeocoder#<init>(java.lang.String,java.lang.String,int)
	CALLEE: org.traccar.geocode.FactualReverseGeocoder#<init>(java.lang.String,java.lang.String,int)
	CALLEE: org.traccar.geocode.GeocodeFarmReverseGeocoder#<init>(java.lang.String,int)
	CALLEE: org.traccar.geocode.GeocodeFarmReverseGeocoder#<init>(int)
	CALLEE: org.traccar.geocode.GoogleReverseGeocoder#<init>(java.lang.String,int)
	CALLEE: org.traccar.geocode.GoogleReverseGeocoder#<init>(int)
	CALLEE: org.traccar.location.MozillaLocationProvider#<init>()
	CALLEE: org.traccar.location.OpenCellIdLocationProvider#<init>(java.lang.String)
	CALLEE: org.traccar.database.DataManager#getDataSource()
	CALLEE: org.traccar.web.WebServer#<init>(org.traccar.Config,javax.sql.DataSource)
	CALLEE: org.traccar.database.PermissionsManager#<init>(org.traccar.database.DataManager)
	CALLEE: org.traccar.database.ConnectionManager#<init>()
	CALLEE: org.traccar.database.GeofenceManager#<init>(org.traccar.database.DataManager)
	CALLEE: org.traccar.database.NotificationManager#<init>(org.traccar.database.DataManager)
	CALLEE: org.traccar.ServerManager#<init>()
	CALLEE: org.traccar.notification.EventForwarder#<init>()
	CALLEE: org.traccar.database.AliasesManager#<init>(org.traccar.database.DataManager)
CALLER: org.traccar.protocol.IdplProtocolDecoder#<init>(org.traccar.Protocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.JpKorjarProtocolDecoder#<init>(org.traccar.protocol.JpKorjarProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.api.resource.ServerResource#update(org.traccar.model.Server)
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.api.BaseResource#getUserId()
	CALLEE: org.traccar.database.PermissionsManager#checkAdmin(long)
	CALLEE: org.traccar.database.PermissionsManager#updateServer(org.traccar.model.Server)
CALLER: org.traccar.protocol.IdplProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.DateBuilder#setDateReverse(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.Parser#nextCoordinate(org.traccar.helper.Parser.CoordinateFormat)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,boolean)
CALLER: org.traccar.protocol.T55ProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.protocol.T55ProtocolDecoder#decodeGprmc(org.traccar.DeviceSession,java.lang.String,java.net.SocketAddress,org.jboss.netty.channel.Channel)
	CALLEE: org.traccar.protocol.T55ProtocolDecoder#decodeGpgga(org.traccar.DeviceSession,java.lang.String)
	CALLEE: org.traccar.protocol.T55ProtocolDecoder#decodeGprma(org.traccar.DeviceSession,java.lang.String)
	CALLEE: org.traccar.protocol.T55ProtocolDecoder#decodeTrccr(org.traccar.DeviceSession,java.lang.String)
CALLER: org.traccar.protocol.BceProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
	CALLEE: org.traccar.TrackerServer#setEndianness(java.nio.ByteOrder)
CALLER: org.traccar.protocol.TopflytechProtocolDecoder#<init>(org.traccar.protocol.TopflytechProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.TeltonikaProtocolDecoder#parseData(org.jboss.netty.channel.Channel,java.net.SocketAddress,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.protocol.TeltonikaProtocolDecoder#decodeSerial(org.traccar.model.Position,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.protocol.TeltonikaProtocolDecoder#decodeLocation(org.traccar.model.Position,org.jboss.netty.buffer.ChannelBuffer,int)
CALLER: static org.traccar.GlobalTimer#getTimer()
CALLER: org.traccar.protocol.TelicProtocolDecoder#<init>(org.traccar.protocol.TelicProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.MtxProtocolDecoder#<init>(org.traccar.protocol.MtxProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: static org.traccar.helper.BcdUtil#readInteger(org.jboss.netty.buffer.ChannelBuffer,int)
CALLER: org.traccar.WebDataHandler#calculateStatus(org.traccar.model.Position)
	CALLEE: org.traccar.model.Extensible#getAttributes()
	CALLEE: org.traccar.model.Position#getSpeed()
CALLER: org.traccar.database.DeviceManager#updateGroupCache(boolean)
	CALLEE: org.traccar.database.DataManager#getAllGroups()
	CALLEE: org.traccar.model.Extensible#getId()
	CALLEE: org.traccar.model.Group#getName()
	CALLEE: org.traccar.model.Group#setName(java.lang.String)
	CALLEE: org.traccar.model.Group#getGroupId()
	CALLEE: org.traccar.model.Group#setGroupId(long)
CALLER: org.traccar.protocol.AplicomProtocolDecoder#decodeE(org.traccar.model.Position,org.jboss.netty.buffer.ChannelBuffer,int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.BaseProtocolDecoder#getLastLocation(org.traccar.model.Position,java.util.Date)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,long)
CALLER: org.traccar.protocol.Gt02Protocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.OsmAndProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.api.AsyncSocket#onUpdatePosition(org.traccar.model.Position)
	CALLEE: org.traccar.api.AsyncSocket#sendData(java.util.Map)
CALLER: org.traccar.protocol.Gt06ProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: static org.traccar.protocol.Gt06ProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,int,int)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getLastLocation(org.traccar.model.Position,java.util.Date)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: static org.traccar.protocol.Gt06ProtocolDecoder#isSupported(int)
	CALLEE: static org.traccar.protocol.Gt06ProtocolDecoder#hasGps(int)
	CALLEE: org.traccar.protocol.Gt06ProtocolDecoder#decodeGps(org.traccar.model.Position,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: static org.traccar.protocol.Gt06ProtocolDecoder#hasLbs(int)
	CALLEE: static org.traccar.protocol.Gt06ProtocolDecoder#hasStatus(int)
	CALLEE: org.traccar.protocol.Gt06ProtocolDecoder#decodeLbs(org.traccar.model.Position,org.jboss.netty.buffer.ChannelBuffer,boolean)
	CALLEE: org.traccar.protocol.Gt06ProtocolDecoder#decodeStatus(org.traccar.model.Position,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,long)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
	CALLEE: static org.traccar.helper.BitUtil#check(long,int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,boolean)
CALLER: org.traccar.protocol.RuptelaProtocolDecoder#<init>(org.traccar.protocol.RuptelaProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.Jt600Protocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.Gt06ProtocolEncoder#encodeContent(java.lang.String)
	CALLEE: static org.traccar.helper.Checksum#crc16(java.lang.String,java.nio.ByteBuffer)
CALLER: org.traccar.FilterHandler#getLastPosition(long)
	CALLEE: static org.traccar.Context#getIdentityManager()
	CALLEE: org.traccar.database.DeviceManager#getLastPosition(long)
CALLER: org.traccar.database.DataManager#login(java.lang.String,java.lang.String)
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#setString(java.lang.String,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#executeQuerySingle(java.lang.Class)
	CALLEE: org.traccar.model.User#isPasswordValid(java.lang.String)
CALLER: org.traccar.protocol.Jt600ProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.Jt600ProtocolDecoder#decodeBinary(org.jboss.netty.buffer.ChannelBuffer,org.jboss.netty.channel.Channel,java.net.SocketAddress)
	CALLEE: org.traccar.protocol.Jt600ProtocolDecoder#decodeW01(java.lang.String,org.jboss.netty.channel.Channel,java.net.SocketAddress)
	CALLEE: org.traccar.protocol.Jt600ProtocolDecoder#decodeU01(java.lang.String,org.jboss.netty.channel.Channel,java.net.SocketAddress)
CALLER: org.traccar.protocol.ProgressProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,boolean)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,long)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: static org.traccar.helper.BitUtil#check(long,int)
	CALLEE: org.traccar.protocol.ProgressProtocolDecoder#requestArchive(org.jboss.netty.channel.Channel)
CALLER: org.traccar.protocol.MegastekProtocolDecoder#decodeOld(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.protocol.MegastekProtocolDecoder#parseLocation(java.lang.String,org.traccar.model.Position)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.protocol.MegastekProtocolDecoder#decodeAlarm(java.lang.String)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,boolean)
	CALLEE: org.traccar.helper.Parser#hasNext(int)
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.helper.Parser#nextInt(int)
CALLER: org.traccar.protocol.AutoFonProtocolDecoder#<init>(org.traccar.protocol.AutoFonProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.database.NotificationManager#updateEvent(org.traccar.model.Event,org.traccar.model.Position)
	CALLEE: org.traccar.database.DataManager#addEvent(org.traccar.model.Event)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.model.Message#getDeviceId()
	CALLEE: org.traccar.database.PermissionsManager#getDeviceUsers(long)
	CALLEE: org.traccar.model.Event#getGeofenceId()
	CALLEE: static org.traccar.Context#getGeofenceManager()
	CALLEE: org.traccar.database.GeofenceManager#checkGeofence(long,long)
	CALLEE: org.traccar.model.Message#getType()
	CALLEE: org.traccar.database.NotificationManager#getUserNotificationByType(long,java.lang.String)
	CALLEE: org.traccar.model.Extensible#getAttributes()
	CALLEE: static org.traccar.Context#getConnectionManager()
	CALLEE: org.traccar.database.ConnectionManager#updateEvent(long,org.traccar.model.Event,org.traccar.model.Position)
	CALLEE: static org.traccar.notification.NotificationMail#sendMailAsync(long,org.traccar.model.Event,org.traccar.model.Position)
	CALLEE: static org.traccar.Context#getEventForwarder()
	CALLEE: org.traccar.notification.EventForwarder#forwardEvent(org.traccar.model.Event,org.traccar.model.Position)
CALLER: org.traccar.protocol.Tr20Protocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.protocol.MxtProtocolDecoder#<init>(org.traccar.protocol.MxtProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.WatchProtocolDecoder#<init>(org.traccar.protocol.WatchProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.events.GeofenceEventHandler#<init>()
	CALLEE: static org.traccar.Context#getGeofenceManager()
CALLER: org.traccar.protocol.V680ProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.Parser#hasNext()
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.Parser#nextCoordinate()
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.DateBuilder#setDate(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
CALLER: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.BaseProtocolDecoder#findDeviceId(java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.DeviceSession#<init>(long)
	CALLEE: static org.traccar.Context#getConnectionManager()
	CALLEE: org.traccar.database.ConnectionManager#addActiveDevice(long,org.traccar.Protocol,org.jboss.netty.channel.Channel,java.net.SocketAddress)
CALLER: org.traccar.protocol.ManPowerProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setDate(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.Parser#nextCoordinate()
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setSpeed(double)
CALLER: org.traccar.protocol.TaipProtocolDecoder#<init>(org.traccar.protocol.TaipProtocol,boolean)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: static org.traccar.reports.Route#getCsv(long,java.util.Collection,java.util.Collection,java.util.Date,java.util.Date)
	CALLEE: org.traccar.web.CsvBuilder#addHeaderLine(java.lang.Object)
	CALLEE: static org.traccar.reports.ReportUtils#getDeviceList(java.util.Collection,java.util.Collection)
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.database.PermissionsManager#checkDevice(long,long)
	CALLEE: static org.traccar.Context#getDataManager()
	CALLEE: org.traccar.database.DataManager#getPositions(long,java.util.Date,java.util.Date)
	CALLEE: org.traccar.web.CsvBuilder#addArray(java.util.Collection)
	CALLEE: org.traccar.web.CsvBuilder#build()
CALLER: org.traccar.protocol.Mta6Protocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.database.PermissionsManager#login(java.lang.String,java.lang.String)
	CALLEE: org.traccar.database.DataManager#login(java.lang.String,java.lang.String)
	CALLEE: org.traccar.model.Extensible#getId()
CALLER: org.traccar.protocol.GotopProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setDate(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.helper.Parser#nextCoordinate(org.traccar.helper.Parser.CoordinateFormat)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: org.traccar.model.Position#setCourse(double)
CALLER: org.traccar.database.DeviceManager#lookupServerString(long,java.lang.String,java.lang.String)
	CALLEE: org.traccar.database.DeviceManager#lookupAttribute(long,java.lang.String,boolean)
CALLER: org.traccar.protocol.AutoGradeProtocolDecoder#<init>(org.traccar.protocol.AutoGradeProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.SuntechProtocolEncoder#encodeCommand(org.traccar.model.Command)
	CALLEE: org.traccar.model.Message#getType()
	CALLEE: org.traccar.StringProtocolEncoder#formatCommand(org.traccar.model.Command,java.lang.String,java.lang.String[])
	CALLEE: org.traccar.model.Extensible#getAttributes()
	CALLEE: org.traccar.database.GroupTree.TreeNode#equals(java.lang.Object)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.DateBuilder#<init>(java.util.TimeZone)
CALLER: org.traccar.protocol.EelinkProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.database.DeviceManager#updateDeviceStatus(org.traccar.model.Device)
	CALLEE: org.traccar.database.DataManager#updateDeviceStatus(org.traccar.model.Device)
	CALLEE: org.traccar.model.Extensible#getId()
	CALLEE: org.traccar.model.Device#getStatus()
	CALLEE: org.traccar.model.Device#setStatus(java.lang.String)
CALLER: org.traccar.protocol.MeitrackProtocolEncoder#formatCommand(org.traccar.model.Command,char,java.lang.String)
	CALLEE: org.traccar.model.Message#getDeviceId()
	CALLEE: org.traccar.BaseProtocolEncoder#getUniqueId(long)
	CALLEE: static org.traccar.helper.Checksum#sum(java.lang.String)
CALLER: org.traccar.protocol.Avl301ProtocolDecoder#<init>(org.traccar.protocol.Avl301Protocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.DishaProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.protocol.MegastekFrameDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.helper.StringFinder#<init>(java.lang.String)
CALLER: org.traccar.protocol.XirgoProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.protocol.Gl100Protocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.protocol.WatchProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocol#setSupportedCommands(java.lang.String[])
CALLER: org.traccar.model.Event#<init>(java.lang.String,long)
	CALLEE: org.traccar.model.Message#setType(java.lang.String)
	CALLEE: org.traccar.model.Message#setDeviceId(long)
CALLER: org.traccar.protocol.IntellitracProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.protocol.Tr20ProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setDate(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.helper.Parser#nextCoordinate(org.traccar.helper.Parser.CoordinateFormat)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
CALLER: org.traccar.protocol.Pt502ProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.protocol.Pt502ProtocolDecoder#decodeAlarm(java.lang.String)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int,int)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.Parser#nextCoordinate()
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.helper.DateBuilder#setDateReverse(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.helper.Parser#hasNext()
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.helper.Parser#nextInt(int)
CALLER: org.traccar.database.GeofenceManager#getDeviceGeofences(java.util.Map,long)
CALLER: org.traccar.protocol.WialonProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,java.lang.String,java.lang.Integer)
CALLER: org.traccar.protocol.IntellitracProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setDate(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.helper.Parser#nextLong()
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,long)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
CALLER: org.traccar.database.GroupTree.TreeNode#hashCode()
	CALLEE: org.traccar.model.Extensible#getId()
CALLER: org.traccar.protocol.Tt8850Protocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.MxtFrameDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.database.QueryBuilder#setBoolean(java.lang.String,boolean)
	CALLEE: org.traccar.database.QueryBuilder#indexes(java.lang.String)
CALLER: org.traccar.protocol.TrackboxProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel)
CALLER: org.traccar.protocol.GlobalSatProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.BasePipelineFactory#addDynamicHandlers(org.jboss.netty.channel.ChannelPipeline)
	CALLEE: static org.traccar.Context#getConfig()
	CALLEE: org.traccar.Config#hasKey(java.lang.String)
	CALLEE: org.traccar.Config#getString(java.lang.String)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: org.traccar.WebDataHandler#<init>(java.lang.String)
CALLER: org.traccar.protocol.CarscopProtocolDecoder#<init>(org.traccar.protocol.CarscopProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.Tk102Protocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.NavisProtocolDecoder#sendReply(org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: static org.traccar.protocol.NavisProtocolDecoder#checksum(org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.database.DeviceManager#isLatestPosition(org.traccar.model.Position)
	CALLEE: org.traccar.model.Message#getDeviceId()
	CALLEE: org.traccar.database.DeviceManager#getLastPosition(long)
	CALLEE: org.traccar.model.Position#getFixTime()
CALLER: org.traccar.protocol.KenjiProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: static org.traccar.CharacterDelimiterFrameDecoder#createDelimiter(char)
CALLER: org.traccar.protocol.Stl060Protocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.database.GeofenceManager#getCurrentDeviceGeofences(org.traccar.model.Position)
	CALLEE: org.traccar.model.Message#getDeviceId()
	CALLEE: org.traccar.database.GeofenceManager#getAllDeviceGeofences(long)
	CALLEE: org.traccar.database.GeofenceManager#getGeofence(long)
	CALLEE: org.traccar.model.Geofence#getGeometry()
	CALLEE: org.traccar.model.Position#getLatitude()
	CALLEE: org.traccar.model.Position#getLongitude()
	CALLEE: org.traccar.geofence.GeofenceCircle#containsPoint(double,double)
	CALLEE: org.traccar.geofence.GeofencePolygon#containsPoint(double,double)
CALLER: org.traccar.protocol.ArknavProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.Parser#nextCoordinate()
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setDateReverse(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
CALLER: org.traccar.protocol.TeltonikaProtocolEncoder#encodeCommand(org.traccar.model.Command)
	CALLEE: org.traccar.model.Message#getType()
	CALLEE: org.traccar.model.Extensible#getAttributes()
	CALLEE: org.traccar.protocol.TeltonikaProtocolEncoder#encodeContent(java.lang.String)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: org.traccar.protocol.AdmProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: static org.traccar.helper.BitUtil#to(int,int)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: static org.traccar.helper.BitUtil#check(long,int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,long)
CALLER: org.traccar.protocol.PiligrimProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.database.DataManager#removeGeofence(long)
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#setLong(java.lang.String,long)
	CALLEE: org.traccar.database.QueryBuilder#executeUpdate()
CALLER: org.traccar.api.SecurityRequestFilter#filter(javax.ws.rs.container.ContainerRequestContext)
	CALLEE: static org.traccar.api.SecurityRequestFilter#decodeBasicAuth(java.lang.String)
	CALLEE: static org.traccar.Context#getDataManager()
	CALLEE: org.traccar.database.DataManager#login(java.lang.String,java.lang.String)
	CALLEE: org.traccar.model.Extensible#getId()
	CALLEE: org.traccar.api.UserPrincipal#<init>(long)
	CALLEE: org.traccar.api.UserSecurityContext#<init>(org.traccar.api.UserPrincipal)
CALLER: org.traccar.protocol.GnxProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.protocol.MeitrackProtocolDecoder#decodeBinaryMessage(org.jboss.netty.channel.Channel,java.net.SocketAddress,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,long)
CALLER: static org.traccar.reports.Summary#getCsv(long,java.util.Collection,java.util.Collection,java.util.Date,java.util.Date)
	CALLEE: org.traccar.web.CsvBuilder#addHeaderLine(java.lang.Object)
	CALLEE: static org.traccar.reports.ReportUtils#getDeviceList(java.util.Collection,java.util.Collection)
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.database.PermissionsManager#checkDevice(long,long)
	CALLEE: static org.traccar.reports.Summary#calculateSummaryResult(long,java.util.Date,java.util.Date)
	CALLEE: org.traccar.web.CsvBuilder#addLine(java.lang.Object)
	CALLEE: org.traccar.web.CsvBuilder#build()
CALLER: org.traccar.api.resource.UserResource#update(long,org.traccar.model.User)
	CALLEE: org.traccar.model.User#getAdmin()
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.api.BaseResource#getUserId()
	CALLEE: org.traccar.database.PermissionsManager#checkAdmin(long)
	CALLEE: org.traccar.model.Extensible#getId()
	CALLEE: org.traccar.database.PermissionsManager#checkUser(long,long)
	CALLEE: org.traccar.database.PermissionsManager#updateUser(org.traccar.model.User)
	CALLEE: static org.traccar.Context#getNotificationManager()
	CALLEE: org.traccar.database.NotificationManager#refresh()
CALLER: org.traccar.api.resource.NotificationResource#update(org.traccar.model.Notification)
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.api.BaseResource#getUserId()
	CALLEE: org.traccar.database.PermissionsManager#checkReadonly(long)
	CALLEE: org.traccar.model.Notification#getUserId()
	CALLEE: org.traccar.database.PermissionsManager#checkUser(long,long)
	CALLEE: static org.traccar.Context#getNotificationManager()
	CALLEE: org.traccar.database.NotificationManager#updateNotification(org.traccar.model.Notification)
CALLER: org.traccar.protocol.H02Protocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocol#setSupportedCommands(java.lang.String[])
CALLER: org.traccar.protocol.GpsmtaProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.protocol.OrionProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
	CALLEE: org.traccar.TrackerServer#setEndianness(java.nio.ByteOrder)
CALLER: org.traccar.database.PermissionsManager#updateUser(org.traccar.model.User)
	CALLEE: org.traccar.database.DataManager#updateUser(org.traccar.model.User)
	CALLEE: org.traccar.model.Extensible#getId()
	CALLEE: org.traccar.database.PermissionsManager#refreshPermissions()
CALLER: static org.traccar.helper.Hashing#createHash(java.lang.String)
	CALLEE: static org.traccar.helper.Hashing#function(char[],byte[])
	CALLEE: org.traccar.helper.Hashing.HashingResult#<init>(java.lang.String,java.lang.String)
CALLER: org.traccar.protocol.CellocatorFrameDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: org.traccar.protocol.ProgressProtocolDecoder#<init>(org.traccar.protocol.ProgressProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.helper.Parser#hasNext()
	CALLEE: org.traccar.helper.Parser#next()
CALLER: org.traccar.api.resource.ReportResource#getSummaryJson(java.util.List,java.util.List,java.lang.String,java.lang.String)
	CALLEE: org.traccar.api.BaseResource#getUserId()
	CALLEE: static org.traccar.web.JsonConverter#parseDate(java.lang.String)
	CALLEE: static org.traccar.reports.Summary#getJson(long,java.util.Collection,java.util.Collection,java.util.Date,java.util.Date)
CALLER: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
CALLER: org.traccar.database.NotificationManager#refresh()
	CALLEE: org.traccar.database.DataManager#getNotifications()
	CALLEE: org.traccar.model.Notification#getUserId()
	CALLEE: org.traccar.database.NotificationManager#getUserNotificationsUnsafe(long)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: org.traccar.api.resource.DeviceResource#get(boolean,long)
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.api.BaseResource#getUserId()
	CALLEE: org.traccar.database.PermissionsManager#checkAdmin(long)
	CALLEE: static org.traccar.Context#getDeviceManager()
	CALLEE: org.traccar.database.DeviceManager#getAllDevices()
	CALLEE: org.traccar.database.PermissionsManager#checkUser(long,long)
	CALLEE: org.traccar.database.DeviceManager#getDevices(long)
CALLER: org.traccar.database.ConnectionManager#updateDevice(long,java.lang.String,java.util.Date)
	CALLEE: static org.traccar.Context#getIdentityManager()
	CALLEE: org.traccar.database.DeviceManager#getDeviceById(long)
	CALLEE: org.traccar.model.Device#getStatus()
	CALLEE: org.traccar.model.Event#<init>(java.lang.String,long)
	CALLEE: org.traccar.model.Message#setType(java.lang.String)
	CALLEE: static org.traccar.Context#getNotificationManager()
	CALLEE: org.traccar.database.NotificationManager#updateEvent(org.traccar.model.Event,org.traccar.model.Position)
	CALLEE: org.traccar.model.Device#setStatus(java.lang.String)
	CALLEE: org.traccar.model.Device#setLastUpdate(java.util.Date)
	CALLEE: static org.traccar.GlobalTimer#getTimer()
	CALLEE: static org.traccar.Context#getDeviceManager()
	CALLEE: org.traccar.database.DeviceManager#updateDeviceStatus(org.traccar.model.Device)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
	CALLEE: org.traccar.database.ConnectionManager#updateDevice(org.traccar.model.Device)
CALLER: org.traccar.protocol.TeltonikaProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.TeltonikaProtocolDecoder#parseIdentification(org.jboss.netty.channel.Channel,java.net.SocketAddress,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.protocol.TeltonikaProtocolDecoder#parseData(org.jboss.netty.channel.Channel,java.net.SocketAddress,org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.database.AliasesManager#getAttributeAlias(long,java.lang.String)
	CALLEE: org.traccar.database.AliasesManager#getAttributeAliases(long)
	CALLEE: org.traccar.model.AttributeAlias#getAttribute()
CALLER: org.traccar.protocol.OsmAndProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,org.jboss.netty.handler.codec.http.HttpResponseStatus)
CALLER: org.traccar.database.QueryBuilder#setString(java.lang.String,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#indexes(java.lang.String)
CALLER: org.traccar.api.resource.GeofenceResource#remove(long)
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.api.BaseResource#getUserId()
	CALLEE: org.traccar.database.PermissionsManager#checkReadonly(long)
	CALLEE: org.traccar.database.PermissionsManager#checkGeofence(long,long)
	CALLEE: static org.traccar.Context#getDataManager()
	CALLEE: org.traccar.database.DataManager#removeGeofence(long)
	CALLEE: static org.traccar.Context#getGeofenceManager()
	CALLEE: org.traccar.database.GeofenceManager#refreshGeofences()
CALLER: org.traccar.protocol.AstraProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.protocol.Stl060Protocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.geocode.GisgraphyReverseGeocoder#<init>(java.lang.String,int)
	CALLEE: org.traccar.geocode.JsonReverseGeocoder#<init>(java.lang.String,int)
CALLER: org.traccar.database.DataManager#updateUser(org.traccar.model.User)
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#setObject(java.lang.Object)
	CALLEE: org.traccar.database.QueryBuilder#executeUpdate()
	CALLEE: org.traccar.model.User#getHashedPassword()
CALLER: org.traccar.protocol.GatorProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.protocol.T800xProtocolEncoder#encodeContent(org.traccar.model.Command,java.lang.String)
	CALLEE: org.traccar.model.Message#getDeviceId()
	CALLEE: org.traccar.BaseProtocolEncoder#getUniqueId(long)
CALLER: org.traccar.protocol.WatchProtocolEncoder#encodeCommand(org.traccar.model.Command)
	CALLEE: org.traccar.model.Message#getType()
	CALLEE: org.traccar.protocol.WatchProtocolEncoder#formatCommand(org.traccar.model.Command,java.lang.String,java.lang.String[])
	CALLEE: org.traccar.protocol.WatchProtocolEncoder#getEnableFlag(org.traccar.model.Command)
	CALLEE: org.traccar.protocol.WatchProtocolEncoder#getBinaryData(org.traccar.model.Command)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: org.traccar.database.DeviceManager#getDeviceByUniqueId(java.lang.String)
	CALLEE: org.traccar.Config#getBoolean(java.lang.String)
	CALLEE: org.traccar.database.DeviceManager#updateDeviceCache(boolean)
CALLER: org.traccar.protocol.TotemProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.Parser#hasNext()
	CALLEE: org.traccar.protocol.TotemProtocolDecoder#decodeAlarm(java.lang.Short)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setDay(int)
	CALLEE: org.traccar.helper.DateBuilder#setMonth(int)
	CALLEE: org.traccar.helper.DateBuilder#setYear(int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.Parser#nextCoordinate()
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
	CALLEE: org.traccar.helper.Parser#nextInt(int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.helper.DateBuilder#setDateReverse(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setDate(int,int,int)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
CALLER: org.traccar.protocol.CityeasyProtocolEncoder#encodeCommand(org.traccar.model.Command)
	CALLEE: org.traccar.model.Message#getType()
	CALLEE: org.traccar.protocol.CityeasyProtocolEncoder#encodeContent(int,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.model.Extensible#getAttributes()
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: org.traccar.protocol.MeitrackFrameDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.database.AliasesManager#removeDevice(long)
	CALLEE: org.traccar.database.AliasesManager#getAttributeAliases(long)
	CALLEE: org.traccar.model.AttributeAlias#getId()
CALLER: static org.traccar.database.QueryBuilder#parse(java.lang.String,java.util.Map)
CALLER: org.traccar.protocol.AplicomProtocolDecoder#decodeEventData(int,org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.database.DeviceManager#getAllDevices()
	CALLEE: org.traccar.database.DeviceManager#updateDeviceCache(boolean)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: org.traccar.api.resource.UserResource#remove(long)
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.api.BaseResource#getUserId()
	CALLEE: org.traccar.database.PermissionsManager#checkUser(long,long)
	CALLEE: org.traccar.database.PermissionsManager#removeUser(long)
	CALLEE: static org.traccar.Context#getGeofenceManager()
	CALLEE: org.traccar.database.GeofenceManager#refreshUserGeofences()
	CALLEE: static org.traccar.Context#getNotificationManager()
	CALLEE: org.traccar.database.NotificationManager#refresh()
CALLER: org.traccar.protocol.HuabaoFrameDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.protocol.MxtProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.protocol.EelinkProtocolDecoder#decodeOld(org.traccar.DeviceSession,org.jboss.netty.buffer.ChannelBuffer,int,int)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.protocol.EelinkProtocolDecoder#decodeAlarm(java.lang.Short)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
CALLER: static org.traccar.protocol.T800xProtocolDecoder#readSwappedFloat(org.jboss.netty.buffer.ChannelBuffer)
CALLER: static org.traccar.reports.Trips#calculateTrip(java.util.ArrayList,int,int)
	CALLEE: org.traccar.model.Position#getSpeed()
	CALLEE: org.traccar.model.Position#getFixTime()
	CALLEE: org.traccar.model.Message#getDeviceId()
	CALLEE: org.traccar.reports.model.BaseReport#setDeviceId(long)
	CALLEE: static org.traccar.Context#getIdentityManager()
	CALLEE: org.traccar.database.DeviceManager#getDeviceById(long)
	CALLEE: org.traccar.model.Device#getName()
	CALLEE: org.traccar.reports.model.BaseReport#setDeviceName(java.lang.String)
	CALLEE: org.traccar.model.Extensible#getId()
	CALLEE: org.traccar.reports.model.TripReport#setStartPositionId(long)
	CALLEE: org.traccar.reports.model.TripReport#setStartTime(java.util.Date)
	CALLEE: org.traccar.model.Position#getAddress()
	CALLEE: org.traccar.reports.model.TripReport#setStartAddress(java.lang.String)
	CALLEE: org.traccar.reports.model.TripReport#setEndPositionId(long)
	CALLEE: org.traccar.reports.model.TripReport#setEndTime(java.util.Date)
	CALLEE: org.traccar.reports.model.TripReport#setEndAddress(java.lang.String)
	CALLEE: static org.traccar.Context#getDeviceManager()
	CALLEE: org.traccar.database.DeviceManager#lookupConfigBoolean(long,java.lang.String,boolean)
	CALLEE: static org.traccar.reports.ReportUtils#calculateDistance(org.traccar.model.Position,org.traccar.model.Position,boolean)
	CALLEE: org.traccar.reports.model.BaseReport#setDistance(double)
	CALLEE: org.traccar.reports.model.TripReport#setDuration(long)
	CALLEE: org.traccar.reports.model.BaseReport#setAverageSpeed(java.lang.Double)
	CALLEE: org.traccar.reports.model.BaseReport#setMaxSpeed(double)
	CALLEE: static org.traccar.reports.ReportUtils#calculateFuel(org.traccar.model.Position,org.traccar.model.Position)
	CALLEE: org.traccar.reports.model.TripReport#setSpentFuel(java.lang.String)
CALLER: org.traccar.protocol.HunterProProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.location.BaseLocationProvider#getLocation(java.util.Map,org.traccar.location.LocationProvider.LocationProviderCallback)
	CALLEE: static org.traccar.Context#getConfig()
	CALLEE: org.traccar.Config#hasKey(java.lang.String)
	CALLEE: org.traccar.Config#getInteger(java.lang.String)
	CALLEE: org.traccar.location.MozillaLocationProvider#getLocation(int,int,long,long,org.traccar.location.LocationProvider.LocationProviderCallback)
	CALLEE: org.traccar.location.OpenCellIdLocationProvider#getLocation(int,int,long,long,org.traccar.location.LocationProvider.LocationProviderCallback)
CALLER: org.traccar.protocol.EelinkProtocolDecoder#<init>(org.traccar.protocol.EelinkProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.RuptelaProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.MiniFinderProtocolEncoder#formatValue(java.lang.String,java.lang.Object)
CALLER: org.traccar.api.resource.UserResource#get()
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.api.BaseResource#getUserId()
	CALLEE: org.traccar.database.PermissionsManager#checkAdmin(long)
	CALLEE: org.traccar.database.PermissionsManager#getUsers()
CALLER: org.traccar.protocol.T800xProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.database.AliasesManager#<init>(org.traccar.database.DataManager)
	CALLEE: org.traccar.database.DataManager#getAttributeAliases()
	CALLEE: org.traccar.model.AttributeAlias#getDeviceId()
	CALLEE: org.traccar.database.AliasesManager#getAttributeAliases(long)
	CALLEE: org.traccar.model.AttributeAlias#getId()
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: org.traccar.geocode.AddressFormat#format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)
	CALLEE: org.traccar.geocode.Address#getPostcode()
	CALLEE: static org.traccar.geocode.AddressFormat#replace(java.lang.String,java.lang.String,java.lang.String)
	CALLEE: org.traccar.geocode.Address#getCountry()
	CALLEE: org.traccar.geocode.Address#getState()
	CALLEE: org.traccar.geocode.Address#getDistrict()
	CALLEE: org.traccar.geocode.Address#getSettlement()
	CALLEE: org.traccar.geocode.Address#getSuburb()
	CALLEE: org.traccar.geocode.Address#getStreet()
	CALLEE: org.traccar.geocode.Address#getHouse()
CALLER: org.traccar.protocol.TelicProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.protocol.T800xProtocolDecoder#<init>(org.traccar.protocol.T800xProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.TelicProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setDateReverse(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.helper.Parser#hasNext(int)
	CALLEE: org.traccar.helper.Parser#nextCoordinate(org.traccar.helper.Parser.CoordinateFormat)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
CALLER: org.traccar.protocol.SanavProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: static org.traccar.reports.ReportUtils#calculateFuel(org.traccar.model.Position,org.traccar.model.Position)
	CALLEE: org.traccar.model.Extensible#getAttributes()
	CALLEE: org.traccar.model.Position#getProtocol()
	CALLEE: org.traccar.helper.PatternBuilder#toString()
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: org.traccar.protocol.GpsGateProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: static org.traccar.helper.Log#setupLogger(org.traccar.Config)
	CALLEE: org.traccar.Config#getString(java.lang.String)
	CALLEE: static org.traccar.helper.Log#logSystemInfo()
	CALLEE: static org.traccar.helper.Log#info(java.lang.String)
CALLER: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.UproProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.Parser#nextCoordinate(org.traccar.helper.Parser.CoordinateFormat)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.helper.DateBuilder#setDateReverse(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
CALLER: org.traccar.protocol.ManPowerProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.MeiligaoProtocolDecoder#identify(org.jboss.netty.buffer.ChannelBuffer,org.jboss.netty.channel.Channel,java.net.SocketAddress)
	CALLEE: static org.traccar.helper.Checksum#luhn(long)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
CALLER: org.traccar.database.DataManager#getGeofences()
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#executeQuery(java.lang.Class)
CALLER: static org.traccar.helper.DateUtil#correctDate(java.util.Date,java.util.Date,int)
	CALLEE: static org.traccar.helper.DateUtil#dateAdd(java.util.Date,int,int)
CALLER: org.traccar.protocol.OigoProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.protocol.MegastekProtocolDecoder#<init>(org.traccar.protocol.MegastekProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.helper.PatternBuilder#binary(java.lang.String)
CALLER: org.traccar.protocol.NavigilProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.protocol.NavigilProtocolDecoder#sendAcknowledgment(org.jboss.netty.channel.Channel,int)
	CALLEE: org.traccar.protocol.NavigilProtocolDecoder#parseUnitReport(org.traccar.DeviceSession,org.jboss.netty.buffer.ChannelBuffer,int)
	CALLEE: org.traccar.protocol.NavigilProtocolDecoder#parseTg2Report(org.traccar.DeviceSession,org.jboss.netty.buffer.ChannelBuffer,int)
	CALLEE: org.traccar.protocol.NavigilProtocolDecoder#parsePositionReport(org.traccar.DeviceSession,org.jboss.netty.buffer.ChannelBuffer,int,long)
	CALLEE: org.traccar.protocol.NavigilProtocolDecoder#parsePositionReport2(org.traccar.DeviceSession,org.jboss.netty.buffer.ChannelBuffer,int,long)
	CALLEE: org.traccar.protocol.NavigilProtocolDecoder#parseSnapshot4(org.traccar.DeviceSession,org.jboss.netty.buffer.ChannelBuffer,int)
	CALLEE: org.traccar.protocol.NavigilProtocolDecoder#parseTrackingData(org.traccar.DeviceSession,org.jboss.netty.buffer.ChannelBuffer,int,long)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: org.traccar.events.OverspeedEventHandler#analyzePosition(org.traccar.model.Position)
	CALLEE: static org.traccar.Context#getIdentityManager()
	CALLEE: org.traccar.model.Message#getDeviceId()
	CALLEE: org.traccar.database.DeviceManager#getDeviceById(long)
	CALLEE: org.traccar.database.DeviceManager#isLatestPosition(org.traccar.model.Position)
	CALLEE: org.traccar.model.Position#getValid()
	CALLEE: org.traccar.model.Position#getSpeed()
	CALLEE: static org.traccar.Context#getDeviceManager()
	CALLEE: org.traccar.model.Extensible#getId()
	CALLEE: org.traccar.database.DeviceManager#lookupServerDouble(long,java.lang.String,double)
	CALLEE: org.traccar.database.DeviceManager#getLastPosition(long)
	CALLEE: org.traccar.model.Event#<init>(java.lang.String,long,long)
CALLER: org.traccar.protocol.Tt8850ProtocolDecoder#<init>(org.traccar.protocol.Tt8850Protocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.H02ProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.H02ProtocolDecoder#decodeText(java.lang.String,org.jboss.netty.channel.Channel,java.net.SocketAddress)
	CALLEE: org.traccar.protocol.H02ProtocolDecoder#decodeBinary(org.jboss.netty.buffer.ChannelBuffer,org.jboss.netty.channel.Channel,java.net.SocketAddress)
CALLER: org.traccar.location.MozillaLocationProvider#<init>()
	CALLEE: org.traccar.location.MozillaLocationProvider#<init>(java.lang.String,java.lang.String)
CALLER: org.traccar.protocol.TaipProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.protocol.Pt502ProtocolDecoder#<init>(org.traccar.protocol.Pt502Protocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: static org.traccar.notification.NotificationMail#sendMailSync(long,org.traccar.model.Event,org.traccar.model.Position)
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.database.PermissionsManager#getUser(long)
	CALLEE: static org.traccar.notification.NotificationMail#getConfigProperies()
	CALLEE: static org.traccar.notification.NotificationMail#getAttributesProperties(org.traccar.model.Extensible)
	CALLEE: org.traccar.model.User#getEmail()
	CALLEE: static org.traccar.notification.NotificationFormatter#formatTitle(long,org.traccar.model.Event,org.traccar.model.Position)
	CALLEE: static org.traccar.notification.NotificationFormatter#formatMessage(long,org.traccar.model.Event,org.traccar.model.Position)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: org.traccar.protocol.HuabaoProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.protocol.HuabaoProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,java.net.SocketAddress,int,org.jboss.netty.buffer.ChannelBuffer,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.protocol.HuabaoProtocolDecoder#sendGeneralResponse(org.jboss.netty.channel.Channel,java.net.SocketAddress,org.jboss.netty.buffer.ChannelBuffer,int,int)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.protocol.HuabaoProtocolDecoder#decodeAlarm(long)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
	CALLEE: static org.traccar.helper.BitUtil#check(long,int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,boolean)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.helper.DateBuilder#<init>(java.util.TimeZone)
	CALLEE: static org.traccar.helper.BcdUtil#readInteger(org.jboss.netty.buffer.ChannelBuffer,int)
	CALLEE: org.traccar.helper.DateBuilder#setYear(int)
	CALLEE: org.traccar.helper.DateBuilder#setMonth(int)
	CALLEE: org.traccar.helper.DateBuilder#setDay(int)
	CALLEE: org.traccar.helper.DateBuilder#setHour(int)
	CALLEE: org.traccar.helper.DateBuilder#setMinute(int)
	CALLEE: org.traccar.helper.DateBuilder#setSecond(int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
CALLER: org.traccar.api.resource.NotificationResource#get(boolean,long)
	CALLEE: static org.traccar.Context#getNotificationManager()
	CALLEE: org.traccar.database.NotificationManager#getAllNotifications()
	CALLEE: org.traccar.api.BaseResource#getUserId()
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.database.PermissionsManager#checkUser(long,long)
	CALLEE: org.traccar.database.NotificationManager#getUserNotifications(long)
CALLER: org.traccar.protocol.AtrackProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.location.OpenCellIdLocationProvider#<init>(java.lang.String)
	CALLEE: org.traccar.location.OpenCellIdLocationProvider#<init>(java.lang.String,java.lang.String)
CALLER: org.traccar.protocol.TrackboxProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.Gl200Protocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.database.DeviceManager#updateLatestPosition(org.traccar.model.Position)
	CALLEE: org.traccar.database.DeviceManager#isLatestPosition(org.traccar.model.Position)
	CALLEE: org.traccar.database.DataManager#updateLatestPosition(org.traccar.model.Position)
	CALLEE: org.traccar.model.Message#getDeviceId()
	CALLEE: org.traccar.model.Extensible#getId()
	CALLEE: org.traccar.model.Device#setPositionId(long)
	CALLEE: static org.traccar.Context#getConnectionManager()
	CALLEE: org.traccar.database.ConnectionManager#updatePosition(org.traccar.model.Position)
CALLER: org.traccar.protocol.AquilaProtocolDecoder#<init>(org.traccar.protocol.AquilaProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.protocol.IntellitracProtocolDecoder#<init>(org.traccar.protocol.IntellitracProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.helper.LocationTree#<init>(java.util.List)
	CALLEE: org.traccar.helper.LocationTree#createTree(java.util.List,int)
CALLER: org.traccar.protocol.ArknavX8ProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setDate(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.helper.Parser#nextCoordinate()
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,java.lang.String)
CALLER: org.traccar.database.DataManager#addGeofence(org.traccar.model.Geofence)
	CALLEE: org.traccar.database.DataManager#getQuery(java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String,boolean)
	CALLEE: org.traccar.database.QueryBuilder#setObject(java.lang.Object)
	CALLEE: org.traccar.database.QueryBuilder#executeUpdate()
	CALLEE: org.traccar.model.Extensible#setId(long)
CALLER: org.traccar.protocol.IdplProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.protocol.ObdDongleProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: static org.traccar.protocol.ObdDongleProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,int,int,java.lang.String,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: static org.traccar.helper.BitUtil#check(long,int)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: static org.traccar.helper.BitUtil#to(int,int)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: static org.traccar.helper.BitUtil#from(int,int)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromMph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
CALLER: org.traccar.protocol.YwtProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.protocol.ProgressProtocolDecoder#requestArchive(org.jboss.netty.channel.Channel)
CALLER: org.traccar.protocol.CityeasyProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocol#setSupportedCommands(java.lang.String[])
CALLER: org.traccar.protocol.UlbotechProtocolDecoder#decodeAlarm(int)
	CALLEE: static org.traccar.helper.BitUtil#check(long,int)
CALLER: org.traccar.protocol.UproProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.protocol.Ardi01ProtocolDecoder#<init>(org.traccar.protocol.Ardi01Protocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.helper.LocationTree#findNearest(org.traccar.helper.LocationTree.Item,org.traccar.helper.LocationTree.Item,int)
	CALLEE: org.traccar.helper.LocationTree#findNearest(org.traccar.helper.LocationTree.Item,org.traccar.helper.LocationTree.Item,int)
CALLER: org.traccar.protocol.CarscopProtocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: org.traccar.helper.Log.NettyInternalLogger#error(java.lang.String)
	CALLEE: org.traccar.helper.Log.NettyInternalLogger#error(java.lang.String,java.lang.Throwable)
CALLER: org.traccar.WebDataHandler#formatRequest(org.traccar.model.Position)
	CALLEE: static org.traccar.Context#getIdentityManager()
	CALLEE: org.traccar.model.Message#getDeviceId()
	CALLEE: org.traccar.database.DeviceManager#getDeviceById(long)
	CALLEE: org.traccar.model.Extensible#getAttributes()
	CALLEE: static org.traccar.model.MiscFormatter#toJsonString(java.util.Map)
	CALLEE: org.traccar.model.Device#getName()
	CALLEE: org.traccar.model.Device#getUniqueId()
	CALLEE: org.traccar.model.Position#getProtocol()
	CALLEE: org.traccar.model.Position#getDeviceTime()
	CALLEE: org.traccar.model.Position#getFixTime()
	CALLEE: org.traccar.model.Position#getValid()
	CALLEE: org.traccar.model.Position#getLatitude()
	CALLEE: org.traccar.model.Position#getLongitude()
	CALLEE: org.traccar.model.Position#getAltitude()
	CALLEE: org.traccar.model.Position#getSpeed()
	CALLEE: org.traccar.model.Position#getCourse()
	CALLEE: org.traccar.WebDataHandler#calculateStatus(org.traccar.model.Position)
	CALLEE: org.traccar.model.Position#getAddress()
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
	CALLEE: static org.traccar.WebDataHandler#formatSentence(org.traccar.model.Position)
CALLER: org.traccar.protocol.PiligrimProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.PiligrimProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.DateBuilder#setDay(int)
	CALLEE: org.traccar.helper.DateBuilder#setMonth(int)
	CALLEE: org.traccar.helper.DateBuilder#setYear(int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: static org.traccar.helper.BitUtil#check(long,int)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
CALLER: org.traccar.api.resource.DeviceGeofenceResource#add(org.traccar.model.DeviceGeofence)
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.api.BaseResource#getUserId()
	CALLEE: org.traccar.database.PermissionsManager#checkReadonly(long)
	CALLEE: org.traccar.model.DeviceGeofence#getDeviceId()
	CALLEE: org.traccar.database.PermissionsManager#checkDevice(long,long)
	CALLEE: org.traccar.model.DeviceGeofence#getGeofenceId()
	CALLEE: org.traccar.database.PermissionsManager#checkGeofence(long,long)
	CALLEE: static org.traccar.Context#getDataManager()
	CALLEE: org.traccar.database.DataManager#linkDeviceGeofence(long,long)
	CALLEE: static org.traccar.Context#getGeofenceManager()
	CALLEE: org.traccar.database.GeofenceManager#refresh()
CALLER: org.traccar.database.GroupTree.TreeNode#equals(java.lang.Object)
	CALLEE: org.traccar.model.Extensible#getId()
CALLER: org.traccar.protocol.Xt013Protocol#<init>()
	CALLEE: org.traccar.BaseProtocol#<init>(java.lang.String)
CALLER: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String,boolean)
	CALLEE: org.traccar.database.QueryBuilder#<init>(javax.sql.DataSource,java.lang.String,boolean)
CALLER: org.traccar.protocol.AstraProtocolDecoder#<init>(org.traccar.protocol.AstraProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.location.OpenCellIdLocationProvider#getLocation(int,int,long,long,org.traccar.location.LocationProvider.LocationProviderCallback)
	CALLEE: static org.traccar.Context#getAsyncHttpClient()
CALLER: org.traccar.database.DeviceManager#lookupConfigString(long,java.lang.String,java.lang.String)
	CALLEE: org.traccar.database.DeviceManager#lookupAttribute(long,java.lang.String,boolean)
CALLER: org.traccar.BaseProtocolEncoder#encode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.Gps103ProtocolEncoder#encodeCommand(org.traccar.model.Command)
	CALLEE: org.traccar.protocol.CarcellProtocolEncoder#encodeCommand(org.traccar.model.Command)
	CALLEE: org.traccar.protocol.MeitrackProtocolEncoder#encodeCommand(org.traccar.model.Command)
	CALLEE: org.traccar.protocol.H02ProtocolEncoder#encodeCommand(org.traccar.model.Command)
	CALLEE: org.traccar.protocol.WondexProtocolEncoder#encodeCommand(org.traccar.model.Command)
	CALLEE: org.traccar.protocol.SuntechProtocolEncoder#encodeCommand(org.traccar.model.Command)
	CALLEE: org.traccar.protocol.Pt502ProtocolEncoder#encodeCommand(org.traccar.model.Command)
	CALLEE: org.traccar.protocol.MiniFinderProtocolEncoder#encodeCommand(org.traccar.model.Command)
	CALLEE: org.traccar.protocol.WatchProtocolEncoder#encodeCommand(org.traccar.model.Command)
	CALLEE: org.traccar.protocol.TotemProtocolEncoder#encodeCommand(org.traccar.model.Command)
	CALLEE: org.traccar.protocol.WialonProtocolEncoder#encodeCommand(org.traccar.model.Command)
	CALLEE: org.traccar.protocol.Gl200ProtocolEncoder#encodeCommand(org.traccar.model.Command)
	CALLEE: org.traccar.protocol.MeiligaoProtocolEncoder#encodeCommand(org.traccar.model.Command)
	CALLEE: org.traccar.protocol.Gt06ProtocolEncoder#encodeCommand(org.traccar.model.Command)
	CALLEE: org.traccar.protocol.TeltonikaProtocolEncoder#encodeCommand(org.traccar.model.Command)
	CALLEE: org.traccar.protocol.KhdProtocolEncoder#encodeCommand(org.traccar.model.Command)
	CALLEE: org.traccar.protocol.NoranProtocolEncoder#encodeCommand(org.traccar.model.Command)
	CALLEE: org.traccar.protocol.T800xProtocolEncoder#encodeCommand(org.traccar.model.Command)
	CALLEE: org.traccar.protocol.RuptelaProtocolEncoder#encodeCommand(org.traccar.model.Command)
	CALLEE: org.traccar.protocol.GranitProtocolEncoder#encodeCommand(org.traccar.model.Command)
	CALLEE: org.traccar.protocol.CityeasyProtocolEncoder#encodeCommand(org.traccar.model.Command)
	CALLEE: org.traccar.model.Message#getDeviceId()
	CALLEE: org.traccar.BaseProtocolEncoder#getUniqueId(long)
	CALLEE: org.traccar.model.Message#getType()
	CALLEE: static org.traccar.helper.Log#info(java.lang.String)
CALLER: org.traccar.protocol.JpKorjarProtocolDecoder#decode(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.helper.Parser#<init>(java.util.regex.Pattern,java.lang.String)
	CALLEE: org.traccar.helper.Parser#matches()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocolName()
	CALLEE: org.traccar.model.Position#setProtocol(java.lang.String)
	CALLEE: org.traccar.helper.Parser#next()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceSession(org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.String[])
	CALLEE: org.traccar.DeviceSession#getDeviceId()
	CALLEE: org.traccar.model.Message#setDeviceId(long)
	CALLEE: org.traccar.helper.DateBuilder#<init>()
	CALLEE: org.traccar.helper.Parser#nextInt()
	CALLEE: org.traccar.helper.DateBuilder#setDate(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#setTime(int,int,int)
	CALLEE: org.traccar.helper.DateBuilder#getDate()
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.helper.Parser#nextCoordinate(org.traccar.helper.Parser.CoordinateFormat)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.helper.Parser#nextDouble()
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,double)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Extensible#set(java.lang.String,int)
	CALLEE: org.traccar.helper.Parser#nextInt(int)
CALLER: static org.traccar.CharacterDelimiterFrameDecoder#convertDelimiters(java.lang.String[])
	CALLEE: static org.traccar.CharacterDelimiterFrameDecoder#createDelimiter(java.lang.String)
CALLER: static org.traccar.helper.ObdDecoder#decodeCodes(java.lang.String)
	CALLEE: static org.traccar.helper.ObdDecoder#createEntry(java.lang.String,java.lang.Object)
CALLER: org.traccar.protocol.TramigoProtocolDecoder#<init>(org.traccar.protocol.TramigoProtocol)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(org.traccar.Protocol)
CALLER: org.traccar.geofence.GeofencePolygon#containsPoint(double,double)
	CALLEE: org.traccar.geofence.GeofencePolygon.Coordinate#getLon360()
CALLER: org.traccar.protocol.AplicomProtocol#initTrackerServers(java.util.List)
	CALLEE: org.traccar.BaseProtocol#getName()
CALLER: org.traccar.TrackerServer#setEndianness(java.nio.ByteOrder)
