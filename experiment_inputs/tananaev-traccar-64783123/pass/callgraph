CALLER: org.traccar.protocol.TramigoFrameDecoder#<init>()
CALLER: org.traccar.ServerManager#initXt013Server(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.protocol.EelinkProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.EelinkProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,int,int)
	CALLEE: static org.traccar.helper.ChannelBufferTools#readHexString(org.jboss.netty.buffer.ChannelBuffer,int)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#hasDeviceId()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setValid(boolean)
CALLER: org.traccar.model.Device#create()
	CALLEE: org.traccar.model.Device#create()
CALLER: org.traccar.BaseProtocolDecoder#handleUpstream(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.ChannelEvent)
	CALLEE: org.traccar.BaseProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.Gps103ProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.XirgoProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.GoSafeProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.NoranProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.TytanProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.CastelProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.protocol.AtrackProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
CALLER: org.traccar.protocol.CalAmpProtocolDecoder#handleUpstream(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.ChannelEvent)
	CALLEE: org.traccar.protocol.CalAmpProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object,java.net.SocketAddress)
CALLER: org.traccar.ServerManager#initIntellitracServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.protocol.IntellitracFrameDecoder#<init>(int)
CALLER: org.traccar.protocol.HaicomProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
CALLER: org.traccar.ServerManager#initGlobalSatServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.database.DataCache#removeListener(long,org.traccar.database.DataCache.DataCacheListener)
CALLER: org.traccar.protocol.V680ProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.http.WebServer#start()
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: org.traccar.CharacterDelimiterFrameDecoder#<init>(int,java.lang.String)
	CALLEE: static org.traccar.CharacterDelimiterFrameDecoder#createDelimiter(java.lang.String)
CALLER: static org.traccar.helper.Log#error(java.lang.String)
	CALLEE: static org.traccar.helper.Log#getLogger()
CALLER: org.traccar.protocol.T55ProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.protocol.Tk103ProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
CALLER: org.traccar.ServerManager#initAtrackServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.database.DataManager#addPosition(org.traccar.model.Position)
	CALLEE: org.traccar.database.NamedParameterStatement#prepare()
	CALLEE: org.traccar.database.NamedParameterStatement.Params#executeUpdate(org.traccar.database.NamedParameterStatement.ResultSetProcessor)
CALLER: org.traccar.model.Device#create()
CALLER: org.traccar.ServerManager#initH02Server(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.ServerManager#initEasyTrackServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.helper.DriverDelegate#jdbcCompliant()
	CALLEE: org.traccar.helper.DriverDelegate#jdbcCompliant()
CALLER: org.traccar.protocol.UlbotechProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.database.NamedParameterStatement.Params#setType(java.lang.String,java.lang.Integer)
CALLER: org.traccar.ServerManager#initBceServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
	CALLEE: org.traccar.TrackerServer#setEndianness(java.nio.ByteOrder)
CALLER: org.traccar.protocol.PiligrimProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,java.lang.String)
CALLER: org.traccar.protocol.Pt502ProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.protocol.EelinkProtocolDecoder#readImei(org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.ServerManager#initCalAmpServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.database.PermissionsManager#getNotNull(long)
CALLER: static org.traccar.GlobalChannelFactory#getFactory()
CALLER: static org.traccar.helper.Log#warning(java.lang.String)
	CALLEE: static org.traccar.helper.Log#getLogger()
CALLER: org.traccar.database.DataManager#createDatabaseSchema()
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#executeUpdate()
	CALLEE: org.traccar.model.User#setName(java.lang.String)
	CALLEE: org.traccar.model.User#setEmail(java.lang.String)
	CALLEE: org.traccar.model.User#setPassword(java.lang.String)
	CALLEE: org.traccar.model.User#setAdmin(boolean)
	CALLEE: org.traccar.database.DataManager#addUser(org.traccar.model.User)
	CALLEE: org.traccar.model.User#getId()
	CALLEE: org.traccar.database.DataManager#mockData(long)
CALLER: org.traccar.ServerManager#initNoranServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
	CALLEE: org.traccar.TrackerServer#setEndianness(java.nio.ByteOrder)
CALLER: org.traccar.database.NamedParameterStatement.Params#setTimestamp(java.lang.String,java.util.Date)
	CALLEE: org.traccar.database.NamedParameterStatement.Params#setType(java.lang.String,java.lang.Integer)
	CALLEE: org.traccar.database.NamedParameterStatement.Params#setValue(java.lang.String,java.lang.Object)
CALLER: org.traccar.database.QueryBuilder#executeUpdate()
CALLER: org.traccar.protocol.AutoFonProtocolDecoder#decodePosition(org.jboss.netty.buffer.ChannelBuffer,boolean)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: static org.traccar.protocol.AutoFonProtocolDecoder#convertCoordinate(int)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
CALLER: org.traccar.protocol.CarTrackProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
CALLER: org.traccar.protocol.Ardi01ProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
CALLER: static org.traccar.protocol.Avl301ProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,int)
CALLER: org.traccar.database.QueryBuilder#setDouble(java.lang.String,double)
	CALLEE: org.traccar.database.QueryBuilder#indexes(java.lang.String)
CALLER: org.traccar.ServerManager#initT55Server(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.model.Data#create()
	CALLEE: org.traccar.model.Data#create()
CALLER: org.traccar.protocol.CellocatorProtocolDecoder#sendReply(org.jboss.netty.channel.Channel,long,byte)
CALLER: org.traccar.protocol.TeltonikaProtocolDecoder#parseLocation(org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: static org.traccar.protocol.TeltonikaProtocolDecoder#checkBit(long,int)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: org.traccar.model.Position#setValid(boolean)
CALLER: org.traccar.database.DataManager#initDatabase(java.util.Properties)
	CALLEE: org.traccar.helper.DriverDelegate#<init>(java.sql.Driver)
	CALLEE: org.traccar.database.NamedParameterStatement#<init>(java.lang.String,javax.sql.DataSource)
	CALLEE: org.traccar.database.NamedParameterStatement#<init>(java.lang.String,javax.sql.DataSource,int)
	CALLEE: org.traccar.database.DataManager#createDatabaseSchema()
CALLER: org.traccar.protocol.Xexun2ProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setAltitude(double)
CALLER: org.traccar.protocol.MeiligaoProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.protocol.MiniFinderProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#hasDeviceId()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setAltitude(double)
CALLER: org.traccar.http.AsyncServlet#async(javax.servlet.AsyncContext)
	CALLEE: org.traccar.model.User#getId()
	CALLEE: static org.traccar.Context#getPermissionsManager()
	CALLEE: org.traccar.database.PermissionsManager#allowedDevices(long)
	CALLEE: org.traccar.http.AsyncServlet.AsyncSession#request(javax.servlet.AsyncContext)
CALLER: org.traccar.protocol.NavisProtocolDecoder#processArray(org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.protocol.NavisProtocolDecoder#parsePosition(org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.protocol.NavisProtocolDecoder.ParseResult#getPosition()
	CALLEE: org.traccar.model.Position#getFixTime()
	CALLEE: org.traccar.protocol.NavisProtocolDecoder#sendReply(org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.ServerManager#initFreedomServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.protocol.NoranProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.http.AsyncServlet.AsyncSession#request(javax.servlet.AsyncContext)
	CALLEE: org.traccar.http.AsyncServlet.AsyncSession#logEvent(java.lang.String)
	CALLEE: org.traccar.http.AsyncServlet.AsyncSession#response()
	CALLEE: static org.traccar.GlobalTimer#getTimer()
CALLER: org.traccar.http.AsyncServlet#service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
	CALLEE: org.traccar.http.AsyncServlet#async(javax.servlet.AsyncContext)
CALLER: org.traccar.protocol.TotemProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.protocol.Xt013ProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.protocol.GpsGateProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.database.DataCache#addListener(java.util.Collection,org.traccar.database.DataCache.DataCacheListener)
	CALLEE: org.traccar.database.DataCache#addListener(long,org.traccar.database.DataCache.DataCacheListener)
CALLER: org.traccar.protocol.MeiligaoFrameDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.protocol.PiligrimProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.PiligrimProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
CALLER: org.traccar.ServerManager#initStl060Server(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.protocol.NavigilProtocolDecoder#parseUnitReport(org.jboss.netty.buffer.ChannelBuffer,int)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: static org.traccar.protocol.NavigilProtocolDecoder#convertTimestamp(long)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
CALLER: org.traccar.FilterHandler#<init>()
	CALLEE: static org.traccar.Context#getProps()
CALLER: org.traccar.protocol.ApelProtocolDecoder#sendSimpleMessage(org.jboss.netty.channel.Channel,short)
	CALLEE: static org.traccar.helper.Crc#crc32(java.nio.ByteBuffer)
CALLER: org.traccar.protocol.WialonProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.protocol.WialonProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,java.lang.String,java.lang.Integer)
	CALLEE: org.traccar.protocol.WialonProtocolDecoder#decodePosition(java.lang.String)
CALLER: org.traccar.database.NamedParameterStatement.Params#executeUpdate()
	CALLEE: org.traccar.database.NamedParameterStatement.Params#executeUpdate(org.traccar.database.NamedParameterStatement.ResultSetProcessor)
CALLER: org.traccar.protocol.NavisProtocolDecoder#processHandshake(org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.protocol.NavisProtocolDecoder#sendReply(org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.ServerManager#initApelServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
	CALLEE: org.traccar.TrackerServer#setEndianness(java.nio.ByteOrder)
CALLER: org.traccar.ServerManager#initOrionServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
	CALLEE: org.traccar.TrackerServer#setEndianness(java.nio.ByteOrder)
CALLER: org.traccar.protocol.IntellitracProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: static org.traccar.protocol.BceFrameDecoder#checksum(org.jboss.netty.buffer.ChannelBuffer,int)
CALLER: org.traccar.database.QueryBuilder#indexes(java.lang.String)
CALLER: org.traccar.ServerManager#initTytanServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.protocol.BceProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.ServerManager#initPt502Server(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
	CALLEE: org.traccar.TrackerServer#setEndianness(java.nio.ByteOrder)
CALLER: org.traccar.protocol.GalileoProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.database.NamedParameterStatement#<init>(java.lang.String,javax.sql.DataSource,int)
	CALLEE: static org.traccar.database.NamedParameterStatement#parse(java.lang.String,java.util.Map)
CALLER: org.traccar.protocol.VisiontekProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String,boolean)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: org.traccar.model.Position#setValid(boolean)
CALLER: org.traccar.protocol.BoxProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: org.traccar.model.Position#setValid(boolean)
CALLER: org.traccar.protocol.Mta6ProtocolDecoder.TimeReader#readTime(org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.protocol.Mta6ProtocolDecoder.FloatReader#readFloat(org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.protocol.EnforaProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.String)
	CALLEE: static org.traccar.helper.ChannelBufferTools#find(org.jboss.netty.buffer.ChannelBuffer,java.lang.Integer,java.lang.Integer,java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
CALLER: org.traccar.ServerManager#initMeitrackServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
	CALLEE: org.traccar.TrackerServer#setEndianness(java.nio.ByteOrder)
CALLER: static org.traccar.protocol.Gt06ProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,int,int)
	CALLEE: static org.traccar.helper.Crc#crc16Ccitt(java.nio.ByteBuffer)
CALLER: org.traccar.protocol.Avl301ProtocolDecoder#readImei(org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.geocode.GisgraphyReverseGeocoder#<init>()
	CALLEE: org.traccar.geocode.GisgraphyReverseGeocoder#<init>(java.lang.String)
CALLER: org.traccar.protocol.Pt502FrameDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: static org.traccar.helper.ChannelBufferTools#find(org.jboss.netty.buffer.ChannelBuffer,java.lang.Integer,java.lang.Integer,java.lang.String)
CALLER: org.traccar.ServerManager#initGt06Server(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.protocol.RuptelaProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.http.PositionServlet#get(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
	CALLEE: static org.traccar.Context#getDataManager()
	CALLEE: org.traccar.http.BaseServlet#getUserId(javax.servlet.http.HttpSession)
	CALLEE: static org.traccar.http.JsonConverter#parseDate(java.lang.String)
	CALLEE: org.traccar.database.DataManager#getPositions(long,long,java.util.Date,java.util.Date)
	CALLEE: static org.traccar.http.JsonConverter#arrayToJson(java.util.Collection)
	CALLEE: org.traccar.http.BaseServlet#sendResponse(java.io.Writer,javax.json.JsonStructure)
CALLER: org.traccar.protocol.NavigilProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.protocol.NavigilProtocolDecoder#sendAcknowledgment(org.jboss.netty.channel.Channel,int)
	CALLEE: org.traccar.protocol.NavigilProtocolDecoder#parseUnitReport(org.jboss.netty.buffer.ChannelBuffer,int)
	CALLEE: org.traccar.protocol.NavigilProtocolDecoder#parseTg2Report(org.jboss.netty.buffer.ChannelBuffer,int)
	CALLEE: org.traccar.protocol.NavigilProtocolDecoder#parsePositionReport(org.jboss.netty.buffer.ChannelBuffer,int,long)
	CALLEE: org.traccar.protocol.NavigilProtocolDecoder#parsePositionReport2(org.jboss.netty.buffer.ChannelBuffer,int,long)
	CALLEE: org.traccar.protocol.NavigilProtocolDecoder#parseSnapshot4(org.jboss.netty.buffer.ChannelBuffer,int)
	CALLEE: org.traccar.protocol.NavigilProtocolDecoder#parseTrackingData(org.jboss.netty.buffer.ChannelBuffer,int,long)
CALLER: static org.traccar.database.NamedParameterStatement#parse(java.lang.String,java.util.Map)
CALLER: org.traccar.protocol.Gt02ProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.protocol.GlobalSatProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.GlobalSatProtocolDecoder#decodeOriginal(org.jboss.netty.channel.Channel,java.lang.String)
	CALLEE: org.traccar.protocol.GlobalSatProtocolDecoder#decodeAlternative(org.jboss.netty.channel.Channel,java.lang.String)
CALLER: org.traccar.http.DeviceServlet#add(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
	CALLEE: static org.traccar.Context#getDataManager()
	CALLEE: org.traccar.database.DataManager#addDevice(org.traccar.model.Device)
	CALLEE: org.traccar.http.BaseServlet#getUserId(javax.servlet.http.HttpSession)
	CALLEE: org.traccar.model.Device#getId()
	CALLEE: org.traccar.database.DataManager#linkDevice(long,long)
	CALLEE: org.traccar.http.BaseServlet#sendResponse(java.io.Writer,javax.json.JsonStructure)
CALLER: org.traccar.ServerManager#initEnforaServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.protocol.GotopProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.protocol.TrackboxProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.protocol.TrackboxProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
CALLER: org.traccar.protocol.NavigilProtocolDecoder#parseTg2Report(org.jboss.netty.buffer.ChannelBuffer,int)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: static org.traccar.protocol.NavigilProtocolDecoder#convertTimestamp(long)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
CALLER: org.traccar.protocol.AtrackFrameDecoder#<init>()
CALLER: org.traccar.protocol.TotemFrameDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.database.DataCache#update(org.traccar.model.Position)
	CALLEE: org.traccar.model.Event#getDeviceId()
CALLER: org.traccar.http.MainServlet#session(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
	CALLEE: org.traccar.http.BaseServlet#sendResponse(java.io.Writer,javax.json.JsonStructure)
	CALLEE: org.traccar.http.BaseServlet#sendResponse(java.io.Writer,boolean)
CALLER: org.traccar.protocol.AtrackFrameDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.protocol.NavigilProtocolDecoder#parsePositionReport2(org.jboss.netty.buffer.ChannelBuffer,int,long)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: static org.traccar.protocol.NavigilProtocolDecoder#convertTimestamp(long)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setValid(boolean)
CALLER: org.traccar.protocol.FreedomProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
CALLER: org.traccar.protocol.OrionFrameDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.ServerManager#initGl200Server(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.database.PermissionsManager#allowedDevices(long)
	CALLEE: org.traccar.database.PermissionsManager#getNotNull(long)
CALLER: org.traccar.protocol.Avl301ProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.Avl301ProtocolDecoder#readImei(org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: static org.traccar.protocol.Avl301ProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,int)
	CALLEE: org.traccar.BaseProtocolDecoder#hasDeviceId()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
CALLER: org.traccar.protocol.AplicomProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: static org.traccar.protocol.AplicomProtocolDecoder#imeiFromUnitId(long)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: static org.traccar.Context#getProps()
	CALLEE: static org.traccar.helper.ChannelBufferTools#readHexString(org.jboss.netty.buffer.ChannelBuffer,int)
CALLER: org.traccar.protocol.GalileoProtocolDecoder#sendReply(org.jboss.netty.channel.Channel,int)
CALLER: org.traccar.helper.DriverDelegate#connect(java.lang.String,java.util.Properties)
	CALLEE: org.traccar.helper.DriverDelegate#connect(java.lang.String,java.util.Properties)
CALLER: org.traccar.geocode.GoogleReverseGeocoder#getAddress(org.traccar.geocode.AddressFormat,double,double)
	CALLEE: org.traccar.geocode.Address#setHouse(java.lang.String)
	CALLEE: org.traccar.geocode.Address#setStreet(java.lang.String)
	CALLEE: org.traccar.geocode.Address#setSettlement(java.lang.String)
	CALLEE: org.traccar.geocode.Address#setDistrict(java.lang.String)
	CALLEE: org.traccar.geocode.Address#setState(java.lang.String)
	CALLEE: org.traccar.geocode.Address#setCountry(java.lang.String)
	CALLEE: org.traccar.geocode.Address#setPostcode(java.lang.String)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: org.traccar.protocol.IntellitracFrameDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.database.PermissionsManager#<init>()
	CALLEE: org.traccar.database.PermissionsManager#refresh()
CALLER: org.traccar.TrackerEventHandler#messageReceived(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.MessageEvent)
	CALLEE: org.traccar.TrackerEventHandler#processSinglePosition(org.traccar.model.Position)
	CALLEE: static org.traccar.Context#getDataManager()
	CALLEE: org.traccar.database.DataManager#updateLatestPosition(org.traccar.model.Position,java.lang.Long)
	CALLEE: static org.traccar.Context#getDataCache()
	CALLEE: org.traccar.database.DataCache#update(org.traccar.model.Position)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: org.traccar.DetectorHandler#messageReceived(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.MessageEvent)
	CALLEE: org.traccar.TrackerServer#getProtocol()
	CALLEE: org.traccar.TrackerServer#getPipelineFactory()
	CALLEE: org.traccar.BasePipelineFactory#getPipeline()
	CALLEE: org.traccar.DetectorHandler#checkPipeline(java.lang.String,org.jboss.netty.channel.ChannelPipeline,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: static org.traccar.helper.Log#info(java.lang.String)
CALLER: org.traccar.ServerManager#initRitiServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
	CALLEE: org.traccar.TrackerServer#setEndianness(java.nio.ByteOrder)
CALLER: org.traccar.http.WebServer#<init>()
	CALLEE: static org.traccar.Context#getProps()
	CALLEE: static org.traccar.Context#getDataManager()
	CALLEE: org.traccar.database.DataManager#getDataSource()
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: org.traccar.TrackerEventHandler#channelIdle(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.handler.timeout.IdleStateEvent)
	CALLEE: static org.traccar.helper.Log#info(java.lang.String)
CALLER: org.traccar.protocol.WondexFrameDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: static org.traccar.helper.ChannelBufferTools#find(org.jboss.netty.buffer.ChannelBuffer,java.lang.Integer,java.lang.Integer,java.lang.String)
CALLER: org.traccar.protocol.RuptelaProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
CALLER: org.traccar.protocol.MeitrackProtocolDecoder#decodeBinaryMessage(org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: static org.traccar.helper.ChannelBufferTools#find(org.jboss.netty.buffer.ChannelBuffer,java.lang.Integer,java.lang.Integer,java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
CALLER: org.traccar.ServerManager#initSkypatrolServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: static org.traccar.CharacterDelimiterFrameDecoder#createDelimiter(java.lang.String)
CALLER: org.traccar.model.Permission#create()
CALLER: org.traccar.protocol.NavigilProtocolDecoder#parsePositionReport(org.jboss.netty.buffer.ChannelBuffer,int,long)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: static org.traccar.protocol.NavigilProtocolDecoder#convertTimestamp(long)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setValid(boolean)
CALLER: org.traccar.ServerManager#initUlbotechServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.protocol.Xt7ProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
CALLER: org.traccar.protocol.GalileoProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.model.Position#getFixTime()
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: static org.traccar.protocol.GalileoProtocolDecoder#getTagLength(int)
	CALLEE: org.traccar.BaseProtocolDecoder#hasDeviceId()
	CALLEE: static org.traccar.helper.Log#warning(java.lang.String)
	CALLEE: org.traccar.protocol.GalileoProtocolDecoder#sendReply(org.jboss.netty.channel.Channel,int)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
CALLER: org.traccar.FilterHandler#filterInvalid(org.traccar.model.Position)
	CALLEE: org.traccar.model.Position#getValid()
CALLER: org.traccar.protocol.Mta6ProtocolDecoder#<init>(java.lang.String,boolean)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.protocol.Gl100ProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.protocol.MeitrackProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: static org.traccar.helper.ChannelBufferTools#find(org.jboss.netty.buffer.ChannelBuffer,java.lang.Integer,java.lang.Integer,java.lang.String)
	CALLEE: org.traccar.protocol.MeitrackProtocolDecoder#decodeBinaryMessage(org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.protocol.MeitrackProtocolDecoder#decodeRegularMessage(org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.protocol.KhdProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.protocol.KhdProtocolDecoder#readSerialNumber(org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: static org.traccar.helper.ChannelBufferTools#readHexInteger(org.jboss.netty.buffer.ChannelBuffer,int)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: static org.traccar.helper.ChannelBufferTools#readCoordinate(org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: static org.traccar.helper.Crc#xorChecksum(java.nio.ByteBuffer)
CALLER: org.traccar.ServerManager#initGalileoServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
	CALLEE: org.traccar.TrackerServer#setEndianness(java.nio.ByteOrder)
CALLER: static org.traccar.helper.Log#warning(java.lang.String,java.lang.Throwable)
	CALLEE: static org.traccar.helper.Log#getLogger()
CALLER: org.traccar.geocode.NominatimReverseGeocoder#<init>()
	CALLEE: org.traccar.geocode.NominatimReverseGeocoder#<init>(java.lang.String)
CALLER: org.traccar.model.Permission#create()
	CALLEE: org.traccar.model.Permission#create()
CALLER: org.traccar.ServerManager#initCastelServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
	CALLEE: org.traccar.TrackerServer#setEndianness(java.nio.ByteOrder)
CALLER: org.traccar.protocol.TotemProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
CALLER: org.traccar.helper.DriverDelegate#getMinorVersion()
	CALLEE: org.traccar.helper.DriverDelegate#getMinorVersion()
CALLER: org.traccar.protocol.UlbotechFrameDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.ServerManager#initTk102Server(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.database.QueryBuilder#<init>(javax.sql.DataSource,java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#parse(java.lang.String,java.util.Map)
CALLER: org.traccar.ServerManager#initXexunServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.database.DataManager#updateLatestPosition(org.traccar.model.Position,java.lang.Long)
	CALLEE: org.traccar.database.NamedParameterStatement#prepare()
	CALLEE: org.traccar.database.NamedParameterStatement.Params#setLong(java.lang.String,java.lang.Long)
	CALLEE: org.traccar.database.NamedParameterStatement.Params#executeUpdate()
CALLER: org.traccar.protocol.Tk102ProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.protocol.NavigilFrameDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.protocol.MiniFinderProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.model.Position#create()
CALLER: org.traccar.geocode.AddressFormat#parseObject(java.lang.String,java.text.ParsePosition)
	CALLEE: org.traccar.geocode.AddressFormat#parseObject(java.lang.String,java.text.ParsePosition)
CALLER: org.traccar.BasePipelineFactory.OpenChannelHandler#channelOpen(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.ChannelStateEvent)
	CALLEE: org.traccar.TrackerServer#getChannelGroup()
CALLER: org.traccar.protocol.Pt502ProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
CALLER: org.traccar.protocol.VisiontekProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.ServerManager#initTk103Server(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.protocol.FreedomProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.ServerManager#initNavigilServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
	CALLEE: org.traccar.TrackerServer#setEndianness(java.nio.ByteOrder)
CALLER: org.traccar.http.BaseServlet#sendResponse(java.io.Writer,java.lang.Exception)
CALLER: static org.traccar.Main#main(java.lang.String[])
	CALLEE: static org.traccar.Context#init(java.lang.String[])
	CALLEE: static org.traccar.helper.Log#info(java.lang.String)
	CALLEE: static org.traccar.helper.Log#logSystemInfo()
	CALLEE: static org.traccar.Context#getServerManager()
	CALLEE: org.traccar.ServerManager#start()
	CALLEE: static org.traccar.Context#getWebServer()
	CALLEE: org.traccar.http.WebServer#start()
CALLER: org.traccar.protocol.TytanProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.protocol.CalAmpProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object,java.net.SocketAddress)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#hasDeviceId()
	CALLEE: org.traccar.protocol.CalAmpProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,java.net.SocketAddress,int,int,int)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromCps(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: org.traccar.model.Position#setValid(boolean)
CALLER: org.traccar.protocol.Stl060ProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.protocol.AtrackProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.http.DeviceServlet#get(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
	CALLEE: static org.traccar.Context#getDataManager()
	CALLEE: org.traccar.http.BaseServlet#getUserId(javax.servlet.http.HttpSession)
	CALLEE: org.traccar.database.DataManager#getDevices(long)
	CALLEE: static org.traccar.http.JsonConverter#arrayToJson(java.util.Collection)
	CALLEE: org.traccar.http.BaseServlet#sendResponse(java.io.Writer,javax.json.JsonStructure)
CALLER: org.traccar.protocol.OrionProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.protocol.GpsGateProtocolDecoder#send(org.jboss.netty.channel.Channel,java.lang.String)
	CALLEE: static org.traccar.helper.Crc#nmeaChecksum(java.lang.String)
CALLER: static org.traccar.helper.ChannelBufferTools#readHexInteger(org.jboss.netty.buffer.ChannelBuffer,int)
CALLER: org.traccar.protocol.IntellitracProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
CALLER: org.traccar.protocol.NavigilProtocolDecoder#parseTrackingData(org.jboss.netty.buffer.ChannelBuffer,int,long)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: static org.traccar.protocol.NavigilProtocolDecoder#convertTimestamp(long)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
CALLER: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Event#setDeviceTime(java.util.Date)
CALLER: org.traccar.protocol.Mta6ProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,short,short)
CALLER: org.traccar.TrackerEventHandler#processSinglePosition(org.traccar.model.Position)
	CALLEE: static org.traccar.helper.Log#info(java.lang.String)
	CALLEE: org.traccar.model.Event#getDeviceId()
	CALLEE: org.traccar.model.Position#getFixTime()
	CALLEE: org.traccar.model.Position#getLatitude()
	CALLEE: org.traccar.model.Position#getLongitude()
	CALLEE: static org.traccar.Context#getDataManager()
	CALLEE: org.traccar.database.DataManager#addPosition(org.traccar.model.Position)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: org.traccar.ServerManager#initEelinkServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
CALLER: org.traccar.protocol.GlobalSatProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
	CALLEE: static org.traccar.Context#getProps()
CALLER: org.traccar.protocol.MeiligaoProtocolDecoder#getMeiligaoServer(org.jboss.netty.channel.Channel)
	CALLEE: static org.traccar.Context#getProps()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
CALLER: org.traccar.protocol.MeitrackProtocolDecoder#decodeRegularMessage(org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
CALLER: static org.traccar.protocol.GalileoProtocolDecoder#getTagLength(int)
CALLER: org.traccar.protocol.Stl060FrameDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: static org.traccar.helper.ChannelBufferTools#find(org.jboss.netty.buffer.ChannelBuffer,java.lang.Integer,java.lang.Integer,java.lang.String)
CALLER: org.traccar.ServerManager#initTlt2hServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.protocol.SkypatrolProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.TrackerServer#stop()
	CALLEE: org.traccar.TrackerServer#getChannelGroup()
CALLER: org.traccar.database.QueryBuilder#setDate(java.lang.String,java.util.Date)
	CALLEE: org.traccar.database.QueryBuilder#indexes(java.lang.String)
CALLER: org.traccar.ServerManager#initGt02Server(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.geocode.AddressFormat#<init>()
	CALLEE: org.traccar.geocode.AddressFormat#<init>(java.lang.String)
CALLER: org.traccar.CharacterDelimiterFrameDecoder#<init>(int,char)
	CALLEE: static org.traccar.CharacterDelimiterFrameDecoder#createDelimiter(char)
CALLER: org.traccar.database.NamedParameterStatement.Params#setBoolean(java.lang.String,java.lang.Boolean)
	CALLEE: org.traccar.database.NamedParameterStatement.Params#setType(java.lang.String,java.lang.Integer)
	CALLEE: org.traccar.database.NamedParameterStatement.Params#setValue(java.lang.String,java.lang.Object)
CALLER: static org.traccar.protocol.H02ProtocolDecoder#readCoordinate(org.jboss.netty.buffer.ChannelBuffer,boolean)
	CALLEE: static org.traccar.helper.ChannelBufferTools#readHexInteger(org.jboss.netty.buffer.ChannelBuffer,int)
CALLER: org.traccar.database.QueryBuilder#setLong(java.lang.String,long)
	CALLEE: org.traccar.database.QueryBuilder#indexes(java.lang.String)
CALLER: org.traccar.protocol.H02ProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.H02ProtocolDecoder#decodeText(java.lang.String)
	CALLEE: org.traccar.protocol.H02ProtocolDecoder#decodeBinary(org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.model.Event#getOther()
	CALLEE: static org.traccar.model.MiscFormatter#toXmlString(java.util.Map)
CALLER: org.traccar.protocol.ProgressProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.protocol.ProgressProtocolDecoder#loadLastIndex()
	CALLEE: org.traccar.BaseProtocolDecoder#hasDeviceId()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.protocol.ProgressProtocolDecoder#requestArchive(org.jboss.netty.channel.Channel)
CALLER: org.traccar.protocol.ApelProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.ApelProtocolDecoder#sendSimpleMessage(org.jboss.netty.channel.Channel,short)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.protocol.ApelProtocolDecoder#requestArchive(org.jboss.netty.channel.Channel)
	CALLEE: org.traccar.BaseProtocolDecoder#hasDeviceId()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
CALLER: org.traccar.protocol.EasyTrackProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
CALLER: org.traccar.protocol.Gt06ProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.Gt06ProtocolDecoder#readImei(org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: static org.traccar.protocol.Gt06ProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,int,int)
	CALLEE: org.traccar.BaseProtocolDecoder#hasDeviceId()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
CALLER: org.traccar.protocol.Jt600ProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.Jt600ProtocolDecoder#decodeNormalMessage(org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.protocol.Jt600ProtocolDecoder#decodeAlertMessage(org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.ServerManager#initYwtServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.database.NamedParameterStatement#<init>(java.lang.String,javax.sql.DataSource)
	CALLEE: org.traccar.database.NamedParameterStatement#<init>(java.lang.String,javax.sql.DataSource,int)
CALLER: org.traccar.helper.Log.NettyInternalLogger#warn(java.lang.String,java.lang.Throwable)
	CALLEE: static org.traccar.helper.Log#getLogger()
CALLER: org.traccar.protocol.Jt600FrameDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: static org.traccar.helper.ChannelBufferTools#find(org.jboss.netty.buffer.ChannelBuffer,java.lang.Integer,java.lang.Integer,java.lang.String)
CALLER: org.traccar.http.DeviceServlet#remove(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
	CALLEE: static org.traccar.Context#getDataManager()
	CALLEE: org.traccar.database.DataManager#removeDevice(org.traccar.model.Device)
	CALLEE: org.traccar.http.BaseServlet#sendResponse(java.io.Writer,boolean)
CALLER: org.traccar.TrackerServer#<init>(org.jboss.netty.bootstrap.Bootstrap,java.lang.String)
	CALLEE: static org.traccar.GlobalChannelFactory#getFactory()
	CALLEE: static org.traccar.GlobalChannelFactory#getDatagramFactory()
	CALLEE: static org.traccar.Context#getProps()
CALLER: org.traccar.protocol.YwtProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
CALLER: org.traccar.database.DataCache#getInitialState(java.util.Collection)
CALLER: org.traccar.protocol.LaipacProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.protocol.Tlt2hProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.protocol.GalileoFrameDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.database.DataManager#getDevices()
	CALLEE: org.traccar.database.NamedParameterStatement#prepare()
	CALLEE: org.traccar.database.NamedParameterStatement.Params#executeQuery(org.traccar.database.NamedParameterStatement.ResultSetProcessor)
CALLER: org.traccar.database.PermissionsManager#refresh()
	CALLEE: static org.traccar.Context#getDataManager()
	CALLEE: org.traccar.database.DataManager#getPermissions()
	CALLEE: org.traccar.model.Permission#getUserId()
	CALLEE: org.traccar.database.PermissionsManager#getNotNull(long)
	CALLEE: org.traccar.model.Permission#getDeviceId()
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: org.traccar.http.BaseServlet#service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
	CALLEE: org.traccar.http.DeviceServlet#handle(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
	CALLEE: org.traccar.http.PositionServlet#handle(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
	CALLEE: org.traccar.http.MainServlet#handle(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
	CALLEE: org.traccar.http.BaseServlet#sendResponse(java.io.Writer,java.lang.Exception)
CALLER: org.traccar.protocol.MegastekProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.protocol.Ev603ProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.FilterHandler#filterZero(org.traccar.model.Position)
	CALLEE: org.traccar.model.Position#getLatitude()
	CALLEE: org.traccar.model.Position#getLongitude()
CALLER: org.traccar.protocol.Xexun2ProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.helper.Log.NettyInternalLogger#warn(java.lang.String)
	CALLEE: org.traccar.helper.Log.NettyInternalLogger#warn(java.lang.String,java.lang.Throwable)
CALLER: org.traccar.protocol.NoranProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
CALLER: org.traccar.protocol.Gt06FrameDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.protocol.XirgoProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromMph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setValid(boolean)
CALLER: org.traccar.ServerManager#initSanavServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.ServerManager#initCarscopServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.ServerManager#initJt600Server(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.http.BaseServlet#sendResponse(java.io.Writer,javax.json.JsonStructure)
CALLER: org.traccar.protocol.XexunProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
CALLER: org.traccar.protocol.WialonProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.ServerManager#initGoSafeServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.protocol.AutoFonProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.CharacterDelimiterFrameDecoder#<init>(int,java.lang.String[])
	CALLEE: static org.traccar.CharacterDelimiterFrameDecoder#convertDelimiters(java.lang.String[])
CALLER: static org.traccar.protocol.MeiligaoProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer,int,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: static org.traccar.helper.Crc#crc16X25Ccitt(java.nio.ByteBuffer)
CALLER: org.traccar.protocol.NavigilProtocolDecoder#sendAcknowledgment(org.jboss.netty.channel.Channel,int)
	CALLEE: static org.traccar.helper.Crc#crc16X25Ccitt(java.nio.ByteBuffer)
CALLER: org.traccar.protocol.MtxProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.ServerManager#initArdi01Server(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.protocol.NavisProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.ServerManager#initMeiligaoServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.protocol.T55ProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#hasDeviceId()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
CALLER: org.traccar.helper.DriverDelegate#acceptsURL(java.lang.String)
	CALLEE: org.traccar.helper.DriverDelegate#acceptsURL(java.lang.String)
CALLER: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
	CALLEE: static org.traccar.Context#getProps()
CALLER: org.traccar.ServerManager#initCarTrackServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.protocol.EelinkProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.ServerManager#initTopflytechServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.protocol.CellocatorProtocolDecoder#readImei(org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.protocol.Gps103ProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.protocol.Tr20ProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
CALLER: org.traccar.protocol.Pt3000ProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.protocol.MaxonProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
CALLER: org.traccar.TrackerEventHandler#channelDisconnected(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.ChannelStateEvent)
	CALLEE: static org.traccar.helper.Log#info(java.lang.String)
CALLER: org.traccar.protocol.CarscopProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.ServerManager#initGpsGateServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.ServerManager#initTeltonikaServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.ReverseGeocoderHandler#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.model.Position#getValid()
	CALLEE: org.traccar.model.Position#getLatitude()
	CALLEE: org.traccar.model.Position#getLongitude()
	CALLEE: org.traccar.geocode.NominatimReverseGeocoder#getAddress(org.traccar.geocode.AddressFormat,double,double)
	CALLEE: org.traccar.geocode.GisgraphyReverseGeocoder#getAddress(org.traccar.geocode.AddressFormat,double,double)
	CALLEE: org.traccar.geocode.GoogleReverseGeocoder#getAddress(org.traccar.geocode.AddressFormat,double,double)
	CALLEE: org.traccar.model.Position#setAddress(java.lang.String)
CALLER: org.traccar.ServerManager#initWondexServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: static org.traccar.helper.ChannelBufferTools#find(org.jboss.netty.buffer.ChannelBuffer,java.lang.Integer,java.lang.Integer,java.lang.String)
CALLER: static org.traccar.helper.Crc#crc16CcittSeed(java.nio.ByteBuffer,int)
	CALLEE: static org.traccar.helper.Crc#crc16Reflected(java.nio.ByteBuffer,int,int[])
CALLER: org.traccar.database.PermissionsManager#checkDevices(long,java.util.Collection)
	CALLEE: org.traccar.database.PermissionsManager#getNotNull(long)
CALLER: static org.traccar.model.MiscFormatter#toJson(java.util.Map)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.String)
CALLER: org.traccar.ServerManager#initHaicomServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: static org.traccar.protocol.NavisProtocolDecoder#checksum(org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.ServerManager#initWialonServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.TrackerEventHandler#exceptionCaught(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.ExceptionEvent)
	CALLEE: static org.traccar.helper.Log#info(java.lang.String)
CALLER: org.traccar.database.DataManager#<init>(java.util.Properties)
	CALLEE: org.traccar.database.DataManager#initDatabase(java.util.Properties)
CALLER: org.traccar.ServerManager#initTrackboxServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: static org.traccar.helper.Log#warning(java.lang.Throwable)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.String,java.lang.Throwable)
CALLER: org.traccar.database.DataCache#addListener(long,org.traccar.database.DataCache.DataCacheListener)
CALLER: org.traccar.protocol.SyrusProtocolDecoder#<init>(java.lang.String,boolean)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.protocol.OsmAndProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.protocol.Gl200ProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.protocol.TopflytechProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: static org.traccar.GlobalChannelFactory#release()
CALLER: org.traccar.ServerManager#initTelikServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.protocol.XexunFrameDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: static org.traccar.helper.ChannelBufferTools#find(org.jboss.netty.buffer.ChannelBuffer,java.lang.Integer,java.lang.Integer,java.lang.String)
CALLER: org.traccar.protocol.SanavProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: static org.traccar.protocol.AtrackProtocolDecoder#readString(org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.database.DataManager#getPositions(long,long,java.util.Date,java.util.Date)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#setLong(java.lang.String,long)
	CALLEE: org.traccar.database.QueryBuilder#setDate(java.lang.String,java.util.Date)
CALLER: org.traccar.protocol.Jt600ProtocolDecoder#decodeAlertMessage(org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
CALLER: org.traccar.helper.DriverDelegate#getPropertyInfo(java.lang.String,java.util.Properties)
	CALLEE: org.traccar.helper.DriverDelegate#getPropertyInfo(java.lang.String,java.util.Properties)
CALLER: org.traccar.ServerManager#initCellocatorServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
	CALLEE: org.traccar.TrackerServer#setEndianness(java.nio.ByteOrder)
CALLER: org.traccar.protocol.GoSafeProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
CALLER: org.traccar.protocol.CarscopProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#hasDeviceId()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
CALLER: org.traccar.protocol.MtxProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
CALLER: org.traccar.protocol.H02ProtocolDecoder#decodeText(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
CALLER: static org.traccar.model.MiscFormatter#toJsonString(java.util.Map)
	CALLEE: static org.traccar.model.MiscFormatter#toJson(java.util.Map)
CALLER: org.traccar.DetectorHandler#checkPipeline(java.lang.String,org.jboss.netty.channel.ChannelPipeline,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: static org.traccar.helper.Log#info(java.lang.String)
CALLER: org.traccar.protocol.AplicomFrameDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.http.MainServlet#login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
	CALLEE: static org.traccar.Context#getDataManager()
	CALLEE: org.traccar.database.DataManager#login(java.lang.String,java.lang.String)
	CALLEE: org.traccar.http.BaseServlet#sendResponse(java.io.Writer,javax.json.JsonStructure)
	CALLEE: org.traccar.http.BaseServlet#sendResponse(java.io.Writer,boolean)
CALLER: org.traccar.protocol.GlobalSatProtocolDecoder#decodeAlternative(org.jboss.netty.channel.Channel,java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
CALLER: org.traccar.protocol.TramigoFrameDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.protocol.GatorProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: static org.traccar.helper.ChannelBufferTools#readHexInteger(org.jboss.netty.buffer.ChannelBuffer,int)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: static org.traccar.helper.ChannelBufferTools#readCoordinate(org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
CALLER: org.traccar.BasePipelineFactory#getPipeline()
	CALLEE: static org.traccar.GlobalTimer#getTimer()
	CALLEE: static org.traccar.Context#isLoggerEnabled()
	CALLEE: static org.traccar.Context#getReverseGeocoder()
	CALLEE: org.traccar.ReverseGeocoderHandler#<init>(org.traccar.geocode.ReverseGeocoder,boolean)
CALLER: org.traccar.protocol.M2mProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.ServerManager#init()
	CALLEE: org.traccar.ServerManager#initGps103Server(java.lang.String)
	CALLEE: org.traccar.ServerManager#initTk103Server(java.lang.String)
	CALLEE: org.traccar.ServerManager#initGl100Server(java.lang.String)
	CALLEE: org.traccar.ServerManager#initGl200Server(java.lang.String)
	CALLEE: org.traccar.ServerManager#initT55Server(java.lang.String)
	CALLEE: org.traccar.ServerManager#initXexunServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initTotemServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initEnforaServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initMeiligaoServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initMaxonServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initSuntechServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initProgressServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initH02Server(java.lang.String)
	CALLEE: org.traccar.ServerManager#initJt600Server(java.lang.String)
	CALLEE: org.traccar.ServerManager#initEv603Server(java.lang.String)
	CALLEE: org.traccar.ServerManager#initV680Server(java.lang.String)
	CALLEE: org.traccar.ServerManager#initPt502Server(java.lang.String)
	CALLEE: org.traccar.ServerManager#initTr20Server(java.lang.String)
	CALLEE: org.traccar.ServerManager#initNavisServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initMeitrackServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initSkypatrolServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initGt02Server(java.lang.String)
	CALLEE: org.traccar.ServerManager#initGt06Server(java.lang.String)
	CALLEE: org.traccar.ServerManager#initMegastekServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initNavigilServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initGpsGateServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initTeltonikaServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initMta6Server(java.lang.String)
	CALLEE: org.traccar.ServerManager#initMta6CanServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initTlt2hServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initSyrusServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initWondexServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initCellocatorServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initGalileoServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initYwtServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initTk102Server(java.lang.String)
	CALLEE: org.traccar.ServerManager#initIntellitracServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initXt7Server(java.lang.String)
	CALLEE: org.traccar.ServerManager#initWialonServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initCarscopServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initApelServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initManPowerServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initGlobalSatServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initAtrackServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initPt3000Server(java.lang.String)
	CALLEE: org.traccar.ServerManager#initRuptelaServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initTopflytechServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initLaipacServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initAplicomServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initGotopServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initSanavServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initGatorServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initNoranServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initM2mServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initOsmAndServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initEasyTrackServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initTaipServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initKhdServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initPiligrimServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initStl060Server(java.lang.String)
	CALLEE: org.traccar.ServerManager#initCarTrackServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initMiniFinderServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initHaicomServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initEelinkServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initBoxServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initFreedomServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initTelikServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initTrackboxServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initVisiontekServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initOrionServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initRitiServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initUlbotechServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initTramigoServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initTr900Server(java.lang.String)
	CALLEE: org.traccar.ServerManager#initArdi01Server(java.lang.String)
	CALLEE: org.traccar.ServerManager#initXt013Server(java.lang.String)
	CALLEE: org.traccar.ServerManager#initAutoFonServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initGoSafeServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initAutoFon45Server(java.lang.String)
	CALLEE: org.traccar.ServerManager#initBceServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initXirgoServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initCalAmpServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initMtxServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initTytanServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initAvl301Server(java.lang.String)
	CALLEE: org.traccar.ServerManager#initCastelServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#initProtocolDetector()
CALLER: org.traccar.protocol.Mta6ProtocolDecoder#parseFormatA1(org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: static org.traccar.protocol.Mta6ProtocolDecoder#checkBit(long,int)
	CALLEE: org.traccar.protocol.Mta6ProtocolDecoder.FloatReader#readFloat(org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.protocol.Mta6ProtocolDecoder.TimeReader#readTime(org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: org.traccar.model.Position#setValid(boolean)
CALLER: org.traccar.protocol.AutoFon45ProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.protocol.OrionProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: static org.traccar.protocol.OrionProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: static org.traccar.protocol.OrionProtocolDecoder#convertCoordinate(int)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setValid(boolean)
CALLER: org.traccar.protocol.Stl060ProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: org.traccar.model.Position#setValid(boolean)
CALLER: org.traccar.ServerManager#initLaipacServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.protocol.TelikProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.TrackerServer#start()
	CALLEE: org.traccar.TrackerServer#getChannelGroup()
CALLER: static org.traccar.protocol.OrionProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.helper.Log.NettyInternalLogger#error(java.lang.String,java.lang.Throwable)
	CALLEE: static org.traccar.helper.Log#getLogger()
CALLER: org.traccar.protocol.BceFrameDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: static org.traccar.protocol.BceFrameDecoder#checksum(org.jboss.netty.buffer.ChannelBuffer,int)
CALLER: static org.traccar.helper.Crc#crc16X25Ccitt(java.nio.ByteBuffer)
	CALLEE: static org.traccar.helper.Crc#crc16Unreflected(java.nio.ByteBuffer,int,int[])
CALLER: org.traccar.protocol.TeltonikaProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.protocol.CastelProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: static org.traccar.helper.Crc#crc16Ccitt(java.nio.ByteBuffer)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setValid(boolean)
CALLER: org.traccar.protocol.Gl100ProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
CALLER: org.traccar.protocol.MeitrackProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.FilterHandler#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.FilterHandler#filter(org.traccar.model.Position)
CALLER: org.traccar.ServerManager#initTr900Server(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.protocol.EelinkProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,int,int)
CALLER: org.traccar.ServerManager#initBoxServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: static org.traccar.helper.ChannelBufferTools#readHexString(org.jboss.netty.buffer.ChannelBuffer,int)
CALLER: org.traccar.ServerManager#initAutoFon45Server(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: static org.traccar.GlobalTimer#release()
CALLER: org.traccar.protocol.GoSafeProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.TrackerServer#getPipelineFactory()
CALLER: org.traccar.database.DataManager#getDevices(long)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#setLong(java.lang.String,long)
CALLER: org.traccar.protocol.Tr900ProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: static org.traccar.helper.Log#getLogger()
CALLER: org.traccar.ServerManager#initXirgoServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.protocol.KhdProtocolDecoder#readSerialNumber(org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.model.Position#create()
	CALLEE: org.traccar.model.Position#create()
CALLER: static org.traccar.model.MiscFormatter#toXmlString(java.util.Map)
	CALLEE: static org.traccar.model.MiscFormatter#format(java.lang.Object)
CALLER: org.traccar.protocol.CellocatorProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.database.QueryBuilder#setInteger(java.lang.String,int)
	CALLEE: org.traccar.database.QueryBuilder#indexes(java.lang.String)
CALLER: org.traccar.protocol.GlobalSatProtocolDecoder#decodeOriginal(org.jboss.netty.channel.Channel,java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromMph(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
CALLER: org.traccar.protocol.NavisProtocolDecoder#parsePosition(org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: static org.traccar.protocol.NavisProtocolDecoder#isFormat(int,int[])
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
CALLER: org.traccar.ServerManager#initGatorServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.protocol.Stl060FrameDecoder#<init>(int)
CALLER: org.traccar.database.QueryBuilder#setObject(java.lang.Object)
	CALLEE: org.traccar.database.QueryBuilder#setBoolean(java.lang.String,boolean)
	CALLEE: org.traccar.database.QueryBuilder#setInteger(java.lang.String,int)
	CALLEE: org.traccar.database.QueryBuilder#setLong(java.lang.String,long)
	CALLEE: org.traccar.database.QueryBuilder#setDouble(java.lang.String,double)
	CALLEE: org.traccar.database.QueryBuilder#setString(java.lang.String,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#setDate(java.lang.String,java.util.Date)
CALLER: org.traccar.protocol.TramigoProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
CALLER: org.traccar.protocol.GotopProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: org.traccar.model.Position#setCourse(double)
CALLER: org.traccar.ServerManager#initProgressServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
	CALLEE: org.traccar.TrackerServer#setEndianness(java.nio.ByteOrder)
CALLER: org.traccar.protocol.H02FrameDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: static org.traccar.helper.ChannelBufferTools#find(org.jboss.netty.buffer.ChannelBuffer,java.lang.Integer,java.lang.Integer,java.lang.String)
CALLER: org.traccar.ServerManager#initPt3000Server(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.helper.Log.NettyInternalLogger#debug(java.lang.String)
	CALLEE: org.traccar.helper.Log.NettyInternalLogger#debug(java.lang.String,java.lang.Throwable)
CALLER: org.traccar.protocol.MeiligaoProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: static org.traccar.protocol.MeiligaoProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer,int,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.protocol.MeiligaoProtocolDecoder#getMeiligaoServer(org.jboss.netty.channel.Channel)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: org.traccar.protocol.MeiligaoProtocolDecoder#getImei(org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setAltitude(double)
CALLER: org.traccar.protocol.ManPowerProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.protocol.Gt02ProtocolDecoder#readImei(org.jboss.netty.buffer.ChannelBuffer)
CALLER: static org.traccar.model.MiscFormatter#format(java.lang.Object)
CALLER: org.traccar.ServerManager#initTotemServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.protocol.AtrackProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: static org.traccar.protocol.AtrackProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,java.net.SocketAddress,long,int)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: static org.traccar.protocol.AtrackProtocolDecoder#readString(org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.BaseProtocolDecoder#identify(java.lang.String,boolean)
	CALLEE: static org.traccar.Context#getDataManager()
	CALLEE: org.traccar.database.DataManager#getDeviceByUniqueId(java.lang.String)
	CALLEE: org.traccar.model.Device#getId()
	CALLEE: static org.traccar.helper.Log#warning(java.lang.String)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: org.traccar.database.NamedParameterStatement.Params#setDouble(java.lang.String,java.lang.Double)
	CALLEE: org.traccar.database.NamedParameterStatement.Params#setType(java.lang.String,java.lang.Integer)
	CALLEE: org.traccar.database.NamedParameterStatement.Params#setValue(java.lang.String,java.lang.Object)
CALLER: org.traccar.protocol.Mta6ProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: static org.traccar.helper.ChannelBufferTools#find(org.jboss.netty.buffer.ChannelBuffer,java.lang.Integer,java.lang.Integer,java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.protocol.Mta6ProtocolDecoder#sendContinue(org.jboss.netty.channel.Channel)
	CALLEE: org.traccar.protocol.Mta6ProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,short,short)
	CALLEE: org.traccar.protocol.Mta6ProtocolDecoder#parseFormatA1(org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.protocol.Mta6ProtocolDecoder#parseFormatA(org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.ServerManager#initMaxonServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.protocol.Avl301ProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.BasePipelineFactory.StandardLoggingHandler#log(org.jboss.netty.channel.ChannelEvent)
	CALLEE: static org.traccar.helper.Log#debug(java.lang.String)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: org.traccar.ServerManager#initAplicomServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.FilterHandler#filterDistance(org.traccar.model.Position)
	CALLEE: org.traccar.model.Event#getDeviceId()
	CALLEE: org.traccar.model.Position#getLatitude()
	CALLEE: org.traccar.model.Position#getLongitude()
	CALLEE: static org.traccar.helper.DistanceCalculator#distance(double,double,double,double)
CALLER: org.traccar.ServerManager#initMta6Server(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.ServerManager#initGotopServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.protocol.AutoFonFrameDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
CALLER: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#<init>(javax.sql.DataSource,java.lang.String)
CALLER: org.traccar.database.DataManager#addDevice(org.traccar.model.Device)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#setObject(java.lang.Object)
	CALLEE: org.traccar.database.QueryBuilder#executeUpdate()
	CALLEE: org.traccar.model.Device#setId(long)
CALLER: org.traccar.database.PermissionsManager#checkDevice(long,long)
	CALLEE: org.traccar.database.PermissionsManager#getNotNull(long)
CALLER: org.traccar.FilterHandler#filterLimit(org.traccar.model.Position)
	CALLEE: org.traccar.model.Event#getDeviceId()
	CALLEE: org.traccar.model.Position#getFixTime()
CALLER: org.traccar.protocol.Gt02ProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.Gt02ProtocolDecoder#readImei(org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
CALLER: org.traccar.ServerManager#initMtxServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.protocol.SuntechProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
CALLER: static org.traccar.Context#init(java.lang.String[])
	CALLEE: static org.traccar.helper.Log#setupLogger(java.util.Properties)
	CALLEE: org.traccar.database.DataManager#<init>(java.util.Properties)
	CALLEE: org.traccar.database.DataCache#<init>(org.traccar.database.DataManager)
	CALLEE: org.traccar.database.PermissionsManager#<init>()
	CALLEE: org.traccar.geocode.NominatimReverseGeocoder#<init>(java.lang.String)
	CALLEE: org.traccar.geocode.GisgraphyReverseGeocoder#<init>(java.lang.String)
	CALLEE: org.traccar.http.WebServer#<init>()
	CALLEE: org.traccar.ServerManager#init()
CALLER: org.traccar.ServerManager#initMta6CanServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.ServerManager#initTramigoServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
	CALLEE: org.traccar.TrackerServer#setEndianness(java.nio.ByteOrder)
CALLER: org.traccar.ServerManager#initGps103Server(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.FilterHandler#<init>(boolean,boolean,boolean,int,long)
CALLER: org.traccar.ServerManager#initNavisServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
	CALLEE: org.traccar.TrackerServer#setEndianness(java.nio.ByteOrder)
CALLER: org.traccar.protocol.Xt7ProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.ServerManager#initVisiontekServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.protocol.KhdProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.protocol.Gt06ProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
	CALLEE: static org.traccar.Context#getProps()
CALLER: org.traccar.ServerManager#initProtocolDetector()
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.http.MainServlet#handle(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
	CALLEE: org.traccar.http.MainServlet#session(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
	CALLEE: org.traccar.http.MainServlet#login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
	CALLEE: org.traccar.http.MainServlet#logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
	CALLEE: org.traccar.http.MainServlet#register(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
CALLER: org.traccar.protocol.RitiProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: static org.traccar.GlobalTimer#getTimer()
CALLER: org.traccar.protocol.MegastekProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.protocol.MegastekProtocolDecoder#parseGPRMC(java.lang.String,org.traccar.model.Position)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String,boolean)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setAltitude(double)
CALLER: org.traccar.ServerManager#initV680Server(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.protocol.ApelProtocolDecoder#requestArchive(org.jboss.netty.channel.Channel)
	CALLEE: static org.traccar.helper.Crc#crc32(java.nio.ByteBuffer)
CALLER: org.traccar.protocol.AutoFon45FrameDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.ServerManager#initXt7Server(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.protocol.SuntechProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.protocol.WondexProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.protocol.BceProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: static org.traccar.protocol.BceProtocolDecoder#checkBit(int,int)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
CALLER: org.traccar.ServerManager#initRuptelaServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.protocol.LaipacProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: static org.traccar.helper.Crc#nmeaChecksum(java.lang.String)
CALLER: org.traccar.protocol.CarTrackProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.protocol.AplicomProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.database.NamedParameterStatement.Params#closeQuietly(java.sql.Connection,java.sql.Statement,java.sql.ResultSet)
CALLER: org.traccar.database.DataManager#login(java.lang.String,java.lang.String)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#setString(java.lang.String,java.lang.String)
CALLER: org.traccar.protocol.EnforaProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.ServerManager#initPiligrimServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.protocol.BoxProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.BaseProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.AutoFon45ProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.Tr20ProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.Xt7ProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.TelikProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.Ev603ProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.NavisProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.WialonProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.MtxProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.T55ProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.PiligrimProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.SkypatrolProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.Xt013ProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.Pt502ProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.MiniFinderProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.Tr900ProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.GotopProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.RitiProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.IntellitracProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.MaxonProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.EelinkProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.MeitrackProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.MeiligaoProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.Tlt2hProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.AutoFonProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.Stl060ProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.AplicomProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.TrackboxProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.Gt02ProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.Gt06ProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.GpsGateProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.TotemProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.CarscopProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.SuntechProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.SanavProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.Jt600ProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.EnforaProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.Pt3000ProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.ManPowerProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.KhdProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.H02ProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.V680ProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.Avl301ProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.TopflytechProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.LaipacProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.BoxProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.Tk103ProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.Gl200ProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.ApelProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.BceProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.SyrusProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.Gl100ProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.CellocatorProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.TramigoProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.Xexun2ProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.OsmAndProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.MegastekProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.UlbotechProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.XexunProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.YwtProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.HaicomProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.Ardi01ProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.FreedomProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.Mta6ProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.NavigilProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.WondexProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.CarTrackProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.OrionProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.VisiontekProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.TeltonikaProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.M2mProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.GatorProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.Tk102ProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.ProgressProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.RuptelaProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.GalileoProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.GlobalSatProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.EasyTrackProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
CALLER: org.traccar.protocol.Gps103ProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
CALLER: org.traccar.protocol.TytanProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.net.SocketAddress,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: static org.traccar.helper.ChannelBufferTools#readHexString(org.jboss.netty.buffer.ChannelBuffer,int)
CALLER: org.traccar.protocol.Jt600ProtocolDecoder#decodeNormalMessage(org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: static org.traccar.helper.ChannelBufferTools#readHexString(org.jboss.netty.buffer.ChannelBuffer,int)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: static org.traccar.helper.ChannelBufferTools#readHexInteger(org.jboss.netty.buffer.ChannelBuffer,int)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: org.traccar.model.Position#setAltitude(double)
CALLER: org.traccar.protocol.Jt600ProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String,boolean)
CALLER: org.traccar.database.NamedParameterStatement#prepare()
CALLER: org.traccar.protocol.TrackboxProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.protocol.Xt013ProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
CALLER: org.traccar.protocol.NavisProtocolDecoder#processSingle(org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.protocol.NavisProtocolDecoder#parsePosition(org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.protocol.NavisProtocolDecoder.ParseResult#getId()
	CALLEE: org.traccar.protocol.NavisProtocolDecoder#sendReply(org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.protocol.NavisProtocolDecoder.ParseResult#getPosition()
	CALLEE: org.traccar.model.Position#getFixTime()
CALLER: org.traccar.protocol.ProgressProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.protocol.MeiligaoProtocolDecoder#getImei(org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: static org.traccar.helper.Crc#luhnChecksum(java.lang.String)
CALLER: org.traccar.http.DeviceServlet#update(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
	CALLEE: static org.traccar.Context#getDataManager()
	CALLEE: org.traccar.database.DataManager#updateDevice(org.traccar.model.Device)
	CALLEE: org.traccar.http.BaseServlet#sendResponse(java.io.Writer,boolean)
CALLER: org.traccar.http.WebServer#stop()
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: org.traccar.protocol.EasyTrackProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.protocol.Tk102ProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#hasDeviceId()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
CALLER: org.traccar.database.DataManager#linkDevice(long,long)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#setLong(java.lang.String,long)
	CALLEE: org.traccar.database.QueryBuilder#executeUpdate()
CALLER: org.traccar.protocol.CastelProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.protocol.SyrusProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.protocol.SyrusProtocolDecoder#getTime(long,long,long)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.protocol.SyrusProtocolDecoder#getTime(long)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromMph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setValid(boolean)
CALLER: org.traccar.http.BaseServlet#sendResponse(java.io.Writer,boolean)
CALLER: org.traccar.http.MainServlet#register(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
	CALLEE: static org.traccar.Context#getDataManager()
	CALLEE: org.traccar.database.DataManager#addUser(org.traccar.model.User)
	CALLEE: org.traccar.http.BaseServlet#sendResponse(java.io.Writer,boolean)
CALLER: org.traccar.database.NamedParameterStatement.Params#executeQuery(org.traccar.database.NamedParameterStatement.ResultSetProcessor)
	CALLEE: org.traccar.database.NamedParameterStatement.Params#setParams(java.sql.PreparedStatement)
	CALLEE: org.traccar.database.NamedParameterStatement.Params#closeQuietly(java.sql.Connection,java.sql.Statement,java.sql.ResultSet)
CALLER: org.traccar.ServerManager#initOsmAndServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.protocol.Pt3000ProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
CALLER: org.traccar.protocol.TeltonikaProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.TeltonikaProtocolDecoder#parseIdentification(org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.protocol.TeltonikaProtocolDecoder#parseLocation(org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
CALLER: static org.traccar.helper.Crc#crc16Ccitt(java.nio.ByteBuffer)
	CALLEE: static org.traccar.helper.Crc#crc16Reflected(java.nio.ByteBuffer,int,int[])
CALLER: static org.traccar.http.JsonConverter#arrayToJson(java.util.Collection)
CALLER: org.traccar.ServerManager#initM2mServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.model.Data#create()
CALLER: org.traccar.protocol.Tr900ProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
CALLER: org.traccar.helper.Log.NettyInternalLogger#info(java.lang.String)
	CALLEE: org.traccar.helper.Log.NettyInternalLogger#info(java.lang.String,java.lang.Throwable)
CALLER: static org.traccar.helper.Log#info(java.lang.String)
	CALLEE: static org.traccar.helper.Log#getLogger()
CALLER: org.traccar.protocol.TramigoProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.database.DataManager#removeDevice(org.traccar.model.Device)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#setObject(java.lang.Object)
	CALLEE: org.traccar.database.QueryBuilder#executeUpdate()
CALLER: org.traccar.database.DataCache#removeListener(java.util.Collection,org.traccar.database.DataCache.DataCacheListener)
	CALLEE: org.traccar.database.DataCache#removeListener(long,org.traccar.database.DataCache.DataCacheListener)
CALLER: org.traccar.protocol.TeltonikaProtocolDecoder#parseIdentification(org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
CALLER: org.traccar.protocol.Mta6ProtocolDecoder#sendContinue(org.jboss.netty.channel.Channel)
CALLER: org.traccar.protocol.AutoFon45ProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: static org.traccar.helper.ChannelBufferTools#readHexString(org.jboss.netty.buffer.ChannelBuffer,int)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.protocol.AutoFon45ProtocolDecoder#crc(byte[],int,int)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: static org.traccar.protocol.AutoFon45ProtocolDecoder#convertCoordinate(short,int)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
CALLER: org.traccar.http.BaseServlet#getUserId(javax.servlet.http.HttpSession)
	CALLEE: org.traccar.model.User#getId()
CALLER: org.traccar.protocol.WialonProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,java.lang.String,java.lang.Integer)
CALLER: org.traccar.database.NamedParameterStatement.Params#setString(java.lang.String,java.lang.String)
	CALLEE: org.traccar.database.NamedParameterStatement.Params#setType(java.lang.String,java.lang.Integer)
	CALLEE: org.traccar.database.NamedParameterStatement.Params#setValue(java.lang.String,java.lang.Object)
CALLER: org.traccar.protocol.TeltonikaFrameDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.database.QueryBuilder#setBoolean(java.lang.String,boolean)
	CALLEE: org.traccar.database.QueryBuilder#indexes(java.lang.String)
CALLER: org.traccar.protocol.TrackboxProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel)
CALLER: org.traccar.ServerManager#initTaipServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.protocol.PiligrimProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.TrackerServer#setPipelineFactory(org.jboss.netty.channel.ChannelPipelineFactory)
CALLER: org.traccar.protocol.NavisProtocolDecoder#sendReply(org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: static org.traccar.protocol.NavisProtocolDecoder#checksum(org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.protocol.HaicomProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: static org.traccar.helper.Log#setupLogger(java.util.Properties)
CALLER: org.traccar.protocol.TelikProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
CALLER: org.traccar.protocol.Ev603ProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#hasDeviceId()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#getCourse()
CALLER: org.traccar.protocol.NavisProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.NavisProtocolDecoder#processSingle(org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.protocol.NavisProtocolDecoder#processArray(org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.protocol.NavisProtocolDecoder#processHandshake(org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.protocol.SkypatrolProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: static org.traccar.protocol.SkypatrolProtocolDecoder#checkBit(long,int)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: static org.traccar.protocol.SkypatrolProtocolDecoder#convertCoordinate(long)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setAltitude(double)
CALLER: org.traccar.protocol.RitiProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: static org.traccar.helper.ChannelBufferTools#find(org.jboss.netty.buffer.ChannelBuffer,java.lang.Integer,java.lang.Integer,java.lang.String)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
CALLER: org.traccar.protocol.Tlt2hProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
CALLER: org.traccar.protocol.AutoFonProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: static org.traccar.helper.ChannelBufferTools#readHexString(org.jboss.netty.buffer.ChannelBuffer,int)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.protocol.AutoFonProtocolDecoder#decodePosition(org.jboss.netty.buffer.ChannelBuffer,boolean)
CALLER: org.traccar.protocol.GpsGateProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.protocol.GpsGateProtocolDecoder#send(org.jboss.netty.channel.Channel,java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#hasDeviceId()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
CALLER: org.traccar.protocol.SanavProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
CALLER: org.traccar.protocol.ManPowerProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
CALLER: org.traccar.protocol.V680ProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#hasDeviceId()
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
CALLER: org.traccar.protocol.TopflytechProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
CALLER: org.traccar.protocol.Gl200ProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
CALLER: org.traccar.protocol.CellocatorProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.protocol.CellocatorProtocolDecoder#sendReply(org.jboss.netty.channel.Channel,long,byte)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromMps(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
CALLER: org.traccar.protocol.OsmAndProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
CALLER: org.traccar.protocol.UlbotechProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: static org.traccar.helper.ChannelBufferTools#readHexString(org.jboss.netty.buffer.ChannelBuffer,int)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
CALLER: org.traccar.protocol.WondexProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
CALLER: org.traccar.protocol.M2mProtocolDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#hasDeviceId()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: org.traccar.model.Position#setValid(boolean)
CALLER: org.traccar.protocol.Tk103ProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.ServerManager#initManPowerServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.ServerManager#initGl100Server(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: static org.traccar.CharacterDelimiterFrameDecoder#createDelimiter(char)
CALLER: org.traccar.protocol.NavigilProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.ReverseGeocoderHandler#<init>(org.traccar.geocode.ReverseGeocoder,boolean)
	CALLEE: org.traccar.geocode.AddressFormat#<init>()
CALLER: org.traccar.ServerManager#stop()
	CALLEE: org.traccar.TrackerServer#stop()
	CALLEE: static org.traccar.GlobalChannelFactory#release()
	CALLEE: static org.traccar.GlobalTimer#release()
CALLER: static org.traccar.protocol.AplicomProtocolDecoder#imeiFromUnitId(long)
	CALLEE: static org.traccar.protocol.AplicomProtocolDecoder#validateImei(long)
CALLER: org.traccar.protocol.CalAmpProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,java.net.SocketAddress,int,int,int)
CALLER: org.traccar.protocol.CellocatorFrameDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.protocol.Ardi01ProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.protocol.Mta6ProtocolDecoder#parseFormatA(org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: static org.traccar.protocol.Mta6ProtocolDecoder#checkBit(long,int)
	CALLEE: org.traccar.protocol.Mta6ProtocolDecoder.FloatReader#readFloat(org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.protocol.Mta6ProtocolDecoder.TimeReader#readTime(org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: org.traccar.model.Position#setValid(boolean)
CALLER: org.traccar.ServerManager#initSuntechServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.protocol.CalAmpProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.model.User#create()
	CALLEE: org.traccar.model.User#create()
CALLER: org.traccar.protocol.XexunProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.ServerManager#initSyrusServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.database.QueryBuilder#setString(java.lang.String,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#indexes(java.lang.String)
CALLER: org.traccar.protocol.Gt06ProtocolDecoder#readImei(org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.helper.DriverDelegate#getMajorVersion()
	CALLEE: org.traccar.helper.DriverDelegate#getMajorVersion()
CALLER: org.traccar.database.DataManager#mockData(long)
	CALLEE: static org.traccar.Context#getProps()
	CALLEE: org.traccar.model.Device#setName(java.lang.String)
	CALLEE: org.traccar.model.Device#setUniqueId(java.lang.String)
	CALLEE: org.traccar.database.DataManager#addDevice(org.traccar.model.Device)
	CALLEE: org.traccar.model.Device#getId()
	CALLEE: org.traccar.database.DataManager#linkDevice(long,long)
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: static org.traccar.http.JsonConverter#parseDate(java.lang.String)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.database.DataManager#addPosition(org.traccar.model.Position)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: org.traccar.protocol.Mta6ProtocolDecoder.FloatReader#readFloat(org.jboss.netty.buffer.ChannelBuffer)
CALLER: static org.traccar.protocol.AtrackProtocolDecoder#sendResponse(org.jboss.netty.channel.Channel,java.net.SocketAddress,long,int)
CALLER: org.traccar.http.DeviceServlet#handle(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
	CALLEE: org.traccar.http.DeviceServlet#get(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
	CALLEE: org.traccar.http.DeviceServlet#add(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
	CALLEE: org.traccar.http.DeviceServlet#update(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
	CALLEE: org.traccar.http.DeviceServlet#remove(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
CALLER: org.traccar.ServerManager#initAutoFonServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.protocol.MeitrackFrameDecoder#decode(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: static org.traccar.helper.ChannelBufferTools#find(org.jboss.netty.buffer.ChannelBuffer,java.lang.Integer,java.lang.Integer,java.lang.String)
CALLER: static org.traccar.database.QueryBuilder#parse(java.lang.String,java.util.Map)
CALLER: org.traccar.protocol.MaxonProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.FilterHandler#filterDuplicate(org.traccar.model.Position)
	CALLEE: org.traccar.model.Event#getDeviceId()
	CALLEE: org.traccar.model.Position#getFixTime()
CALLER: org.traccar.geocode.AddressFormat#format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)
	CALLEE: org.traccar.geocode.Address#getPostcode()
	CALLEE: static org.traccar.geocode.AddressFormat#replace(java.lang.String,java.lang.String,java.lang.String)
	CALLEE: org.traccar.geocode.Address#getCountry()
	CALLEE: org.traccar.geocode.Address#getState()
	CALLEE: org.traccar.geocode.Address#getDistrict()
	CALLEE: org.traccar.geocode.Address#getSettlement()
	CALLEE: org.traccar.geocode.Address#getStreet()
	CALLEE: org.traccar.geocode.Address#getHouse()
CALLER: org.traccar.database.NamedParameterStatement.Params#setInt(java.lang.String,java.lang.Integer)
	CALLEE: org.traccar.database.NamedParameterStatement.Params#setType(java.lang.String,java.lang.Integer)
	CALLEE: org.traccar.database.NamedParameterStatement.Params#setValue(java.lang.String,java.lang.Object)
CALLER: org.traccar.http.MainServlet#logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
	CALLEE: org.traccar.http.BaseServlet#sendResponse(java.io.Writer,boolean)
CALLER: org.traccar.protocol.Tr20ProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.protocol.H02ProtocolDecoder#decodeBinary(org.jboss.netty.buffer.ChannelBuffer)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: static org.traccar.helper.ChannelBufferTools#readHexString(org.jboss.netty.buffer.ChannelBuffer,int)
	CALLEE: org.traccar.BaseProtocolDecoder#identify(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: static org.traccar.helper.ChannelBufferTools#readHexInteger(org.jboss.netty.buffer.ChannelBuffer,int)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: static org.traccar.protocol.H02ProtocolDecoder#readCoordinate(org.jboss.netty.buffer.ChannelBuffer,boolean)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
CALLER: org.traccar.http.PositionServlet#handle(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
	CALLEE: org.traccar.http.PositionServlet#get(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
CALLER: org.traccar.database.NamedParameterStatement.Params#setValue(java.lang.String,java.lang.Object)
CALLER: org.traccar.ServerManager#initKhdServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: static org.traccar.helper.Log#debug(java.lang.String)
	CALLEE: static org.traccar.helper.Log#getLogger()
CALLER: org.traccar.protocol.MegastekProtocolDecoder#parseGPRMC(java.lang.String,org.traccar.model.Position)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
CALLER: org.traccar.database.NamedParameterStatement.Params#executeUpdate(org.traccar.database.NamedParameterStatement.ResultSetProcessor)
	CALLEE: org.traccar.database.NamedParameterStatement.Params#setParams(java.sql.PreparedStatement)
	CALLEE: org.traccar.database.NamedParameterStatement.Params#closeQuietly(java.sql.Connection,java.sql.Statement,java.sql.ResultSet)
CALLER: org.traccar.database.DataManager#addUser(org.traccar.model.User)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#setObject(java.lang.Object)
	CALLEE: org.traccar.database.QueryBuilder#executeUpdate()
	CALLEE: org.traccar.model.User#setId(long)
CALLER: org.traccar.database.NamedParameterStatement.Params#setParams(java.sql.PreparedStatement)
CALLER: org.traccar.geocode.GisgraphyReverseGeocoder#getAddress(org.traccar.geocode.AddressFormat,double,double)
	CALLEE: org.traccar.geocode.Address#setStreet(java.lang.String)
	CALLEE: org.traccar.geocode.Address#setSettlement(java.lang.String)
	CALLEE: org.traccar.geocode.Address#setCountry(java.lang.String)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: org.traccar.ServerManager#initMegastekServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.protocol.GatorProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.ServerManager#initTr20Server(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.ServerManager#initEv603Server(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.ServerManager#initMiniFinderServer(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.database.DataManager#updateDevice(org.traccar.model.Device)
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
	CALLEE: org.traccar.database.QueryBuilder#setObject(java.lang.Object)
	CALLEE: org.traccar.database.QueryBuilder#executeUpdate()
CALLER: org.traccar.FilterHandler#filter(org.traccar.model.Position)
	CALLEE: org.traccar.FilterHandler#filterInvalid(org.traccar.model.Position)
	CALLEE: org.traccar.FilterHandler#filterZero(org.traccar.model.Position)
	CALLEE: org.traccar.FilterHandler#filterDuplicate(org.traccar.model.Position)
	CALLEE: org.traccar.FilterHandler#filterDistance(org.traccar.model.Position)
	CALLEE: org.traccar.FilterHandler#filterLimit(org.traccar.model.Position)
	CALLEE: org.traccar.model.Event#getDeviceId()
	CALLEE: static org.traccar.helper.Log#info(java.lang.String)
CALLER: org.traccar.http.AsyncServlet.AsyncSession#response()
	CALLEE: org.traccar.http.AsyncServlet.AsyncSession#logEvent(java.lang.String)
	CALLEE: static org.traccar.http.JsonConverter#arrayToJson(java.util.Collection)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
	CALLEE: static org.traccar.GlobalTimer#getTimer()
CALLER: static org.traccar.helper.ChannelBufferTools#readCoordinate(org.jboss.netty.buffer.ChannelBuffer)
CALLER: org.traccar.database.NamedParameterStatement.Params#setLong(java.lang.String,java.lang.Long)
	CALLEE: org.traccar.database.NamedParameterStatement.Params#setType(java.lang.String,java.lang.Integer)
	CALLEE: org.traccar.database.NamedParameterStatement.Params#setValue(java.lang.String,java.lang.Object)
CALLER: org.traccar.ServerManager#initAvl301Server(java.lang.String)
	CALLEE: org.traccar.ServerManager#isProtocolEnabled(java.lang.String)
CALLER: org.traccar.protocol.YwtProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.DetectorHandler#<init>(java.util.List)
CALLER: org.traccar.ServerManager#start()
	CALLEE: org.traccar.TrackerServer#start()
CALLER: static org.traccar.helper.Log#logSystemInfo()
	CALLEE: static org.traccar.helper.Log#info(java.lang.String)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.String)
CALLER: org.traccar.protocol.XirgoProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.protocol.NavigilProtocolDecoder#parseSnapshot4(org.jboss.netty.buffer.ChannelBuffer,int)
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: static org.traccar.protocol.NavigilProtocolDecoder#convertTimestamp(long)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
CALLER: org.traccar.protocol.ProgressProtocolDecoder#requestArchive(org.jboss.netty.channel.Channel)
CALLER: org.traccar.protocol.WialonProtocolDecoder#decodePosition(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#hasDeviceId()
	CALLEE: org.traccar.BaseProtocolDecoder#getProtocol()
	CALLEE: org.traccar.model.Event#setProtocol(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#getDeviceId()
	CALLEE: org.traccar.model.Event#setDeviceId(long)
	CALLEE: org.traccar.model.Position#setTime(java.util.Date)
	CALLEE: org.traccar.model.Position#setLatitude(double)
	CALLEE: org.traccar.model.Position#setLongitude(double)
	CALLEE: static org.traccar.helper.UnitsConverter#knotsFromKph(double)
	CALLEE: org.traccar.model.Position#setSpeed(double)
	CALLEE: org.traccar.model.Position#setCourse(double)
	CALLEE: org.traccar.model.Position#setAltitude(double)
	CALLEE: org.traccar.model.Position#setValid(boolean)
	CALLEE: org.traccar.model.Event#set(java.lang.String,java.lang.Object)
CALLER: static org.traccar.GlobalChannelFactory#getDatagramFactory()
CALLER: org.traccar.geocode.NominatimReverseGeocoder#getAddress(org.traccar.geocode.AddressFormat,double,double)
	CALLEE: org.traccar.geocode.Address#setHouse(java.lang.String)
	CALLEE: org.traccar.geocode.Address#setStreet(java.lang.String)
	CALLEE: org.traccar.geocode.Address#setSettlement(java.lang.String)
	CALLEE: org.traccar.geocode.Address#setDistrict(java.lang.String)
	CALLEE: org.traccar.geocode.Address#setState(java.lang.String)
	CALLEE: org.traccar.geocode.Address#setCountry(java.lang.String)
	CALLEE: org.traccar.geocode.Address#setPostcode(java.lang.String)
	CALLEE: static org.traccar.helper.Log#warning(java.lang.Throwable)
CALLER: org.traccar.helper.Log.NettyInternalLogger#error(java.lang.String)
	CALLEE: org.traccar.helper.Log.NettyInternalLogger#error(java.lang.String,java.lang.Throwable)
CALLER: org.traccar.BasePipelineFactory#<init>(org.traccar.TrackerServer,java.lang.String)
	CALLEE: static org.traccar.Context#getProps()
	CALLEE: org.traccar.FilterHandler#<init>()
	CALLEE: static org.traccar.Context#getReverseGeocoder()
CALLER: org.traccar.model.User#create()
CALLER: org.traccar.database.DataManager#getPermissions()
	CALLEE: static org.traccar.database.QueryBuilder#create(javax.sql.DataSource,java.lang.String)
CALLER: org.traccar.database.DataManager#getDeviceByUniqueId(java.lang.String)
	CALLEE: org.traccar.database.DataManager#getDevices()
	CALLEE: org.traccar.model.Device#getUniqueId()
CALLER: org.traccar.protocol.H02ProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: org.traccar.protocol.ApelProtocolDecoder#<init>(java.lang.String)
	CALLEE: org.traccar.BaseProtocolDecoder#<init>(java.lang.String)
CALLER: static org.traccar.CharacterDelimiterFrameDecoder#convertDelimiters(java.lang.String[])
	CALLEE: static org.traccar.CharacterDelimiterFrameDecoder#createDelimiter(java.lang.String)
CALLER: org.traccar.TrackerServer#setEndianness(java.nio.ByteOrder)
