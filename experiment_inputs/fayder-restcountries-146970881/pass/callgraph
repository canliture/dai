CALLER: eu.fayder.restcountries.servlet.RestApplication#<init>()
	CALLEE: javax.ws.rs.core.Application#<init>()
	CALLEE: eu.fayder.restcountries.v1.rest.CountryRest#<init>()
	CALLEE: eu.fayder.restcountries.v2.rest.CountryRest#<init>()
	CALLEE: eu.fayder.restcountries.v2.rest.StripeRest#<init>()
CALLER: static eu.fayder.restcountries.v1.rest.CountryRest#<clinit>()
	CALLEE: static org.apache.log4j.Logger#getLogger(java.lang.Class)
CALLER: static eu.fayder.restcountries.v2.rest.CountryRest#<clinit>()
	CALLEE: static org.apache.log4j.Logger#getLogger(java.lang.Class)
CALLER: static eu.fayder.restcountries.v2.rest.StripeRest#<clinit>()
	CALLEE: static org.apache.log4j.Logger#getLogger(java.lang.Class)
CALLER: static org.apache.log4j.Logger#getLogger(java.lang.Class)
	CALLEE: static org.apache.log4j.LogManager#getLogger(java.lang.String)
CALLER: static org.apache.log4j.Logger#<clinit>()
	CALLEE: static org.apache.log4j.Logger#class$(java.lang.String)
CALLER: static org.apache.log4j.Category#<clinit>()
	CALLEE: static org.apache.log4j.Category#class$(java.lang.String)
CALLER: static org.apache.log4j.LogManager#getLogger(java.lang.String)
	CALLEE: static org.apache.log4j.LogManager#getLoggerRepository()
	CALLEE: org.apache.log4j.Hierarchy#getLogger(java.lang.String)
	CALLEE: org.apache.log4j.spi.NOPLoggerRepository#getLogger(java.lang.String)
CALLER: static org.apache.log4j.LogManager#<clinit>()
	CALLEE: static org.apache.log4j.LogManager#getLoggerRepository()
	CALLEE: org.apache.log4j.spi.RootLogger#<init>(org.apache.log4j.Level)
	CALLEE: org.apache.log4j.Hierarchy#<init>(org.apache.log4j.Logger)
	CALLEE: org.apache.log4j.spi.DefaultRepositorySelector#<init>(org.apache.log4j.spi.LoggerRepository)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#getSystemProperty(java.lang.String,java.lang.String)
	CALLEE: static org.apache.log4j.helpers.Loader#getResource(java.lang.String)
	CALLEE: static org.apache.log4j.helpers.LogLog#debug(java.lang.String)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#selectAndConfigure(java.net.URL,java.lang.String,org.apache.log4j.spi.LoggerRepository)
	CALLEE: static org.apache.log4j.helpers.LogLog#warn(java.lang.String,java.lang.Throwable)
CALLER: static org.apache.log4j.LogManager#getLoggerRepository()
	CALLEE: org.apache.log4j.spi.DefaultRepositorySelector#<init>(org.apache.log4j.spi.LoggerRepository)
	CALLEE: org.apache.log4j.spi.NOPLoggerRepository#<init>()
	CALLEE: static org.apache.log4j.LogManager#isLikelySafeScenario(java.lang.Exception)
	CALLEE: static org.apache.log4j.helpers.LogLog#debug(java.lang.String,java.lang.Throwable)
	CALLEE: static org.apache.log4j.helpers.LogLog#error(java.lang.String,java.lang.Throwable)
	CALLEE: org.apache.log4j.spi.DefaultRepositorySelector#getLoggerRepository()
CALLER: static org.apache.log4j.Level#<clinit>()
	CALLEE: org.apache.log4j.Level#<init>(int,java.lang.String,int)
CALLER: static org.apache.log4j.Priority#<clinit>()
	CALLEE: org.apache.log4j.Level#<init>(int,java.lang.String,int)
CALLER: org.apache.log4j.spi.RootLogger#<init>(org.apache.log4j.Level)
	CALLEE: org.apache.log4j.Logger#<init>(java.lang.String)
	CALLEE: org.apache.log4j.spi.RootLogger#setLevel(org.apache.log4j.Level)
CALLER: org.apache.log4j.Hierarchy#<init>(org.apache.log4j.Logger)
	CALLEE: org.apache.log4j.Hierarchy#setThreshold(org.apache.log4j.Level)
	CALLEE: org.apache.log4j.Category#setHierarchy(org.apache.log4j.spi.LoggerRepository)
	CALLEE: org.apache.log4j.or.RendererMap#<init>()
	CALLEE: org.apache.log4j.DefaultCategoryFactory#<init>()
CALLER: static org.apache.log4j.helpers.OptionConverter#getSystemProperty(java.lang.String,java.lang.String)
	CALLEE: static org.apache.log4j.helpers.LogLog#debug(java.lang.String)
CALLER: static org.apache.log4j.helpers.Loader#getResource(java.lang.String)
	CALLEE: static org.apache.log4j.helpers.LogLog#debug(java.lang.String)
	CALLEE: static org.apache.log4j.helpers.LogLog#warn(java.lang.String,java.lang.Throwable)
	CALLEE: static org.apache.log4j.helpers.Loader#getTCL()
	CALLEE: static org.apache.log4j.helpers.Loader#class$(java.lang.String)
CALLER: static org.apache.log4j.helpers.Loader#<clinit>()
	CALLEE: static org.apache.log4j.helpers.OptionConverter#getSystemProperty(java.lang.String,java.lang.String)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#toBoolean(java.lang.String,boolean)
CALLER: static org.apache.log4j.helpers.LogLog#<clinit>()
	CALLEE: static org.apache.log4j.helpers.OptionConverter#getSystemProperty(java.lang.String,java.lang.String)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#toBoolean(java.lang.String,boolean)
CALLER: static org.apache.log4j.helpers.OptionConverter#selectAndConfigure(java.net.URL,java.lang.String,org.apache.log4j.spi.LoggerRepository)
	CALLEE: static org.apache.log4j.helpers.LogLog#debug(java.lang.String)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#class$(java.lang.String)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#instantiateByClassName(java.lang.String,java.lang.Class,java.lang.Object)
	CALLEE: static org.apache.log4j.helpers.LogLog#error(java.lang.String)
	CALLEE: org.apache.log4j.PropertyConfigurator#<init>()
	CALLEE: org.apache.log4j.PropertyConfigurator#doConfigure(java.net.URL,org.apache.log4j.spi.LoggerRepository)
CALLER: org.apache.log4j.Level#<init>(int,java.lang.String,int)
	CALLEE: org.apache.log4j.Priority#<init>(int,java.lang.String,int)
CALLER: org.apache.log4j.Logger#<init>(java.lang.String)
	CALLEE: org.apache.log4j.Category#<init>(java.lang.String)
CALLER: org.apache.log4j.spi.RootLogger#setLevel(org.apache.log4j.Level)
	CALLEE: static org.apache.log4j.helpers.LogLog#error(java.lang.String,java.lang.Throwable)
CALLER: static org.apache.log4j.or.RendererMap#<clinit>()
	CALLEE: org.apache.log4j.or.DefaultRenderer#<init>()
CALLER: static org.apache.log4j.helpers.Loader#getTCL()
	CALLEE: static org.apache.log4j.helpers.Loader#class$(java.lang.String)
CALLER: static org.apache.log4j.helpers.OptionConverter#instantiateByClassName(java.lang.String,java.lang.Class,java.lang.Object)
	CALLEE: static org.apache.log4j.helpers.LogLog#error(java.lang.String,java.lang.Throwable)
	CALLEE: static org.apache.log4j.helpers.LogLog#error(java.lang.String)
	CALLEE: static org.apache.log4j.helpers.Loader#loadClass(java.lang.String)
CALLER: org.apache.log4j.PropertyConfigurator#<init>()
	CALLEE: org.apache.log4j.DefaultCategoryFactory#<init>()
CALLER: org.apache.log4j.PropertyConfigurator#doConfigure(java.net.URL,org.apache.log4j.spi.LoggerRepository)
	CALLEE: static org.apache.log4j.helpers.LogLog#debug(java.lang.String)
	CALLEE: static org.apache.log4j.helpers.LogLog#error(java.lang.String,java.lang.Throwable)
	CALLEE: static org.apache.log4j.helpers.LogLog#error(java.lang.String)
	CALLEE: org.apache.log4j.PropertyConfigurator#doConfigure(java.util.Properties,org.apache.log4j.spi.LoggerRepository)
CALLER: static org.apache.log4j.helpers.Loader#loadClass(java.lang.String)
	CALLEE: static org.apache.log4j.helpers.Loader#getTCL()
CALLER: org.apache.log4j.PropertyConfigurator#doConfigure(java.util.Properties,org.apache.log4j.spi.LoggerRepository)
	CALLEE: static org.apache.log4j.helpers.LogLog#debug(java.lang.String)
	CALLEE: org.apache.log4j.Hierarchy#setThreshold(org.apache.log4j.Level)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#toBoolean(java.lang.String,boolean)
	CALLEE: static org.apache.log4j.helpers.LogLog#warn(java.lang.String)
	CALLEE: static org.apache.log4j.helpers.LogLog#setInternalDebugging(boolean)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#findAndSubst(java.lang.String,java.util.Properties)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#toLevel(java.lang.String,org.apache.log4j.Level)
	CALLEE: org.apache.log4j.PropertyConfigurator#configureRootCategory(java.util.Properties,org.apache.log4j.spi.LoggerRepository)
	CALLEE: org.apache.log4j.PropertyConfigurator#configureLoggerFactory(java.util.Properties)
	CALLEE: org.apache.log4j.PropertyConfigurator#parseCatsAndRenderers(java.util.Properties,org.apache.log4j.spi.LoggerRepository)
	CALLEE: org.apache.log4j.Hierarchy#getThreshold()
	CALLEE: org.apache.log4j.spi.NOPLoggerRepository#getThreshold()
	CALLEE: org.apache.log4j.spi.NOPLoggerRepository#setThreshold(org.apache.log4j.Level)
	CALLEE: org.apache.log4j.Hierarchy#resetConfiguration()
	CALLEE: org.apache.log4j.spi.NOPLoggerRepository#resetConfiguration()
CALLER: static org.apache.log4j.helpers.OptionConverter#findAndSubst(java.lang.String,java.util.Properties)
	CALLEE: static org.apache.log4j.helpers.LogLog#error(java.lang.String,java.lang.Throwable)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#substVars(java.lang.String,java.util.Properties)
CALLER: static org.apache.log4j.helpers.OptionConverter#toLevel(java.lang.String,org.apache.log4j.Level)
	CALLEE: static org.apache.log4j.helpers.LogLog#debug(java.lang.String)
	CALLEE: static org.apache.log4j.helpers.LogLog#warn(java.lang.String,java.lang.Throwable)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#class$(java.lang.String)
	CALLEE: static org.apache.log4j.helpers.Loader#loadClass(java.lang.String)
	CALLEE: static org.apache.log4j.helpers.LogLog#warn(java.lang.String)
	CALLEE: static org.apache.log4j.Level#toLevel(java.lang.String,org.apache.log4j.Level)
CALLER: org.apache.log4j.PropertyConfigurator#configureRootCategory(java.util.Properties,org.apache.log4j.spi.LoggerRepository)
	CALLEE: static org.apache.log4j.helpers.LogLog#debug(java.lang.String)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#findAndSubst(java.lang.String,java.util.Properties)
	CALLEE: org.apache.log4j.PropertyConfigurator#parseCategory(java.util.Properties,org.apache.log4j.Logger,java.lang.String,java.lang.String,java.lang.String)
	CALLEE: org.apache.log4j.Hierarchy#getRootLogger()
	CALLEE: org.apache.log4j.spi.NOPLoggerRepository#getRootLogger()
CALLER: org.apache.log4j.PropertyConfigurator#configureLoggerFactory(java.util.Properties)
	CALLEE: static org.apache.log4j.helpers.LogLog#debug(java.lang.String)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#instantiateByClassName(java.lang.String,java.lang.Class,java.lang.Object)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#findAndSubst(java.lang.String,java.util.Properties)
	CALLEE: static org.apache.log4j.PropertyConfigurator#class$(java.lang.String)
	CALLEE: static org.apache.log4j.config.PropertySetter#setProperties(java.lang.Object,java.util.Properties,java.lang.String)
CALLER: org.apache.log4j.PropertyConfigurator#parseCatsAndRenderers(java.util.Properties,org.apache.log4j.spi.LoggerRepository)
	CALLEE: static org.apache.log4j.helpers.LogLog#error(java.lang.String)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#findAndSubst(java.lang.String,java.util.Properties)
	CALLEE: org.apache.log4j.PropertyConfigurator#parseCategory(java.util.Properties,org.apache.log4j.Logger,java.lang.String,java.lang.String,java.lang.String)
	CALLEE: static org.apache.log4j.PropertyConfigurator#class$(java.lang.String)
	CALLEE: org.apache.log4j.PropertyConfigurator#parseAdditivityForLogger(java.util.Properties,org.apache.log4j.Logger,java.lang.String)
	CALLEE: static org.apache.log4j.or.RendererMap#addRenderer(org.apache.log4j.spi.RendererSupport,java.lang.String,java.lang.String)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#instantiateByKey(java.util.Properties,java.lang.String,java.lang.Class,java.lang.Object)
	CALLEE: org.apache.log4j.config.PropertySetter#<init>(java.lang.Object)
	CALLEE: org.apache.log4j.config.PropertySetter#setProperties(java.util.Properties,java.lang.String)
	CALLEE: org.apache.log4j.Hierarchy#getLogger(java.lang.String,org.apache.log4j.spi.LoggerFactory)
	CALLEE: org.apache.log4j.spi.NOPLoggerRepository#getLogger(java.lang.String,org.apache.log4j.spi.LoggerFactory)
	CALLEE: org.apache.log4j.Hierarchy#setThrowableRenderer(org.apache.log4j.spi.ThrowableRenderer)
CALLER: static org.apache.log4j.helpers.OptionConverter#substVars(java.lang.String,java.util.Properties)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#getSystemProperty(java.lang.String,java.lang.String)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#substVars(java.lang.String,java.util.Properties)
CALLER: org.apache.log4j.PropertyConfigurator#parseCategory(java.util.Properties,org.apache.log4j.Logger,java.lang.String,java.lang.String,java.lang.String)
	CALLEE: org.apache.log4j.spi.RootLogger#setLevel(org.apache.log4j.Level)
	CALLEE: org.apache.log4j.Category#setLevel(org.apache.log4j.Level)
	CALLEE: static org.apache.log4j.helpers.LogLog#debug(java.lang.String)
	CALLEE: static org.apache.log4j.helpers.LogLog#warn(java.lang.String)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#toLevel(java.lang.String,org.apache.log4j.Level)
	CALLEE: org.apache.log4j.PropertyConfigurator#parseAppender(java.util.Properties,java.lang.String)
	CALLEE: org.apache.log4j.Category#removeAllAppenders()
	CALLEE: org.apache.log4j.spi.NOPLogger#addAppender(org.apache.log4j.Appender)
	CALLEE: org.apache.log4j.spi.NOPLogger#removeAllAppenders()
	CALLEE: org.apache.log4j.Category#getLevel()
	CALLEE: org.apache.log4j.spi.NOPLogger#setLevel(org.apache.log4j.Level)
	CALLEE: org.apache.log4j.Category#addAppender(org.apache.log4j.Appender)
CALLER: static org.apache.log4j.config.PropertySetter#setProperties(java.lang.Object,java.util.Properties,java.lang.String)
	CALLEE: org.apache.log4j.config.PropertySetter#<init>(java.lang.Object)
	CALLEE: org.apache.log4j.config.PropertySetter#setProperties(java.util.Properties,java.lang.String)
CALLER: org.apache.log4j.PropertyConfigurator#parseAdditivityForLogger(java.util.Properties,org.apache.log4j.Logger,java.lang.String)
	CALLEE: static org.apache.log4j.helpers.LogLog#debug(java.lang.String)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#toBoolean(java.lang.String,boolean)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#findAndSubst(java.lang.String,java.util.Properties)
	CALLEE: org.apache.log4j.Category#setAdditivity(boolean)
CALLER: static org.apache.log4j.or.RendererMap#addRenderer(org.apache.log4j.spi.RendererSupport,java.lang.String,java.lang.String)
	CALLEE: static org.apache.log4j.helpers.LogLog#debug(java.lang.String)
	CALLEE: static org.apache.log4j.helpers.LogLog#error(java.lang.String,java.lang.Throwable)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#instantiateByClassName(java.lang.String,java.lang.Class,java.lang.Object)
	CALLEE: static org.apache.log4j.helpers.LogLog#error(java.lang.String)
	CALLEE: static org.apache.log4j.helpers.Loader#loadClass(java.lang.String)
	CALLEE: static org.apache.log4j.or.RendererMap#class$(java.lang.String)
	CALLEE: org.apache.log4j.Hierarchy#setRenderer(java.lang.Class,org.apache.log4j.or.ObjectRenderer)
CALLER: static org.apache.log4j.helpers.OptionConverter#instantiateByKey(java.util.Properties,java.lang.String,java.lang.Class,java.lang.Object)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#instantiateByClassName(java.lang.String,java.lang.Class,java.lang.Object)
	CALLEE: static org.apache.log4j.helpers.LogLog#error(java.lang.String)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#findAndSubst(java.lang.String,java.util.Properties)
CALLER: org.apache.log4j.config.PropertySetter#setProperties(java.util.Properties,java.lang.String)
	CALLEE: static org.apache.log4j.helpers.LogLog#warn(java.lang.String,java.lang.Throwable)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#findAndSubst(java.lang.String,java.util.Properties)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#instantiateByKey(java.util.Properties,java.lang.String,java.lang.Class,java.lang.Object)
	CALLEE: org.apache.log4j.config.PropertySetter#<init>(java.lang.Object)
	CALLEE: org.apache.log4j.config.PropertySetter#setProperties(java.util.Properties,java.lang.String)
	CALLEE: org.apache.log4j.config.PropertySetter#getPropertyDescriptor(java.lang.String)
	CALLEE: static org.apache.log4j.config.PropertySetter#class$(java.lang.String)
	CALLEE: org.apache.log4j.config.PropertySetter#setProperty(java.lang.String,java.lang.String)
	CALLEE: org.apache.log4j.config.PropertySetter#activate()
CALLER: org.apache.log4j.PropertyConfigurator#parseAppender(java.util.Properties,java.lang.String)
	CALLEE: static org.apache.log4j.helpers.LogLog#debug(java.lang.String)
	CALLEE: static org.apache.log4j.helpers.LogLog#error(java.lang.String)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#findAndSubst(java.lang.String,java.util.Properties)
	CALLEE: static org.apache.log4j.PropertyConfigurator#class$(java.lang.String)
	CALLEE: static org.apache.log4j.config.PropertySetter#setProperties(java.lang.Object,java.util.Properties,java.lang.String)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#instantiateByKey(java.util.Properties,java.lang.String,java.lang.Class,java.lang.Object)
	CALLEE: org.apache.log4j.PropertyConfigurator#registryGet(java.lang.String)
	CALLEE: org.apache.log4j.PropertyConfigurator#parseErrorHandler(org.apache.log4j.spi.ErrorHandler,java.lang.String,java.util.Properties,org.apache.log4j.spi.LoggerRepository)
	CALLEE: org.apache.log4j.PropertyConfigurator#parseAppenderFilters(java.util.Properties,java.lang.String,org.apache.log4j.Appender)
	CALLEE: org.apache.log4j.PropertyConfigurator#registryPut(org.apache.log4j.Appender)
CALLER: org.apache.log4j.config.PropertySetter#getPropertyDescriptor(java.lang.String)
	CALLEE: org.apache.log4j.config.PropertySetter#introspect()
CALLER: org.apache.log4j.config.PropertySetter#setProperty(java.lang.String,java.lang.String)
	CALLEE: static org.apache.log4j.helpers.LogLog#warn(java.lang.String,java.lang.Throwable)
	CALLEE: static org.apache.log4j.helpers.LogLog#warn(java.lang.String)
	CALLEE: org.apache.log4j.config.PropertySetter#getPropertyDescriptor(java.lang.String)
	CALLEE: org.apache.log4j.config.PropertySetter#setProperty(java.beans.PropertyDescriptor,java.lang.String,java.lang.String)
CALLER: org.apache.log4j.PropertyConfigurator#parseErrorHandler(org.apache.log4j.spi.ErrorHandler,java.lang.String,java.util.Properties,org.apache.log4j.spi.LoggerRepository)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#toBoolean(java.lang.String,boolean)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#findAndSubst(java.lang.String,java.util.Properties)
	CALLEE: org.apache.log4j.PropertyConfigurator#parseAppender(java.util.Properties,java.lang.String)
	CALLEE: org.apache.log4j.Hierarchy#getLogger(java.lang.String,org.apache.log4j.spi.LoggerFactory)
	CALLEE: org.apache.log4j.spi.NOPLoggerRepository#getLogger(java.lang.String,org.apache.log4j.spi.LoggerFactory)
	CALLEE: org.apache.log4j.Hierarchy#getLogger(java.lang.String)
	CALLEE: org.apache.log4j.spi.NOPLoggerRepository#getLogger(java.lang.String)
	CALLEE: org.apache.log4j.Hierarchy#getRootLogger()
	CALLEE: org.apache.log4j.spi.NOPLoggerRepository#getRootLogger()
CALLER: org.apache.log4j.PropertyConfigurator#parseAppenderFilters(java.util.Properties,java.lang.String,org.apache.log4j.Appender)
	CALLEE: static org.apache.log4j.helpers.LogLog#warn(java.lang.String)
	CALLEE: org.apache.log4j.config.PropertySetter#setProperty(java.lang.String,java.lang.String)
	CALLEE: org.apache.log4j.config.PropertySetter#activate()
	CALLEE: static org.apache.log4j.helpers.LogLog#debug(java.lang.String)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#instantiateByClassName(java.lang.String,java.lang.Class,java.lang.Object)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#findAndSubst(java.lang.String,java.util.Properties)
	CALLEE: static org.apache.log4j.PropertyConfigurator#class$(java.lang.String)
	CALLEE: org.apache.log4j.config.PropertySetter#<init>(java.lang.Object)
	CALLEE: org.apache.log4j.NameValue#<init>(java.lang.String,java.lang.String)
	CALLEE: org.apache.log4j.SortedKeyEnumeration#<init>(java.util.Hashtable)
	CALLEE: org.apache.log4j.SortedKeyEnumeration#hasMoreElements()
	CALLEE: org.apache.log4j.SortedKeyEnumeration#nextElement()
CALLER: org.apache.log4j.config.PropertySetter#introspect()
	CALLEE: static org.apache.log4j.helpers.LogLog#error(java.lang.String)
CALLER: org.apache.log4j.config.PropertySetter#setProperty(java.beans.PropertyDescriptor,java.lang.String,java.lang.String)
	CALLEE: static org.apache.log4j.helpers.LogLog#debug(java.lang.String)
	CALLEE: org.apache.log4j.config.PropertySetterException#<init>(java.lang.String)
	CALLEE: org.apache.log4j.config.PropertySetter#convertArg(java.lang.String,java.lang.Class)
	CALLEE: org.apache.log4j.config.PropertySetterException#<init>(java.lang.Throwable)
CALLER: org.apache.log4j.config.PropertySetter#convertArg(java.lang.String,java.lang.Class)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#instantiateByClassName(java.lang.String,java.lang.Class,java.lang.Object)
	CALLEE: static org.apache.log4j.helpers.OptionConverter#toLevel(java.lang.String,org.apache.log4j.Level)
	CALLEE: static org.apache.log4j.config.PropertySetter#class$(java.lang.String)
CALLER: org.apache.log4j.Hierarchy#resetConfiguration()
	CALLEE: org.apache.log4j.spi.RootLogger#setLevel(org.apache.log4j.Level)
	CALLEE: org.apache.log4j.Hierarchy#setThreshold(org.apache.log4j.Level)
	CALLEE: org.apache.log4j.Hierarchy#getRootLogger()
	CALLEE: org.apache.log4j.Category#setResourceBundle(java.util.ResourceBundle)
	CALLEE: org.apache.log4j.Hierarchy#shutdown()
	CALLEE: org.apache.log4j.Hierarchy#getCurrentLoggers()
	CALLEE: org.apache.log4j.or.RendererMap#clear()
	CALLEE: org.apache.log4j.Category#setAdditivity(boolean)
	CALLEE: org.apache.log4j.Category#setLevel(org.apache.log4j.Level)
CALLER: org.apache.log4j.Hierarchy#getLogger(java.lang.String,org.apache.log4j.spi.LoggerFactory)
	CALLEE: org.apache.log4j.Category#setHierarchy(org.apache.log4j.spi.LoggerRepository)
	CALLEE: org.apache.log4j.CategoryKey#<init>(java.lang.String)
	CALLEE: org.apache.log4j.DefaultCategoryFactory#makeNewLoggerInstance(java.lang.String)
	CALLEE: org.apache.log4j.Hierarchy#updateParents(org.apache.log4j.Logger)
	CALLEE: org.apache.log4j.Hierarchy#updateChildren(org.apache.log4j.ProvisionNode,org.apache.log4j.Logger)
CALLER: org.apache.log4j.spi.NOPLoggerRepository#getLogger(java.lang.String,org.apache.log4j.spi.LoggerFactory)
	CALLEE: org.apache.log4j.spi.NOPLogger#<init>(org.apache.log4j.spi.NOPLoggerRepository,java.lang.String)
CALLER: org.apache.log4j.Hierarchy#getLogger(java.lang.String)
	CALLEE: org.apache.log4j.Hierarchy#getLogger(java.lang.String,org.apache.log4j.spi.LoggerFactory)
CALLER: org.apache.log4j.spi.NOPLoggerRepository#getLogger(java.lang.String)
	CALLEE: org.apache.log4j.spi.NOPLogger#<init>(org.apache.log4j.spi.NOPLoggerRepository,java.lang.String)
CALLER: org.apache.log4j.spi.NOPLoggerRepository#getRootLogger()
	CALLEE: org.apache.log4j.spi.NOPLogger#<init>(org.apache.log4j.spi.NOPLoggerRepository,java.lang.String)
CALLER: org.apache.log4j.Hierarchy#setRenderer(java.lang.Class,org.apache.log4j.or.ObjectRenderer)
	CALLEE: org.apache.log4j.or.RendererMap#put(java.lang.Class,org.apache.log4j.or.ObjectRenderer)
CALLER: org.apache.log4j.Hierarchy#shutdown()
	CALLEE: org.apache.log4j.Hierarchy#getRootLogger()
	CALLEE: org.apache.log4j.Hierarchy#getCurrentLoggers()
	CALLEE: org.apache.log4j.Category#closeNestedAppenders()
	CALLEE: org.apache.log4j.Category#removeAllAppenders()
CALLER: org.apache.log4j.DefaultCategoryFactory#makeNewLoggerInstance(java.lang.String)
	CALLEE: org.apache.log4j.Logger#<init>(java.lang.String)
CALLER: org.apache.log4j.Hierarchy#updateParents(org.apache.log4j.Logger)
	CALLEE: org.apache.log4j.CategoryKey#<init>(java.lang.String)
	CALLEE: org.apache.log4j.ProvisionNode#<init>(org.apache.log4j.Logger)
CALLER: org.apache.log4j.spi.NOPLogger#<init>(org.apache.log4j.spi.NOPLoggerRepository,java.lang.String)
	CALLEE: org.apache.log4j.Logger#<init>(java.lang.String)
CALLER: org.apache.log4j.Category#closeNestedAppenders()
	CALLEE: org.apache.log4j.Category#getAllAppenders()
	CALLEE: org.apache.log4j.helpers.NullEnumeration#nextElement()
	CALLEE: org.apache.log4j.helpers.NullEnumeration#hasMoreElements()
CALLER: org.apache.log4j.Category#removeAllAppenders()
	CALLEE: org.apache.log4j.Category#fireRemoveAppenderEvent(org.apache.log4j.Appender)
	CALLEE: org.apache.log4j.helpers.AppenderAttachableImpl#removeAllAppenders()
	CALLEE: org.apache.log4j.helpers.AppenderAttachableImpl#getAllAppenders()
CALLER: org.apache.log4j.Category#getAllAppenders()
	CALLEE: static org.apache.log4j.helpers.NullEnumeration#getInstance()
	CALLEE: org.apache.log4j.helpers.AppenderAttachableImpl#getAllAppenders()
CALLER: org.apache.log4j.Category#fireRemoveAppenderEvent(org.apache.log4j.Appender)
	CALLEE: org.apache.log4j.Hierarchy#fireRemoveAppenderEvent(org.apache.log4j.Category,org.apache.log4j.Appender)
CALLER: static org.apache.log4j.helpers.NullEnumeration#<clinit>()
	CALLEE: org.apache.log4j.helpers.NullEnumeration#<init>()
CALLER: org.apache.log4j.CategoryKey#equals(java.lang.Object)
	CALLEE: static org.apache.log4j.CategoryKey#class$(java.lang.String)
CALLER: org.apache.log4j.Category#addAppender(org.apache.log4j.Appender)
	CALLEE: org.apache.log4j.helpers.AppenderAttachableImpl#<init>()
	CALLEE: org.apache.log4j.helpers.AppenderAttachableImpl#addAppender(org.apache.log4j.Appender)
	CALLEE: org.apache.log4j.Hierarchy#fireAddAppenderEvent(org.apache.log4j.Category,org.apache.log4j.Appender)
	CALLEE: org.apache.log4j.spi.NOPLoggerRepository#fireAddAppenderEvent(org.apache.log4j.Category,org.apache.log4j.Appender)
