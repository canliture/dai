CALLER: net.bytebuddy.utility.JavaModule#toString()
	CALLEE: net.bytebuddy.dynamic.Nexus#toString()
	CALLEE: net.bytebuddy.matcher.SuperTypeMatcher#toString()
	CALLEE: net.bytebuddy.matcher.DefinedShapeMatcher#toString()
	CALLEE: net.bytebuddy.matcher.DeclaringMethodMatcher#toString()
	CALLEE: net.bytebuddy.matcher.MethodParameterTypeMatcher#toString()
	CALLEE: net.bytebuddy.matcher.NullMatcher#toString()
	CALLEE: net.bytebuddy.matcher.ClassLoaderParentMatcher#toString()
	CALLEE: net.bytebuddy.matcher.CollectionSizeMatcher#toString()
	CALLEE: net.bytebuddy.matcher.InheritedAnnotationMatcher#toString()
	CALLEE: net.bytebuddy.matcher.MethodParametersMatcher#toString()
	CALLEE: net.bytebuddy.matcher.NameMatcher#toString()
	CALLEE: net.bytebuddy.matcher.AccessibilityMatcher#toString()
	CALLEE: net.bytebuddy.matcher.CollectionElementMatcher#toString()
	CALLEE: net.bytebuddy.matcher.MethodExceptionTypeMatcher#toString()
	CALLEE: net.bytebuddy.matcher.DeclaringFieldMatcher#toString()
	CALLEE: net.bytebuddy.matcher.BooleanMatcher#toString()
	CALLEE: net.bytebuddy.matcher.FailSafeMatcher#toString()
	CALLEE: net.bytebuddy.matcher.HasSuperTypeMatcher#toString()
	CALLEE: net.bytebuddy.matcher.VisibilityMatcher#toString()
	CALLEE: net.bytebuddy.matcher.CachingMatcher#toString()
	CALLEE: net.bytebuddy.matcher.MethodReturnTypeMatcher#toString()
	CALLEE: net.bytebuddy.matcher.CollectionOneToOneMatcher#toString()
	CALLEE: net.bytebuddy.matcher.ClassLoaderHierarchyMatcher#toString()
	CALLEE: net.bytebuddy.matcher.SignatureTokenMatcher#toString()
	CALLEE: net.bytebuddy.matcher.StringMatcher#toString()
	CALLEE: net.bytebuddy.matcher.IsNamedMatcher#toString()
	CALLEE: net.bytebuddy.matcher.MethodParameterTypesMatcher#toString()
	CALLEE: net.bytebuddy.matcher.MethodOverrideMatcher#toString()
	CALLEE: net.bytebuddy.matcher.CollectionItemMatcher#toString()
	CALLEE: net.bytebuddy.matcher.DescriptorMatcher#toString()
	CALLEE: net.bytebuddy.matcher.SubTypeMatcher#toString()
	CALLEE: net.bytebuddy.matcher.TypeSortMatcher#toString()
	CALLEE: net.bytebuddy.matcher.ModifierMatcher#toString()
	CALLEE: net.bytebuddy.matcher.DeclaringTypeMatcher#toString()
	CALLEE: net.bytebuddy.matcher.InstanceTypeMatcher#toString()
	CALLEE: net.bytebuddy.matcher.NegatingMatcher#toString()
	CALLEE: net.bytebuddy.matcher.ErasureMatcher#toString()
	CALLEE: net.bytebuddy.matcher.CollectionErasureMatcher#toString()
	CALLEE: net.bytebuddy.matcher.FieldTypeMatcher#toString()
	CALLEE: net.bytebuddy.matcher.MethodSortMatcher#toString()
	CALLEE: net.bytebuddy.matcher.AnnotationTypeMatcher#toString()
	CALLEE: net.bytebuddy.matcher.DeclaringAnnotationMatcher#toString()
	CALLEE: net.bytebuddy.matcher.EqualityMatcher#toString()
	CALLEE: net.bytebuddy.utility.JavaModule#toString()
	CALLEE: net.bytebuddy.description.type.TypeVariableToken#toString()
	CALLEE: net.bytebuddy.build.maven.MavenCoordinate#toString()
CALLER: net.bytebuddy.ByteBuddy#rebase(java.lang.Package,net.bytebuddy.dynamic.ClassFileLocator)
	CALLEE: net.bytebuddy.ByteBuddy#rebase(net.bytebuddy.description.type.PackageDescription,net.bytebuddy.dynamic.ClassFileLocator)
CALLER: net.bytebuddy.dynamic.scaffold.inline.RebaseImplementationTarget#getOriginType()
	CALLEE: net.bytebuddy.dynamic.scaffold.inline.RebaseImplementationTarget#getOriginType()
CALLER: static net.bytebuddy.implementation.MethodDelegation#withDefaultConfiguration()
CALLER: net.bytebuddy.ByteBuddy#makeInterface()
	CALLEE: net.bytebuddy.ByteBuddy#makeInterface(java.util.Collection)
CALLER: net.bytebuddy.asm.MemberSubstitution.WithoutSpecification.ForMatchedField#onWrite()
CALLER: static net.bytebuddy.matcher.ElementMatchers#erasures(net.bytebuddy.description.type.TypeDescription[])
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#erasures(java.lang.Iterable)
CALLER: net.bytebuddy.utility.visitor.LineNumberPrependingMethodVisitor#visitLineNumber(int,net.bytebuddy.jar.asm.Label)
CALLER: net.bytebuddy.asm.ModifierAdjustment.ModifierAdjustingClassVisitor#visitField(int,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)
	CALLEE: net.bytebuddy.asm.ModifierAdjustment.Adjustment#resolve(int)
CALLER: net.bytebuddy.asm.MemberRemoval.MemberRemovingClassVisitor#visitField(int,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)
CALLER: static net.bytebuddy.ClassFileVersion#ofThisVm()
CALLER: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.ChildFirst#getResources(java.lang.String)
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.ChildFirst.PrependingEnumeration#<init>(java.net.URL,java.util.Enumeration)
CALLER: net.bytebuddy.implementation.InvokeDynamic.WithImplicitTarget#invoke(java.lang.Class)
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitTarget#invoke(net.bytebuddy.description.type.TypeDescription)
CALLER: static net.bytebuddy.matcher.ElementMatchers#isMandated()
	CALLEE: net.bytebuddy.matcher.ModifierMatcher#<init>(net.bytebuddy.matcher.ModifierMatcher.Mode)
CALLER: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall#prepare(net.bytebuddy.dynamic.scaffold.InstrumentedType)
CALLER: net.bytebuddy.asm.Advice.AdviceVisitor.WithExitAdvice.WithExceptionHandling#storeDefaultReturn()
	CALLEE: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#visitInsn(int)
	CALLEE: net.bytebuddy.utility.visitor.StackAwareMethodVisitor#visitInsn(int)
	CALLEE: net.bytebuddy.asm.Advice.AdviceVisitor#variable(int)
CALLER: static net.bytebuddy.matcher.ElementMatchers#takesArgument(int,java.lang.Class)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#takesArgument(int,net.bytebuddy.description.type.TypeDescription)
CALLER: static net.bytebuddy.matcher.ElementMatchers#isDeclaredByGeneric(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: net.bytebuddy.matcher.DeclaringTypeMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.benchmark.StubInvocationBenchmark#setUp()
	CALLEE: net.bytebuddy.benchmark.ClassByImplementationBenchmark#baseline()
	CALLEE: net.bytebuddy.benchmark.ClassByImplementationBenchmark#benchmarkByteBuddy()
	CALLEE: net.bytebuddy.benchmark.ClassByImplementationBenchmark#benchmarkCglib()
	CALLEE: net.bytebuddy.benchmark.ClassByImplementationBenchmark#benchmarkJavassist()
	CALLEE: net.bytebuddy.benchmark.ClassByImplementationBenchmark#benchmarkJdkProxy()
CALLER: net.bytebuddy.utility.visitor.StackAwareMethodVisitor#visitLineNumber(int,net.bytebuddy.jar.asm.Label)
CALLER: net.bytebuddy.implementation.InvokeDynamic.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.TypeCache.StorageKey#equals(java.lang.Object)
	CALLEE: net.bytebuddy.dynamic.Nexus#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender.AccessorMethodInvocation#equals(java.lang.Object)
	CALLEE: net.bytebuddy.matcher.CachingMatcher#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForInstance.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForImplicitProperty.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.MethodCallProxy.MethodCall.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.MethodCall.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.utility.JavaModule#equals(java.lang.Object)
	CALLEE: net.bytebuddy.description.type.TypeVariableToken#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.bytecode.collection.ArrayFactory.ArrayStackManipulation#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForParameterSetter.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.TypeCache.LookupKey#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.FixedValue.ForOriginType.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForField.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.ClassDefinitionAction#equals(java.lang.Object)
	CALLEE: net.bytebuddy.build.maven.MavenCoordinate#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.Appender#getOuter()
CALLER: net.bytebuddy.implementation.InvokeDynamic#appender(net.bytebuddy.implementation.Implementation.Target)
CALLER: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#appender(net.bytebuddy.implementation.Implementation.Target)
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfField#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfArgument#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfInstance#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitArguments#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic#appender(net.bytebuddy.implementation.Implementation.Target)
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#appender(net.bytebuddy.implementation.Implementation.Target)
CALLER: net.bytebuddy.asm.Advice.AdviceVisitor.WithExitAdvice.WithExceptionHandling#onUserPrepare()
	CALLEE: net.bytebuddy.utility.visitor.StackAwareMethodVisitor#visitTryCatchBlock(net.bytebuddy.jar.asm.Label,net.bytebuddy.jar.asm.Label,net.bytebuddy.jar.asm.Label,java.lang.String)
CALLER: static net.bytebuddy.matcher.ElementMatchers#declaresField(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: net.bytebuddy.matcher.CollectionItemMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: net.bytebuddy.matcher.DeclaringFieldMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: static net.bytebuddy.matcher.ElementMatchers#anyOf(java.lang.reflect.Method[])
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#anyOf(java.lang.Iterable)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#definedMethod(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.ChildFirst.PrependingEnumeration#nextElement()
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.ChildFirst.PrependingEnumeration#nextElement()
CALLER: net.bytebuddy.matcher.DeclaringMethodMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.asm.Advice.WithCustomMapping#to(net.bytebuddy.description.type.TypeDescription,net.bytebuddy.description.type.TypeDescription)
	CALLEE: net.bytebuddy.asm.Advice.WithCustomMapping#to(net.bytebuddy.description.type.TypeDescription,net.bytebuddy.description.type.TypeDescription,net.bytebuddy.dynamic.ClassFileLocator)
CALLER: static net.bytebuddy.dynamic.loading.ClassReloadingStrategy#fromInstalledAgent()
	CALLEE: static net.bytebuddy.dynamic.loading.ClassReloadingStrategy#of(java.lang.instrument.Instrumentation)
CALLER: static net.bytebuddy.matcher.ElementMatchers#any()
	CALLEE: net.bytebuddy.matcher.BooleanMatcher#<init>(boolean)
CALLER: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#onVisitInvokeDynamicInsn(java.lang.String,java.lang.String,net.bytebuddy.jar.asm.Handle,java.lang.Object[])
CALLER: static net.bytebuddy.benchmark.ClassByExtensionBenchmark.ByteBuddyProxyInterceptor#intercept(java.util.concurrent.Callable)
CALLER: net.bytebuddy.matcher.ClassLoaderParentMatcher#<init>(java.lang.ClassLoader)
CALLER: net.bytebuddy.ByteBuddy#makePackage(java.lang.String)
CALLER: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#visitMultiANewArrayInsn(java.lang.String,int)
	CALLEE: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#considerEndOfExceptionTable()
	CALLEE: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#onVisitMultiANewArrayInsn(java.lang.String,int)
CALLER: net.bytebuddy.utility.visitor.StackAwareMethodVisitor#visitMultiANewArrayInsn(java.lang.String,int)
	CALLEE: net.bytebuddy.utility.visitor.StackAwareMethodVisitor#adjustStack(int)
CALLER: static net.bytebuddy.matcher.ElementMatchers#genericFieldType(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: net.bytebuddy.matcher.FieldTypeMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.matcher.CachingMatcher#hashCode()
	CALLEE: net.bytebuddy.TypeCache.StorageKey#hashCode()
	CALLEE: net.bytebuddy.dynamic.Nexus#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender.AccessorMethodInvocation#hashCode()
	CALLEE: net.bytebuddy.matcher.CachingMatcher#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall#hashCode()
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForInstance.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForImplicitProperty.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.MethodCallProxy.MethodCall.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.MethodCall.Appender#hashCode()
	CALLEE: net.bytebuddy.utility.JavaModule#hashCode()
	CALLEE: net.bytebuddy.description.type.TypeVariableToken#hashCode()
	CALLEE: net.bytebuddy.implementation.bytecode.collection.ArrayFactory.ArrayStackManipulation#hashCode()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForParameterSetter.Appender#hashCode()
	CALLEE: net.bytebuddy.TypeCache.LookupKey#hashCode()
	CALLEE: net.bytebuddy.implementation.FixedValue.ForOriginType.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForField.Appender#hashCode()
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.ClassDefinitionAction#hashCode()
	CALLEE: net.bytebuddy.build.maven.MavenCoordinate#hashCode()
CALLER: static net.bytebuddy.matcher.ElementMatchers#isSynchronized()
	CALLEE: net.bytebuddy.matcher.ModifierMatcher#<init>(net.bytebuddy.matcher.ModifierMatcher.Mode)
CALLER: static net.bytebuddy.asm.MemberSubstitution#strict()
CALLER: static net.bytebuddy.matcher.ElementMatchers#declaresGenericException(java.lang.reflect.Type)
CALLER: static net.bytebuddy.matcher.ElementMatchers#isSynthetic()
	CALLEE: net.bytebuddy.matcher.ModifierMatcher#<init>(net.bytebuddy.matcher.ModifierMatcher.Mode)
CALLER: net.bytebuddy.utility.JavaModule#getActualName()
CALLER: net.bytebuddy.implementation.InvocationHandlerAdapter.ForInstance#withoutMethodCache()
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForInstance#<init>(java.lang.String,boolean,net.bytebuddy.implementation.bytecode.assign.Assigner,java.lang.reflect.InvocationHandler)
CALLER: net.bytebuddy.implementation.InvokeDynamic.WithImplicitTarget#invoke(java.lang.String,net.bytebuddy.description.type.TypeDescription)
CALLER: net.bytebuddy.asm.ModifierAdjustment#withMethodModifiers(net.bytebuddy.matcher.ElementMatcher,java.util.List)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isMethod()
	CALLEE: net.bytebuddy.asm.ModifierAdjustment#withInvokableModifiers(net.bytebuddy.matcher.ElementMatcher,java.util.List)
CALLER: static net.bytebuddy.matcher.ElementMatchers#isClone()
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#named(java.lang.String)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#takesArguments(int)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#returns(net.bytebuddy.description.type.TypeDescription)
CALLER: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfArgument#as(net.bytebuddy.description.type.TypeDescription)
CALLER: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#onVisitIntInsn(int,int)
CALLER: net.bytebuddy.implementation.MethodDelegation.WithCustomProperties#withBinders(java.util.List)
	CALLEE: static net.bytebuddy.utility.CompoundList#of(java.util.List,java.util.List)
CALLER: static net.bytebuddy.matcher.ElementMatchers#anyOf(java.lang.reflect.Type[])
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#anyOf(java.lang.Iterable)
CALLER: static net.bytebuddy.matcher.ElementMatchers#takesArguments(net.bytebuddy.description.type.TypeDescription[])
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#erasures(net.bytebuddy.description.type.TypeDescription[])
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#takesGenericArguments(net.bytebuddy.matcher.ElementMatcher)
CALLER: static net.bytebuddy.implementation.FieldAccessor#of(net.bytebuddy.implementation.FieldAccessor.FieldNameExtractor)
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForImplicitProperty#<init>(net.bytebuddy.implementation.FieldAccessor.FieldLocation)
CALLER: net.bytebuddy.benchmark.SuperClassInvocationBenchmark#setUp()
	CALLEE: net.bytebuddy.benchmark.ClassByExtensionBenchmark#baseline()
	CALLEE: net.bytebuddy.benchmark.ClassByExtensionBenchmark#benchmarkByteBuddyWithProxy()
	CALLEE: net.bytebuddy.benchmark.ClassByExtensionBenchmark#benchmarkByteBuddyWithAccessor()
	CALLEE: net.bytebuddy.benchmark.ClassByExtensionBenchmark#benchmarkByteBuddyWithPrefix()
	CALLEE: net.bytebuddy.benchmark.ClassByExtensionBenchmark#benchmarkByteBuddySpecialized()
	CALLEE: net.bytebuddy.benchmark.ClassByExtensionBenchmark#benchmarkCglib()
	CALLEE: net.bytebuddy.benchmark.ClassByExtensionBenchmark#benchmarkJavassist()
CALLER: static net.bytebuddy.matcher.ElementMatchers#fieldType(net.bytebuddy.description.type.TypeDescription)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#is(java.lang.Object)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#fieldType(net.bytebuddy.matcher.ElementMatcher)
CALLER: static net.bytebuddy.matcher.ElementMatchers#takesGenericArguments(java.lang.reflect.Type[])
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#takesGenericArguments(java.util.List)
CALLER: net.bytebuddy.dynamic.loading.MultipleParentClassLoader.Builder#build()
	CALLEE: net.bytebuddy.dynamic.loading.MultipleParentClassLoader#<init>(java.util.List)
CALLER: net.bytebuddy.implementation.FieldAccessor.ForImplicitProperty#appender(net.bytebuddy.implementation.Implementation.Target)
CALLER: static net.bytebuddy.matcher.ElementMatchers#is(java.lang.reflect.Constructor)
CALLER: net.bytebuddy.dynamic.loading.ByteArrayClassLoader#defineClass(java.lang.String,byte[])
CALLER: net.bytebuddy.implementation.FieldAccessor.ForImplicitProperty#<init>(net.bytebuddy.implementation.FieldAccessor.FieldLocation)
CALLER: net.bytebuddy.implementation.MethodCall#withThis()
CALLER: net.bytebuddy.build.maven.Initialization#getEntryPoint(net.bytebuddy.build.maven.ClassLoaderResolver,java.lang.String,java.lang.String,java.lang.String)
	CALLEE: net.bytebuddy.build.maven.AbstractUserConfiguration#asCoordinate(java.lang.String,java.lang.String,java.lang.String)
	CALLEE: net.bytebuddy.build.maven.ClassLoaderResolver#resolve(net.bytebuddy.build.maven.MavenCoordinate)
CALLER: static net.bytebuddy.implementation.MethodCall#construct(net.bytebuddy.description.method.MethodDescription)
CALLER: net.bytebuddy.benchmark.ClassByImplementationBenchmark#baseline()
CALLER: net.bytebuddy.implementation.DefaultMethodCall.Appender#<init>(net.bytebuddy.implementation.Implementation.Target,java.util.List)
CALLER: static net.bytebuddy.matcher.ElementMatchers#noneOf(java.lang.reflect.Field[])
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#noneOf(java.lang.Iterable)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#definedField(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.ByteBuddy#subclass(net.bytebuddy.description.type.TypeDefinition,net.bytebuddy.dynamic.scaffold.subclass.ConstructorStrategy)
CALLER: static net.bytebuddy.matcher.ElementMatchers#isSetter()
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#nameStartsWith(java.lang.String)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#takesArguments(int)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#returns(net.bytebuddy.description.type.TypeDescription)
CALLER: net.bytebuddy.dynamic.loading.MultipleParentClassLoader.CompoundEnumeration#nextElement()
	CALLEE: net.bytebuddy.dynamic.loading.MultipleParentClassLoader.CompoundEnumeration#nextElement()
CALLER: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.ChildFirst#<init>(java.lang.ClassLoader,java.util.Map,net.bytebuddy.dynamic.loading.ByteArrayClassLoader.PersistenceHandler)
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader#<init>(java.lang.ClassLoader,java.util.Map,net.bytebuddy.dynamic.loading.ByteArrayClassLoader.PersistenceHandler)
CALLER: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#visitJumpInsn(int,net.bytebuddy.jar.asm.Label)
	CALLEE: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#considerEndOfExceptionTable()
	CALLEE: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#onVisitJumpInsn(int,net.bytebuddy.jar.asm.Label)
CALLER: net.bytebuddy.utility.visitor.StackAwareMethodVisitor#visitJumpInsn(int,net.bytebuddy.jar.asm.Label)
	CALLEE: net.bytebuddy.utility.visitor.StackAwareMethodVisitor#adjustStack(int)
CALLER: net.bytebuddy.benchmark.ClassByExtensionBenchmark#benchmarkByteBuddyWithAccessor()
	CALLEE: net.bytebuddy.ByteBuddy#<init>()
	CALLEE: net.bytebuddy.ByteBuddy#with(net.bytebuddy.dynamic.scaffold.TypeValidation)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#none()
	CALLEE: net.bytebuddy.ByteBuddy#ignore(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: net.bytebuddy.ByteBuddy#subclass(java.lang.Class)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isDeclaredBy(java.lang.Class)
	CALLEE: static net.bytebuddy.implementation.MethodDelegation#to(java.lang.Class)
	CALLEE: net.bytebuddy.benchmark.ClassByExtensionBenchmark#newClassLoader()
CALLER: net.bytebuddy.dynamic.Nexus#<init>(java.lang.Class,int)
	CALLEE: static net.bytebuddy.dynamic.Nexus#nonAnonymous(java.lang.String)
	CALLEE: net.bytebuddy.dynamic.Nexus#<init>(java.lang.String,java.lang.ClassLoader,java.lang.ref.ReferenceQueue,int)
CALLER: static net.bytebuddy.matcher.ElementMatchers#takesGenericArgument(int,net.bytebuddy.matcher.ElementMatcher)
	CALLEE: net.bytebuddy.matcher.CollectionElementMatcher#<init>(int,net.bytebuddy.matcher.ElementMatcher)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#takesGenericArguments(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.asm.MemberRemoval#stripInvokables(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.ChildFirst#loadClass(java.lang.String,boolean)
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader#findClass(java.lang.String)
CALLER: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall#equals(java.lang.Object)
	CALLEE: net.bytebuddy.TypeCache.StorageKey#equals(java.lang.Object)
	CALLEE: net.bytebuddy.dynamic.Nexus#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender.AccessorMethodInvocation#equals(java.lang.Object)
	CALLEE: net.bytebuddy.matcher.CachingMatcher#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForInstance.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForImplicitProperty.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.MethodCallProxy.MethodCall.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.MethodCall.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.utility.JavaModule#equals(java.lang.Object)
	CALLEE: net.bytebuddy.description.type.TypeVariableToken#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.bytecode.collection.ArrayFactory.ArrayStackManipulation#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForParameterSetter.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.TypeCache.LookupKey#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.FixedValue.ForOriginType.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForField.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.ClassDefinitionAction#equals(java.lang.Object)
	CALLEE: net.bytebuddy.build.maven.MavenCoordinate#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall#getTypeProxy()
CALLER: net.bytebuddy.dynamic.NexusAccessor#<init>()
	CALLEE: net.bytebuddy.dynamic.NexusAccessor#<init>(java.lang.ref.ReferenceQueue)
CALLER: static net.bytebuddy.matcher.ElementMatchers#isVariable(java.lang.String)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#named(java.lang.String)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isVariable(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.asm.Advice.AdviceVisitor#onVisitIincInsn(int,int)
	CALLEE: net.bytebuddy.asm.Advice.AdviceVisitor#resolve(int)
	CALLEE: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#visitIincInsn(int,int)
CALLER: net.bytebuddy.asm.Advice.Appender.EmulatingMethodVisitor#<init>(net.bytebuddy.jar.asm.MethodVisitor,net.bytebuddy.implementation.bytecode.ByteCodeAppender)
CALLER: static net.bytebuddy.asm.Advice#to(java.lang.Class,net.bytebuddy.dynamic.ClassFileLocator)
	CALLEE: static net.bytebuddy.asm.Advice#to(net.bytebuddy.description.type.TypeDescription,net.bytebuddy.dynamic.ClassFileLocator)
CALLER: static net.bytebuddy.matcher.ElementMatchers#anyOf(java.lang.Iterable)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#none()
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#is(java.lang.Object)
CALLER: net.bytebuddy.TypeCache.SimpleKey#<init>(java.util.Collection)
CALLER: net.bytebuddy.asm.ModifierAdjustment#withTypeModifiers(java.util.List)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#any()
	CALLEE: net.bytebuddy.asm.ModifierAdjustment#withTypeModifiers(net.bytebuddy.matcher.ElementMatcher,java.util.List)
CALLER: net.bytebuddy.asm.Advice.AdviceVisitor#variable(int)
	CALLEE: net.bytebuddy.asm.Advice.AdviceVisitor#variable(int,int)
CALLER: static net.bytebuddy.matcher.ElementMatchers#isInterface()
	CALLEE: net.bytebuddy.matcher.ModifierMatcher#<init>(net.bytebuddy.matcher.ModifierMatcher.Mode)
CALLER: net.bytebuddy.implementation.MethodCall.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.TypeCache.StorageKey#equals(java.lang.Object)
	CALLEE: net.bytebuddy.dynamic.Nexus#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender.AccessorMethodInvocation#equals(java.lang.Object)
	CALLEE: net.bytebuddy.matcher.CachingMatcher#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForInstance.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForImplicitProperty.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.MethodCallProxy.MethodCall.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.MethodCall.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.utility.JavaModule#equals(java.lang.Object)
	CALLEE: net.bytebuddy.description.type.TypeVariableToken#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.bytecode.collection.ArrayFactory.ArrayStackManipulation#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForParameterSetter.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.TypeCache.LookupKey#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.FixedValue.ForOriginType.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForField.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.ClassDefinitionAction#equals(java.lang.Object)
	CALLEE: net.bytebuddy.build.maven.MavenCoordinate#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.MethodCall.Appender#getOuter()
CALLER: static net.bytebuddy.agent.builder.LambdaFactory#make(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,boolean,java.util.List,java.util.List)
	CALLEE: net.bytebuddy.agent.builder.LambdaFactory#invoke(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,boolean,java.util.List,java.util.List,java.util.Collection)
CALLER: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#withIntegerValue(int[])
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfField#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfArgument#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfInstance#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitArguments#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic#withIntegerValue(int[])
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#withIntegerValue(int[])
CALLER: static net.bytebuddy.matcher.ElementMatchers#isSetter(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#erasure(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isGenericSetter(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.implementation.FieldAccessor#setter(net.bytebuddy.description.field.FieldDescription,net.bytebuddy.description.method.ParameterDescription)
	CALLEE: net.bytebuddy.implementation.FieldAccessor#access(net.bytebuddy.description.field.FieldDescription,net.bytebuddy.description.method.MethodDescription,net.bytebuddy.implementation.bytecode.StackManipulation)
CALLER: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#withCharacterValue(char[])
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfField#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfArgument#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfInstance#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitArguments#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic#withCharacterValue(char[])
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#withCharacterValue(char[])
CALLER: net.bytebuddy.implementation.InvocationHandlerAdapter#apply(net.bytebuddy.jar.asm.MethodVisitor,net.bytebuddy.implementation.Implementation.Context,net.bytebuddy.description.method.MethodDescription,net.bytebuddy.implementation.bytecode.StackManipulation,net.bytebuddy.description.field.FieldDescription)
	CALLEE: net.bytebuddy.implementation.bytecode.constant.MethodConstant#cached()
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter#argumentValuesOf(net.bytebuddy.description.method.MethodDescription)
	CALLEE: net.bytebuddy.implementation.bytecode.collection.ArrayFactory#withValues(java.util.List)
CALLER: static net.bytebuddy.agent.ByteBuddyAgent#attach(java.io.File,java.lang.String,net.bytebuddy.agent.ByteBuddyAgent.AttachmentProvider)
	CALLEE: static net.bytebuddy.agent.ByteBuddyAgent#attach(java.io.File,java.lang.String,java.lang.String,net.bytebuddy.agent.ByteBuddyAgent.AttachmentProvider)
CALLER: net.bytebuddy.asm.Advice.WithCustomMapping#bindSerialized(java.lang.Class,java.io.Serializable)
CALLER: net.bytebuddy.implementation.MethodCall#withOwnType()
CALLER: net.bytebuddy.ByteBuddy.EnumerationImplementation.InitializationAppender#apply(net.bytebuddy.jar.asm.MethodVisitor,net.bytebuddy.implementation.Implementation.Context,net.bytebuddy.description.method.MethodDescription)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isConstructor()
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#takesArguments(java.lang.Class[])
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#named(java.lang.String)
	CALLEE: static net.bytebuddy.implementation.bytecode.TypeCreation#of(net.bytebuddy.description.type.TypeDescription)
	CALLEE: net.bytebuddy.implementation.bytecode.constant.TextConstant#<init>(java.lang.String)
	CALLEE: net.bytebuddy.implementation.bytecode.collection.ArrayFactory#withValues(java.util.List)
CALLER: static net.bytebuddy.matcher.ElementMatchers#isHashCode()
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#named(java.lang.String)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#takesArguments(int)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#returns(java.lang.Class)
CALLER: static net.bytebuddy.implementation.MethodDelegation#to(net.bytebuddy.description.type.TypeDescription)
	CALLEE: static net.bytebuddy.implementation.MethodDelegation#withDefaultConfiguration()
	CALLEE: net.bytebuddy.implementation.MethodDelegation.WithCustomProperties#to(net.bytebuddy.description.type.TypeDescription)
CALLER: net.bytebuddy.benchmark.SuperClassInvocationBenchmark#benchmarkCglib(org.openjdk.jmh.infra.Blackhole)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(boolean)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(byte)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(short)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(int)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(char)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(long)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(float)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(double)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(java.lang.Object)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(boolean,boolean,boolean)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(byte,byte,byte)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(short,short,short)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(int,int,int)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(char,char,char)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(long,long,long)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(float,float,float)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(double,double,double)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(java.lang.Object,java.lang.Object,java.lang.Object)
CALLER: static net.bytebuddy.implementation.FixedValue#value(net.bytebuddy.utility.JavaConstant)
	CALLEE: net.bytebuddy.implementation.FixedValue.ForPoolValue#<init>(net.bytebuddy.implementation.bytecode.StackManipulation,net.bytebuddy.description.type.TypeDescription)
CALLER: net.bytebuddy.matcher.VisibilityMatcher#<init>(net.bytebuddy.description.type.TypeDescription)
CALLER: static net.bytebuddy.implementation.ExceptionMethod#throwing(net.bytebuddy.description.type.TypeDescription,java.lang.String)
	CALLEE: net.bytebuddy.implementation.ExceptionMethod#<init>(net.bytebuddy.description.type.TypeDescription,net.bytebuddy.implementation.ExceptionMethod.ConstructionDelegate)
CALLER: net.bytebuddy.asm.ModifierAdjustment#withInvokableModifiers(net.bytebuddy.matcher.ElementMatcher,java.util.List)
	CALLEE: net.bytebuddy.asm.ModifierAdjustment#<init>(java.util.List,java.util.List,java.util.List)
CALLER: static net.bytebuddy.implementation.InvokeDynamic#bootstrap(java.lang.reflect.Method,java.util.List)
CALLER: static net.bytebuddy.implementation.FieldAccessor#of(java.lang.reflect.Field)
	CALLEE: static net.bytebuddy.implementation.FieldAccessor#of(net.bytebuddy.description.field.FieldDescription)
CALLER: net.bytebuddy.asm.MemberSubstitution.SubstitutingMethodVisitor#visitMaxs(int,int)
CALLER: net.bytebuddy.asm.Advice.AdviceVisitor#visitMaxs(int,int)
	CALLEE: net.bytebuddy.asm.Advice.AdviceVisitor.WithExitAdvice#onUserEnd()
	CALLEE: net.bytebuddy.asm.Advice.AdviceVisitor.WithoutExitAdvice#onUserEnd()
	CALLEE: net.bytebuddy.asm.MemberSubstitution.SubstitutingMethodVisitor#visitMaxs(int,int)
	CALLEE: net.bytebuddy.asm.Advice.AdviceVisitor#visitMaxs(int,int)
	CALLEE: net.bytebuddy.asm.Advice.Appender.EmulatingMethodVisitor#visitMaxs(int,int)
CALLER: net.bytebuddy.dynamic.loading.ByteArrayClassLoader#findResources(java.lang.String)
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.SingletonEnumeration#<init>(java.net.URL)
CALLER: static net.bytebuddy.agent.ByteBuddyAgent#install()
	CALLEE: static net.bytebuddy.agent.ByteBuddyAgent#install(net.bytebuddy.agent.ByteBuddyAgent.AttachmentProvider)
CALLER: static net.bytebuddy.dynamic.scaffold.inline.InliningImplementationMatcher#of(net.bytebuddy.matcher.LatentMatcher,net.bytebuddy.description.type.TypeDescription)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#none()
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isConstructor()
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#named(java.lang.String)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#returns(net.bytebuddy.description.type.TypeDescription)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#takesArguments(java.lang.Iterable)
	CALLEE: net.bytebuddy.dynamic.scaffold.inline.InliningImplementationMatcher#<init>(net.bytebuddy.matcher.LatentMatcher,net.bytebuddy.matcher.ElementMatcher)
CALLER: static net.bytebuddy.matcher.ElementMatchers#fieldType(java.lang.Class)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#fieldType(net.bytebuddy.description.type.TypeDescription)
CALLER: net.bytebuddy.benchmark.SuperClassInvocationBenchmark#baseline(org.openjdk.jmh.infra.Blackhole)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(boolean)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(byte)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(short)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(int)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(char)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(long)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(float)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(double)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(java.lang.Object)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(boolean,boolean,boolean)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(byte,byte,byte)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(short,short,short)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(int,int,int)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(char,char,char)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(long,long,long)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(float,float,float)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(double,double,double)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(java.lang.Object,java.lang.Object,java.lang.Object)
CALLER: net.bytebuddy.implementation.MethodDelegation.WithCustomProperties#withResolvers(java.util.List)
CALLER: net.bytebuddy.benchmark.StubInvocationBenchmark#baseline(org.openjdk.jmh.infra.Blackhole)
CALLER: static net.bytebuddy.matcher.ElementMatchers#takesGenericArguments(java.util.List)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#is(java.lang.Object)
	CALLEE: net.bytebuddy.matcher.CollectionOneToOneMatcher#<init>(java.util.List)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#takesGenericArguments(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.asm.Advice.WithCustomMapping#bind(java.lang.Class,net.bytebuddy.description.field.FieldDescription)
CALLER: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#withNullValue(java.lang.Class[])
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfField#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfArgument#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfInstance#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitArguments#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic#withNullValue(java.lang.Class[])
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#withNullValue(java.lang.Class[])
CALLER: net.bytebuddy.utility.StreamDrainer#drain(java.io.InputStream)
CALLER: net.bytebuddy.implementation.FixedValue.ForThisValue.Appender#apply(net.bytebuddy.jar.asm.MethodVisitor,net.bytebuddy.implementation.Implementation.Context,net.bytebuddy.description.method.MethodDescription)
CALLER: static net.bytebuddy.implementation.FixedValue#reference(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.FixedValue.ForValue#<init>(java.lang.Object)
CALLER: static net.bytebuddy.matcher.ElementMatchers#isGenericSetter(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isSetter()
	CALLEE: net.bytebuddy.matcher.CollectionOneToOneMatcher#<init>(java.util.List)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#takesGenericArguments(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.utility.JavaModule#isNamed()
CALLER: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#withArgument(int)
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfField#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfArgument#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfInstance#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitArguments#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic#withArgument(int)
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#withArgument(int)
CALLER: net.bytebuddy.benchmark.StubInvocationBenchmark#benchmarkCglib(org.openjdk.jmh.infra.Blackhole)
CALLER: net.bytebuddy.ByteBuddy#redefine(java.lang.Class)
	CALLEE: net.bytebuddy.ByteBuddy#redefine(java.lang.Class,net.bytebuddy.dynamic.ClassFileLocator)
CALLER: static net.bytebuddy.dynamic.NexusAccessor#isAlive()
CALLER: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#visitVarInsn(int,int)
	CALLEE: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#considerEndOfExceptionTable()
	CALLEE: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#onVisitVarInsn(int,int)
	CALLEE: net.bytebuddy.asm.Advice.AdviceVisitor#onVisitVarInsn(int,int)
CALLER: static net.bytebuddy.matcher.ElementMatchers#erasures(java.lang.Class[])
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#erasures(java.lang.Iterable)
CALLER: net.bytebuddy.benchmark.TrivialClassCreationBenchmark#benchmarkJdkProxy()
	CALLEE: net.bytebuddy.benchmark.TrivialClassCreationBenchmark#newClassLoader()
CALLER: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#onVisitLabel(net.bytebuddy.jar.asm.Label)
CALLER: static net.bytebuddy.matcher.ElementMatchers#isDeclaredByGeneric(java.lang.reflect.Type)
CALLER: static net.bytebuddy.matcher.ElementMatchers#isFinal()
	CALLEE: net.bytebuddy.matcher.ModifierMatcher#<init>(net.bytebuddy.matcher.ModifierMatcher.Mode)
CALLER: net.bytebuddy.implementation.MethodCall#withReference(java.lang.Object[])
	CALLEE: net.bytebuddy.implementation.MethodCall#with(java.util.List)
CALLER: net.bytebuddy.ByteBuddy#subclass(java.lang.reflect.Type)
	CALLEE: net.bytebuddy.ByteBuddy#subclass(net.bytebuddy.description.type.TypeDefinition)
CALLER: net.bytebuddy.ByteBuddy#makeAnnotation()
CALLER: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.ClassDefinitionAction#run()
CALLER: net.bytebuddy.matcher.DeclaringFieldMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.implementation.InvokeDynamic#withThis(java.lang.Class[])
	CALLEE: net.bytebuddy.implementation.InvokeDynamic#withThis(net.bytebuddy.description.type.TypeDescription[])
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#withThis(net.bytebuddy.description.type.TypeDescription[])
CALLER: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#withThis(java.lang.Class[])
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfField#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfArgument#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfInstance#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitArguments#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic#withThis(java.lang.Class[])
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#withThis(java.lang.Class[])
CALLER: static net.bytebuddy.matcher.ElementMatchers#isVirtual()
	CALLEE: net.bytebuddy.matcher.MethodSortMatcher#<init>(net.bytebuddy.matcher.MethodSortMatcher.Sort)
CALLER: net.bytebuddy.benchmark.ClassByImplementationBenchmark#benchmarkByteBuddyWithTypePool()
	CALLEE: net.bytebuddy.ByteBuddy#<init>()
	CALLEE: net.bytebuddy.ByteBuddy#with(net.bytebuddy.dynamic.scaffold.TypeValidation)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#none()
	CALLEE: net.bytebuddy.ByteBuddy#ignore(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: net.bytebuddy.ByteBuddy#subclass(net.bytebuddy.description.type.TypeDefinition)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isDeclaredBy(net.bytebuddy.description.type.TypeDescription)
	CALLEE: net.bytebuddy.benchmark.ClassByImplementationBenchmark#newClassLoader()
CALLER: net.bytebuddy.implementation.FixedValue.ForOriginType.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.FixedValue.ForOriginType.Appender#getOuter()
	CALLEE: net.bytebuddy.TypeCache.StorageKey#hashCode()
	CALLEE: net.bytebuddy.dynamic.Nexus#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender.AccessorMethodInvocation#hashCode()
	CALLEE: net.bytebuddy.matcher.CachingMatcher#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall#hashCode()
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForInstance.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForImplicitProperty.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.MethodCallProxy.MethodCall.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.MethodCall.Appender#hashCode()
	CALLEE: net.bytebuddy.utility.JavaModule#hashCode()
	CALLEE: net.bytebuddy.description.type.TypeVariableToken#hashCode()
	CALLEE: net.bytebuddy.implementation.bytecode.collection.ArrayFactory.ArrayStackManipulation#hashCode()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForParameterSetter.Appender#hashCode()
	CALLEE: net.bytebuddy.TypeCache.LookupKey#hashCode()
	CALLEE: net.bytebuddy.implementation.FixedValue.ForOriginType.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForField.Appender#hashCode()
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.ClassDefinitionAction#hashCode()
	CALLEE: net.bytebuddy.build.maven.MavenCoordinate#hashCode()
CALLER: net.bytebuddy.implementation.InvocationHandlerAdapter.ForField.Appender#apply(net.bytebuddy.jar.asm.MethodVisitor,net.bytebuddy.implementation.Implementation.Context,net.bytebuddy.description.method.MethodDescription)
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter#apply(net.bytebuddy.jar.asm.MethodVisitor,net.bytebuddy.implementation.Implementation.Context,net.bytebuddy.description.method.MethodDescription,net.bytebuddy.implementation.bytecode.StackManipulation,net.bytebuddy.description.field.FieldDescription)
CALLER: net.bytebuddy.matcher.DescriptorMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.implementation.InvokeDynamic#withArgument(int[])
CALLER: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#withArgument(int[])
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfField#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfArgument#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfInstance#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitArguments#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic#withArgument(int[])
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#withArgument(int[])
CALLER: net.bytebuddy.utility.JavaModule#hashCode()
	CALLEE: net.bytebuddy.TypeCache.StorageKey#hashCode()
	CALLEE: net.bytebuddy.dynamic.Nexus#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender.AccessorMethodInvocation#hashCode()
	CALLEE: net.bytebuddy.matcher.CachingMatcher#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall#hashCode()
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForInstance.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForImplicitProperty.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.MethodCallProxy.MethodCall.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.MethodCall.Appender#hashCode()
	CALLEE: net.bytebuddy.utility.JavaModule#hashCode()
	CALLEE: net.bytebuddy.description.type.TypeVariableToken#hashCode()
	CALLEE: net.bytebuddy.implementation.bytecode.collection.ArrayFactory.ArrayStackManipulation#hashCode()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForParameterSetter.Appender#hashCode()
	CALLEE: net.bytebuddy.TypeCache.LookupKey#hashCode()
	CALLEE: net.bytebuddy.implementation.FixedValue.ForOriginType.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForField.Appender#hashCode()
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.ClassDefinitionAction#hashCode()
	CALLEE: net.bytebuddy.build.maven.MavenCoordinate#hashCode()
CALLER: static net.bytebuddy.matcher.ElementMatchers#genericFieldType(java.lang.reflect.Type)
CALLER: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.ChildFirst#<init>(java.lang.ClassLoader,java.util.Map,java.security.ProtectionDomain,net.bytebuddy.dynamic.loading.ByteArrayClassLoader.PersistenceHandler,net.bytebuddy.dynamic.loading.PackageDefinitionStrategy,java.lang.instrument.ClassFileTransformer)
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader#<init>(java.lang.ClassLoader,java.util.Map,java.security.ProtectionDomain,net.bytebuddy.dynamic.loading.ByteArrayClassLoader.PersistenceHandler,net.bytebuddy.dynamic.loading.PackageDefinitionStrategy,java.lang.instrument.ClassFileTransformer)
CALLER: net.bytebuddy.utility.visitor.StackAwareMethodVisitor#doDrain(java.util.List)
CALLER: net.bytebuddy.dynamic.loading.MultipleParentClassLoader.Builder#build(java.lang.ClassLoader)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#is(java.lang.Object)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#not(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: net.bytebuddy.dynamic.loading.MultipleParentClassLoader.Builder#filter(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: net.bytebuddy.dynamic.loading.MultipleParentClassLoader.Builder#doBuild(java.lang.ClassLoader)
CALLER: net.bytebuddy.asm.ModifierAdjustment.ModifierAdjustingClassVisitor#<init>(net.bytebuddy.jar.asm.ClassVisitor,java.util.List,java.util.List,java.util.List,net.bytebuddy.description.type.TypeDescription,java.util.Map,java.util.Map)
CALLER: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#visitInvokeDynamicInsn(java.lang.String,java.lang.String,net.bytebuddy.jar.asm.Handle,java.lang.Object[])
	CALLEE: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#considerEndOfExceptionTable()
	CALLEE: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#onVisitInvokeDynamicInsn(java.lang.String,java.lang.String,net.bytebuddy.jar.asm.Handle,java.lang.Object[])
CALLER: net.bytebuddy.utility.visitor.StackAwareMethodVisitor#visitInvokeDynamicInsn(java.lang.String,java.lang.String,net.bytebuddy.jar.asm.Handle,java.lang.Object[])
	CALLEE: net.bytebuddy.utility.visitor.StackAwareMethodVisitor#adjustStack(int)
CALLER: static net.bytebuddy.matcher.ElementMatchers#definedParameter(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: net.bytebuddy.matcher.DefinedShapeMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.asm.Advice.WithCustomMapping#to(java.lang.Class)
	CALLEE: net.bytebuddy.asm.Advice.WithCustomMapping#to(java.lang.Class,net.bytebuddy.dynamic.ClassFileLocator)
CALLER: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.ClassDefinitionAction#run()
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.ClassDefinitionAction#run()
CALLER: net.bytebuddy.matcher.CollectionOneToOneMatcher#<init>(java.util.List)
CALLER: net.bytebuddy.matcher.ModifierMatcher#<init>(net.bytebuddy.matcher.ModifierMatcher.Mode)
CALLER: net.bytebuddy.matcher.AccessibilityMatcher#<init>(net.bytebuddy.description.type.TypeDescription)
CALLER: net.bytebuddy.asm.Advice.AdviceVisitor#visitFrame(int,int,java.lang.Object[],int,java.lang.Object[])
CALLER: net.bytebuddy.asm.Advice#withExceptionPrinting()
	CALLEE: net.bytebuddy.asm.Advice#withExceptionHandler(net.bytebuddy.implementation.bytecode.StackManipulation)
CALLER: static net.bytebuddy.matcher.ElementMatchers#isNative()
	CALLEE: net.bytebuddy.matcher.ModifierMatcher#<init>(net.bytebuddy.matcher.ModifierMatcher.Mode)
CALLER: net.bytebuddy.asm.ModifierAdjustment.ModifierAdjustingClassVisitor#visitInnerClass(java.lang.String,java.lang.String,java.lang.String,int)
	CALLEE: net.bytebuddy.asm.ModifierAdjustment.Adjustment#resolve(int)
CALLER: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#visitTableSwitchInsn(int,int,net.bytebuddy.jar.asm.Label,net.bytebuddy.jar.asm.Label[])
	CALLEE: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#considerEndOfExceptionTable()
	CALLEE: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#onVisitTableSwitchInsn(int,int,net.bytebuddy.jar.asm.Label,net.bytebuddy.jar.asm.Label[])
CALLER: static net.bytebuddy.utility.CompoundList#of(java.util.List,java.util.List)
CALLER: static net.bytebuddy.agent.ByteBuddyAgent#attach(java.io.File,net.bytebuddy.agent.ByteBuddyAgent.ProcessProvider,java.lang.String,net.bytebuddy.agent.ByteBuddyAgent.AttachmentProvider)
	CALLEE: static net.bytebuddy.agent.ByteBuddyAgent#install(net.bytebuddy.agent.ByteBuddyAgent.AttachmentProvider,java.lang.String,java.lang.String,net.bytebuddy.agent.ByteBuddyAgent.AgentProvider)
CALLER: net.bytebuddy.matcher.ErasureMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: static net.bytebuddy.dynamic.Nexus#register(java.lang.String,java.lang.ClassLoader,java.lang.ref.ReferenceQueue,int,java.lang.Object)
	CALLEE: net.bytebuddy.dynamic.Nexus#<init>(java.lang.String,java.lang.ClassLoader,java.lang.ref.ReferenceQueue,int)
CALLER: net.bytebuddy.implementation.InvokeDynamic#andThen(net.bytebuddy.implementation.Implementation)
CALLER: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#andThen(net.bytebuddy.implementation.Implementation)
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfField#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfArgument#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfInstance#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitArguments#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic#andThen(net.bytebuddy.implementation.Implementation)
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#andThen(net.bytebuddy.implementation.Implementation)
CALLER: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfInstance#as(net.bytebuddy.description.type.TypeDescription)
CALLER: static net.bytebuddy.matcher.ElementMatchers#isTransient()
	CALLEE: net.bytebuddy.matcher.ModifierMatcher#<init>(net.bytebuddy.matcher.ModifierMatcher.Mode)
CALLER: net.bytebuddy.utility.visitor.StackAwareMethodVisitor#visitTypeInsn(int,java.lang.String)
	CALLEE: net.bytebuddy.utility.visitor.StackAwareMethodVisitor#adjustStack(int)
CALLER: static net.bytebuddy.implementation.MethodDelegation#toConstructor(net.bytebuddy.description.type.TypeDescription)
	CALLEE: static net.bytebuddy.implementation.MethodDelegation#withDefaultConfiguration()
	CALLEE: net.bytebuddy.implementation.MethodDelegation.WithCustomProperties#toConstructor(net.bytebuddy.description.type.TypeDescription)
CALLER: net.bytebuddy.benchmark.ClassByImplementationBenchmark#benchmarkCglib()
	CALLEE: net.bytebuddy.benchmark.ClassByImplementationBenchmark#newClassLoader()
CALLER: net.bytebuddy.implementation.MethodCall.WithoutSpecifiedTarget#onSuper()
CALLER: static net.bytebuddy.matcher.ElementMatchers#nameStartsWithIgnoreCase(java.lang.String)
	CALLEE: net.bytebuddy.matcher.StringMatcher#<init>(java.lang.String,net.bytebuddy.matcher.StringMatcher.Mode)
	CALLEE: net.bytebuddy.matcher.NameMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.implementation.FieldAccessor.ForImplicitProperty#in(net.bytebuddy.description.type.TypeDescription)
CALLER: net.bytebuddy.android.AndroidClassLoadingStrategy.Wrapping#<init>(java.io.File,net.bytebuddy.android.AndroidClassLoadingStrategy.DexProcessor)
	CALLEE: net.bytebuddy.android.AndroidClassLoadingStrategy#<init>(java.io.File,net.bytebuddy.android.AndroidClassLoadingStrategy.DexProcessor)
CALLER: net.bytebuddy.implementation.FieldAccessor.ForParameterSetter#andThen(net.bytebuddy.implementation.Implementation)
CALLER: net.bytebuddy.dynamic.scaffold.subclass.SubclassImplementationTarget#getOriginType()
CALLER: net.bytebuddy.matcher.EqualityMatcher#<init>(java.lang.Object)
CALLER: net.bytebuddy.asm.Advice#prepare(net.bytebuddy.dynamic.scaffold.InstrumentedType)
	CALLEE: net.bytebuddy.implementation.FixedValue.ForThisValue#prepare(net.bytebuddy.dynamic.scaffold.InstrumentedType)
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall#prepare(net.bytebuddy.dynamic.scaffold.InstrumentedType)
	CALLEE: net.bytebuddy.implementation.auxiliary.MethodCallProxy.MethodCall#prepare(net.bytebuddy.dynamic.scaffold.InstrumentedType)
	CALLEE: net.bytebuddy.implementation.FixedValue.ForPoolValue#prepare(net.bytebuddy.dynamic.scaffold.InstrumentedType)
	CALLEE: net.bytebuddy.implementation.FieldAccessor#prepare(net.bytebuddy.dynamic.scaffold.InstrumentedType)
	CALLEE: net.bytebuddy.implementation.MethodCall#prepare(net.bytebuddy.dynamic.scaffold.InstrumentedType)
	CALLEE: net.bytebuddy.implementation.MethodDelegation#prepare(net.bytebuddy.dynamic.scaffold.InstrumentedType)
	CALLEE: net.bytebuddy.implementation.FixedValue.ForOriginType#prepare(net.bytebuddy.dynamic.scaffold.InstrumentedType)
	CALLEE: net.bytebuddy.asm.Advice#prepare(net.bytebuddy.dynamic.scaffold.InstrumentedType)
	CALLEE: net.bytebuddy.ByteBuddy.EnumerationImplementation#prepare(net.bytebuddy.dynamic.scaffold.InstrumentedType)
	CALLEE: net.bytebuddy.implementation.FixedValue.ForValue#prepare(net.bytebuddy.dynamic.scaffold.InstrumentedType)
	CALLEE: net.bytebuddy.implementation.ExceptionMethod#prepare(net.bytebuddy.dynamic.scaffold.InstrumentedType)
	CALLEE: net.bytebuddy.implementation.FixedValue.ForArgument#prepare(net.bytebuddy.dynamic.scaffold.InstrumentedType)
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForField#prepare(net.bytebuddy.dynamic.scaffold.InstrumentedType)
	CALLEE: net.bytebuddy.implementation.InvokeDynamic#prepare(net.bytebuddy.dynamic.scaffold.InstrumentedType)
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#prepare(net.bytebuddy.dynamic.scaffold.InstrumentedType)
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForInstance#prepare(net.bytebuddy.dynamic.scaffold.InstrumentedType)
	CALLEE: net.bytebuddy.implementation.DefaultMethodCall#prepare(net.bytebuddy.dynamic.scaffold.InstrumentedType)
CALLER: static net.bytebuddy.implementation.MethodDelegation#to(java.lang.Class)
	CALLEE: static net.bytebuddy.implementation.MethodDelegation#withDefaultConfiguration()
	CALLEE: net.bytebuddy.implementation.MethodDelegation.WithCustomProperties#to(java.lang.Class)
CALLER: net.bytebuddy.matcher.CollectionItemMatcher#matches(java.lang.Iterable)
CALLER: static net.bytebuddy.matcher.ElementMatchers#isOverriddenFromGeneric(java.lang.reflect.Type)
CALLER: static net.bytebuddy.matcher.ElementMatchers#inheritsAnnotation(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#annotationType(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#hasAnnotation(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.implementation.InvocationHandlerAdapter.ForInstance.Appender#hashCode()
	CALLEE: net.bytebuddy.TypeCache.StorageKey#hashCode()
	CALLEE: net.bytebuddy.dynamic.Nexus#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender.AccessorMethodInvocation#hashCode()
	CALLEE: net.bytebuddy.matcher.CachingMatcher#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall#hashCode()
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForInstance.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForImplicitProperty.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.MethodCallProxy.MethodCall.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.MethodCall.Appender#hashCode()
	CALLEE: net.bytebuddy.utility.JavaModule#hashCode()
	CALLEE: net.bytebuddy.description.type.TypeVariableToken#hashCode()
	CALLEE: net.bytebuddy.implementation.bytecode.collection.ArrayFactory.ArrayStackManipulation#hashCode()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForParameterSetter.Appender#hashCode()
	CALLEE: net.bytebuddy.TypeCache.LookupKey#hashCode()
	CALLEE: net.bytebuddy.implementation.FixedValue.ForOriginType.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForField.Appender#hashCode()
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.ClassDefinitionAction#hashCode()
	CALLEE: net.bytebuddy.build.maven.MavenCoordinate#hashCode()
CALLER: net.bytebuddy.matcher.CollectionOneToOneMatcher#matches(java.lang.Iterable)
CALLER: static net.bytebuddy.matcher.ElementMatchers#anyOf(java.lang.annotation.Annotation[])
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#anyOf(java.lang.Iterable)
CALLER: static net.bytebuddy.matcher.ElementMatchers#isAnnotatedWith(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#annotationType(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#declaresAnnotation(net.bytebuddy.matcher.ElementMatcher)
CALLER: static net.bytebuddy.implementation.DefaultMethodCall#prioritize(java.lang.Iterable)
	CALLEE: static net.bytebuddy.implementation.DefaultMethodCall#prioritize(java.util.Collection)
CALLER: net.bytebuddy.matcher.MethodOverrideMatcher#matches(net.bytebuddy.description.method.MethodDescription,net.bytebuddy.description.type.TypeDefinition)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isVirtual()
CALLER: static net.bytebuddy.matcher.ElementMatchers#hasType(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#erasure(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#hasGenericType(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.ByteBuddy#with(net.bytebuddy.NamingStrategy)
CALLER: net.bytebuddy.implementation.bytecode.constant.MethodConstant.ForMethod#accessorMethod()
CALLER: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.ChildFirst#<init>(java.lang.ClassLoader,java.util.Map)
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader#<init>(java.lang.ClassLoader,java.util.Map)
CALLER: static net.bytebuddy.implementation.ExceptionMethod#throwing(java.lang.Class,java.lang.String)
	CALLEE: static net.bytebuddy.implementation.ExceptionMethod#throwing(net.bytebuddy.description.type.TypeDescription,java.lang.String)
CALLER: net.bytebuddy.implementation.MethodCall.WithoutSpecifiedTarget#<init>(net.bytebuddy.implementation.MethodCall.MethodLocator)
CALLER: net.bytebuddy.implementation.MethodCall#withField(java.lang.String[])
CALLER: net.bytebuddy.matcher.TypeSortMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: static net.bytebuddy.matcher.ElementMatchers#takesArguments(java.lang.Class[])
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#erasures(java.lang.Class[])
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#takesGenericArguments(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.implementation.auxiliary.MethodCallProxy.MethodCall.Appender#hashCode()
	CALLEE: net.bytebuddy.TypeCache.StorageKey#hashCode()
	CALLEE: net.bytebuddy.dynamic.Nexus#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender.AccessorMethodInvocation#hashCode()
	CALLEE: net.bytebuddy.matcher.CachingMatcher#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall#hashCode()
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForInstance.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForImplicitProperty.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.MethodCallProxy.MethodCall.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.MethodCall.Appender#hashCode()
	CALLEE: net.bytebuddy.utility.JavaModule#hashCode()
	CALLEE: net.bytebuddy.description.type.TypeVariableToken#hashCode()
	CALLEE: net.bytebuddy.implementation.bytecode.collection.ArrayFactory.ArrayStackManipulation#hashCode()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForParameterSetter.Appender#hashCode()
	CALLEE: net.bytebuddy.TypeCache.LookupKey#hashCode()
	CALLEE: net.bytebuddy.implementation.FixedValue.ForOriginType.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForField.Appender#hashCode()
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.ClassDefinitionAction#hashCode()
	CALLEE: net.bytebuddy.build.maven.MavenCoordinate#hashCode()
CALLER: net.bytebuddy.ByteBuddy#with(net.bytebuddy.ClassFileVersion)
CALLER: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#withField(java.lang.String)
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfField#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfArgument#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfInstance#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitArguments#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic#withField(java.lang.String)
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#withField(java.lang.String)
CALLER: net.bytebuddy.dynamic.loading.MultipleParentClassLoader#<init>(java.util.List)
	CALLEE: net.bytebuddy.dynamic.loading.MultipleParentClassLoader#<init>(java.lang.ClassLoader,java.util.List)
CALLER: net.bytebuddy.implementation.InvokeDynamic#prepare(net.bytebuddy.dynamic.scaffold.InstrumentedType)
CALLER: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#prepare(net.bytebuddy.dynamic.scaffold.InstrumentedType)
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfField#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfArgument#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfInstance#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitArguments#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic#prepare(net.bytebuddy.dynamic.scaffold.InstrumentedType)
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#prepare(net.bytebuddy.dynamic.scaffold.InstrumentedType)
CALLER: net.bytebuddy.utility.visitor.StackAwareMethodVisitor#visitTryCatchBlock(net.bytebuddy.jar.asm.Label,net.bytebuddy.jar.asm.Label,net.bytebuddy.jar.asm.Label,java.lang.String)
CALLER: net.bytebuddy.dynamic.loading.ByteArrayClassLoader#findResource(java.lang.String)
CALLER: static net.bytebuddy.implementation.MethodCall#call(java.util.concurrent.Callable)
	CALLEE: static net.bytebuddy.implementation.MethodCall#invoke(java.lang.reflect.Method)
CALLER: static net.bytebuddy.dynamic.Nexus#initialize(java.lang.Class,int)
	CALLEE: net.bytebuddy.dynamic.Nexus#<init>(java.lang.Class,int)
CALLER: static net.bytebuddy.matcher.ElementMatchers#isDefaultConstructor()
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isConstructor()
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#takesArguments(int)
CALLER: net.bytebuddy.implementation.InvokeDynamic.WithImplicitTarget#invoke(java.lang.String,java.lang.Class)
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitTarget#invoke(java.lang.String,net.bytebuddy.description.type.TypeDescription)
CALLER: net.bytebuddy.asm.MemberSubstitution.SubstitutingMethodVisitor#visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String,boolean)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isConstructor()
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#hasDescriptor(java.lang.String)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#named(java.lang.String)
CALLER: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String,boolean)
	CALLEE: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#considerEndOfExceptionTable()
	CALLEE: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#onVisitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String,boolean)
CALLER: net.bytebuddy.utility.visitor.StackAwareMethodVisitor#visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String,boolean)
	CALLEE: net.bytebuddy.utility.visitor.StackAwareMethodVisitor#adjustStack(int)
CALLER: static net.bytebuddy.matcher.ElementMatchers#isOverriddenFromGeneric(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: net.bytebuddy.matcher.MethodOverrideMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.matcher.MethodParametersMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: static net.bytebuddy.agent.ByteBuddyAgent#install(net.bytebuddy.agent.ByteBuddyAgent.ProcessProvider)
	CALLEE: static net.bytebuddy.agent.ByteBuddyAgent#install(net.bytebuddy.agent.ByteBuddyAgent.AttachmentProvider,net.bytebuddy.agent.ByteBuddyAgent.ProcessProvider)
CALLER: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String)
	CALLEE: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#considerEndOfExceptionTable()
	CALLEE: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#onVisitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String)
CALLER: static net.bytebuddy.implementation.MethodDelegation#to(java.lang.Object,java.lang.String)
	CALLEE: static net.bytebuddy.implementation.MethodDelegation#withDefaultConfiguration()
	CALLEE: net.bytebuddy.implementation.MethodDelegation.WithCustomProperties#to(java.lang.Object,java.lang.String)
CALLER: static net.bytebuddy.matcher.ElementMatchers#annotationType(net.bytebuddy.description.type.TypeDescription)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#is(java.lang.Object)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#annotationType(net.bytebuddy.matcher.ElementMatcher)
CALLER: static net.bytebuddy.matcher.ElementMatchers#ofType(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: net.bytebuddy.matcher.InstanceTypeMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.benchmark.ClassByExtensionBenchmark#benchmarkByteBuddyWithPrefixAndReusedDelegatorWithTypePool()
	CALLEE: net.bytebuddy.ByteBuddy#<init>()
	CALLEE: net.bytebuddy.ByteBuddy#with(net.bytebuddy.dynamic.scaffold.TypeValidation)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#none()
	CALLEE: net.bytebuddy.ByteBuddy#ignore(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: net.bytebuddy.ByteBuddy#subclass(net.bytebuddy.description.type.TypeDefinition)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isDeclaredBy(net.bytebuddy.description.type.TypeDescription)
	CALLEE: net.bytebuddy.implementation.MethodCall#andThen(net.bytebuddy.implementation.Implementation)
	CALLEE: net.bytebuddy.implementation.MethodDelegation#andThen(net.bytebuddy.implementation.Implementation)
	CALLEE: net.bytebuddy.implementation.InvokeDynamic#andThen(net.bytebuddy.implementation.Implementation)
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#andThen(net.bytebuddy.implementation.Implementation)
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForParameterSetter#andThen(net.bytebuddy.implementation.Implementation)
	CALLEE: net.bytebuddy.benchmark.ClassByExtensionBenchmark#newClassLoader()
CALLER: net.bytebuddy.ByteBuddy#makeInterface(java.util.List)
	CALLEE: net.bytebuddy.ByteBuddy#makeInterface(java.util.Collection)
CALLER: net.bytebuddy.dynamic.loading.ClassReloadingStrategy#preregistered(java.lang.Class[])
	CALLEE: net.bytebuddy.dynamic.loading.ClassReloadingStrategy#<init>(java.lang.instrument.Instrumentation,net.bytebuddy.dynamic.loading.ClassReloadingStrategy.Strategy,net.bytebuddy.dynamic.loading.ClassReloadingStrategy.BootstrapInjection,java.util.Map)
CALLER: net.bytebuddy.dynamic.loading.ClassReloadingStrategy#load(java.lang.ClassLoader,java.util.Map)
CALLER: net.bytebuddy.asm.Advice#withExceptionHandler(net.bytebuddy.implementation.bytecode.StackManipulation)
CALLER: static net.bytebuddy.matcher.ElementMatchers#erasures(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: net.bytebuddy.matcher.CollectionErasureMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: static net.bytebuddy.implementation.bytecode.constant.SerializedConstant#of(java.io.Serializable)
	CALLEE: net.bytebuddy.implementation.bytecode.constant.SerializedConstant#<init>(java.lang.String)
CALLER: net.bytebuddy.utility.JavaModule#addReads(java.lang.instrument.Instrumentation,net.bytebuddy.utility.JavaModule)
	CALLEE: net.bytebuddy.utility.JavaModule#unwrap()
CALLER: static net.bytebuddy.implementation.FieldAccessor#of(net.bytebuddy.description.field.FieldDescription)
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForImplicitProperty#<init>(net.bytebuddy.implementation.FieldAccessor.FieldLocation)
CALLER: static net.bytebuddy.implementation.FixedValue#reference(java.lang.Object,java.lang.String)
	CALLEE: net.bytebuddy.implementation.FixedValue.ForValue#<init>(java.lang.String,java.lang.Object)
CALLER: net.bytebuddy.implementation.MethodCall#with(net.bytebuddy.description.type.TypeDescription[])
	CALLEE: net.bytebuddy.implementation.MethodCall#with(java.util.List)
CALLER: static net.bytebuddy.matcher.ElementMatchers#isParentOf(java.lang.ClassLoader)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isBootstrapClassLoader()
	CALLEE: net.bytebuddy.matcher.ClassLoaderParentMatcher#<init>(java.lang.ClassLoader)
CALLER: static net.bytebuddy.matcher.ElementMatchers#isDefaultMethod()
	CALLEE: net.bytebuddy.matcher.MethodSortMatcher#<init>(net.bytebuddy.matcher.MethodSortMatcher.Sort)
CALLER: static net.bytebuddy.implementation.MethodCall#invoke(net.bytebuddy.description.method.MethodDescription)
	CALLEE: static net.bytebuddy.implementation.MethodCall#invoke(net.bytebuddy.implementation.MethodCall.MethodLocator)
CALLER: static net.bytebuddy.matcher.ElementMatchers#nameContainsIgnoreCase(java.lang.String)
	CALLEE: net.bytebuddy.matcher.StringMatcher#<init>(java.lang.String,net.bytebuddy.matcher.StringMatcher.Mode)
	CALLEE: net.bytebuddy.matcher.NameMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: static net.bytebuddy.agent.ByteBuddyAgent#install(net.bytebuddy.agent.ByteBuddyAgent.AttachmentProvider,net.bytebuddy.agent.ByteBuddyAgent.ProcessProvider)
	CALLEE: static net.bytebuddy.agent.ByteBuddyAgent#doGetInstrumentation()
	CALLEE: static net.bytebuddy.agent.ByteBuddyAgent#install(net.bytebuddy.agent.ByteBuddyAgent.AttachmentProvider,java.lang.String,java.lang.String,net.bytebuddy.agent.ByteBuddyAgent.AgentProvider)
CALLER: static net.bytebuddy.matcher.ElementMatchers#anyOf(java.lang.reflect.Field[])
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#anyOf(java.lang.Iterable)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#definedField(net.bytebuddy.matcher.ElementMatcher)
CALLER: static net.bytebuddy.matcher.ElementMatchers#not(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: net.bytebuddy.matcher.NegatingMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.TypeCache.StorageKey#equals(java.lang.Object)
	CALLEE: net.bytebuddy.dynamic.Nexus#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender.AccessorMethodInvocation#equals(java.lang.Object)
	CALLEE: net.bytebuddy.matcher.CachingMatcher#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForInstance.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForImplicitProperty.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.MethodCallProxy.MethodCall.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.MethodCall.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.utility.JavaModule#equals(java.lang.Object)
	CALLEE: net.bytebuddy.description.type.TypeVariableToken#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.bytecode.collection.ArrayFactory.ArrayStackManipulation#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForParameterSetter.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.TypeCache.LookupKey#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.FixedValue.ForOriginType.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForField.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.ClassDefinitionAction#equals(java.lang.Object)
	CALLEE: net.bytebuddy.build.maven.MavenCoordinate#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender#getMethodCall()
CALLER: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#withMethodArguments()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfField#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfArgument#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfInstance#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitArguments#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic#withMethodArguments()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#withMethodArguments()
CALLER: static net.bytebuddy.implementation.DefaultMethodCall#unambiguousOnly()
	CALLEE: net.bytebuddy.implementation.DefaultMethodCall#<init>(java.util.List)
CALLER: static net.bytebuddy.matcher.ElementMatchers#isGenericGetter(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isGetter()
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#returnsGeneric(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.android.AndroidClassLoadingStrategy.Injecting#doLoad(java.lang.ClassLoader,java.util.Set,java.io.File)
	CALLEE: net.bytebuddy.utility.RandomString#nextString()
CALLER: net.bytebuddy.asm.ModifierAdjustment.ModifierAdjustingClassVisitor#visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])
	CALLEE: net.bytebuddy.asm.ModifierAdjustment.Adjustment#resolve(int)
CALLER: net.bytebuddy.asm.MemberRemoval.MemberRemovingClassVisitor#visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])
CALLER: net.bytebuddy.implementation.InvokeDynamic#withInstance(net.bytebuddy.utility.JavaConstant[])
CALLER: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#withInstance(net.bytebuddy.utility.JavaConstant[])
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfField#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfArgument#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfInstance#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitArguments#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic#withInstance(net.bytebuddy.utility.JavaConstant[])
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#withInstance(net.bytebuddy.utility.JavaConstant[])
CALLER: net.bytebuddy.implementation.FieldAccessor.ForImplicitProperty.Appender#hashCode()
	CALLEE: net.bytebuddy.TypeCache.StorageKey#hashCode()
	CALLEE: net.bytebuddy.dynamic.Nexus#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender.AccessorMethodInvocation#hashCode()
	CALLEE: net.bytebuddy.matcher.CachingMatcher#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall#hashCode()
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForInstance.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForImplicitProperty.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.MethodCallProxy.MethodCall.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.MethodCall.Appender#hashCode()
	CALLEE: net.bytebuddy.utility.JavaModule#hashCode()
	CALLEE: net.bytebuddy.description.type.TypeVariableToken#hashCode()
	CALLEE: net.bytebuddy.implementation.bytecode.collection.ArrayFactory.ArrayStackManipulation#hashCode()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForParameterSetter.Appender#hashCode()
	CALLEE: net.bytebuddy.TypeCache.LookupKey#hashCode()
	CALLEE: net.bytebuddy.implementation.FixedValue.ForOriginType.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForField.Appender#hashCode()
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.ClassDefinitionAction#hashCode()
	CALLEE: net.bytebuddy.build.maven.MavenCoordinate#hashCode()
CALLER: net.bytebuddy.implementation.FieldAccessor.ForParameterSetter#appender(net.bytebuddy.implementation.Implementation.Target)
CALLER: net.bytebuddy.implementation.MethodCall.WithoutSpecifiedTarget#onArgument(int)
CALLER: static net.bytebuddy.matcher.ElementMatchers#isOverriddenFrom(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#erasure(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isOverriddenFromGeneric(net.bytebuddy.matcher.ElementMatcher)
CALLER: static net.bytebuddy.agent.ByteBuddyAgent#install(net.bytebuddy.agent.ByteBuddyAgent.AttachmentProvider,java.lang.String,java.lang.String,net.bytebuddy.agent.ByteBuddyAgent.AgentProvider)
	CALLEE: static net.bytebuddy.agent.Attacher#install(java.lang.Class,java.lang.String,java.io.File,java.lang.String)
CALLER: static net.bytebuddy.matcher.ElementMatchers#cached(net.bytebuddy.matcher.ElementMatcher,int)
	CALLEE: net.bytebuddy.matcher.CachingMatcher.WithInlineEviction#<init>(net.bytebuddy.matcher.ElementMatcher,java.util.concurrent.ConcurrentMap,int)
CALLER: static net.bytebuddy.matcher.ElementMatchers#canThrow(net.bytebuddy.description.type.TypeDescription)
	CALLEE: net.bytebuddy.matcher.BooleanMatcher#<init>(boolean)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isSuperTypeOf(net.bytebuddy.description.type.TypeDescription)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#erasure(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: net.bytebuddy.matcher.CollectionItemMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#declaresGenericException(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.asm.Advice#wrap(net.bytebuddy.implementation.Implementation)
CALLER: net.bytebuddy.matcher.CollectionElementMatcher#matches(java.lang.Iterable)
CALLER: net.bytebuddy.implementation.MethodCall#appender(net.bytebuddy.implementation.Implementation.Target)
CALLER: static net.bytebuddy.matcher.ElementMatchers#takesArgument(int,net.bytebuddy.description.type.TypeDescription)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#is(java.lang.Object)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#takesArgument(int,net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.ByteBuddy#subclass(net.bytebuddy.description.type.TypeDefinition)
	CALLEE: net.bytebuddy.ByteBuddy#subclass(net.bytebuddy.description.type.TypeDefinition,net.bytebuddy.dynamic.scaffold.subclass.ConstructorStrategy)
CALLER: net.bytebuddy.asm.Advice#appender(net.bytebuddy.implementation.Implementation.Target)
	CALLEE: net.bytebuddy.implementation.FixedValue.ForThisValue#appender(net.bytebuddy.implementation.Implementation.Target)
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall#appender(net.bytebuddy.implementation.Implementation.Target)
	CALLEE: net.bytebuddy.implementation.auxiliary.MethodCallProxy.MethodCall#appender(net.bytebuddy.implementation.Implementation.Target)
	CALLEE: net.bytebuddy.implementation.FixedValue.ForPoolValue#appender(net.bytebuddy.implementation.Implementation.Target)
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForImplicitProperty#appender(net.bytebuddy.implementation.Implementation.Target)
	CALLEE: net.bytebuddy.implementation.MethodCall#appender(net.bytebuddy.implementation.Implementation.Target)
	CALLEE: net.bytebuddy.implementation.MethodDelegation#appender(net.bytebuddy.implementation.Implementation.Target)
	CALLEE: net.bytebuddy.implementation.FixedValue.ForOriginType#appender(net.bytebuddy.implementation.Implementation.Target)
	CALLEE: net.bytebuddy.asm.Advice#appender(net.bytebuddy.implementation.Implementation.Target)
	CALLEE: net.bytebuddy.ByteBuddy.EnumerationImplementation#appender(net.bytebuddy.implementation.Implementation.Target)
	CALLEE: net.bytebuddy.implementation.FixedValue.ForValue#appender(net.bytebuddy.implementation.Implementation.Target)
	CALLEE: net.bytebuddy.implementation.ExceptionMethod#appender(net.bytebuddy.implementation.Implementation.Target)
	CALLEE: net.bytebuddy.implementation.FixedValue.ForArgument#appender(net.bytebuddy.implementation.Implementation.Target)
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForField#appender(net.bytebuddy.implementation.Implementation.Target)
	CALLEE: net.bytebuddy.implementation.InvokeDynamic#appender(net.bytebuddy.implementation.Implementation.Target)
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#appender(net.bytebuddy.implementation.Implementation.Target)
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForParameterSetter#appender(net.bytebuddy.implementation.Implementation.Target)
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForInstance#appender(net.bytebuddy.implementation.Implementation.Target)
	CALLEE: net.bytebuddy.implementation.DefaultMethodCall#appender(net.bytebuddy.implementation.Implementation.Target)
	CALLEE: net.bytebuddy.asm.Advice.Appender#<init>(net.bytebuddy.asm.Advice,net.bytebuddy.implementation.Implementation.Target,net.bytebuddy.implementation.bytecode.ByteCodeAppender)
CALLER: net.bytebuddy.utility.visitor.StackAwareMethodVisitor#visitFieldInsn(int,java.lang.String,java.lang.String,java.lang.String)
	CALLEE: net.bytebuddy.utility.visitor.StackAwareMethodVisitor#adjustStack(int)
CALLER: net.bytebuddy.asm.Advice.AdviceVisitor.WithExitAdvice.WithExceptionHandling#onUserStart()
	CALLEE: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#visitLabel(net.bytebuddy.jar.asm.Label)
	CALLEE: net.bytebuddy.utility.visitor.StackAwareMethodVisitor#visitLabel(net.bytebuddy.jar.asm.Label)
CALLER: static net.bytebuddy.utility.JavaModule#of(java.lang.Object)
	CALLEE: net.bytebuddy.utility.JavaModule#<init>(java.lang.Object)
CALLER: net.bytebuddy.implementation.MethodCall#withAllArguments()
CALLER: net.bytebuddy.asm.Advice.WithCustomMapping#bind(java.lang.Class,java.lang.reflect.Method,int)
	CALLEE: net.bytebuddy.asm.Advice.WithCustomMapping#bind(java.lang.Class,net.bytebuddy.description.method.ParameterDescription)
CALLER: net.bytebuddy.dynamic.loading.ByteArrayClassLoader#<init>(java.lang.ClassLoader,java.util.Map,net.bytebuddy.dynamic.loading.ByteArrayClassLoader.PersistenceHandler)
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader#<init>(java.lang.ClassLoader,java.util.Map,java.security.ProtectionDomain,net.bytebuddy.dynamic.loading.ByteArrayClassLoader.PersistenceHandler,net.bytebuddy.dynamic.loading.PackageDefinitionStrategy)
CALLER: net.bytebuddy.benchmark.SuperClassInvocationBenchmark#benchmarkByteBuddyWithPrefix(org.openjdk.jmh.infra.Blackhole)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(boolean)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(byte)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(short)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(int)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(char)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(long)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(float)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(double)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(java.lang.Object)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(boolean,boolean,boolean)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(byte,byte,byte)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(short,short,short)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(int,int,int)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(char,char,char)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(long,long,long)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(float,float,float)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(double,double,double)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(java.lang.Object,java.lang.Object,java.lang.Object)
CALLER: static net.bytebuddy.implementation.MethodCall#invoke(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.utility.RandomString#<init>()
	CALLEE: net.bytebuddy.utility.RandomString#<init>(int)
CALLER: static net.bytebuddy.matcher.ElementMatchers#noneOf(java.lang.reflect.Method[])
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#noneOf(java.lang.Iterable)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#definedMethod(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#withField(java.lang.String[])
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfField#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfArgument#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfInstance#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitArguments#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic#withField(java.lang.String[])
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#withField(java.lang.String[])
CALLER: static net.bytebuddy.matcher.ElementMatchers#namedIgnoreCase(java.lang.String)
	CALLEE: net.bytebuddy.matcher.StringMatcher#<init>(java.lang.String,net.bytebuddy.matcher.StringMatcher.Mode)
	CALLEE: net.bytebuddy.matcher.NameMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#considerEndOfExceptionTable()
	CALLEE: net.bytebuddy.asm.Advice.AdviceVisitor#onAfterExceptionTable()
	CALLEE: net.bytebuddy.utility.visitor.LineNumberPrependingMethodVisitor#onAfterExceptionTable()
CALLER: net.bytebuddy.implementation.auxiliary.TypeProxy#make(java.lang.String,net.bytebuddy.ClassFileVersion,net.bytebuddy.implementation.MethodAccessorFactory)
	CALLEE: net.bytebuddy.ByteBuddy#<init>(net.bytebuddy.ClassFileVersion)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isFinalizer()
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#none()
	CALLEE: net.bytebuddy.ByteBuddy#ignore(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: net.bytebuddy.ByteBuddy#subclass(net.bytebuddy.description.type.TypeDefinition)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#any()
CALLER: net.bytebuddy.benchmark.ClassByExtensionBenchmark#benchmarkCglib()
	CALLEE: net.bytebuddy.benchmark.ClassByExtensionBenchmark#newClassLoader()
CALLER: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#onVisitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String)
	CALLEE: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#considerEndOfExceptionTable()
CALLER: net.bytebuddy.matcher.CachingMatcher#<init>(net.bytebuddy.matcher.ElementMatcher,java.util.concurrent.ConcurrentMap)
CALLER: net.bytebuddy.matcher.CollectionErasureMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: static net.bytebuddy.implementation.FieldAccessor#ofField(java.lang.String)
	CALLEE: static net.bytebuddy.implementation.FieldAccessor#of(net.bytebuddy.implementation.FieldAccessor.FieldNameExtractor)
CALLER: static net.bytebuddy.implementation.FixedValue#self()
	CALLEE: net.bytebuddy.implementation.FixedValue.ForThisValue#<init>()
CALLER: net.bytebuddy.benchmark.ClassByExtensionBenchmark#benchmarkByteBuddyWithProxyAndReusedDelegator()
	CALLEE: net.bytebuddy.ByteBuddy#<init>()
	CALLEE: net.bytebuddy.ByteBuddy#with(net.bytebuddy.dynamic.scaffold.TypeValidation)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#none()
	CALLEE: net.bytebuddy.ByteBuddy#ignore(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: net.bytebuddy.ByteBuddy#subclass(java.lang.Class)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isDeclaredBy(java.lang.Class)
	CALLEE: net.bytebuddy.benchmark.ClassByExtensionBenchmark#newClassLoader()
CALLER: static net.bytebuddy.agent.ByteBuddyAgent#attach(java.io.File,java.lang.String,java.lang.String)
	CALLEE: static net.bytebuddy.agent.ByteBuddyAgent#attach(java.io.File,java.lang.String,java.lang.String,net.bytebuddy.agent.ByteBuddyAgent.AttachmentProvider)
CALLER: static net.bytebuddy.matcher.ElementMatchers#declaresException(java.lang.Class)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#declaresException(net.bytebuddy.description.type.TypeDescription)
CALLER: net.bytebuddy.implementation.MethodCall#withArgument(int[])
	CALLEE: net.bytebuddy.implementation.MethodCall#with(java.util.List)
CALLER: net.bytebuddy.asm.MemberSubstitution.WithoutSpecification#replaceWith(java.lang.reflect.Field)
	CALLEE: net.bytebuddy.asm.MemberSubstitution.WithoutSpecification#replaceWith(net.bytebuddy.description.field.FieldDescription)
CALLER: static net.bytebuddy.ClassFileVersion#ofThisVm(net.bytebuddy.ClassFileVersion)
	CALLEE: static net.bytebuddy.ClassFileVersion#ofThisVm()
CALLER: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#withReference(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfField#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfArgument#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfInstance#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitArguments#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic#withReference(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#withReference(java.lang.Object)
CALLER: net.bytebuddy.matcher.DefinedShapeMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: static net.bytebuddy.ClassFileVersion#of(net.bytebuddy.description.type.TypeDescription,net.bytebuddy.dynamic.ClassFileLocator)
	CALLEE: net.bytebuddy.ClassFileVersion.VersionExtractor#<init>()
	CALLEE: net.bytebuddy.ClassFileVersion.VersionExtractor#getClassFileVersionNumber()
	CALLEE: static net.bytebuddy.ClassFileVersion#ofMinorMajor(int)
CALLER: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#onVisitLookupSwitchInsn(net.bytebuddy.jar.asm.Label,int[],net.bytebuddy.jar.asm.Label[])
CALLER: net.bytebuddy.matcher.StringMatcher#toString()
CALLER: net.bytebuddy.implementation.InvocationHandlerAdapter.ForInstance#withAssigner(net.bytebuddy.implementation.bytecode.assign.Assigner)
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForInstance#<init>(java.lang.String,boolean,net.bytebuddy.implementation.bytecode.assign.Assigner,java.lang.reflect.InvocationHandler)
CALLER: net.bytebuddy.utility.visitor.LineNumberPrependingMethodVisitor#onAfterExceptionTable()
	CALLEE: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#visitLabel(net.bytebuddy.jar.asm.Label)
CALLER: net.bytebuddy.dynamic.loading.ByteArrayClassLoader#<init>(java.lang.ClassLoader,java.util.Map,java.security.ProtectionDomain,net.bytebuddy.dynamic.loading.ByteArrayClassLoader.PersistenceHandler,net.bytebuddy.dynamic.loading.PackageDefinitionStrategy)
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader#<init>(java.lang.ClassLoader,java.util.Map,java.security.ProtectionDomain,net.bytebuddy.dynamic.loading.ByteArrayClassLoader.PersistenceHandler,net.bytebuddy.dynamic.loading.PackageDefinitionStrategy,java.lang.instrument.ClassFileTransformer)
CALLER: static net.bytebuddy.implementation.MethodDelegation#toField(java.lang.String)
	CALLEE: static net.bytebuddy.implementation.MethodDelegation#withDefaultConfiguration()
	CALLEE: net.bytebuddy.implementation.MethodDelegation.WithCustomProperties#toField(java.lang.String)
CALLER: net.bytebuddy.implementation.FieldAccessor.ForImplicitProperty#in(java.lang.Class)
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForImplicitProperty#in(net.bytebuddy.description.type.TypeDescription)
CALLER: net.bytebuddy.implementation.bytecode.constant.MethodConstant.ForConstructor#preparation()
CALLER: net.bytebuddy.implementation.InvocationHandlerAdapter.ForInstance#appender(net.bytebuddy.implementation.Implementation.Target)
CALLER: net.bytebuddy.matcher.StringMatcher#matches(java.lang.String)
CALLER: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#withShortValue(short[])
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfField#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfArgument#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfInstance#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitArguments#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic#withShortValue(short[])
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#withShortValue(short[])
CALLER: static net.bytebuddy.implementation.bytecode.collection.ArrayFactory#makeArrayCreatorFor(net.bytebuddy.description.type.TypeDefinition)
CALLER: net.bytebuddy.asm.Advice#on(net.bytebuddy.matcher.ElementMatcher)
CALLER: static net.bytebuddy.matcher.ElementMatchers#noneOf(java.lang.reflect.Constructor[])
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#noneOf(java.lang.Iterable)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#definedMethod(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.dynamic.loading.MultipleParentClassLoader.CompoundEnumeration#hasMoreElements()
	CALLEE: net.bytebuddy.dynamic.loading.MultipleParentClassLoader.CompoundEnumeration#hasMoreElements()
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.ChildFirst.PrependingEnumeration#hasMoreElements()
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.SingletonEnumeration#hasMoreElements()
CALLER: net.bytebuddy.benchmark.StubInvocationBenchmark#benchmarkByteBuddy(org.openjdk.jmh.infra.Blackhole)
CALLER: static net.bytebuddy.matcher.ElementMatchers#returns(java.lang.Class)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#erasure(java.lang.Class)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#returnsGeneric(net.bytebuddy.matcher.ElementMatcher)
CALLER: static net.bytebuddy.matcher.ElementMatchers#hasChild(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: net.bytebuddy.matcher.ClassLoaderHierarchyMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.dynamic.scaffold.subclass.SubclassDynamicTypeBuilder.InstrumentableMatcher#resolve(net.bytebuddy.description.type.TypeDescription)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isVirtual()
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isFinal()
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#not(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isVisibleTo(net.bytebuddy.description.type.TypeDescription)
	CALLEE: net.bytebuddy.dynamic.scaffold.inline.InliningImplementationMatcher#resolve(net.bytebuddy.description.type.TypeDescription)
	CALLEE: net.bytebuddy.dynamic.scaffold.subclass.SubclassDynamicTypeBuilder.InstrumentableMatcher#resolve(net.bytebuddy.description.type.TypeDescription)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isDeclaredBy(net.bytebuddy.description.type.TypeDescription)
CALLER: static net.bytebuddy.matcher.ElementMatchers#returnsGeneric(java.lang.reflect.Type)
CALLER: net.bytebuddy.implementation.InvokeDynamic.Appender#apply(net.bytebuddy.jar.asm.MethodVisitor,net.bytebuddy.implementation.Implementation.Context,net.bytebuddy.description.method.MethodDescription)
CALLER: net.bytebuddy.dynamic.loading.ClassReloadingStrategy#reset(net.bytebuddy.dynamic.ClassFileLocator,java.lang.Class[])
CALLER: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfField#materialize()
CALLER: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.ChildFirst#isShadowed(java.lang.String)
CALLER: static net.bytebuddy.matcher.ElementMatchers#hasDescriptor(java.lang.String)
	CALLEE: net.bytebuddy.matcher.StringMatcher#<init>(java.lang.String,net.bytebuddy.matcher.StringMatcher.Mode)
	CALLEE: net.bytebuddy.matcher.DescriptorMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.TypeCache.StorageKey#equals(java.lang.Object)
CALLER: static net.bytebuddy.matcher.ElementMatchers#supportsModules()
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#not(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.matcher.MethodParameterTypesMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.implementation.InvokeDynamic.WithImplicitArguments#withoutArguments()
CALLER: static net.bytebuddy.matcher.ElementMatchers#takesArgument(int,net.bytebuddy.matcher.ElementMatcher)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#erasure(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#takesGenericArgument(int,net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.matcher.FailSafeMatcher#<init>(net.bytebuddy.matcher.ElementMatcher,boolean)
CALLER: static net.bytebuddy.matcher.ElementMatchers#declaresMethod(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: net.bytebuddy.matcher.CollectionItemMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: net.bytebuddy.matcher.DeclaringMethodMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.implementation.InvokeDynamic#withField(java.lang.String[])
CALLER: net.bytebuddy.ByteBuddy#subclass(java.lang.Class)
	CALLEE: net.bytebuddy.ByteBuddy#subclass(net.bytebuddy.description.type.TypeDefinition)
CALLER: net.bytebuddy.asm.Advice.AdviceVisitor.WithExitAdvice.WithExceptionHandling#onExitAdviceReturn()
	CALLEE: net.bytebuddy.asm.Advice.AdviceVisitor#variable(int,int)
	CALLEE: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#visitJumpInsn(int,net.bytebuddy.jar.asm.Label)
	CALLEE: net.bytebuddy.utility.visitor.StackAwareMethodVisitor#visitJumpInsn(int,net.bytebuddy.jar.asm.Label)
	CALLEE: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#visitInsn(int)
	CALLEE: net.bytebuddy.utility.visitor.StackAwareMethodVisitor#visitInsn(int)
	CALLEE: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#visitLabel(net.bytebuddy.jar.asm.Label)
	CALLEE: net.bytebuddy.utility.visitor.StackAwareMethodVisitor#visitLabel(net.bytebuddy.jar.asm.Label)
CALLER: net.bytebuddy.implementation.MethodCall.WithoutSpecifiedTarget#onField(java.lang.String)
CALLER: net.bytebuddy.dynamic.loading.MultipleParentClassLoader#getResources(java.lang.String)
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.ChildFirst#getResources(java.lang.String)
	CALLEE: net.bytebuddy.dynamic.loading.MultipleParentClassLoader#getResources(java.lang.String)
	CALLEE: net.bytebuddy.dynamic.loading.MultipleParentClassLoader.CompoundEnumeration#<init>(java.util.List)
CALLER: net.bytebuddy.utility.visitor.StackAwareMethodVisitor#adjustStack(int)
	CALLEE: net.bytebuddy.utility.visitor.StackAwareMethodVisitor#adjustStack(int,int)
CALLER: static net.bytebuddy.matcher.ElementMatchers#isSuperTypeOf(net.bytebuddy.description.type.TypeDescription)
	CALLEE: net.bytebuddy.matcher.SuperTypeMatcher#<init>(net.bytebuddy.description.type.TypeDescription)
CALLER: net.bytebuddy.asm.Advice.AdviceVisitor#onAfterExceptionTable()
	CALLEE: net.bytebuddy.asm.Advice.AdviceVisitor.WithExitAdvice.WithoutExceptionHandling#onUserPrepare()
	CALLEE: net.bytebuddy.asm.Advice.AdviceVisitor.WithExitAdvice.WithExceptionHandling#onUserPrepare()
	CALLEE: net.bytebuddy.asm.Advice.AdviceVisitor.WithoutExitAdvice#onUserPrepare()
	CALLEE: net.bytebuddy.asm.Advice.AdviceVisitor.WithExitAdvice.WithoutExceptionHandling#onUserStart()
	CALLEE: net.bytebuddy.asm.Advice.AdviceVisitor.WithExitAdvice.WithExceptionHandling#onUserStart()
	CALLEE: net.bytebuddy.asm.Advice.AdviceVisitor.WithoutExitAdvice#onUserStart()
CALLER: net.bytebuddy.matcher.NameMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.implementation.FixedValue.ForOriginType#<init>()
CALLER: net.bytebuddy.implementation.InvokeDynamic#withEnumeration(net.bytebuddy.description.enumeration.EnumerationDescription[])
CALLER: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#withEnumeration(net.bytebuddy.description.enumeration.EnumerationDescription[])
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfField#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfArgument#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfInstance#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitArguments#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic#withEnumeration(net.bytebuddy.description.enumeration.EnumerationDescription[])
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#withEnumeration(net.bytebuddy.description.enumeration.EnumerationDescription[])
CALLER: net.bytebuddy.benchmark.TrivialClassCreationBenchmark#benchmarkCglib()
	CALLEE: net.bytebuddy.benchmark.TrivialClassCreationBenchmark#newClassLoader()
CALLER: net.bytebuddy.asm.Advice.AdviceVisitor.WithExitAdvice#onVisitInsn(int)
	CALLEE: net.bytebuddy.utility.visitor.StackAwareMethodVisitor#drainStack()
	CALLEE: net.bytebuddy.utility.visitor.StackAwareMethodVisitor#drainStack(int,int,net.bytebuddy.implementation.bytecode.StackSize)
	CALLEE: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#visitInsn(int)
	CALLEE: net.bytebuddy.utility.visitor.StackAwareMethodVisitor#visitInsn(int)
	CALLEE: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#visitJumpInsn(int,net.bytebuddy.jar.asm.Label)
	CALLEE: net.bytebuddy.utility.visitor.StackAwareMethodVisitor#visitJumpInsn(int,net.bytebuddy.jar.asm.Label)
CALLER: net.bytebuddy.asm.MemberSubstitution.WithoutSpecification.ForMatchedByteCodeElement#doReplaceWith(net.bytebuddy.description.field.FieldDescription)
CALLER: net.bytebuddy.utility.JavaModule#getClassLoader()
CALLER: net.bytebuddy.implementation.bytecode.constant.MethodConstant#cached()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.MethodConstant.CachedConstructor#<init>(net.bytebuddy.implementation.bytecode.StackManipulation)
	CALLEE: net.bytebuddy.implementation.bytecode.constant.MethodConstant.CachedMethod#<init>(net.bytebuddy.implementation.bytecode.StackManipulation)
CALLER: static net.bytebuddy.matcher.ElementMatchers#isAccessibleTo(net.bytebuddy.description.type.TypeDescription)
	CALLEE: net.bytebuddy.matcher.AccessibilityMatcher#<init>(net.bytebuddy.description.type.TypeDescription)
CALLER: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#withImplicitAndMethodArguments()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfField#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfArgument#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfInstance#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitArguments#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic#withImplicitAndMethodArguments()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#withImplicitAndMethodArguments()
CALLER: net.bytebuddy.ByteBuddy#with(net.bytebuddy.implementation.auxiliary.AuxiliaryType.NamingStrategy)
CALLER: net.bytebuddy.implementation.FixedValue.ForPoolValue#<init>(net.bytebuddy.implementation.bytecode.StackManipulation,net.bytebuddy.description.type.TypeDescription)
CALLER: net.bytebuddy.benchmark.StubInvocationBenchmark#benchmarkJavassist(org.openjdk.jmh.infra.Blackhole)
CALLER: net.bytebuddy.matcher.DeclaringTypeMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.asm.MemberSubstitution.WithoutSpecification.ForMatchedField#doReplaceWith(net.bytebuddy.description.field.FieldDescription)
CALLER: net.bytebuddy.implementation.bytecode.constant.MethodConstant.CachedMethod#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.FieldConstant#isValid()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender.AccessorMethodInvocation#isValid()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.ForDefaultMethod#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.JavaConstantValue#isValid()
	CALLEE: net.bytebuddy.implementation.auxiliary.MethodCallProxy.AssignableSignatureCall#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.MethodConstant#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.MethodConstant.CachedMethod#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.assign.TypeCasting#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.member.HandleInvocation#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.collection.ArrayFactory.ArrayStackManipulation#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.TextConstant#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.FieldConstant.Cached#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.SerializedConstant#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.MethodConstant.CachedConstructor#isValid()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.ForSuperMethodByConstructor#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.TypeCreation#isValid()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.ForSuperMethodByReflectionFactory#isValid()
CALLER: net.bytebuddy.ClassFileVersion.VersionExtractor#<init>()
CALLER: static net.bytebuddy.utility.RandomString#make(int)
	CALLEE: net.bytebuddy.utility.RandomString#<init>(int)
	CALLEE: net.bytebuddy.utility.RandomString#nextString()
CALLER: net.bytebuddy.asm.MemberSubstitution.WithoutSpecification#replaceWith(net.bytebuddy.description.field.FieldDescription)
	CALLEE: net.bytebuddy.asm.MemberSubstitution.WithoutSpecification.ForMatchedMethod#doReplaceWith(net.bytebuddy.description.field.FieldDescription)
	CALLEE: net.bytebuddy.asm.MemberSubstitution.WithoutSpecification.ForMatchedField#doReplaceWith(net.bytebuddy.description.field.FieldDescription)
	CALLEE: net.bytebuddy.asm.MemberSubstitution.WithoutSpecification.ForMatchedByteCodeElement#doReplaceWith(net.bytebuddy.description.field.FieldDescription)
CALLER: net.bytebuddy.asm.MemberSubstitution.WithoutSpecification.ForMatchedMethod#doStub()
CALLER: net.bytebuddy.TypeCache.SimpleKey#<init>(java.lang.Class,java.util.Collection)
	CALLEE: net.bytebuddy.TypeCache.SimpleKey#<init>(java.util.Collection)
CALLER: static net.bytebuddy.matcher.ElementMatchers#isToString()
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#named(java.lang.String)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#takesArguments(int)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#returns(net.bytebuddy.description.type.TypeDescription)
CALLER: static net.bytebuddy.matcher.ElementMatchers#isSetter(java.lang.String)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isSetter()
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#named(java.lang.String)
CALLER: net.bytebuddy.dynamic.loading.ByteArrayClassLoader#<init>(java.lang.ClassLoader,java.util.Map)
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader#<init>(java.lang.ClassLoader,java.util.Map,net.bytebuddy.dynamic.loading.ByteArrayClassLoader.PersistenceHandler)
CALLER: static net.bytebuddy.implementation.MethodCall#invoke(java.lang.reflect.Method)
	CALLEE: static net.bytebuddy.implementation.MethodCall#invoke(net.bytebuddy.description.method.MethodDescription)
CALLER: static net.bytebuddy.matcher.ElementMatchers#isDeclaredBy(java.lang.Class)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isDeclaredBy(net.bytebuddy.description.type.TypeDescription)
CALLER: net.bytebuddy.implementation.MethodCall#with(net.bytebuddy.utility.JavaConstant[])
	CALLEE: net.bytebuddy.implementation.MethodCall#with(java.util.List)
CALLER: static net.bytebuddy.implementation.bytecode.assign.TypeCasting#to(net.bytebuddy.description.type.TypeDefinition)
	CALLEE: net.bytebuddy.implementation.bytecode.assign.TypeCasting#<init>(net.bytebuddy.description.type.TypeDescription)
CALLER: static net.bytebuddy.matcher.ElementMatchers#isTypeInitializer()
	CALLEE: net.bytebuddy.matcher.MethodSortMatcher#<init>(net.bytebuddy.matcher.MethodSortMatcher.Sort)
CALLER: static net.bytebuddy.implementation.InvokeDynamic#bootstrap(java.lang.reflect.Method,java.lang.Object[])
CALLER: net.bytebuddy.asm.Advice.WithCustomMapping#to(java.lang.Class,java.lang.Class)
	CALLEE: net.bytebuddy.asm.Advice.WithCustomMapping#to(java.lang.Class,java.lang.Class,net.bytebuddy.dynamic.ClassFileLocator)
CALLER: static net.bytebuddy.implementation.FixedValue#originType()
	CALLEE: net.bytebuddy.implementation.FixedValue.ForOriginType#<init>()
CALLER: static net.bytebuddy.asm.Advice#to(net.bytebuddy.description.type.TypeDescription,net.bytebuddy.dynamic.ClassFileLocator,java.util.List)
CALLER: net.bytebuddy.implementation.InvocationHandlerAdapter#argumentValuesOf(net.bytebuddy.description.method.MethodDescription)
CALLER: net.bytebuddy.implementation.MethodCall#withArgumentArrayElements(int,int,int)
	CALLEE: net.bytebuddy.implementation.MethodCall#with(java.util.List)
CALLER: net.bytebuddy.ByteBuddy#<init>()
	CALLEE: static net.bytebuddy.ClassFileVersion#ofThisVm(net.bytebuddy.ClassFileVersion)
	CALLEE: net.bytebuddy.ByteBuddy#<init>(net.bytebuddy.ClassFileVersion)
CALLER: net.bytebuddy.matcher.SignatureTokenMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: static net.bytebuddy.matcher.ElementMatchers#isAbstract()
	CALLEE: net.bytebuddy.matcher.ModifierMatcher#<init>(net.bytebuddy.matcher.ModifierMatcher.Mode)
CALLER: static net.bytebuddy.agent.builder.LambdaFactory#register(java.lang.instrument.ClassFileTransformer,java.lang.Object)
CALLER: net.bytebuddy.asm.Advice.AdviceVisitor#visitLocalVariableAnnotation(int,net.bytebuddy.jar.asm.TypePath,net.bytebuddy.jar.asm.Label[],net.bytebuddy.jar.asm.Label[],int[],java.lang.String,boolean)
	CALLEE: net.bytebuddy.asm.Advice.AdviceVisitor#resolve(int[])
	CALLEE: net.bytebuddy.asm.Advice.AdviceVisitor#visitLocalVariableAnnotation(int,net.bytebuddy.jar.asm.TypePath,net.bytebuddy.jar.asm.Label[],net.bytebuddy.jar.asm.Label[],int[],java.lang.String,boolean)
CALLER: static net.bytebuddy.matcher.ElementMatchers#isExtensionClassLoader()
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#none()
	CALLEE: net.bytebuddy.matcher.EqualityMatcher#<init>(java.lang.Object)
CALLER: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.ChildFirst.PrependingEnumeration#hasMoreElements()
	CALLEE: net.bytebuddy.dynamic.loading.MultipleParentClassLoader.CompoundEnumeration#hasMoreElements()
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.ChildFirst.PrependingEnumeration#hasMoreElements()
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.SingletonEnumeration#hasMoreElements()
CALLER: net.bytebuddy.matcher.NegatingMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.implementation.InvocationHandlerAdapter.ForField#withAssigner(net.bytebuddy.implementation.bytecode.assign.Assigner)
CALLER: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#visitIincInsn(int,int)
	CALLEE: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#considerEndOfExceptionTable()
	CALLEE: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#onVisitIincInsn(int,int)
	CALLEE: net.bytebuddy.asm.Advice.AdviceVisitor#onVisitIincInsn(int,int)
CALLER: net.bytebuddy.implementation.FieldAccessor.ForImplicitProperty#setsArgumentAt(int)
CALLER: net.bytebuddy.ByteBuddy#makeInterface(net.bytebuddy.description.type.TypeDefinition[])
	CALLEE: net.bytebuddy.ByteBuddy#makeInterface(java.util.Collection)
CALLER: net.bytebuddy.implementation.InvokeDynamic#withArgument(int)
CALLER: static net.bytebuddy.matcher.ElementMatchers#isPrivate()
	CALLEE: net.bytebuddy.matcher.ModifierMatcher#<init>(net.bytebuddy.matcher.ModifierMatcher.Mode)
CALLER: net.bytebuddy.implementation.MethodCall#andThen(net.bytebuddy.implementation.Implementation)
CALLER: net.bytebuddy.utility.visitor.StackAwareMethodVisitor#visitVarInsn(int,int)
	CALLEE: net.bytebuddy.utility.visitor.StackAwareMethodVisitor#adjustStack(int)
CALLER: static net.bytebuddy.implementation.FixedValue#value(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.bytecode.constant.TextConstant#<init>(java.lang.String)
	CALLEE: net.bytebuddy.implementation.FixedValue.ForPoolValue#<init>(net.bytebuddy.implementation.bytecode.StackManipulation,net.bytebuddy.description.type.TypeDescription)
	CALLEE: net.bytebuddy.implementation.FixedValue.ForPoolValue#<init>(net.bytebuddy.implementation.bytecode.StackManipulation,java.lang.Class)
	CALLEE: net.bytebuddy.implementation.bytecode.constant.JavaConstantValue#<init>(net.bytebuddy.utility.JavaConstant)
	CALLEE: static net.bytebuddy.implementation.FixedValue#reference(java.lang.Object)
CALLER: static net.bytebuddy.matcher.ElementMatchers#annotationType(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: net.bytebuddy.matcher.AnnotationTypeMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#withThis(net.bytebuddy.description.type.TypeDescription[])
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfField#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfArgument#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfInstance#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitArguments#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic#withThis(net.bytebuddy.description.type.TypeDescription[])
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#withThis(net.bytebuddy.description.type.TypeDescription[])
CALLER: net.bytebuddy.asm.Advice.AdviceVisitor#visitLocalVariable(java.lang.String,java.lang.String,java.lang.String,net.bytebuddy.jar.asm.Label,net.bytebuddy.jar.asm.Label,int)
	CALLEE: net.bytebuddy.asm.Advice.AdviceVisitor#resolve(int)
	CALLEE: net.bytebuddy.asm.Advice.AdviceVisitor#visitLocalVariable(java.lang.String,java.lang.String,java.lang.String,net.bytebuddy.jar.asm.Label,net.bytebuddy.jar.asm.Label,int)
CALLER: static net.bytebuddy.matcher.ElementMatchers#hasParameters(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: net.bytebuddy.matcher.MethodParametersMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: static net.bytebuddy.matcher.ElementMatchers#anyOf(java.lang.reflect.Constructor[])
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#anyOf(java.lang.Iterable)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#definedMethod(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#visitTypeInsn(int,java.lang.String)
	CALLEE: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#considerEndOfExceptionTable()
	CALLEE: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#onVisitTypeInsn(int,java.lang.String)
CALLER: net.bytebuddy.dynamic.loading.MultipleParentClassLoader.CompoundEnumeration#nextElement()
	CALLEE: net.bytebuddy.dynamic.loading.MultipleParentClassLoader.CompoundEnumeration#hasMoreElements()
	CALLEE: net.bytebuddy.dynamic.loading.MultipleParentClassLoader.CompoundEnumeration#nextElement()
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.ChildFirst.PrependingEnumeration#nextElement()
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.SingletonEnumeration#nextElement()
CALLER: net.bytebuddy.ClassFileVersion#getJavaVersion()
	CALLEE: net.bytebuddy.ClassFileVersion#getMajorVersion()
CALLER: static net.bytebuddy.matcher.ElementMatchers#takesGenericArguments(net.bytebuddy.description.type.TypeDefinition[])
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#takesGenericArguments(java.util.List)
CALLER: static net.bytebuddy.implementation.FixedValue#value(net.bytebuddy.description.type.TypeDescription)
	CALLEE: net.bytebuddy.implementation.FixedValue.ForPoolValue#<init>(net.bytebuddy.implementation.bytecode.StackManipulation,net.bytebuddy.description.type.TypeDescription)
CALLER: net.bytebuddy.implementation.InvokeDynamic.WithImplicitTarget#invoke(net.bytebuddy.description.type.TypeDescription)
CALLER: net.bytebuddy.implementation.InvokeDynamic#withField(java.lang.String)
CALLER: net.bytebuddy.utility.StreamDrainer#<init>()
	CALLEE: net.bytebuddy.utility.StreamDrainer#<init>(int)
CALLER: net.bytebuddy.utility.visitor.StackAwareMethodVisitor#visitTableSwitchInsn(int,int,net.bytebuddy.jar.asm.Label,net.bytebuddy.jar.asm.Label[])
	CALLEE: net.bytebuddy.utility.visitor.StackAwareMethodVisitor#adjustStack(int)
CALLER: static net.bytebuddy.matcher.ElementMatchers#is(java.lang.Object)
	CALLEE: net.bytebuddy.matcher.EqualityMatcher#<init>(java.lang.Object)
CALLER: net.bytebuddy.implementation.InvocationHandlerAdapter.ForField#appender(net.bytebuddy.implementation.Implementation.Target)
CALLER: static net.bytebuddy.matcher.ElementMatchers#isSubTypeOf(java.lang.Class)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isSubTypeOf(net.bytebuddy.description.type.TypeDescription)
CALLER: net.bytebuddy.TypeCache.LookupKey#equals(java.lang.Object)
CALLER: net.bytebuddy.dynamic.loading.MultipleParentClassLoader.Builder#append(java.util.Collection)
	CALLEE: net.bytebuddy.dynamic.loading.MultipleParentClassLoader.Builder#append(java.util.List)
CALLER: static net.bytebuddy.matcher.ElementMatchers#isVolatile()
	CALLEE: net.bytebuddy.matcher.ModifierMatcher#<init>(net.bytebuddy.matcher.ModifierMatcher.Mode)
CALLER: static net.bytebuddy.matcher.ElementMatchers#isGenericGetter(java.lang.reflect.Type)
CALLER: net.bytebuddy.implementation.bytecode.collection.ArrayFactory.ArrayStackManipulation#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.bytecode.collection.ArrayFactory.ArrayStackManipulation#getArrayFactory()
CALLER: net.bytebuddy.benchmark.ClassByExtensionBenchmark#benchmarkByteBuddyWithAccessorWithTypePool()
	CALLEE: net.bytebuddy.ByteBuddy#<init>()
	CALLEE: net.bytebuddy.ByteBuddy#with(net.bytebuddy.dynamic.scaffold.TypeValidation)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#none()
	CALLEE: net.bytebuddy.ByteBuddy#ignore(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: net.bytebuddy.ByteBuddy#subclass(net.bytebuddy.description.type.TypeDefinition)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isDeclaredBy(net.bytebuddy.description.type.TypeDescription)
	CALLEE: static net.bytebuddy.implementation.MethodDelegation#to(net.bytebuddy.description.type.TypeDescription)
	CALLEE: net.bytebuddy.benchmark.ClassByExtensionBenchmark#newClassLoader()
CALLER: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#onVisitVarInsn(int,int)
CALLER: net.bytebuddy.asm.Advice.AdviceVisitor#onVisitVarInsn(int,int)
	CALLEE: net.bytebuddy.asm.Advice.AdviceVisitor#resolve(int)
	CALLEE: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#visitVarInsn(int,int)
	CALLEE: net.bytebuddy.utility.visitor.StackAwareMethodVisitor#visitVarInsn(int,int)
CALLER: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall#appender(net.bytebuddy.implementation.Implementation.Target)
CALLER: static net.bytebuddy.matcher.ElementMatchers#declaresAnnotation(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: net.bytebuddy.matcher.CollectionItemMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: net.bytebuddy.matcher.DeclaringAnnotationMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.asm.MemberSubstitution.WithoutSpecification.ForMatchedMethod#onVirtualCall()
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isVirtual()
CALLER: static net.bytebuddy.implementation.ExceptionMethod#throwing(net.bytebuddy.description.type.TypeDescription)
	CALLEE: net.bytebuddy.implementation.ExceptionMethod#<init>(net.bytebuddy.description.type.TypeDescription,net.bytebuddy.implementation.ExceptionMethod.ConstructionDelegate)
CALLER: net.bytebuddy.implementation.InvocationHandlerAdapter.ForField.Appender#hashCode()
	CALLEE: net.bytebuddy.TypeCache.StorageKey#hashCode()
	CALLEE: net.bytebuddy.dynamic.Nexus#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender.AccessorMethodInvocation#hashCode()
	CALLEE: net.bytebuddy.matcher.CachingMatcher#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall#hashCode()
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForInstance.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForImplicitProperty.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.MethodCallProxy.MethodCall.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.MethodCall.Appender#hashCode()
	CALLEE: net.bytebuddy.utility.JavaModule#hashCode()
	CALLEE: net.bytebuddy.description.type.TypeVariableToken#hashCode()
	CALLEE: net.bytebuddy.implementation.bytecode.collection.ArrayFactory.ArrayStackManipulation#hashCode()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForParameterSetter.Appender#hashCode()
	CALLEE: net.bytebuddy.TypeCache.LookupKey#hashCode()
	CALLEE: net.bytebuddy.implementation.FixedValue.ForOriginType.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForField.Appender#hashCode()
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.ClassDefinitionAction#hashCode()
	CALLEE: net.bytebuddy.build.maven.MavenCoordinate#hashCode()
CALLER: net.bytebuddy.matcher.CollectionOneToOneMatcher#toString()
CALLER: net.bytebuddy.benchmark.ClassByExtensionBenchmark#benchmarkByteBuddyWithAccessorAndReusedDelegatorWithTypePool()
	CALLEE: net.bytebuddy.ByteBuddy#<init>()
	CALLEE: net.bytebuddy.ByteBuddy#with(net.bytebuddy.dynamic.scaffold.TypeValidation)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#none()
	CALLEE: net.bytebuddy.ByteBuddy#ignore(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: net.bytebuddy.ByteBuddy#subclass(net.bytebuddy.description.type.TypeDefinition)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isDeclaredBy(net.bytebuddy.description.type.TypeDescription)
	CALLEE: net.bytebuddy.benchmark.ClassByExtensionBenchmark#newClassLoader()
CALLER: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#withNullValue(net.bytebuddy.description.type.TypeDescription[])
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfField#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfArgument#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfInstance#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitArguments#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic#withNullValue(net.bytebuddy.description.type.TypeDescription[])
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#withNullValue(net.bytebuddy.description.type.TypeDescription[])
CALLER: net.bytebuddy.dynamic.loading.ClassReloadingStrategy#enableBootstrapInjection(java.io.File)
	CALLEE: net.bytebuddy.dynamic.loading.ClassReloadingStrategy#<init>(java.lang.instrument.Instrumentation,net.bytebuddy.dynamic.loading.ClassReloadingStrategy.Strategy,net.bytebuddy.dynamic.loading.ClassReloadingStrategy.BootstrapInjection,java.util.Map)
CALLER: net.bytebuddy.implementation.MethodCall#withArgumentArrayElements(int,int)
	CALLEE: net.bytebuddy.implementation.MethodCall#withArgumentArrayElements(int,int,int)
CALLER: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall#hashCode()
	CALLEE: net.bytebuddy.TypeCache.StorageKey#hashCode()
	CALLEE: net.bytebuddy.dynamic.Nexus#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender.AccessorMethodInvocation#hashCode()
	CALLEE: net.bytebuddy.matcher.CachingMatcher#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall#hashCode()
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForInstance.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForImplicitProperty.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.MethodCallProxy.MethodCall.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.MethodCall.Appender#hashCode()
	CALLEE: net.bytebuddy.utility.JavaModule#hashCode()
	CALLEE: net.bytebuddy.description.type.TypeVariableToken#hashCode()
	CALLEE: net.bytebuddy.implementation.bytecode.collection.ArrayFactory.ArrayStackManipulation#hashCode()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForParameterSetter.Appender#hashCode()
	CALLEE: net.bytebuddy.TypeCache.LookupKey#hashCode()
	CALLEE: net.bytebuddy.implementation.FixedValue.ForOriginType.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForField.Appender#hashCode()
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.ClassDefinitionAction#hashCode()
	CALLEE: net.bytebuddy.build.maven.MavenCoordinate#hashCode()
CALLER: net.bytebuddy.dynamic.scaffold.inline.RebaseImplementationTarget.RebasedMethodInvocation#<init>(net.bytebuddy.description.method.MethodDescription,net.bytebuddy.description.type.TypeDescription,net.bytebuddy.implementation.bytecode.StackManipulation)
CALLER: net.bytebuddy.implementation.InvocationHandlerAdapter.ForField#withoutMethodCache()
CALLER: static net.bytebuddy.implementation.MethodCall#invoke(net.bytebuddy.implementation.MethodCall.MethodLocator)
	CALLEE: net.bytebuddy.implementation.MethodCall.WithoutSpecifiedTarget#<init>(net.bytebuddy.implementation.MethodCall.MethodLocator)
CALLER: net.bytebuddy.ByteBuddy#with(net.bytebuddy.dynamic.scaffold.TypeValidation)
CALLER: static net.bytebuddy.matcher.ElementMatchers#nameStartsWith(java.lang.String)
	CALLEE: net.bytebuddy.matcher.StringMatcher#<init>(java.lang.String,net.bytebuddy.matcher.StringMatcher.Mode)
	CALLEE: net.bytebuddy.matcher.NameMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.dynamic.NexusAccessor#register(java.lang.String,java.lang.ClassLoader,int,net.bytebuddy.implementation.LoadedTypeInitializer)
CALLER: net.bytebuddy.android.AndroidClassLoadingStrategy.Injecting#load(java.lang.ClassLoader,java.util.Map)
	CALLEE: net.bytebuddy.android.AndroidClassLoadingStrategy#load(java.lang.ClassLoader,java.util.Map)
CALLER: net.bytebuddy.implementation.MethodCall.Appender#hashCode()
	CALLEE: net.bytebuddy.TypeCache.StorageKey#hashCode()
	CALLEE: net.bytebuddy.dynamic.Nexus#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender.AccessorMethodInvocation#hashCode()
	CALLEE: net.bytebuddy.matcher.CachingMatcher#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall#hashCode()
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForInstance.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForImplicitProperty.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.MethodCallProxy.MethodCall.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.MethodCall.Appender#hashCode()
	CALLEE: net.bytebuddy.utility.JavaModule#hashCode()
	CALLEE: net.bytebuddy.description.type.TypeVariableToken#hashCode()
	CALLEE: net.bytebuddy.implementation.bytecode.collection.ArrayFactory.ArrayStackManipulation#hashCode()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForParameterSetter.Appender#hashCode()
	CALLEE: net.bytebuddy.TypeCache.LookupKey#hashCode()
	CALLEE: net.bytebuddy.implementation.FixedValue.ForOriginType.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForField.Appender#hashCode()
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.ClassDefinitionAction#hashCode()
	CALLEE: net.bytebuddy.build.maven.MavenCoordinate#hashCode()
CALLER: net.bytebuddy.implementation.bytecode.constant.FieldConstant.Cached#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.FieldConstant#isValid()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender.AccessorMethodInvocation#isValid()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.ForDefaultMethod#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.JavaConstantValue#isValid()
	CALLEE: net.bytebuddy.implementation.auxiliary.MethodCallProxy.AssignableSignatureCall#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.MethodConstant#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.MethodConstant.CachedMethod#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.assign.TypeCasting#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.member.HandleInvocation#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.collection.ArrayFactory.ArrayStackManipulation#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.TextConstant#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.FieldConstant.Cached#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.SerializedConstant#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.MethodConstant.CachedConstructor#isValid()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.ForSuperMethodByConstructor#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.TypeCreation#isValid()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.ForSuperMethodByReflectionFactory#isValid()
CALLER: static net.bytebuddy.matcher.ElementMatchers#returnsGeneric(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: net.bytebuddy.matcher.MethodReturnTypeMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.asm.MemberSubstitution#on(net.bytebuddy.matcher.ElementMatcher)
CALLER: static net.bytebuddy.matcher.ElementMatchers#isAnnotatedWith(net.bytebuddy.description.type.TypeDescription)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#is(java.lang.Object)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isAnnotatedWith(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#onVisitJumpInsn(int,net.bytebuddy.jar.asm.Label)
CALLER: net.bytebuddy.implementation.MethodCall.WithoutSpecifiedTarget#onDefault()
CALLER: static net.bytebuddy.asm.Advice#to(net.bytebuddy.description.type.TypeDescription,net.bytebuddy.description.type.TypeDescription,net.bytebuddy.dynamic.ClassFileLocator)
	CALLEE: static net.bytebuddy.asm.Advice#to(net.bytebuddy.description.type.TypeDescription,net.bytebuddy.description.type.TypeDescription,net.bytebuddy.dynamic.ClassFileLocator,java.util.List)
CALLER: net.bytebuddy.dynamic.loading.MultipleParentClassLoader.Builder#<init>()
	CALLEE: net.bytebuddy.dynamic.loading.MultipleParentClassLoader.Builder#<init>(java.util.List)
CALLER: net.bytebuddy.benchmark.ClassByExtensionBenchmark#benchmarkByteBuddyWithPrefix()
	CALLEE: net.bytebuddy.ByteBuddy#<init>()
	CALLEE: net.bytebuddy.ByteBuddy#with(net.bytebuddy.dynamic.scaffold.TypeValidation)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#none()
	CALLEE: net.bytebuddy.ByteBuddy#ignore(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: net.bytebuddy.ByteBuddy#subclass(java.lang.Class)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isDeclaredBy(java.lang.Class)
	CALLEE: static net.bytebuddy.implementation.MethodDelegation#to(java.lang.Class)
	CALLEE: net.bytebuddy.implementation.MethodDelegation#andThen(net.bytebuddy.implementation.Implementation)
	CALLEE: net.bytebuddy.benchmark.ClassByExtensionBenchmark#newClassLoader()
CALLER: static net.bytebuddy.implementation.MethodCall#invoke(java.lang.reflect.Constructor)
	CALLEE: static net.bytebuddy.implementation.MethodCall#invoke(net.bytebuddy.description.method.MethodDescription)
CALLER: net.bytebuddy.matcher.BooleanMatcher#<init>(boolean)
CALLER: net.bytebuddy.implementation.FixedValue.ForValue.StaticFieldByteCodeAppender#apply(net.bytebuddy.jar.asm.MethodVisitor,net.bytebuddy.implementation.Implementation.Context,net.bytebuddy.description.method.MethodDescription)
CALLER: static net.bytebuddy.implementation.auxiliary.MethodCallProxy#extractFields(net.bytebuddy.description.method.MethodDescription)
	CALLEE: static net.bytebuddy.implementation.auxiliary.MethodCallProxy#fieldName(int)
CALLER: static net.bytebuddy.implementation.InvokeDynamic#bootstrap(java.lang.reflect.Constructor,java.lang.Object[])
CALLER: static net.bytebuddy.matcher.ElementMatchers#erasure(net.bytebuddy.description.type.TypeDescription)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#is(java.lang.Object)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#erasure(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender.AccessorMethodInvocation#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender#hashCode()
	CALLEE: net.bytebuddy.TypeCache.StorageKey#hashCode()
	CALLEE: net.bytebuddy.dynamic.Nexus#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender.AccessorMethodInvocation#hashCode()
	CALLEE: net.bytebuddy.matcher.CachingMatcher#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall#hashCode()
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForInstance.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForImplicitProperty.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.MethodCallProxy.MethodCall.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.MethodCall.Appender#hashCode()
	CALLEE: net.bytebuddy.utility.JavaModule#hashCode()
	CALLEE: net.bytebuddy.description.type.TypeVariableToken#hashCode()
	CALLEE: net.bytebuddy.implementation.bytecode.collection.ArrayFactory.ArrayStackManipulation#hashCode()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForParameterSetter.Appender#hashCode()
	CALLEE: net.bytebuddy.TypeCache.LookupKey#hashCode()
	CALLEE: net.bytebuddy.implementation.FixedValue.ForOriginType.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForField.Appender#hashCode()
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.ClassDefinitionAction#hashCode()
	CALLEE: net.bytebuddy.build.maven.MavenCoordinate#hashCode()
CALLER: net.bytebuddy.implementation.auxiliary.MethodCallProxy.MethodCall.Appender#apply(net.bytebuddy.jar.asm.MethodVisitor,net.bytebuddy.implementation.Implementation.Context,net.bytebuddy.description.method.MethodDescription)
CALLER: static net.bytebuddy.matcher.ElementMatchers#hasGenericSuperType(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: net.bytebuddy.matcher.HasSuperTypeMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.android.AndroidClassLoadingStrategy.Wrapping#doLoad(java.lang.ClassLoader,java.util.Set,java.io.File)
CALLER: static net.bytebuddy.matcher.ElementMatchers#isProtected()
	CALLEE: net.bytebuddy.matcher.ModifierMatcher#<init>(net.bytebuddy.matcher.ModifierMatcher.Mode)
CALLER: net.bytebuddy.ByteBuddy#rebase(java.lang.Class,net.bytebuddy.dynamic.ClassFileLocator,net.bytebuddy.dynamic.scaffold.inline.MethodNameTransformer)
	CALLEE: net.bytebuddy.ByteBuddy#rebase(net.bytebuddy.description.type.TypeDescription,net.bytebuddy.dynamic.ClassFileLocator,net.bytebuddy.dynamic.scaffold.inline.MethodNameTransformer)
CALLER: static net.bytebuddy.matcher.ElementMatchers#hasSuperType(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#erasure(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#hasGenericSuperType(net.bytebuddy.matcher.ElementMatcher)
CALLER: static net.bytebuddy.matcher.ElementMatchers#declaresGenericException(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: net.bytebuddy.matcher.MethodExceptionTypeMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.utility.privilege.GetSystemPropertyAction#run()
	CALLEE: net.bytebuddy.utility.privilege.GetSystemPropertyAction#run()
CALLER: net.bytebuddy.matcher.HasSuperTypeMatcher#hasInterface(net.bytebuddy.description.type.TypeDefinition,java.util.Set)
	CALLEE: net.bytebuddy.matcher.HasSuperTypeMatcher#hasInterface(net.bytebuddy.description.type.TypeDefinition,java.util.Set)
CALLER: net.bytebuddy.matcher.AnnotationTypeMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.implementation.MethodCall#withArgumentArray()
CALLER: net.bytebuddy.implementation.bytecode.collection.ArrayFactory.ArrayStackManipulation#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.FieldConstant#isValid()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender.AccessorMethodInvocation#isValid()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.ForDefaultMethod#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.JavaConstantValue#isValid()
	CALLEE: net.bytebuddy.implementation.auxiliary.MethodCallProxy.AssignableSignatureCall#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.MethodConstant#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.MethodConstant.CachedMethod#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.assign.TypeCasting#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.member.HandleInvocation#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.collection.ArrayFactory.ArrayStackManipulation#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.TextConstant#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.FieldConstant.Cached#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.SerializedConstant#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.MethodConstant.CachedConstructor#isValid()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.ForSuperMethodByConstructor#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.TypeCreation#isValid()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.ForSuperMethodByReflectionFactory#isValid()
CALLER: net.bytebuddy.implementation.InvokeDynamic#withCharacterValue(char[])
CALLER: static net.bytebuddy.asm.Advice#to(java.lang.Class)
	CALLEE: static net.bytebuddy.asm.Advice#to(java.lang.Class,net.bytebuddy.dynamic.ClassFileLocator)
CALLER: net.bytebuddy.implementation.FieldAccessor.ForParameterSetter.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.TypeCache.StorageKey#equals(java.lang.Object)
	CALLEE: net.bytebuddy.dynamic.Nexus#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender.AccessorMethodInvocation#equals(java.lang.Object)
	CALLEE: net.bytebuddy.matcher.CachingMatcher#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForInstance.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForImplicitProperty.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.MethodCallProxy.MethodCall.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.MethodCall.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.utility.JavaModule#equals(java.lang.Object)
	CALLEE: net.bytebuddy.description.type.TypeVariableToken#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.bytecode.collection.ArrayFactory.ArrayStackManipulation#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForParameterSetter.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.TypeCache.LookupKey#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.FixedValue.ForOriginType.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForField.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.ClassDefinitionAction#equals(java.lang.Object)
	CALLEE: net.bytebuddy.build.maven.MavenCoordinate#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForParameterSetter.Appender#getOuter()
CALLER: net.bytebuddy.implementation.MethodDelegation.WithCustomProperties#to(java.lang.Class)
	CALLEE: net.bytebuddy.implementation.MethodDelegation.WithCustomProperties#to(net.bytebuddy.description.type.TypeDescription)
CALLER: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.ChildFirst#<init>(java.lang.ClassLoader,java.util.Map,java.security.ProtectionDomain,net.bytebuddy.dynamic.loading.ByteArrayClassLoader.PersistenceHandler,net.bytebuddy.dynamic.loading.PackageDefinitionStrategy)
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader#<init>(java.lang.ClassLoader,java.util.Map,java.security.ProtectionDomain,net.bytebuddy.dynamic.loading.ByteArrayClassLoader.PersistenceHandler,net.bytebuddy.dynamic.loading.PackageDefinitionStrategy)
CALLER: net.bytebuddy.dynamic.scaffold.inline.AbstractInliningDynamicTypeBuilder#make(net.bytebuddy.dynamic.TypeResolutionStrategy)
	CALLEE: net.bytebuddy.dynamic.scaffold.inline.RedefinitionDynamicTypeBuilder#make(net.bytebuddy.dynamic.TypeResolutionStrategy,net.bytebuddy.pool.TypePool)
	CALLEE: net.bytebuddy.dynamic.scaffold.inline.RebaseDynamicTypeBuilder#make(net.bytebuddy.dynamic.TypeResolutionStrategy,net.bytebuddy.pool.TypePool)
CALLER: net.bytebuddy.benchmark.StubInvocationBenchmark#benchmarkJdkProxy(org.openjdk.jmh.infra.Blackhole)
CALLER: static net.bytebuddy.agent.ByteBuddyAgent#attach(java.io.File,net.bytebuddy.agent.ByteBuddyAgent.ProcessProvider,net.bytebuddy.agent.ByteBuddyAgent.AttachmentProvider)
	CALLEE: static net.bytebuddy.agent.ByteBuddyAgent#attach(java.io.File,net.bytebuddy.agent.ByteBuddyAgent.ProcessProvider,java.lang.String,net.bytebuddy.agent.ByteBuddyAgent.AttachmentProvider)
CALLER: static net.bytebuddy.matcher.ElementMatchers#inheritsAnnotation(net.bytebuddy.description.type.TypeDescription)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#is(java.lang.Object)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#inheritsAnnotation(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType#as(java.lang.Class)
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfField#as(net.bytebuddy.description.type.TypeDescription)
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfArgument#as(net.bytebuddy.description.type.TypeDescription)
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfInstance#as(net.bytebuddy.description.type.TypeDescription)
CALLER: net.bytebuddy.benchmark.SuperClassInvocationBenchmark#benchmarkByteBuddyWithProxy(org.openjdk.jmh.infra.Blackhole)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(boolean)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(byte)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(short)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(int)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(char)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(long)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(float)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(double)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(java.lang.Object)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(boolean,boolean,boolean)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(byte,byte,byte)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(short,short,short)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(int,int,int)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(char,char,char)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(long,long,long)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(float,float,float)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(double,double,double)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(java.lang.Object,java.lang.Object,java.lang.Object)
CALLER: static net.bytebuddy.matcher.ElementMatchers#isGetter(java.lang.Class)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isGetter(net.bytebuddy.description.type.TypeDescription)
CALLER: net.bytebuddy.benchmark.ClassByExtensionBenchmark#benchmarkByteBuddyWithPrefixAndReusedDelegator()
	CALLEE: net.bytebuddy.ByteBuddy#<init>()
	CALLEE: net.bytebuddy.ByteBuddy#with(net.bytebuddy.dynamic.scaffold.TypeValidation)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#none()
	CALLEE: net.bytebuddy.ByteBuddy#ignore(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: net.bytebuddy.ByteBuddy#subclass(java.lang.Class)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isDeclaredBy(java.lang.Class)
	CALLEE: net.bytebuddy.implementation.MethodCall#andThen(net.bytebuddy.implementation.Implementation)
	CALLEE: net.bytebuddy.implementation.MethodDelegation#andThen(net.bytebuddy.implementation.Implementation)
	CALLEE: net.bytebuddy.implementation.InvokeDynamic#andThen(net.bytebuddy.implementation.Implementation)
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#andThen(net.bytebuddy.implementation.Implementation)
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForParameterSetter#andThen(net.bytebuddy.implementation.Implementation)
	CALLEE: net.bytebuddy.benchmark.ClassByExtensionBenchmark#newClassLoader()
CALLER: net.bytebuddy.ByteBuddy#redefine(java.lang.Class,net.bytebuddy.dynamic.ClassFileLocator)
	CALLEE: net.bytebuddy.ByteBuddy#redefine(net.bytebuddy.description.type.TypeDescription,net.bytebuddy.dynamic.ClassFileLocator)
CALLER: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.SingletonEnumeration#nextElement()
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.SingletonEnumeration#nextElement()
CALLER: net.bytebuddy.android.AndroidClassLoadingStrategy#<init>(java.io.File,net.bytebuddy.android.AndroidClassLoadingStrategy.DexProcessor)
	CALLEE: net.bytebuddy.utility.RandomString#<init>()
CALLER: net.bytebuddy.implementation.InvokeDynamic.Appender#hashCode()
	CALLEE: net.bytebuddy.TypeCache.StorageKey#hashCode()
	CALLEE: net.bytebuddy.dynamic.Nexus#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender.AccessorMethodInvocation#hashCode()
	CALLEE: net.bytebuddy.matcher.CachingMatcher#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall#hashCode()
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForInstance.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForImplicitProperty.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.MethodCallProxy.MethodCall.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.MethodCall.Appender#hashCode()
	CALLEE: net.bytebuddy.utility.JavaModule#hashCode()
	CALLEE: net.bytebuddy.description.type.TypeVariableToken#hashCode()
	CALLEE: net.bytebuddy.implementation.bytecode.collection.ArrayFactory.ArrayStackManipulation#hashCode()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForParameterSetter.Appender#hashCode()
	CALLEE: net.bytebuddy.TypeCache.LookupKey#hashCode()
	CALLEE: net.bytebuddy.implementation.FixedValue.ForOriginType.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForField.Appender#hashCode()
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.ClassDefinitionAction#hashCode()
	CALLEE: net.bytebuddy.build.maven.MavenCoordinate#hashCode()
CALLER: net.bytebuddy.asm.ModifierAdjustment#withTypeModifiers(net.bytebuddy.matcher.ElementMatcher,java.util.List)
	CALLEE: net.bytebuddy.asm.ModifierAdjustment#<init>(java.util.List,java.util.List,java.util.List)
CALLER: net.bytebuddy.dynamic.loading.ClassReloadingStrategy#<init>(java.lang.instrument.Instrumentation,net.bytebuddy.dynamic.loading.ClassReloadingStrategy.Strategy)
	CALLEE: net.bytebuddy.dynamic.loading.ClassReloadingStrategy#<init>(java.lang.instrument.Instrumentation,net.bytebuddy.dynamic.loading.ClassReloadingStrategy.Strategy,net.bytebuddy.dynamic.loading.ClassReloadingStrategy.BootstrapInjection,java.util.Map)
CALLER: static net.bytebuddy.agent.ByteBuddyAgent#attach(java.io.File,net.bytebuddy.agent.ByteBuddyAgent.ProcessProvider,java.lang.String)
	CALLEE: static net.bytebuddy.agent.ByteBuddyAgent#attach(java.io.File,net.bytebuddy.agent.ByteBuddyAgent.ProcessProvider,java.lang.String,net.bytebuddy.agent.ByteBuddyAgent.AttachmentProvider)
CALLER: static net.bytebuddy.matcher.ElementMatchers#is(java.lang.reflect.Type)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#is(java.lang.Object)
CALLER: static net.bytebuddy.agent.ByteBuddyAgent#attach(java.io.File,java.lang.String)
	CALLEE: static net.bytebuddy.agent.ByteBuddyAgent#attach(java.io.File,java.lang.String,java.lang.String)
CALLER: net.bytebuddy.implementation.bytecode.constant.MethodConstant.ForConstructor#accessorMethod()
CALLER: net.bytebuddy.benchmark.TrivialClassCreationBenchmark#benchmarkJavassist()
CALLER: net.bytebuddy.implementation.MethodDelegation.WithCustomProperties#toField(java.lang.String)
CALLER: net.bytebuddy.matcher.MethodOverrideMatcher#matches(net.bytebuddy.description.method.MethodDescription,java.util.List,java.util.Set)
	CALLEE: net.bytebuddy.matcher.MethodOverrideMatcher#matches(net.bytebuddy.description.method.MethodDescription,net.bytebuddy.description.type.TypeDefinition)
	CALLEE: net.bytebuddy.matcher.MethodOverrideMatcher#matches(net.bytebuddy.description.method.MethodDescription,java.util.List,java.util.Set)
CALLER: net.bytebuddy.matcher.CachingMatcher.WithInlineEviction#<init>(net.bytebuddy.matcher.ElementMatcher,java.util.concurrent.ConcurrentMap,int)
	CALLEE: net.bytebuddy.matcher.CachingMatcher#<init>(net.bytebuddy.matcher.ElementMatcher,java.util.concurrent.ConcurrentMap)
CALLER: static net.bytebuddy.implementation.DefaultMethodCall#prioritize(net.bytebuddy.description.type.TypeDescription[])
	CALLEE: static net.bytebuddy.implementation.DefaultMethodCall#prioritize(java.util.Collection)
CALLER: net.bytebuddy.asm.MemberSubstitution.SubstitutingMethodVisitor#visitFieldInsn(int,java.lang.String,java.lang.String,java.lang.String)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#named(java.lang.String)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#hasDescriptor(java.lang.String)
CALLER: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#withFloatValue(float[])
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfField#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfArgument#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfInstance#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitArguments#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic#withFloatValue(float[])
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#withFloatValue(float[])
CALLER: static net.bytebuddy.agent.ByteBuddyAgent#install(net.bytebuddy.agent.ByteBuddyAgent.AttachmentProvider)
	CALLEE: static net.bytebuddy.agent.ByteBuddyAgent#install(net.bytebuddy.agent.ByteBuddyAgent.AttachmentProvider,net.bytebuddy.agent.ByteBuddyAgent.ProcessProvider)
CALLER: net.bytebuddy.asm.MemberRemoval#stripFields(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.asm.Advice.AdviceVisitor.WithExitAdvice#onUserEnd()
	CALLEE: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#visitLabel(net.bytebuddy.jar.asm.Label)
	CALLEE: net.bytebuddy.utility.visitor.StackAwareMethodVisitor#visitLabel(net.bytebuddy.jar.asm.Label)
	CALLEE: net.bytebuddy.asm.Advice.AdviceVisitor#variable(int)
	CALLEE: net.bytebuddy.asm.Advice.AdviceVisitor.WithExitAdvice.WithoutExceptionHandling#onUserReturn()
	CALLEE: net.bytebuddy.asm.Advice.AdviceVisitor.WithExitAdvice.WithExceptionHandling#onUserReturn()
	CALLEE: net.bytebuddy.asm.Advice.AdviceVisitor.WithExitAdvice.WithoutExceptionHandling#onExitAdviceReturn()
	CALLEE: net.bytebuddy.asm.Advice.AdviceVisitor.WithExitAdvice.WithExceptionHandling#onExitAdviceReturn()
	CALLEE: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#visitInsn(int)
	CALLEE: net.bytebuddy.utility.visitor.StackAwareMethodVisitor#visitInsn(int)
CALLER: static net.bytebuddy.matcher.ElementMatchers#isVisibleTo(java.lang.Class)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isVisibleTo(net.bytebuddy.description.type.TypeDescription)
CALLER: net.bytebuddy.benchmark.ClassByExtensionBenchmark#setup()
	CALLEE: static net.bytebuddy.implementation.MethodDelegation#to(java.lang.Class)
	CALLEE: static net.bytebuddy.implementation.MethodDelegation#to(net.bytebuddy.description.type.TypeDescription)
CALLER: net.bytebuddy.benchmark.ClassByExtensionBenchmark#benchmarkJavassist()
CALLER: net.bytebuddy.implementation.MethodDelegation.WithCustomProperties#to(java.lang.Object,java.lang.reflect.Type)
CALLER: net.bytebuddy.asm.ModifierAdjustment#withMethodModifiers(java.util.List)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#any()
	CALLEE: net.bytebuddy.asm.ModifierAdjustment#withMethodModifiers(net.bytebuddy.matcher.ElementMatcher,java.util.List)
CALLER: net.bytebuddy.implementation.InvocationHandlerAdapter.ForInstance.Appender#apply(net.bytebuddy.jar.asm.MethodVisitor,net.bytebuddy.implementation.Implementation.Context,net.bytebuddy.description.method.MethodDescription)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#named(java.lang.String)
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter#apply(net.bytebuddy.jar.asm.MethodVisitor,net.bytebuddy.implementation.Implementation.Context,net.bytebuddy.description.method.MethodDescription,net.bytebuddy.implementation.bytecode.StackManipulation,net.bytebuddy.description.field.FieldDescription)
CALLER: static net.bytebuddy.matcher.ElementMatchers#isVarArgs()
	CALLEE: net.bytebuddy.matcher.ModifierMatcher#<init>(net.bytebuddy.matcher.ModifierMatcher.Mode)
CALLER: net.bytebuddy.utility.JavaModule#getResourceAsStream(java.lang.String)
CALLER: net.bytebuddy.benchmark.ClassByExtensionBenchmark#benchmarkByteBuddyWithProxy()
	CALLEE: net.bytebuddy.ByteBuddy#<init>()
	CALLEE: net.bytebuddy.ByteBuddy#with(net.bytebuddy.dynamic.scaffold.TypeValidation)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#none()
	CALLEE: net.bytebuddy.ByteBuddy#ignore(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: net.bytebuddy.ByteBuddy#subclass(java.lang.Class)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isDeclaredBy(java.lang.Class)
	CALLEE: static net.bytebuddy.implementation.MethodDelegation#to(java.lang.Class)
	CALLEE: net.bytebuddy.benchmark.ClassByExtensionBenchmark#newClassLoader()
CALLER: net.bytebuddy.dynamic.loading.MultipleParentClassLoader.Builder#append(java.util.List)
	CALLEE: net.bytebuddy.dynamic.loading.MultipleParentClassLoader.Builder#<init>(java.util.List)
CALLER: static net.bytebuddy.asm.Advice#to(net.bytebuddy.description.type.TypeDescription,net.bytebuddy.description.type.TypeDescription)
	CALLEE: static net.bytebuddy.asm.Advice#to(net.bytebuddy.description.type.TypeDescription,net.bytebuddy.description.type.TypeDescription,net.bytebuddy.dynamic.ClassFileLocator)
CALLER: static net.bytebuddy.matcher.ElementMatchers#cached(net.bytebuddy.matcher.ElementMatcher,java.util.concurrent.ConcurrentMap)
	CALLEE: net.bytebuddy.matcher.CachingMatcher#<init>(net.bytebuddy.matcher.ElementMatcher,java.util.concurrent.ConcurrentMap)
CALLER: net.bytebuddy.asm.Advice.AdviceVisitor#variable(int,int)
	CALLEE: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#visitVarInsn(int,int)
	CALLEE: net.bytebuddy.utility.visitor.StackAwareMethodVisitor#visitVarInsn(int,int)
CALLER: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfField#as(net.bytebuddy.description.type.TypeDescription)
CALLER: static net.bytebuddy.implementation.MethodCall#invokeSuper()
	CALLEE: static net.bytebuddy.implementation.MethodCall#invokeSelf()
	CALLEE: net.bytebuddy.implementation.MethodCall.WithoutSpecifiedTarget#onSuper()
CALLER: net.bytebuddy.ByteBuddy#subclass(java.lang.Class,net.bytebuddy.dynamic.scaffold.subclass.ConstructorStrategy)
	CALLEE: net.bytebuddy.ByteBuddy#subclass(net.bytebuddy.description.type.TypeDefinition,net.bytebuddy.dynamic.scaffold.subclass.ConstructorStrategy)
CALLER: net.bytebuddy.asm.MemberSubstitution.WithoutSpecification.ForMatchedByteCodeElement#doReplaceWith(net.bytebuddy.description.method.MethodDescription)
CALLER: static net.bytebuddy.matcher.ElementMatchers#isNamed()
CALLER: net.bytebuddy.TypeCache.SimpleKey#<init>(java.lang.Class,java.lang.Class[])
	CALLEE: net.bytebuddy.TypeCache.SimpleKey#<init>(java.lang.Class,java.util.Collection)
CALLER: net.bytebuddy.asm.Advice.WithCustomMapping#bind(java.lang.Class,java.lang.reflect.Field)
	CALLEE: net.bytebuddy.asm.Advice.WithCustomMapping#bind(java.lang.Class,net.bytebuddy.description.field.FieldDescription)
CALLER: net.bytebuddy.ByteBuddy#makeInterface(java.lang.Class)
	CALLEE: net.bytebuddy.ByteBuddy#makeInterface(java.util.List)
CALLER: net.bytebuddy.asm.MemberSubstitution.WithoutSpecification.ForMatchedField#doReplaceWith(net.bytebuddy.description.method.MethodDescription)
CALLER: net.bytebuddy.dynamic.loading.ByteArrayClassLoader#findClass(java.lang.String)
CALLER: net.bytebuddy.ByteBuddy#rebase(net.bytebuddy.description.type.PackageDescription,net.bytebuddy.dynamic.ClassFileLocator)
	CALLEE: net.bytebuddy.ByteBuddy#rebase(net.bytebuddy.description.type.TypeDescription,net.bytebuddy.dynamic.ClassFileLocator)
CALLER: net.bytebuddy.matcher.HasSuperTypeMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.utility.visitor.StackAwareMethodVisitor#<init>(net.bytebuddy.jar.asm.MethodVisitor,net.bytebuddy.description.method.MethodDescription)
CALLER: net.bytebuddy.ByteBuddy#rebase(net.bytebuddy.description.type.TypeDescription,net.bytebuddy.dynamic.ClassFileLocator,net.bytebuddy.dynamic.scaffold.inline.MethodNameTransformer)
CALLER: net.bytebuddy.android.AndroidClassLoadingStrategy#load(java.lang.ClassLoader,java.util.Map)
	CALLEE: net.bytebuddy.utility.RandomString#nextString()
	CALLEE: net.bytebuddy.android.AndroidClassLoadingStrategy.Wrapping#doLoad(java.lang.ClassLoader,java.util.Set,java.io.File)
	CALLEE: net.bytebuddy.android.AndroidClassLoadingStrategy.Injecting#doLoad(java.lang.ClassLoader,java.util.Set,java.io.File)
CALLER: static net.bytebuddy.implementation.FieldAccessor#ofBeanProperty()
	CALLEE: static net.bytebuddy.implementation.FieldAccessor#of(net.bytebuddy.implementation.FieldAccessor.FieldNameExtractor)
CALLER: net.bytebuddy.implementation.InvokeDynamic#withNullValue(net.bytebuddy.description.type.TypeDescription[])
CALLER: static net.bytebuddy.matcher.ElementMatchers#isVisibleTo(net.bytebuddy.description.type.TypeDescription)
	CALLEE: net.bytebuddy.matcher.VisibilityMatcher#<init>(net.bytebuddy.description.type.TypeDescription)
CALLER: net.bytebuddy.ClassFileVersion#isLessThan(net.bytebuddy.ClassFileVersion)
	CALLEE: net.bytebuddy.ClassFileVersion#compareTo(net.bytebuddy.ClassFileVersion)
CALLER: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#withDoubleValue(double[])
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfField#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfArgument#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfInstance#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitArguments#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic#withDoubleValue(double[])
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#withDoubleValue(double[])
CALLER: net.bytebuddy.asm.Advice.WithCustomMapping#bind(java.lang.Class,net.bytebuddy.description.enumeration.EnumerationDescription)
CALLER: static net.bytebuddy.matcher.ElementMatchers#is(java.lang.reflect.Method)
CALLER: net.bytebuddy.implementation.MethodDelegation.WithCustomProperties#to(java.lang.Object)
CALLER: static net.bytebuddy.matcher.ElementMatchers#named(java.lang.String)
	CALLEE: net.bytebuddy.matcher.StringMatcher#<init>(java.lang.String,net.bytebuddy.matcher.StringMatcher.Mode)
	CALLEE: net.bytebuddy.matcher.NameMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: static net.bytebuddy.matcher.ElementMatchers#inheritsAnnotation(java.lang.Class)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#inheritsAnnotation(net.bytebuddy.description.type.TypeDescription)
CALLER: static net.bytebuddy.matcher.ElementMatchers#isSetter(net.bytebuddy.description.type.TypeDescription)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#is(java.lang.Object)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isSetter(net.bytebuddy.matcher.ElementMatcher)
CALLER: static net.bytebuddy.matcher.ElementMatchers#failSafe(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: net.bytebuddy.matcher.FailSafeMatcher#<init>(net.bytebuddy.matcher.ElementMatcher,boolean)
CALLER: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfInstance#materialize()
CALLER: static net.bytebuddy.matcher.ElementMatchers#hasAnnotation(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: net.bytebuddy.matcher.CollectionItemMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: net.bytebuddy.matcher.InheritedAnnotationMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: static net.bytebuddy.matcher.ElementMatchers#hasGenericType(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: net.bytebuddy.matcher.MethodParameterTypeMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.benchmark.ClassByImplementationBenchmark#setup()
CALLER: net.bytebuddy.asm.ModifierAdjustment.Adjustment#resolve(int)
CALLER: net.bytebuddy.matcher.InstanceTypeMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.implementation.FixedValue.ForArgument#<init>(int)
CALLER: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#onVisitTypeInsn(int,java.lang.String)
CALLER: net.bytebuddy.dynamic.loading.ByteArrayClassLoader#<init>(java.lang.ClassLoader,java.util.Map,java.security.ProtectionDomain,net.bytebuddy.dynamic.loading.ByteArrayClassLoader.PersistenceHandler,net.bytebuddy.dynamic.loading.PackageDefinitionStrategy,java.lang.instrument.ClassFileTransformer)
	CALLEE: net.bytebuddy.dynamic.loading.InjectionClassLoader#<init>(java.lang.ClassLoader)
CALLER: static net.bytebuddy.matcher.ElementMatchers#isPackagePrivate()
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isPublic()
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isProtected()
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isPrivate()
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#not(net.bytebuddy.matcher.ElementMatcher)
CALLER: static net.bytebuddy.implementation.bytecode.constant.MethodConstant#typeConstantsFor(java.util.List)
CALLER: net.bytebuddy.implementation.DefaultMethodCall#filterRelevant(net.bytebuddy.description.type.TypeDescription)
CALLER: static net.bytebuddy.implementation.MethodCall#run(java.lang.Runnable)
	CALLEE: static net.bytebuddy.implementation.MethodCall#invoke(java.lang.reflect.Method)
CALLER: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#visitIntInsn(int,int)
	CALLEE: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#considerEndOfExceptionTable()
	CALLEE: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#onVisitIntInsn(int,int)
CALLER: net.bytebuddy.utility.visitor.StackAwareMethodVisitor#visitIntInsn(int,int)
	CALLEE: net.bytebuddy.utility.visitor.StackAwareMethodVisitor#adjustStack(int)
CALLER: net.bytebuddy.matcher.MethodParameterTypeMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: static net.bytebuddy.implementation.ExceptionMethod#throwing(java.lang.Class)
	CALLEE: static net.bytebuddy.implementation.ExceptionMethod#throwing(net.bytebuddy.description.type.TypeDescription)
CALLER: net.bytebuddy.asm.Advice.WithCustomMapping#bind(java.lang.Class,net.bytebuddy.description.type.TypeDescription)
CALLER: static net.bytebuddy.matcher.ElementMatchers#isVariable(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#anyOf(java.lang.Object[])
	CALLEE: net.bytebuddy.matcher.TypeSortMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.benchmark.ClassByExtensionBenchmark#benchmarkByteBuddyWithPrefixWithTypePool()
	CALLEE: net.bytebuddy.ByteBuddy#<init>()
	CALLEE: net.bytebuddy.ByteBuddy#with(net.bytebuddy.dynamic.scaffold.TypeValidation)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#none()
	CALLEE: net.bytebuddy.ByteBuddy#ignore(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: net.bytebuddy.ByteBuddy#subclass(net.bytebuddy.description.type.TypeDefinition)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isDeclaredBy(net.bytebuddy.description.type.TypeDescription)
	CALLEE: static net.bytebuddy.implementation.MethodDelegation#to(net.bytebuddy.description.type.TypeDescription)
	CALLEE: net.bytebuddy.implementation.MethodDelegation#andThen(net.bytebuddy.implementation.Implementation)
	CALLEE: net.bytebuddy.benchmark.ClassByExtensionBenchmark#newClassLoader()
CALLER: net.bytebuddy.implementation.FixedValue.ForPoolValue#<init>(net.bytebuddy.implementation.bytecode.StackManipulation,java.lang.Class)
	CALLEE: net.bytebuddy.implementation.FixedValue.ForPoolValue#<init>(net.bytebuddy.implementation.bytecode.StackManipulation,net.bytebuddy.description.type.TypeDescription)
CALLER: net.bytebuddy.utility.visitor.StackAwareMethodVisitor#visitInsn(int)
	CALLEE: net.bytebuddy.utility.visitor.StackAwareMethodVisitor#adjustStack(int,int)
	CALLEE: net.bytebuddy.utility.visitor.StackAwareMethodVisitor#adjustStack(int)
CALLER: net.bytebuddy.asm.Advice.WithCustomMapping#to(java.lang.Class,net.bytebuddy.dynamic.ClassFileLocator)
	CALLEE: net.bytebuddy.asm.Advice.WithCustomMapping#to(net.bytebuddy.description.type.TypeDescription,net.bytebuddy.dynamic.ClassFileLocator)
CALLER: net.bytebuddy.matcher.CollectionItemMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.ClassFileVersion#compareTo(net.bytebuddy.ClassFileVersion)
	CALLEE: net.bytebuddy.ClassFileVersion#getMajorVersion()
	CALLEE: net.bytebuddy.ClassFileVersion#getMinorVersion()
CALLER: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#visitFieldInsn(int,java.lang.String,java.lang.String,java.lang.String)
	CALLEE: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#considerEndOfExceptionTable()
	CALLEE: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#onVisitFieldInsn(int,java.lang.String,java.lang.String,java.lang.String)
CALLER: static net.bytebuddy.matcher.ElementMatchers#nameMatches(java.lang.String)
	CALLEE: net.bytebuddy.matcher.StringMatcher#<init>(java.lang.String,net.bytebuddy.matcher.StringMatcher.Mode)
	CALLEE: net.bytebuddy.matcher.NameMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.implementation.DefaultMethodCall.Appender#apply(net.bytebuddy.jar.asm.MethodVisitor,net.bytebuddy.implementation.Implementation.Context,net.bytebuddy.description.method.MethodDescription)
	CALLEE: net.bytebuddy.implementation.DefaultMethodCall.Appender#locateDefault(net.bytebuddy.description.method.MethodDescription)
	CALLEE: net.bytebuddy.implementation.bytecode.constant.FieldConstant#isValid()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender.AccessorMethodInvocation#isValid()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.ForDefaultMethod#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.JavaConstantValue#isValid()
	CALLEE: net.bytebuddy.implementation.auxiliary.MethodCallProxy.AssignableSignatureCall#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.MethodConstant#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.MethodConstant.CachedMethod#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.assign.TypeCasting#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.member.HandleInvocation#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.collection.ArrayFactory.ArrayStackManipulation#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.TextConstant#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.FieldConstant.Cached#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.SerializedConstant#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.MethodConstant.CachedConstructor#isValid()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.ForSuperMethodByConstructor#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.TypeCreation#isValid()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.ForSuperMethodByReflectionFactory#isValid()
CALLER: net.bytebuddy.android.AndroidClassLoadingStrategy.Wrapping#<init>(java.io.File)
	CALLEE: net.bytebuddy.android.AndroidClassLoadingStrategy.Wrapping#<init>(java.io.File,net.bytebuddy.android.AndroidClassLoadingStrategy.DexProcessor)
CALLER: static net.bytebuddy.utility.JavaModule#isSupported()
CALLER: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#onVisitIincInsn(int,int)
CALLER: net.bytebuddy.matcher.CollectionElementMatcher#<init>(int,net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.utility.visitor.StackAwareMethodVisitor#adjustStack(int,int)
CALLER: net.bytebuddy.implementation.FixedValue.ForThisValue#appender(net.bytebuddy.implementation.Implementation.Target)
	CALLEE: net.bytebuddy.implementation.FixedValue.ForThisValue.Appender#<init>(net.bytebuddy.description.type.TypeDescription)
CALLER: net.bytebuddy.dynamic.scaffold.inline.RebaseDynamicTypeBuilder#make(net.bytebuddy.dynamic.TypeResolutionStrategy,net.bytebuddy.pool.TypePool)
	CALLEE: static net.bytebuddy.dynamic.scaffold.inline.InliningImplementationMatcher#of(net.bytebuddy.matcher.LatentMatcher,net.bytebuddy.description.type.TypeDescription)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#is(java.lang.Object)
	CALLEE: static net.bytebuddy.dynamic.scaffold.inline.RebaseDynamicTypeBuilder.RebaseableMatcher#of(net.bytebuddy.description.type.TypeDescription,net.bytebuddy.description.method.MethodList)
CALLER: net.bytebuddy.matcher.CollectionSizeMatcher#<init>(int)
CALLER: net.bytebuddy.utility.visitor.StackAwareMethodVisitor#visitLookupSwitchInsn(net.bytebuddy.jar.asm.Label,int[],net.bytebuddy.jar.asm.Label[])
	CALLEE: net.bytebuddy.utility.visitor.StackAwareMethodVisitor#adjustStack(int)
CALLER: net.bytebuddy.dynamic.loading.MultipleParentClassLoader.Builder#filter(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: net.bytebuddy.dynamic.loading.MultipleParentClassLoader.Builder#<init>(java.util.List)
CALLER: net.bytebuddy.implementation.MethodDelegation#prepare(net.bytebuddy.dynamic.scaffold.InstrumentedType)
CALLER: net.bytebuddy.implementation.MethodDelegation#andThen(net.bytebuddy.implementation.Implementation)
CALLER: net.bytebuddy.build.maven.AbstractUserConfiguration#asCoordinate(java.lang.String,java.lang.String,java.lang.String)
	CALLEE: net.bytebuddy.build.maven.AbstractUserConfiguration#getGroupId(java.lang.String)
	CALLEE: net.bytebuddy.build.maven.AbstractUserConfiguration#getArtifactId(java.lang.String)
	CALLEE: net.bytebuddy.build.maven.AbstractUserConfiguration#getVersion(java.lang.String)
	CALLEE: net.bytebuddy.build.maven.MavenCoordinate#<init>(java.lang.String,java.lang.String,java.lang.String)
CALLER: net.bytebuddy.implementation.FixedValue.ForOriginType.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.TypeCache.StorageKey#equals(java.lang.Object)
	CALLEE: net.bytebuddy.dynamic.Nexus#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender.AccessorMethodInvocation#equals(java.lang.Object)
	CALLEE: net.bytebuddy.matcher.CachingMatcher#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForInstance.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForImplicitProperty.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.MethodCallProxy.MethodCall.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.MethodCall.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.utility.JavaModule#equals(java.lang.Object)
	CALLEE: net.bytebuddy.description.type.TypeVariableToken#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.bytecode.collection.ArrayFactory.ArrayStackManipulation#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForParameterSetter.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.TypeCache.LookupKey#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.FixedValue.ForOriginType.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForField.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.ClassDefinitionAction#equals(java.lang.Object)
	CALLEE: net.bytebuddy.build.maven.MavenCoordinate#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.FixedValue.ForOriginType.Appender#getOuter()
CALLER: net.bytebuddy.implementation.MethodCall#with(net.bytebuddy.description.enumeration.EnumerationDescription[])
	CALLEE: net.bytebuddy.implementation.MethodCall#with(java.util.List)
CALLER: net.bytebuddy.implementation.DefaultMethodCall#appender(net.bytebuddy.implementation.Implementation.Target)
	CALLEE: net.bytebuddy.implementation.DefaultMethodCall#filterRelevant(net.bytebuddy.description.type.TypeDescription)
	CALLEE: net.bytebuddy.implementation.DefaultMethodCall.Appender#<init>(net.bytebuddy.implementation.Implementation.Target,java.util.List)
CALLER: static net.bytebuddy.implementation.MethodDelegation#to(java.lang.Object)
	CALLEE: static net.bytebuddy.implementation.MethodDelegation#withDefaultConfiguration()
	CALLEE: net.bytebuddy.implementation.MethodDelegation.WithCustomProperties#to(java.lang.Object)
CALLER: net.bytebuddy.implementation.MethodCall#with(java.lang.Object[])
	CALLEE: net.bytebuddy.implementation.MethodCall#with(java.util.List)
CALLER: net.bytebuddy.dynamic.scaffold.subclass.SubclassDynamicTypeBuilder#make(net.bytebuddy.dynamic.TypeResolutionStrategy)
	CALLEE: net.bytebuddy.dynamic.scaffold.subclass.SubclassDynamicTypeBuilder#make(net.bytebuddy.dynamic.TypeResolutionStrategy,net.bytebuddy.pool.TypePool)
CALLER: static net.bytebuddy.matcher.ElementMatchers#isGetter(java.lang.String)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isGetter()
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#named(java.lang.String)
CALLER: net.bytebuddy.implementation.bytecode.constant.FieldConstant#cached()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.FieldConstant.Cached#<init>(net.bytebuddy.implementation.bytecode.StackManipulation)
CALLER: net.bytebuddy.implementation.MethodDelegation.Appender#apply(net.bytebuddy.jar.asm.MethodVisitor,net.bytebuddy.implementation.Implementation.Context,net.bytebuddy.description.method.MethodDescription)
CALLER: net.bytebuddy.implementation.MethodCall#with(java.util.List)
	CALLEE: static net.bytebuddy.utility.CompoundList#of(java.util.List,java.util.List)
CALLER: net.bytebuddy.matcher.SubTypeMatcher#<init>(net.bytebuddy.description.type.TypeDescription)
CALLER: static net.bytebuddy.dynamic.NexusAccessor#clean(java.lang.ref.Reference)
CALLER: static net.bytebuddy.matcher.ElementMatchers#isBootstrapClassLoader()
CALLER: net.bytebuddy.implementation.bytecode.constant.MethodConstant.CachedConstructor#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.FieldConstant#isValid()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender.AccessorMethodInvocation#isValid()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.ForDefaultMethod#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.JavaConstantValue#isValid()
	CALLEE: net.bytebuddy.implementation.auxiliary.MethodCallProxy.AssignableSignatureCall#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.MethodConstant#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.MethodConstant.CachedMethod#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.assign.TypeCasting#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.member.HandleInvocation#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.collection.ArrayFactory.ArrayStackManipulation#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.TextConstant#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.FieldConstant.Cached#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.SerializedConstant#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.MethodConstant.CachedConstructor#isValid()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.ForSuperMethodByConstructor#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.TypeCreation#isValid()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.ForSuperMethodByReflectionFactory#isValid()
CALLER: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#visitLdcInsn(java.lang.Object)
	CALLEE: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#considerEndOfExceptionTable()
	CALLEE: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#onVisitLdcInsn(java.lang.Object)
CALLER: static net.bytebuddy.dynamic.scaffold.inline.RebaseDynamicTypeBuilder.RebaseableMatcher#of(net.bytebuddy.description.type.TypeDescription,net.bytebuddy.description.method.MethodList)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#is(java.lang.Object)
	CALLEE: net.bytebuddy.dynamic.scaffold.inline.RebaseDynamicTypeBuilder.RebaseableMatcher#<init>(java.util.Set)
CALLER: static net.bytebuddy.implementation.MethodDelegation#withEmptyConfiguration()
CALLER: static net.bytebuddy.matcher.ElementMatchers#is(java.lang.annotation.Annotation)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#is(java.lang.Object)
CALLER: static net.bytebuddy.utility.RandomString#make()
	CALLEE: static net.bytebuddy.utility.RandomString#make(int)
CALLER: net.bytebuddy.implementation.bytecode.constant.MethodConstant.ForMethod#preparation()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.TextConstant#<init>(java.lang.String)
CALLER: net.bytebuddy.ByteBuddy#<init>(net.bytebuddy.ClassFileVersion)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isSynthetic()
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isDefaultFinalizer()
CALLER: net.bytebuddy.benchmark.ClassByExtensionBenchmark#benchmarkByteBuddySpecialized()
	CALLEE: net.bytebuddy.ByteBuddy#<init>()
	CALLEE: net.bytebuddy.ByteBuddy#with(net.bytebuddy.dynamic.scaffold.TypeValidation)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#none()
	CALLEE: net.bytebuddy.ByteBuddy#ignore(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: net.bytebuddy.ByteBuddy#subclass(java.lang.Class)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isDeclaredBy(java.lang.Class)
	CALLEE: net.bytebuddy.benchmark.ClassByExtensionBenchmark#newClassLoader()
CALLER: net.bytebuddy.asm.ModifierAdjustment#<init>()
	CALLEE: net.bytebuddy.asm.ModifierAdjustment#<init>(java.util.List,java.util.List,java.util.List)
CALLER: net.bytebuddy.asm.Advice.AdviceVisitor#resolve(int)
CALLER: net.bytebuddy.build.maven.ClassLoaderResolver#resolve(net.bytebuddy.build.maven.MavenCoordinate)
	CALLEE: net.bytebuddy.build.maven.ClassLoaderResolver#doResolve(net.bytebuddy.build.maven.MavenCoordinate)
CALLER: net.bytebuddy.ByteBuddy#ignore(net.bytebuddy.matcher.LatentMatcher)
CALLER: net.bytebuddy.matcher.MethodReturnTypeMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.asm.Advice.AdviceVisitor.WithExitAdvice.WithoutExceptionHandling#onUserReturn()
CALLER: static net.bytebuddy.asm.Advice#to(net.bytebuddy.description.type.TypeDescription)
	CALLEE: static net.bytebuddy.asm.Advice#to(net.bytebuddy.description.type.TypeDescription,net.bytebuddy.dynamic.ClassFileLocator)
CALLER: static net.bytebuddy.matcher.ElementMatchers#isDefaultFinalizer()
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isFinalizer()
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isDeclaredBy(net.bytebuddy.description.type.TypeDescription)
CALLER: net.bytebuddy.dynamic.scaffold.inline.RedefinitionDynamicTypeBuilder#make(net.bytebuddy.dynamic.TypeResolutionStrategy,net.bytebuddy.pool.TypePool)
	CALLEE: static net.bytebuddy.dynamic.scaffold.inline.InliningImplementationMatcher#of(net.bytebuddy.matcher.LatentMatcher,net.bytebuddy.description.type.TypeDescription)
CALLER: static net.bytebuddy.asm.Advice#to(java.lang.Class,java.lang.Class)
	CALLEE: static net.bytebuddy.asm.Advice#to(java.lang.Class,java.lang.Class,net.bytebuddy.dynamic.ClassFileLocator)
CALLER: net.bytebuddy.implementation.MethodCall#prepare(net.bytebuddy.dynamic.scaffold.InstrumentedType)
CALLER: static net.bytebuddy.matcher.ElementMatchers#isFinalizer()
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#named(java.lang.String)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#takesArguments(int)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#returns(net.bytebuddy.description.type.TypeDescription)
CALLER: static net.bytebuddy.implementation.InvokeDynamic#bootstrap(java.lang.reflect.Constructor,java.util.List)
CALLER: static net.bytebuddy.implementation.DefaultMethodCall#prioritize(java.util.Collection)
	CALLEE: net.bytebuddy.implementation.DefaultMethodCall#<init>(java.util.List)
CALLER: net.bytebuddy.implementation.MethodDelegation.WithCustomProperties#toConstructor(java.lang.Class)
	CALLEE: net.bytebuddy.implementation.MethodDelegation.WithCustomProperties#toConstructor(net.bytebuddy.description.type.TypeDescription)
CALLER: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.ChildFirst#getResource(java.lang.String)
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.ChildFirst#isShadowed(java.lang.String)
CALLER: net.bytebuddy.implementation.bytecode.collection.ArrayFactory#withValues(java.util.List)
CALLER: static net.bytebuddy.implementation.MethodDelegation#to(java.lang.Object,java.lang.reflect.Type,java.lang.String)
	CALLEE: static net.bytebuddy.implementation.MethodDelegation#withDefaultConfiguration()
	CALLEE: net.bytebuddy.implementation.MethodDelegation.WithCustomProperties#to(java.lang.Object,java.lang.reflect.Type,java.lang.String)
CALLER: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.ChildFirst.PrependingEnumeration#nextElement()
	CALLEE: net.bytebuddy.dynamic.loading.MultipleParentClassLoader.CompoundEnumeration#hasMoreElements()
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.ChildFirst.PrependingEnumeration#hasMoreElements()
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.SingletonEnumeration#hasMoreElements()
	CALLEE: net.bytebuddy.dynamic.loading.MultipleParentClassLoader.CompoundEnumeration#nextElement()
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.ChildFirst.PrependingEnumeration#nextElement()
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.SingletonEnumeration#nextElement()
CALLER: net.bytebuddy.implementation.InvocationHandlerAdapter.ForInstance.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.TypeCache.StorageKey#equals(java.lang.Object)
	CALLEE: net.bytebuddy.dynamic.Nexus#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender.AccessorMethodInvocation#equals(java.lang.Object)
	CALLEE: net.bytebuddy.matcher.CachingMatcher#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForInstance.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForImplicitProperty.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.MethodCallProxy.MethodCall.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.MethodCall.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.utility.JavaModule#equals(java.lang.Object)
	CALLEE: net.bytebuddy.description.type.TypeVariableToken#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.bytecode.collection.ArrayFactory.ArrayStackManipulation#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForParameterSetter.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.TypeCache.LookupKey#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.FixedValue.ForOriginType.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForField.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.ClassDefinitionAction#equals(java.lang.Object)
	CALLEE: net.bytebuddy.build.maven.MavenCoordinate#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForInstance.Appender#getInvocationHandlerAdapter()
CALLER: net.bytebuddy.TypeCache.WithInlineExpunction#<init>(net.bytebuddy.TypeCache.Sort)
	CALLEE: net.bytebuddy.TypeCache#<init>(net.bytebuddy.TypeCache.Sort)
CALLER: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#withBooleanValue(boolean[])
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfField#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfArgument#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfInstance#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitArguments#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic#withBooleanValue(boolean[])
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#withBooleanValue(boolean[])
CALLER: static net.bytebuddy.implementation.DefaultMethodCall#prioritize(java.lang.Class[])
	CALLEE: static net.bytebuddy.implementation.DefaultMethodCall#prioritize(java.util.Collection)
CALLER: static net.bytebuddy.matcher.ElementMatchers#isEquals()
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#named(java.lang.String)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#takesArguments(net.bytebuddy.description.type.TypeDescription[])
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#returns(java.lang.Class)
CALLER: net.bytebuddy.matcher.ClassLoaderHierarchyMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#onVisitLdcInsn(java.lang.Object)
CALLER: static net.bytebuddy.dynamic.loading.ByteArrayClassLoader#of(java.lang.ClassLoader,java.util.Map,java.security.ProtectionDomain,net.bytebuddy.dynamic.loading.ByteArrayClassLoader.PersistenceHandler,net.bytebuddy.dynamic.loading.PackageDefinitionStrategy,boolean)
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.ChildFirst#<init>(java.lang.ClassLoader,java.util.Map,java.security.ProtectionDomain,net.bytebuddy.dynamic.loading.ByteArrayClassLoader.PersistenceHandler,net.bytebuddy.dynamic.loading.PackageDefinitionStrategy)
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader#<init>(java.lang.ClassLoader,java.util.Map,java.security.ProtectionDomain,net.bytebuddy.dynamic.loading.ByteArrayClassLoader.PersistenceHandler,net.bytebuddy.dynamic.loading.PackageDefinitionStrategy)
CALLER: static net.bytebuddy.asm.Advice#withCustomMapping()
	CALLEE: net.bytebuddy.asm.Advice.WithCustomMapping#<init>()
CALLER: static net.bytebuddy.matcher.ElementMatchers#isStatic()
	CALLEE: net.bytebuddy.matcher.ModifierMatcher#<init>(net.bytebuddy.matcher.ModifierMatcher.Mode)
CALLER: net.bytebuddy.ByteBuddy#redefine(net.bytebuddy.description.type.TypeDescription,net.bytebuddy.dynamic.ClassFileLocator)
CALLER: static net.bytebuddy.matcher.ElementMatchers#whereNone(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#whereAny(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#not(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.asm.Advice.AdviceVisitor.WithoutExitAdvice#apply(net.bytebuddy.jar.asm.MethodVisitor)
	CALLEE: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#visitInsn(int)
	CALLEE: net.bytebuddy.utility.visitor.StackAwareMethodVisitor#visitInsn(int)
CALLER: net.bytebuddy.asm.MemberSubstitution.WithoutSpecification.ForMatchedMethod#doReplaceWith(net.bytebuddy.description.method.MethodDescription)
CALLER: static net.bytebuddy.matcher.ElementMatchers#nameContains(java.lang.String)
	CALLEE: net.bytebuddy.matcher.StringMatcher#<init>(java.lang.String,net.bytebuddy.matcher.StringMatcher.Mode)
	CALLEE: net.bytebuddy.matcher.NameMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.implementation.FixedValue.ForThisValue#<init>()
CALLER: net.bytebuddy.implementation.InvokeDynamic#withLongValue(long[])
CALLER: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#withLongValue(long[])
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfField#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfArgument#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfInstance#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitArguments#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic#withLongValue(long[])
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#withLongValue(long[])
CALLER: net.bytebuddy.asm.Advice.AdviceVisitor#resolve(int[])
	CALLEE: net.bytebuddy.asm.Advice.AdviceVisitor#resolve(int)
CALLER: static net.bytebuddy.matcher.ElementMatchers#ofSort(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: net.bytebuddy.matcher.TypeSortMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.implementation.MethodCall#with(net.bytebuddy.implementation.bytecode.StackManipulation,java.lang.reflect.Type)
	CALLEE: net.bytebuddy.implementation.MethodCall#with(net.bytebuddy.implementation.bytecode.StackManipulation,net.bytebuddy.description.type.TypeDefinition)
CALLER: net.bytebuddy.utility.visitor.StackAwareMethodVisitor#drainStack()
	CALLEE: net.bytebuddy.utility.visitor.StackAwareMethodVisitor#doDrain(java.util.List)
CALLER: net.bytebuddy.asm.MemberRemoval#stripMethods(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isMethod()
	CALLEE: net.bytebuddy.asm.MemberRemoval#stripInvokables(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.asm.Advice.WithCustomMapping#to(net.bytebuddy.description.type.TypeDescription,net.bytebuddy.description.type.TypeDescription,net.bytebuddy.dynamic.ClassFileLocator)
	CALLEE: static net.bytebuddy.asm.Advice#to(net.bytebuddy.description.type.TypeDescription,net.bytebuddy.description.type.TypeDescription,net.bytebuddy.dynamic.ClassFileLocator,java.util.List)
CALLER: static net.bytebuddy.implementation.bytecode.TypeCreation#of(net.bytebuddy.description.type.TypeDescription)
	CALLEE: net.bytebuddy.implementation.bytecode.TypeCreation#<init>(net.bytebuddy.description.type.TypeDescription)
CALLER: static net.bytebuddy.dynamic.TargetType#resolve(net.bytebuddy.description.type.TypeDescription,net.bytebuddy.description.type.TypeDescription)
CALLER: net.bytebuddy.matcher.InheritedAnnotationMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.ByteBuddy.EnumerationImplementation#appender(net.bytebuddy.implementation.Implementation.Target)
	CALLEE: net.bytebuddy.ByteBuddy.EnumerationImplementation.ValuesMethodAppender#<init>(net.bytebuddy.description.type.TypeDescription)
CALLER: static net.bytebuddy.matcher.ElementMatchers#isSetter(java.lang.Class)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isSetter(net.bytebuddy.description.type.TypeDescription)
CALLER: net.bytebuddy.implementation.FixedValue.ForOriginType#appender(net.bytebuddy.implementation.Implementation.Target)
	CALLEE: net.bytebuddy.dynamic.scaffold.subclass.SubclassImplementationTarget#getOriginType()
	CALLEE: net.bytebuddy.dynamic.scaffold.inline.RebaseImplementationTarget#getOriginType()
CALLER: static net.bytebuddy.matcher.ElementMatchers#isOverriddenFrom(java.lang.Class)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isOverriddenFrom(net.bytebuddy.description.type.TypeDescription)
CALLER: net.bytebuddy.ByteBuddy#rebase(net.bytebuddy.description.type.TypeDescription,net.bytebuddy.dynamic.ClassFileLocator)
	CALLEE: net.bytebuddy.ByteBuddy#rebase(net.bytebuddy.description.type.TypeDescription,net.bytebuddy.dynamic.ClassFileLocator,net.bytebuddy.dynamic.scaffold.inline.MethodNameTransformer)
CALLER: net.bytebuddy.benchmark.ClassByExtensionBenchmark#benchmarkByteBuddyWithAccessorAndReusedDelegator()
	CALLEE: net.bytebuddy.ByteBuddy#<init>()
	CALLEE: net.bytebuddy.ByteBuddy#with(net.bytebuddy.dynamic.scaffold.TypeValidation)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#none()
	CALLEE: net.bytebuddy.ByteBuddy#ignore(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: net.bytebuddy.ByteBuddy#subclass(java.lang.Class)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isDeclaredBy(java.lang.Class)
	CALLEE: net.bytebuddy.benchmark.ClassByExtensionBenchmark#newClassLoader()
CALLER: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender#apply(net.bytebuddy.jar.asm.MethodVisitor,net.bytebuddy.implementation.Implementation.Context,net.bytebuddy.description.method.MethodDescription)
CALLER: net.bytebuddy.asm.Advice.WithCustomMapping#to(net.bytebuddy.description.type.TypeDescription,net.bytebuddy.dynamic.ClassFileLocator)
	CALLEE: static net.bytebuddy.asm.Advice#to(net.bytebuddy.description.type.TypeDescription,net.bytebuddy.dynamic.ClassFileLocator,java.util.List)
CALLER: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#onVisitFieldInsn(int,java.lang.String,java.lang.String,java.lang.String)
CALLER: static net.bytebuddy.matcher.ElementMatchers#isAccessibleTo(java.lang.Class)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isAccessibleTo(net.bytebuddy.description.type.TypeDescription)
CALLER: static net.bytebuddy.matcher.ElementMatchers#is(java.lang.reflect.Field)
CALLER: net.bytebuddy.matcher.CachingMatcher#equals(java.lang.Object)
	CALLEE: net.bytebuddy.TypeCache.StorageKey#equals(java.lang.Object)
	CALLEE: net.bytebuddy.dynamic.Nexus#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender.AccessorMethodInvocation#equals(java.lang.Object)
	CALLEE: net.bytebuddy.matcher.CachingMatcher#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForInstance.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForImplicitProperty.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.MethodCallProxy.MethodCall.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.MethodCall.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.utility.JavaModule#equals(java.lang.Object)
	CALLEE: net.bytebuddy.description.type.TypeVariableToken#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.bytecode.collection.ArrayFactory.ArrayStackManipulation#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForParameterSetter.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.TypeCache.LookupKey#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.FixedValue.ForOriginType.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForField.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.ClassDefinitionAction#equals(java.lang.Object)
	CALLEE: net.bytebuddy.build.maven.MavenCoordinate#equals(java.lang.Object)
CALLER: net.bytebuddy.ByteBuddy.EnumerationImplementation.ValuesMethodAppender#apply(net.bytebuddy.jar.asm.MethodVisitor,net.bytebuddy.implementation.Implementation.Context,net.bytebuddy.description.method.MethodDescription)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#named(java.lang.String)
	CALLEE: static net.bytebuddy.implementation.bytecode.assign.TypeCasting#to(net.bytebuddy.description.type.TypeDefinition)
CALLER: net.bytebuddy.implementation.InvokeDynamic#withNullValue(java.lang.Class[])
	CALLEE: net.bytebuddy.implementation.InvokeDynamic#withNullValue(net.bytebuddy.description.type.TypeDescription[])
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#withNullValue(net.bytebuddy.description.type.TypeDescription[])
CALLER: net.bytebuddy.asm.MemberSubstitution.WithoutSpecification#replaceWith(net.bytebuddy.description.method.MethodDescription)
	CALLEE: net.bytebuddy.asm.MemberSubstitution.WithoutSpecification.ForMatchedMethod#doReplaceWith(net.bytebuddy.description.method.MethodDescription)
	CALLEE: net.bytebuddy.asm.MemberSubstitution.WithoutSpecification.ForMatchedField#doReplaceWith(net.bytebuddy.description.method.MethodDescription)
	CALLEE: net.bytebuddy.asm.MemberSubstitution.WithoutSpecification.ForMatchedByteCodeElement#doReplaceWith(net.bytebuddy.description.method.MethodDescription)
CALLER: net.bytebuddy.asm.ModifierAdjustment#<init>(java.util.List,java.util.List,java.util.List)
CALLER: net.bytebuddy.ByteBuddy#makeEnumeration(java.util.Collection)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#named(java.lang.String)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#takesArguments(java.lang.Class[])
	CALLEE: static net.bytebuddy.implementation.MethodCall#invoke(net.bytebuddy.description.method.MethodDescription)
	CALLEE: net.bytebuddy.implementation.MethodCall#withOwnType()
	CALLEE: net.bytebuddy.implementation.MethodCall#withArgument(int[])
	CALLEE: net.bytebuddy.ByteBuddy.EnumerationImplementation#<init>(java.util.List)
CALLER: net.bytebuddy.implementation.FixedValue.ForValue#appender(net.bytebuddy.implementation.Implementation.Target)
CALLER: net.bytebuddy.dynamic.loading.MultipleParentClassLoader#getResource(java.lang.String)
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.ChildFirst#getResource(java.lang.String)
	CALLEE: net.bytebuddy.dynamic.loading.MultipleParentClassLoader#getResource(java.lang.String)
CALLER: static net.bytebuddy.implementation.InvocationHandlerAdapter#toField(java.lang.String)
CALLER: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#withReference(java.lang.Object[])
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfField#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfArgument#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfInstance#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitArguments#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic#withReference(java.lang.Object[])
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#withReference(java.lang.Object[])
CALLER: static net.bytebuddy.matcher.ElementMatchers#definedField(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: net.bytebuddy.matcher.DefinedShapeMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.matcher.MethodOverrideMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.implementation.InvokeDynamic#withValue(java.lang.Object[])
CALLER: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#withValue(java.lang.Object[])
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfField#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfArgument#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfInstance#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitArguments#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic#withValue(java.lang.Object[])
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#withValue(java.lang.Object[])
CALLER: static net.bytebuddy.agent.Attacher#main(java.lang.String[])
	CALLEE: static net.bytebuddy.agent.Attacher#install(java.lang.Class,java.lang.String,java.io.File,java.lang.String)
CALLER: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#withByteValue(byte[])
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfField#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfArgument#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfInstance#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitArguments#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic#withByteValue(byte[])
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#withByteValue(byte[])
CALLER: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#visitInsn(int)
	CALLEE: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#considerEndOfExceptionTable()
	CALLEE: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#onVisitInsn(int)
	CALLEE: net.bytebuddy.asm.Advice.AdviceVisitor.WithExitAdvice#onVisitInsn(int)
CALLER: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#visitLookupSwitchInsn(net.bytebuddy.jar.asm.Label,int[],net.bytebuddy.jar.asm.Label[])
	CALLEE: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#considerEndOfExceptionTable()
	CALLEE: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#onVisitLookupSwitchInsn(net.bytebuddy.jar.asm.Label,int[],net.bytebuddy.jar.asm.Label[])
CALLER: static net.bytebuddy.ClassFileVersion#ofMinorMajor(int)
	CALLEE: net.bytebuddy.ClassFileVersion#<init>(int)
	CALLEE: net.bytebuddy.ClassFileVersion#getMajorVersion()
CALLER: static net.bytebuddy.matcher.ElementMatchers#returns(net.bytebuddy.description.type.TypeDescription)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#is(java.lang.Object)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#returns(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.asm.ModifierAdjustment.ModifierAdjustingClassVisitor#visit(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])
	CALLEE: net.bytebuddy.asm.ModifierAdjustment.Adjustment#resolve(int)
CALLER: static net.bytebuddy.matcher.ElementMatchers#takesGenericArgument(int,java.lang.reflect.Type)
CALLER: net.bytebuddy.implementation.InvokeDynamic#withType(net.bytebuddy.description.type.TypeDescription[])
CALLER: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#withType(net.bytebuddy.description.type.TypeDescription[])
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfField#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfArgument#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfInstance#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitArguments#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic#withType(net.bytebuddy.description.type.TypeDescription[])
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.AbstractDelegator#withType(net.bytebuddy.description.type.TypeDescription[])
CALLER: static net.bytebuddy.matcher.ElementMatchers#noneOf(java.lang.Iterable)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#any()
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#is(java.lang.Object)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#not(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall#hashCode()
	CALLEE: net.bytebuddy.TypeCache.StorageKey#hashCode()
	CALLEE: net.bytebuddy.dynamic.Nexus#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender.AccessorMethodInvocation#hashCode()
	CALLEE: net.bytebuddy.matcher.CachingMatcher#hashCode()
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForInstance.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForImplicitProperty.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.MethodCallProxy.MethodCall.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.MethodCall.Appender#hashCode()
	CALLEE: net.bytebuddy.utility.JavaModule#hashCode()
	CALLEE: net.bytebuddy.description.type.TypeVariableToken#hashCode()
	CALLEE: net.bytebuddy.implementation.bytecode.collection.ArrayFactory.ArrayStackManipulation#hashCode()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForParameterSetter.Appender#hashCode()
	CALLEE: net.bytebuddy.TypeCache.LookupKey#hashCode()
	CALLEE: net.bytebuddy.implementation.FixedValue.ForOriginType.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForField.Appender#hashCode()
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.ClassDefinitionAction#hashCode()
	CALLEE: net.bytebuddy.build.maven.MavenCoordinate#hashCode()
CALLER: net.bytebuddy.matcher.MethodExceptionTypeMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.asm.ModifierAdjustment#withFieldModifiers(net.bytebuddy.matcher.ElementMatcher,java.util.List)
	CALLEE: net.bytebuddy.asm.ModifierAdjustment#<init>(java.util.List,java.util.List,java.util.List)
CALLER: net.bytebuddy.benchmark.SuperClassInvocationBenchmark#benchmarkByteBuddyWithAccessor(org.openjdk.jmh.infra.Blackhole)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(boolean)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(byte)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(short)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(int)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(char)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(long)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(float)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(double)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(java.lang.Object)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(boolean,boolean,boolean)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(byte,byte,byte)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(short,short,short)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(int,int,int)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(char,char,char)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(long,long,long)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(float,float,float)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(double,double,double)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(java.lang.Object,java.lang.Object,java.lang.Object)
CALLER: net.bytebuddy.ByteBuddy.EnumerationImplementation#prepare(net.bytebuddy.dynamic.scaffold.InstrumentedType)
	CALLEE: net.bytebuddy.ByteBuddy.EnumerationImplementation.InitializationAppender#<init>(java.util.List)
CALLER: static net.bytebuddy.implementation.MethodDelegation#toConstructor(java.lang.Class)
	CALLEE: static net.bytebuddy.implementation.MethodDelegation#withDefaultConfiguration()
	CALLEE: net.bytebuddy.implementation.MethodDelegation.WithCustomProperties#toConstructor(java.lang.Class)
CALLER: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#onVisitTableSwitchInsn(int,int,net.bytebuddy.jar.asm.Label,net.bytebuddy.jar.asm.Label[])
CALLER: net.bytebuddy.implementation.FieldAccessor.ForImplicitProperty.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.TypeCache.StorageKey#equals(java.lang.Object)
	CALLEE: net.bytebuddy.dynamic.Nexus#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender.AccessorMethodInvocation#equals(java.lang.Object)
	CALLEE: net.bytebuddy.matcher.CachingMatcher#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForInstance.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForImplicitProperty.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.MethodCallProxy.MethodCall.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.MethodCall.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.utility.JavaModule#equals(java.lang.Object)
	CALLEE: net.bytebuddy.description.type.TypeVariableToken#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.bytecode.collection.ArrayFactory.ArrayStackManipulation#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForParameterSetter.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.TypeCache.LookupKey#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.FixedValue.ForOriginType.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForField.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.ClassDefinitionAction#equals(java.lang.Object)
	CALLEE: net.bytebuddy.build.maven.MavenCoordinate#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForImplicitProperty.Appender#getOuter()
CALLER: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#visitLabel(net.bytebuddy.jar.asm.Label)
	CALLEE: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#considerEndOfExceptionTable()
	CALLEE: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#onVisitLabel(net.bytebuddy.jar.asm.Label)
CALLER: net.bytebuddy.utility.visitor.StackAwareMethodVisitor#visitLabel(net.bytebuddy.jar.asm.Label)
CALLER: static net.bytebuddy.asm.MemberSubstitution#relaxed()
CALLER: static net.bytebuddy.agent.ByteBuddyAgent#attach(java.io.File,net.bytebuddy.agent.ByteBuddyAgent.ProcessProvider)
	CALLEE: static net.bytebuddy.agent.ByteBuddyAgent#attach(java.io.File,net.bytebuddy.agent.ByteBuddyAgent.ProcessProvider,java.lang.String)
CALLER: net.bytebuddy.implementation.FixedValue.ForArgument#apply(net.bytebuddy.jar.asm.MethodVisitor,net.bytebuddy.implementation.Implementation.Context,net.bytebuddy.description.method.MethodDescription)
	CALLEE: net.bytebuddy.implementation.bytecode.constant.FieldConstant#isValid()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender.AccessorMethodInvocation#isValid()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.ForDefaultMethod#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.JavaConstantValue#isValid()
	CALLEE: net.bytebuddy.implementation.auxiliary.MethodCallProxy.AssignableSignatureCall#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.MethodConstant#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.MethodConstant.CachedMethod#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.assign.TypeCasting#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.member.HandleInvocation#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.collection.ArrayFactory.ArrayStackManipulation#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.TextConstant#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.FieldConstant.Cached#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.SerializedConstant#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.MethodConstant.CachedConstructor#isValid()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.ForSuperMethodByConstructor#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.TypeCreation#isValid()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.ForSuperMethodByReflectionFactory#isValid()
CALLER: net.bytebuddy.asm.Advice.WithCustomMapping#bind(java.lang.Class,net.bytebuddy.asm.Advice.OffsetMapping)
CALLER: static net.bytebuddy.matcher.ElementMatchers#hasMethodName(java.lang.String)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isConstructor()
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isTypeInitializer()
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#named(java.lang.String)
CALLER: static net.bytebuddy.matcher.ElementMatchers#noneOf(java.lang.reflect.Type[])
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#noneOf(java.lang.Iterable)
CALLER: net.bytebuddy.implementation.MethodDelegation.WithCustomProperties#to(net.bytebuddy.description.type.TypeDescription)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isStatic()
CALLER: net.bytebuddy.dynamic.loading.ClassReloadingStrategy#<init>(java.lang.instrument.Instrumentation,net.bytebuddy.dynamic.loading.ClassReloadingStrategy.Strategy,net.bytebuddy.dynamic.loading.ClassReloadingStrategy.BootstrapInjection,java.util.Map)
CALLER: net.bytebuddy.asm.Advice#withAssigner(net.bytebuddy.implementation.bytecode.assign.Assigner)
CALLER: net.bytebuddy.asm.Advice.WithCustomMapping#bind(java.lang.Class,java.lang.Class)
	CALLEE: net.bytebuddy.asm.Advice.WithCustomMapping#bind(java.lang.Class,net.bytebuddy.description.type.TypeDescription)
CALLER: net.bytebuddy.implementation.MethodDelegation#withAssigner(net.bytebuddy.implementation.bytecode.assign.Assigner)
CALLER: net.bytebuddy.implementation.InvokeDynamic#withBooleanValue(boolean[])
CALLER: static net.bytebuddy.matcher.ElementMatchers#isDeclaredBy(net.bytebuddy.description.type.TypeDescription)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#is(java.lang.Object)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isDeclaredBy(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.asm.ModifierAdjustment#withConstructorModifiers(net.bytebuddy.matcher.ElementMatcher,java.util.List)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isConstructor()
	CALLEE: net.bytebuddy.asm.ModifierAdjustment#withInvokableModifiers(net.bytebuddy.matcher.ElementMatcher,java.util.List)
CALLER: static net.bytebuddy.matcher.ElementMatchers#erasure(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: net.bytebuddy.matcher.ErasureMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.matcher.ModifierMatcher#toString()
CALLER: static net.bytebuddy.matcher.ElementMatchers#whereAny(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: net.bytebuddy.matcher.CollectionItemMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.matcher.FieldTypeMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.description.type.TypeVariableToken#getAnnotations()
CALLER: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.ClassDefinitionAction#hashCode()
	CALLEE: net.bytebuddy.TypeCache.StorageKey#hashCode()
	CALLEE: net.bytebuddy.dynamic.Nexus#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender.AccessorMethodInvocation#hashCode()
	CALLEE: net.bytebuddy.matcher.CachingMatcher#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall#hashCode()
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForInstance.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForImplicitProperty.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.MethodCallProxy.MethodCall.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.MethodCall.Appender#hashCode()
	CALLEE: net.bytebuddy.utility.JavaModule#hashCode()
	CALLEE: net.bytebuddy.description.type.TypeVariableToken#hashCode()
	CALLEE: net.bytebuddy.implementation.bytecode.collection.ArrayFactory.ArrayStackManipulation#hashCode()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForParameterSetter.Appender#hashCode()
	CALLEE: net.bytebuddy.TypeCache.LookupKey#hashCode()
	CALLEE: net.bytebuddy.implementation.FixedValue.ForOriginType.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForField.Appender#hashCode()
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.ClassDefinitionAction#hashCode()
	CALLEE: net.bytebuddy.build.maven.MavenCoordinate#hashCode()
CALLER: net.bytebuddy.benchmark.ClassByImplementationBenchmark#benchmarkJdkProxy()
	CALLEE: net.bytebuddy.benchmark.ClassByImplementationBenchmark#newClassLoader()
CALLER: net.bytebuddy.implementation.MethodCall.WithoutSpecifiedTarget#on(java.lang.Object)
CALLER: static net.bytebuddy.asm.Advice#to(net.bytebuddy.description.type.TypeDescription,net.bytebuddy.description.type.TypeDescription,net.bytebuddy.dynamic.ClassFileLocator,java.util.List)
CALLER: net.bytebuddy.implementation.InvocationHandlerAdapter.ForInstance#prepare(net.bytebuddy.dynamic.scaffold.InstrumentedType)
CALLER: static net.bytebuddy.asm.Advice#to(java.lang.Class,java.lang.Class,net.bytebuddy.dynamic.ClassFileLocator)
	CALLEE: static net.bytebuddy.asm.Advice#to(net.bytebuddy.description.type.TypeDescription,net.bytebuddy.description.type.TypeDescription,net.bytebuddy.dynamic.ClassFileLocator)
CALLER: net.bytebuddy.description.type.TypeVariableToken#getBounds()
CALLER: net.bytebuddy.implementation.auxiliary.MethodCallProxy#make(java.lang.String,net.bytebuddy.ClassFileVersion,net.bytebuddy.implementation.MethodAccessorFactory)
	CALLEE: static net.bytebuddy.implementation.auxiliary.MethodCallProxy#extractFields(net.bytebuddy.description.method.MethodDescription)
	CALLEE: net.bytebuddy.ByteBuddy#<init>(net.bytebuddy.ClassFileVersion)
	CALLEE: net.bytebuddy.ByteBuddy#subclass(java.lang.Class,net.bytebuddy.dynamic.scaffold.subclass.ConstructorStrategy)
	CALLEE: net.bytebuddy.implementation.auxiliary.MethodCallProxy.MethodCall#<init>(net.bytebuddy.description.method.MethodDescription,net.bytebuddy.implementation.bytecode.assign.Assigner)
CALLER: net.bytebuddy.asm.MemberRemoval#<init>()
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#none()
CALLER: net.bytebuddy.matcher.SuperTypeMatcher#<init>(net.bytebuddy.description.type.TypeDescription)
CALLER: net.bytebuddy.ByteBuddy#rebase(java.lang.Class)
	CALLEE: net.bytebuddy.ByteBuddy#rebase(java.lang.Class,net.bytebuddy.dynamic.ClassFileLocator)
CALLER: static net.bytebuddy.matcher.ElementMatchers#isStrict()
	CALLEE: net.bytebuddy.matcher.ModifierMatcher#<init>(net.bytebuddy.matcher.ModifierMatcher.Mode)
CALLER: net.bytebuddy.implementation.InvokeDynamic#withIntegerValue(int[])
CALLER: static net.bytebuddy.matcher.ElementMatchers#isGenericSetter(java.lang.reflect.Type)
CALLER: net.bytebuddy.implementation.FixedValue.ForPoolValue#apply(net.bytebuddy.jar.asm.MethodVisitor,net.bytebuddy.implementation.Implementation.Context,net.bytebuddy.description.method.MethodDescription)
CALLER: net.bytebuddy.benchmark.ClassByExtensionBenchmark#baseline()
CALLER: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender.AccessorMethodInvocation#isValid()
CALLER: net.bytebuddy.implementation.MethodCall.Appender#apply(net.bytebuddy.jar.asm.MethodVisitor,net.bytebuddy.implementation.Implementation.Context,net.bytebuddy.description.method.MethodDescription)
CALLER: net.bytebuddy.implementation.MethodDelegation.WithCustomProperties#filter(net.bytebuddy.matcher.ElementMatcher)
CALLER: static net.bytebuddy.matcher.ElementMatchers#takesArguments(java.lang.Iterable)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#erasure(net.bytebuddy.description.type.TypeDescription)
	CALLEE: net.bytebuddy.matcher.CollectionOneToOneMatcher#<init>(java.util.List)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#takesGenericArguments(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.asm.MemberSubstitution#element(net.bytebuddy.matcher.ElementMatcher)
CALLER: static net.bytebuddy.matcher.ElementMatchers#isConstructor()
	CALLEE: net.bytebuddy.matcher.MethodSortMatcher#<init>(net.bytebuddy.matcher.MethodSortMatcher.Sort)
CALLER: static net.bytebuddy.agent.ByteBuddyAgent#getInstrumentation()
	CALLEE: static net.bytebuddy.agent.ByteBuddyAgent#doGetInstrumentation()
CALLER: static net.bytebuddy.dynamic.loading.ByteArrayClassLoader#load(java.lang.ClassLoader,java.util.Map,java.security.ProtectionDomain,net.bytebuddy.dynamic.loading.ByteArrayClassLoader.PersistenceHandler,net.bytebuddy.dynamic.loading.PackageDefinitionStrategy,boolean,boolean)
	CALLEE: static net.bytebuddy.dynamic.loading.ByteArrayClassLoader#of(java.lang.ClassLoader,java.util.Map,java.security.ProtectionDomain,net.bytebuddy.dynamic.loading.ByteArrayClassLoader.PersistenceHandler,net.bytebuddy.dynamic.loading.PackageDefinitionStrategy,boolean)
CALLER: static net.bytebuddy.matcher.ElementMatchers#isEnum()
	CALLEE: net.bytebuddy.matcher.ModifierMatcher#<init>(net.bytebuddy.matcher.ModifierMatcher.Mode)
CALLER: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.ClassDefinitionAction#equals(java.lang.Object)
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.ClassDefinitionAction#getOuter()
	CALLEE: net.bytebuddy.TypeCache.StorageKey#equals(java.lang.Object)
	CALLEE: net.bytebuddy.dynamic.Nexus#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender.AccessorMethodInvocation#equals(java.lang.Object)
	CALLEE: net.bytebuddy.matcher.CachingMatcher#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForInstance.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForImplicitProperty.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.MethodCallProxy.MethodCall.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.MethodCall.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.utility.JavaModule#equals(java.lang.Object)
	CALLEE: net.bytebuddy.description.type.TypeVariableToken#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.bytecode.collection.ArrayFactory.ArrayStackManipulation#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForParameterSetter.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.TypeCache.LookupKey#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.FixedValue.ForOriginType.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForField.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.ClassDefinitionAction#equals(java.lang.Object)
	CALLEE: net.bytebuddy.build.maven.MavenCoordinate#equals(java.lang.Object)
CALLER: net.bytebuddy.implementation.InvokeDynamic#withThis(net.bytebuddy.description.type.TypeDescription[])
CALLER: net.bytebuddy.ByteBuddy#rebase(java.lang.Class,net.bytebuddy.dynamic.ClassFileLocator)
	CALLEE: net.bytebuddy.ByteBuddy#rebase(net.bytebuddy.description.type.TypeDescription,net.bytebuddy.dynamic.ClassFileLocator)
CALLER: static net.bytebuddy.implementation.MethodCall#construct(java.lang.reflect.Constructor)
	CALLEE: static net.bytebuddy.implementation.MethodCall#construct(net.bytebuddy.description.method.MethodDescription)
CALLER: net.bytebuddy.dynamic.loading.MultipleParentClassLoader.Builder#append(java.lang.Class[])
	CALLEE: net.bytebuddy.dynamic.loading.MultipleParentClassLoader.Builder#append(java.util.Collection)
CALLER: net.bytebuddy.implementation.InvocationHandlerAdapter.ForInstance#<init>(java.lang.String,boolean,net.bytebuddy.implementation.bytecode.assign.Assigner,java.lang.reflect.InvocationHandler)
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter#<init>(java.lang.String,boolean,net.bytebuddy.implementation.bytecode.assign.Assigner)
CALLER: net.bytebuddy.dynamic.scaffold.inline.InliningImplementationMatcher#resolve(net.bytebuddy.description.type.TypeDescription)
	CALLEE: net.bytebuddy.dynamic.scaffold.inline.InliningImplementationMatcher#resolve(net.bytebuddy.description.type.TypeDescription)
	CALLEE: net.bytebuddy.dynamic.scaffold.subclass.SubclassDynamicTypeBuilder.InstrumentableMatcher#resolve(net.bytebuddy.description.type.TypeDescription)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#not(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isVirtual()
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isFinal()
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isDeclaredBy(net.bytebuddy.description.type.TypeDescription)
CALLER: net.bytebuddy.implementation.InvocationHandlerAdapter.ForField.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.TypeCache.StorageKey#equals(java.lang.Object)
	CALLEE: net.bytebuddy.dynamic.Nexus#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender.AccessorMethodInvocation#equals(java.lang.Object)
	CALLEE: net.bytebuddy.matcher.CachingMatcher#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForInstance.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForImplicitProperty.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.MethodCallProxy.MethodCall.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.MethodCall.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.utility.JavaModule#equals(java.lang.Object)
	CALLEE: net.bytebuddy.description.type.TypeVariableToken#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.bytecode.collection.ArrayFactory.ArrayStackManipulation#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForParameterSetter.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.TypeCache.LookupKey#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.FixedValue.ForOriginType.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForField.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.ClassDefinitionAction#equals(java.lang.Object)
	CALLEE: net.bytebuddy.build.maven.MavenCoordinate#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForField.Appender#getInvocationHandlerAdapter()
CALLER: net.bytebuddy.asm.Advice.WithCustomMapping#<init>()
	CALLEE: net.bytebuddy.asm.Advice.WithCustomMapping#<init>(java.util.Map)
CALLER: static net.bytebuddy.ClassFileVersion#of(java.lang.Class)
	CALLEE: static net.bytebuddy.ClassFileVersion#of(java.lang.Class,net.bytebuddy.dynamic.ClassFileLocator)
CALLER: net.bytebuddy.implementation.InvokeDynamic#withShortValue(short[])
CALLER: static net.bytebuddy.matcher.ElementMatchers#takesArguments(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#erasures(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: net.bytebuddy.matcher.MethodParameterTypesMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: net.bytebuddy.matcher.MethodParametersMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: static net.bytebuddy.matcher.ElementMatchers#isGetter()
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#takesArguments(int)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#returns(net.bytebuddy.description.type.TypeDescription)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#not(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#nameStartsWith(java.lang.String)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#anyOf(java.lang.reflect.Type[])
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#returnsGeneric(net.bytebuddy.matcher.ElementMatcher)
CALLER: static net.bytebuddy.matcher.ElementMatchers#erasure(java.lang.Class)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#is(java.lang.reflect.Type)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#erasure(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.implementation.InvokeDynamic#withDoubleValue(double[])
CALLER: net.bytebuddy.implementation.auxiliary.MethodCallProxy.MethodCall.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.TypeCache.StorageKey#equals(java.lang.Object)
	CALLEE: net.bytebuddy.dynamic.Nexus#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender.AccessorMethodInvocation#equals(java.lang.Object)
	CALLEE: net.bytebuddy.matcher.CachingMatcher#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForInstance.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForImplicitProperty.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.MethodCallProxy.MethodCall.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.MethodCall.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.utility.JavaModule#equals(java.lang.Object)
	CALLEE: net.bytebuddy.description.type.TypeVariableToken#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.bytecode.collection.ArrayFactory.ArrayStackManipulation#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForParameterSetter.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.TypeCache.LookupKey#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.FixedValue.ForOriginType.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForField.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.ClassDefinitionAction#equals(java.lang.Object)
	CALLEE: net.bytebuddy.build.maven.MavenCoordinate#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.MethodCallProxy.MethodCall.Appender#getMethodCall()
CALLER: static net.bytebuddy.matcher.ElementMatchers#isGetter(net.bytebuddy.description.type.TypeDescription)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#is(java.lang.Object)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isGetter(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.asm.Advice.WithCustomMapping#bindProperty(java.lang.Class,java.lang.String)
CALLER: net.bytebuddy.implementation.ExceptionMethod#apply(net.bytebuddy.jar.asm.MethodVisitor,net.bytebuddy.implementation.Implementation.Context,net.bytebuddy.description.method.MethodDescription)
CALLER: net.bytebuddy.asm.MemberSubstitution#method(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.ByteBuddy#with(net.bytebuddy.implementation.attribute.AnnotationRetention)
CALLER: static net.bytebuddy.matcher.ElementMatchers#definedMethod(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: net.bytebuddy.matcher.DefinedShapeMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.asm.Advice.Appender#apply(net.bytebuddy.jar.asm.MethodVisitor,net.bytebuddy.implementation.Implementation.Context,net.bytebuddy.description.method.MethodDescription)
	CALLEE: net.bytebuddy.asm.Advice.Appender.EmulatingMethodVisitor#<init>(net.bytebuddy.jar.asm.MethodVisitor,net.bytebuddy.implementation.bytecode.ByteCodeAppender)
CALLER: net.bytebuddy.utility.JavaModule#canRead(net.bytebuddy.utility.JavaModule)
	CALLEE: net.bytebuddy.utility.JavaModule#unwrap()
CALLER: net.bytebuddy.benchmark.TrivialClassCreationBenchmark#benchmarkByteBuddy()
	CALLEE: net.bytebuddy.ByteBuddy#<init>()
	CALLEE: net.bytebuddy.ByteBuddy#with(net.bytebuddy.dynamic.scaffold.TypeValidation)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#any()
	CALLEE: net.bytebuddy.ByteBuddy#ignore(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: net.bytebuddy.ByteBuddy#subclass(java.lang.Class)
	CALLEE: net.bytebuddy.benchmark.TrivialClassCreationBenchmark#newClassLoader()
CALLER: static net.bytebuddy.matcher.ElementMatchers#isSubTypeOf(net.bytebuddy.description.type.TypeDescription)
	CALLEE: net.bytebuddy.matcher.SubTypeMatcher#<init>(net.bytebuddy.description.type.TypeDescription)
CALLER: net.bytebuddy.ByteBuddy#ignore(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: net.bytebuddy.ByteBuddy#ignore(net.bytebuddy.matcher.LatentMatcher)
CALLER: net.bytebuddy.asm.Advice.WithCustomMapping#bind(java.lang.Class,java.lang.Object)
CALLER: net.bytebuddy.implementation.auxiliary.MethodCallProxy.MethodCall#appender(net.bytebuddy.implementation.Implementation.Target)
CALLER: net.bytebuddy.implementation.MethodDelegation.WithCustomProperties#to(java.lang.Object,java.lang.reflect.Type,java.lang.String)
CALLER: net.bytebuddy.description.type.TypeVariableToken#<init>(java.lang.String,java.util.List)
	CALLEE: net.bytebuddy.description.type.TypeVariableToken#<init>(java.lang.String,java.util.List,java.util.List)
CALLER: static net.bytebuddy.build.maven.Initialization#makeDefault()
CALLER: static net.bytebuddy.matcher.ElementMatchers#isDeclaredBy(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#erasure(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isDeclaredByGeneric(net.bytebuddy.matcher.ElementMatcher)
CALLER: static net.bytebuddy.implementation.MethodCall#invokeSelf()
	CALLEE: net.bytebuddy.implementation.MethodCall.WithoutSpecifiedTarget#<init>(net.bytebuddy.implementation.MethodCall.MethodLocator)
CALLER: net.bytebuddy.benchmark.SuperClassInvocationBenchmark#benchmarkJavassist(org.openjdk.jmh.infra.Blackhole)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(boolean)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(byte)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(short)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(int)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(char)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(long)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(float)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(double)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(java.lang.Object)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(boolean,boolean,boolean)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(byte,byte,byte)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(short,short,short)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(int,int,int)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(char,char,char)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(long,long,long)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(float,float,float)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(double,double,double)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(java.lang.Object,java.lang.Object,java.lang.Object)
CALLER: net.bytebuddy.dynamic.scaffold.subclass.SubclassDynamicTypeBuilder#applyConstructorStrategy(net.bytebuddy.dynamic.scaffold.InstrumentedType)
CALLER: net.bytebuddy.dynamic.loading.MultipleParentClassLoader#loadClass(java.lang.String,boolean)
CALLER: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender.AccessorMethodInvocation#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender.AccessorMethodInvocation#getAppender()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.TypeCache.StorageKey#equals(java.lang.Object)
	CALLEE: net.bytebuddy.dynamic.Nexus#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender.AccessorMethodInvocation#equals(java.lang.Object)
	CALLEE: net.bytebuddy.matcher.CachingMatcher#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForInstance.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForImplicitProperty.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.MethodCallProxy.MethodCall.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.MethodCall.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.utility.JavaModule#equals(java.lang.Object)
	CALLEE: net.bytebuddy.description.type.TypeVariableToken#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.bytecode.collection.ArrayFactory.ArrayStackManipulation#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForParameterSetter.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.TypeCache.LookupKey#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.FixedValue.ForOriginType.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForField.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.ClassDefinitionAction#equals(java.lang.Object)
	CALLEE: net.bytebuddy.build.maven.MavenCoordinate#equals(java.lang.Object)
CALLER: net.bytebuddy.asm.Advice.WithCustomMapping#bind(java.lang.Class,net.bytebuddy.description.method.ParameterDescription)
CALLER: net.bytebuddy.benchmark.ClassByExtensionBenchmark#benchmarkByteBuddyWithProxyWithTypePool()
	CALLEE: net.bytebuddy.ByteBuddy#<init>()
	CALLEE: net.bytebuddy.ByteBuddy#with(net.bytebuddy.dynamic.scaffold.TypeValidation)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#none()
	CALLEE: net.bytebuddy.ByteBuddy#ignore(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: net.bytebuddy.ByteBuddy#subclass(net.bytebuddy.description.type.TypeDefinition)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isDeclaredBy(net.bytebuddy.description.type.TypeDescription)
	CALLEE: static net.bytebuddy.implementation.MethodDelegation#to(net.bytebuddy.description.type.TypeDescription)
	CALLEE: net.bytebuddy.benchmark.ClassByExtensionBenchmark#newClassLoader()
CALLER: static net.bytebuddy.matcher.ElementMatchers#isGetter(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#erasure(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isGenericGetter(net.bytebuddy.matcher.ElementMatcher)
CALLER: static net.bytebuddy.matcher.ElementMatchers#none()
	CALLEE: net.bytebuddy.matcher.BooleanMatcher#<init>(boolean)
CALLER: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#onVisitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String,boolean)
CALLER: static net.bytebuddy.matcher.ElementMatchers#isOverriddenFrom(net.bytebuddy.description.type.TypeDescription)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#is(java.lang.Object)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isOverriddenFrom(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.implementation.InvokeDynamic#withReference(java.lang.Object[])
CALLER: net.bytebuddy.asm.ModifierAdjustment#withConstructorModifiers(java.util.List)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#any()
	CALLEE: net.bytebuddy.asm.ModifierAdjustment#withConstructorModifiers(net.bytebuddy.matcher.ElementMatcher,java.util.List)
CALLER: static net.bytebuddy.matcher.ElementMatchers#isAnnotatedWith(java.lang.Class)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isAnnotatedWith(net.bytebuddy.description.type.TypeDescription)
CALLER: net.bytebuddy.implementation.FieldAccessor.ForParameterSetter.Appender#hashCode()
	CALLEE: net.bytebuddy.TypeCache.StorageKey#hashCode()
	CALLEE: net.bytebuddy.dynamic.Nexus#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender.AccessorMethodInvocation#hashCode()
	CALLEE: net.bytebuddy.matcher.CachingMatcher#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall#hashCode()
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForInstance.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForImplicitProperty.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.MethodCallProxy.MethodCall.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.MethodCall.Appender#hashCode()
	CALLEE: net.bytebuddy.utility.JavaModule#hashCode()
	CALLEE: net.bytebuddy.description.type.TypeVariableToken#hashCode()
	CALLEE: net.bytebuddy.implementation.bytecode.collection.ArrayFactory.ArrayStackManipulation#hashCode()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForParameterSetter.Appender#hashCode()
	CALLEE: net.bytebuddy.TypeCache.LookupKey#hashCode()
	CALLEE: net.bytebuddy.implementation.FixedValue.ForOriginType.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForField.Appender#hashCode()
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.ClassDefinitionAction#hashCode()
	CALLEE: net.bytebuddy.build.maven.MavenCoordinate#hashCode()
CALLER: net.bytebuddy.asm.MemberSubstitution.WithoutSpecification#stub()
	CALLEE: net.bytebuddy.asm.MemberSubstitution.WithoutSpecification.ForMatchedMethod#doStub()
	CALLEE: net.bytebuddy.asm.MemberSubstitution.WithoutSpecification.ForMatchedField#doStub()
	CALLEE: net.bytebuddy.asm.MemberSubstitution.WithoutSpecification.ForMatchedByteCodeElement#doStub()
CALLER: static net.bytebuddy.implementation.InvocationHandlerAdapter#of(java.lang.reflect.InvocationHandler,java.lang.String)
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForInstance#<init>(java.lang.String,boolean,net.bytebuddy.implementation.bytecode.assign.Assigner,java.lang.reflect.InvocationHandler)
CALLER: net.bytebuddy.asm.Advice.WithCustomMapping#bind(java.lang.Class,java.lang.Enum)
	CALLEE: net.bytebuddy.asm.Advice.WithCustomMapping#bind(java.lang.Class,net.bytebuddy.description.enumeration.EnumerationDescription)
CALLER: net.bytebuddy.asm.MemberSubstitution.WithoutSpecification.ForMatchedMethod#onSuperCall()
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isVirtual()
CALLER: net.bytebuddy.utility.visitor.StackAwareMethodVisitor#visitLdcInsn(java.lang.Object)
	CALLEE: net.bytebuddy.utility.visitor.StackAwareMethodVisitor#adjustStack(int)
CALLER: static net.bytebuddy.matcher.ElementMatchers#nameEndsWith(java.lang.String)
	CALLEE: net.bytebuddy.matcher.StringMatcher#<init>(java.lang.String,net.bytebuddy.matcher.StringMatcher.Mode)
	CALLEE: net.bytebuddy.matcher.NameMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.android.AndroidClassLoadingStrategy.Injecting#<init>(java.io.File,net.bytebuddy.android.AndroidClassLoadingStrategy.DexProcessor)
	CALLEE: net.bytebuddy.android.AndroidClassLoadingStrategy#<init>(java.io.File,net.bytebuddy.android.AndroidClassLoadingStrategy.DexProcessor)
CALLER: net.bytebuddy.asm.Advice.AdviceVisitor.WithExitAdvice#apply(net.bytebuddy.jar.asm.MethodVisitor)
	CALLEE: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#visitInsn(int)
	CALLEE: net.bytebuddy.utility.visitor.StackAwareMethodVisitor#visitInsn(int)
	CALLEE: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#visitJumpInsn(int,net.bytebuddy.jar.asm.Label)
	CALLEE: net.bytebuddy.utility.visitor.StackAwareMethodVisitor#visitJumpInsn(int,net.bytebuddy.jar.asm.Label)
CALLER: static net.bytebuddy.dynamic.loading.ClassReloadingStrategy#of(java.lang.instrument.Instrumentation)
	CALLEE: net.bytebuddy.dynamic.loading.ClassReloadingStrategy#<init>(java.lang.instrument.Instrumentation,net.bytebuddy.dynamic.loading.ClassReloadingStrategy.Strategy)
CALLER: net.bytebuddy.benchmark.ClassByExtensionBenchmark#benchmarkByteBuddyWithProxyAndReusedDelegatorWithTypePool()
	CALLEE: net.bytebuddy.ByteBuddy#<init>()
	CALLEE: net.bytebuddy.ByteBuddy#with(net.bytebuddy.dynamic.scaffold.TypeValidation)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#none()
	CALLEE: net.bytebuddy.ByteBuddy#ignore(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: net.bytebuddy.ByteBuddy#subclass(net.bytebuddy.description.type.TypeDefinition)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isDeclaredBy(net.bytebuddy.description.type.TypeDescription)
	CALLEE: net.bytebuddy.benchmark.ClassByExtensionBenchmark#newClassLoader()
CALLER: static net.bytebuddy.matcher.ElementMatchers#isMethod()
	CALLEE: net.bytebuddy.matcher.MethodSortMatcher#<init>(net.bytebuddy.matcher.MethodSortMatcher.Sort)
CALLER: static net.bytebuddy.matcher.ElementMatchers#declaresException(net.bytebuddy.description.type.TypeDescription)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#erasure(net.bytebuddy.description.type.TypeDescription)
	CALLEE: net.bytebuddy.matcher.CollectionItemMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#declaresGenericException(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: net.bytebuddy.matcher.BooleanMatcher#<init>(boolean)
CALLER: static net.bytebuddy.matcher.ElementMatchers#anyOf(java.lang.Object[])
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#anyOf(java.lang.Iterable)
CALLER: net.bytebuddy.utility.visitor.LineNumberPrependingMethodVisitor#<init>(net.bytebuddy.jar.asm.MethodVisitor)
	CALLEE: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#<init>(int,net.bytebuddy.jar.asm.MethodVisitor)
CALLER: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#onVisitMultiANewArrayInsn(java.lang.String,int)
CALLER: net.bytebuddy.utility.JavaModule#equals(java.lang.Object)
	CALLEE: net.bytebuddy.TypeCache.StorageKey#equals(java.lang.Object)
	CALLEE: net.bytebuddy.dynamic.Nexus#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender.AccessorMethodInvocation#equals(java.lang.Object)
	CALLEE: net.bytebuddy.matcher.CachingMatcher#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForInstance.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForImplicitProperty.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.auxiliary.MethodCallProxy.MethodCall.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.MethodCall.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.utility.JavaModule#equals(java.lang.Object)
	CALLEE: net.bytebuddy.description.type.TypeVariableToken#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.bytecode.collection.ArrayFactory.ArrayStackManipulation#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForParameterSetter.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.TypeCache.LookupKey#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.FixedValue.ForOriginType.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForField.Appender#equals(java.lang.Object)
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.ClassDefinitionAction#equals(java.lang.Object)
	CALLEE: net.bytebuddy.build.maven.MavenCoordinate#equals(java.lang.Object)
CALLER: static net.bytebuddy.matcher.ElementMatchers#noneOf(java.lang.annotation.Annotation[])
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#noneOf(java.lang.Iterable)
CALLER: static net.bytebuddy.implementation.FixedValue#argument(int)
	CALLEE: net.bytebuddy.implementation.FixedValue.ForArgument#<init>(int)
CALLER: net.bytebuddy.implementation.InvokeDynamic#withByteValue(byte[])
CALLER: net.bytebuddy.ByteBuddy#makeInterface(java.util.Collection)
	CALLEE: net.bytebuddy.ByteBuddy#subclass(java.lang.Class,net.bytebuddy.dynamic.scaffold.subclass.ConstructorStrategy)
CALLER: static net.bytebuddy.matcher.ElementMatchers#isAnnotation()
	CALLEE: net.bytebuddy.matcher.ModifierMatcher#<init>(net.bytebuddy.matcher.ModifierMatcher.Mode)
CALLER: static net.bytebuddy.implementation.MethodDelegation#to(java.lang.Object,java.lang.reflect.Type)
	CALLEE: static net.bytebuddy.implementation.MethodDelegation#withDefaultConfiguration()
	CALLEE: net.bytebuddy.implementation.MethodDelegation.WithCustomProperties#to(java.lang.Object,java.lang.reflect.Type)
CALLER: static net.bytebuddy.matcher.ElementMatchers#isBridge()
	CALLEE: net.bytebuddy.matcher.ModifierMatcher#<init>(net.bytebuddy.matcher.ModifierMatcher.Mode)
CALLER: net.bytebuddy.implementation.MethodCall#withArgumentArrayElements(int)
CALLER: net.bytebuddy.implementation.FieldAccessor#getter(net.bytebuddy.description.field.FieldDescription,net.bytebuddy.description.method.MethodDescription)
	CALLEE: net.bytebuddy.implementation.FieldAccessor#access(net.bytebuddy.description.field.FieldDescription,net.bytebuddy.description.method.MethodDescription,net.bytebuddy.implementation.bytecode.StackManipulation)
CALLER: net.bytebuddy.asm.Advice.WithCustomMapping#bind(java.lang.Class,java.lang.reflect.Constructor,int)
	CALLEE: net.bytebuddy.asm.Advice.WithCustomMapping#bind(java.lang.Class,net.bytebuddy.description.method.ParameterDescription)
CALLER: net.bytebuddy.build.maven.ClassLoaderResolver#doResolve(net.bytebuddy.build.maven.MavenCoordinate)
	CALLEE: net.bytebuddy.build.maven.MavenCoordinate#asArtifact()
CALLER: net.bytebuddy.implementation.InvokeDynamic#withImplicitAndMethodArguments()
CALLER: net.bytebuddy.implementation.InvokeDynamic#withReference(java.lang.Object)
CALLER: net.bytebuddy.benchmark.ClassByImplementationBenchmark#benchmarkByteBuddy()
	CALLEE: net.bytebuddy.ByteBuddy#<init>()
	CALLEE: net.bytebuddy.ByteBuddy#with(net.bytebuddy.dynamic.scaffold.TypeValidation)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#none()
	CALLEE: net.bytebuddy.ByteBuddy#ignore(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: net.bytebuddy.ByteBuddy#subclass(java.lang.Class)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isDeclaredBy(java.lang.Class)
	CALLEE: net.bytebuddy.benchmark.ClassByImplementationBenchmark#newClassLoader()
CALLER: net.bytebuddy.dynamic.loading.MultipleParentClassLoader.Builder#append(java.lang.ClassLoader[])
	CALLEE: net.bytebuddy.dynamic.loading.MultipleParentClassLoader.Builder#append(java.util.List)
CALLER: net.bytebuddy.android.AndroidClassLoadingStrategy.Injecting#<init>(java.io.File)
	CALLEE: net.bytebuddy.android.AndroidClassLoadingStrategy.Injecting#<init>(java.io.File,net.bytebuddy.android.AndroidClassLoadingStrategy.DexProcessor)
CALLER: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#<init>(int,net.bytebuddy.jar.asm.MethodVisitor)
CALLER: net.bytebuddy.implementation.MethodDelegation.WithCustomProperties#to(java.lang.Object,java.lang.String)
CALLER: net.bytebuddy.matcher.MethodSortMatcher#toString()
CALLER: net.bytebuddy.asm.Advice.AdviceVisitor.WithExitAdvice.WithExceptionHandling#onUserReturn()
	CALLEE: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#visitInsn(int)
	CALLEE: net.bytebuddy.utility.visitor.StackAwareMethodVisitor#visitInsn(int)
	CALLEE: net.bytebuddy.asm.Advice.AdviceVisitor#variable(int,int)
	CALLEE: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#visitJumpInsn(int,net.bytebuddy.jar.asm.Label)
	CALLEE: net.bytebuddy.utility.visitor.StackAwareMethodVisitor#visitJumpInsn(int,net.bytebuddy.jar.asm.Label)
	CALLEE: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#visitLabel(net.bytebuddy.jar.asm.Label)
	CALLEE: net.bytebuddy.utility.visitor.StackAwareMethodVisitor#visitLabel(net.bytebuddy.jar.asm.Label)
	CALLEE: net.bytebuddy.asm.Advice.AdviceVisitor.WithExitAdvice.WithExceptionHandling#storeDefaultReturn()
CALLER: net.bytebuddy.asm.MemberSubstitution.WithoutSpecification#replaceWith(java.lang.reflect.Method)
	CALLEE: net.bytebuddy.asm.MemberSubstitution.WithoutSpecification#replaceWith(net.bytebuddy.description.method.MethodDescription)
CALLER: net.bytebuddy.asm.MemberSubstitution#field(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.benchmark.ClassByImplementationBenchmark#benchmarkJavassist()
CALLER: net.bytebuddy.asm.MemberSubstitution#invokable(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.asm.MemberRemoval#stripConstructors(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isConstructor()
	CALLEE: net.bytebuddy.asm.MemberRemoval#stripInvokables(net.bytebuddy.matcher.ElementMatcher)
CALLER: static net.bytebuddy.matcher.ElementMatchers#returns(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#erasure(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#returnsGeneric(net.bytebuddy.matcher.ElementMatcher)
CALLER: static net.bytebuddy.matcher.ElementMatchers#canThrow(java.lang.Class)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#canThrow(net.bytebuddy.description.type.TypeDescription)
CALLER: static net.bytebuddy.asm.Advice#to(net.bytebuddy.description.type.TypeDescription,net.bytebuddy.dynamic.ClassFileLocator)
	CALLEE: static net.bytebuddy.asm.Advice#to(net.bytebuddy.description.type.TypeDescription,net.bytebuddy.dynamic.ClassFileLocator,java.util.List)
CALLER: net.bytebuddy.implementation.InvokeDynamic.WithImplicitArguments#materialize()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.WithImplicitArguments#withoutArguments()
CALLER: net.bytebuddy.asm.MemberSubstitution.WithoutSpecification.ForMatchedField#doStub()
CALLER: net.bytebuddy.implementation.InvokeDynamic.WithImplicitTarget#invoke(java.lang.String)
CALLER: static net.bytebuddy.matcher.ElementMatchers#annotationType(java.lang.Class)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#annotationType(net.bytebuddy.description.type.TypeDescription)
CALLER: net.bytebuddy.implementation.InvokeDynamic.WithImplicitType.OfArgument#materialize()
CALLER: static net.bytebuddy.matcher.ElementMatchers#isSuperTypeOf(java.lang.Class)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isSuperTypeOf(net.bytebuddy.description.type.TypeDescription)
CALLER: net.bytebuddy.utility.privilege.SetAccessibleAction#run()
	CALLEE: net.bytebuddy.utility.privilege.SetAccessibleAction#run()
CALLER: net.bytebuddy.implementation.InvokeDynamic#withMethodArguments()
CALLER: static net.bytebuddy.matcher.ElementMatchers#isSystemClassLoader()
	CALLEE: net.bytebuddy.matcher.EqualityMatcher#<init>(java.lang.Object)
CALLER: net.bytebuddy.implementation.MethodCall#with(net.bytebuddy.implementation.bytecode.StackManipulation,net.bytebuddy.description.type.TypeDefinition)
CALLER: net.bytebuddy.implementation.FixedValue.ForOriginType.Appender#apply(net.bytebuddy.jar.asm.MethodVisitor,net.bytebuddy.implementation.Implementation.Context,net.bytebuddy.description.method.MethodDescription)
CALLER: static net.bytebuddy.utility.JavaModule#ofType(java.lang.Class)
CALLER: net.bytebuddy.asm.MemberSubstitution.WithoutSpecification.ForMatchedByteCodeElement#doStub()
CALLER: static net.bytebuddy.matcher.ElementMatchers#nameEndsWithIgnoreCase(java.lang.String)
	CALLEE: net.bytebuddy.matcher.StringMatcher#<init>(java.lang.String,net.bytebuddy.matcher.StringMatcher.Mode)
	CALLEE: net.bytebuddy.matcher.NameMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.implementation.MethodDelegation.WithCustomProperties#toConstructor(net.bytebuddy.description.type.TypeDescription)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isConstructor()
CALLER: net.bytebuddy.implementation.MethodDelegation#appender(net.bytebuddy.implementation.Implementation.Target)
CALLER: net.bytebuddy.asm.Advice.WithCustomMapping#to(java.lang.Class,java.lang.Class,net.bytebuddy.dynamic.ClassFileLocator)
	CALLEE: net.bytebuddy.asm.Advice.WithCustomMapping#to(net.bytebuddy.description.type.TypeDescription,net.bytebuddy.description.type.TypeDescription,net.bytebuddy.dynamic.ClassFileLocator)
CALLER: net.bytebuddy.matcher.DeclaringAnnotationMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.matcher.MethodSortMatcher#<init>(net.bytebuddy.matcher.MethodSortMatcher.Sort)
CALLER: net.bytebuddy.asm.ModifierAdjustment#withInvokableModifiers(java.util.List)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#any()
	CALLEE: net.bytebuddy.asm.ModifierAdjustment#withInvokableModifiers(net.bytebuddy.matcher.ElementMatcher,java.util.List)
CALLER: static net.bytebuddy.matcher.ElementMatchers#isChildOf(java.lang.ClassLoader)
	CALLEE: net.bytebuddy.matcher.BooleanMatcher#<init>(boolean)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#is(java.lang.Object)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#hasChild(net.bytebuddy.matcher.ElementMatcher)
CALLER: static net.bytebuddy.ClassFileVersion#of(java.lang.Class,net.bytebuddy.dynamic.ClassFileLocator)
	CALLEE: static net.bytebuddy.ClassFileVersion#of(net.bytebuddy.description.type.TypeDescription,net.bytebuddy.dynamic.ClassFileLocator)
CALLER: net.bytebuddy.ByteBuddy#makeInterface(java.lang.reflect.Type[])
	CALLEE: net.bytebuddy.ByteBuddy#makeInterface(java.util.List)
CALLER: net.bytebuddy.benchmark.SuperClassInvocationBenchmark#benchmarkByteBuddySpecialized(org.openjdk.jmh.infra.Blackhole)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(boolean)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(byte)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(short)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(int)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(char)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(long)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(float)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(double)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(java.lang.Object)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(boolean,boolean,boolean)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(byte,byte,byte)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(short,short,short)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(int,int,int)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(char,char,char)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(long,long,long)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(float,float,float)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(double,double,double)
	CALLEE: net.bytebuddy.benchmark.specimen.ExampleClass#method(java.lang.Object,java.lang.Object,java.lang.Object)
CALLER: net.bytebuddy.implementation.FixedValue.ForValue#prepare(net.bytebuddy.dynamic.scaffold.InstrumentedType)
CALLER: net.bytebuddy.asm.MemberSubstitution.WithoutSpecification.ForMatchedField#onRead()
CALLER: static net.bytebuddy.matcher.ElementMatchers#isPublic()
	CALLEE: net.bytebuddy.matcher.ModifierMatcher#<init>(net.bytebuddy.matcher.ModifierMatcher.Mode)
CALLER: net.bytebuddy.asm.MemberSubstitution#constructor(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#isConstructor()
	CALLEE: net.bytebuddy.asm.MemberSubstitution#invokable(net.bytebuddy.matcher.ElementMatcher)
CALLER: static net.bytebuddy.matcher.ElementMatchers#erasures(java.lang.Iterable)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#is(java.lang.Object)
	CALLEE: net.bytebuddy.matcher.CollectionOneToOneMatcher#<init>(java.util.List)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#erasures(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.matcher.StringMatcher#<init>(java.lang.String,net.bytebuddy.matcher.StringMatcher.Mode)
CALLER: net.bytebuddy.asm.ModifierAdjustment#withFieldModifiers(java.util.List)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#any()
	CALLEE: net.bytebuddy.asm.ModifierAdjustment#withFieldModifiers(net.bytebuddy.matcher.ElementMatcher,java.util.List)
CALLER: net.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor#onVisitInsn(int)
CALLER: static net.bytebuddy.matcher.ElementMatchers#takesGenericArguments(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: net.bytebuddy.matcher.MethodParameterTypesMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: net.bytebuddy.matcher.MethodParametersMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.dynamic.scaffold.subclass.SubclassDynamicTypeBuilder#make(net.bytebuddy.dynamic.TypeResolutionStrategy,net.bytebuddy.pool.TypePool)
	CALLEE: net.bytebuddy.dynamic.scaffold.subclass.SubclassDynamicTypeBuilder#applyConstructorStrategy(net.bytebuddy.dynamic.scaffold.InstrumentedType)
	CALLEE: net.bytebuddy.dynamic.scaffold.subclass.SubclassDynamicTypeBuilder.InstrumentableMatcher#<init>(net.bytebuddy.matcher.LatentMatcher)
CALLER: net.bytebuddy.implementation.InvokeDynamic#withFloatValue(float[])
CALLER: net.bytebuddy.asm.MemberSubstitution.WithoutSpecification.ForMatchedMethod#doReplaceWith(net.bytebuddy.description.field.FieldDescription)
CALLER: net.bytebuddy.utility.visitor.StackAwareMethodVisitor#drainStack(int,int,net.bytebuddy.implementation.bytecode.StackSize)
	CALLEE: net.bytebuddy.utility.visitor.StackAwareMethodVisitor#doDrain(java.util.List)
CALLER: static net.bytebuddy.matcher.ElementMatchers#noneOf(java.lang.Object[])
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#noneOf(java.lang.Iterable)
CALLER: net.bytebuddy.dynamic.loading.MultipleParentClassLoader.Builder#doBuild(java.lang.ClassLoader)
	CALLEE: net.bytebuddy.dynamic.loading.MultipleParentClassLoader#<init>(java.lang.ClassLoader,java.util.List)
CALLER: net.bytebuddy.implementation.FixedValue.ForValue#<init>(java.lang.Object)
	CALLEE: net.bytebuddy.TypeCache.StorageKey#hashCode()
	CALLEE: net.bytebuddy.dynamic.Nexus#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender.AccessorMethodInvocation#hashCode()
	CALLEE: net.bytebuddy.matcher.CachingMatcher#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall#hashCode()
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForInstance.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForImplicitProperty.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.MethodCallProxy.MethodCall.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.MethodCall.Appender#hashCode()
	CALLEE: net.bytebuddy.utility.JavaModule#hashCode()
	CALLEE: net.bytebuddy.description.type.TypeVariableToken#hashCode()
	CALLEE: net.bytebuddy.implementation.bytecode.collection.ArrayFactory.ArrayStackManipulation#hashCode()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForParameterSetter.Appender#hashCode()
	CALLEE: net.bytebuddy.TypeCache.LookupKey#hashCode()
	CALLEE: net.bytebuddy.implementation.FixedValue.ForOriginType.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForField.Appender#hashCode()
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.ClassDefinitionAction#hashCode()
	CALLEE: net.bytebuddy.build.maven.MavenCoordinate#hashCode()
	CALLEE: static net.bytebuddy.utility.RandomString#hashOf(int)
	CALLEE: net.bytebuddy.implementation.FixedValue.ForValue#<init>(java.lang.String,java.lang.Object)
CALLER: static net.bytebuddy.agent.ByteBuddyAgent#attach(java.io.File,java.lang.String,java.lang.String,net.bytebuddy.agent.ByteBuddyAgent.AttachmentProvider)
	CALLEE: static net.bytebuddy.agent.ByteBuddyAgent#install(net.bytebuddy.agent.ByteBuddyAgent.AttachmentProvider,java.lang.String,java.lang.String,net.bytebuddy.agent.ByteBuddyAgent.AgentProvider)
CALLER: net.bytebuddy.dynamic.loading.ClassReloadingStrategy#reset(java.lang.Class[])
	CALLEE: net.bytebuddy.dynamic.loading.ClassReloadingStrategy#reset(net.bytebuddy.dynamic.ClassFileLocator,java.lang.Class[])
CALLER: net.bytebuddy.build.maven.ClassLoaderResolver#close()
	CALLEE: net.bytebuddy.build.maven.ClassLoaderResolver#close()
CALLER: net.bytebuddy.ByteBuddy#makeEnumeration(java.lang.String[])
	CALLEE: net.bytebuddy.ByteBuddy#makeEnumeration(java.util.Collection)
CALLER: net.bytebuddy.implementation.DefaultMethodCall.Appender#locateDefault(net.bytebuddy.description.method.MethodDescription)
	CALLEE: net.bytebuddy.dynamic.scaffold.inline.RebaseImplementationTarget.RebasedMethodInvocation#getMethodDescription()
CALLER: static net.bytebuddy.matcher.ElementMatchers#takesArguments(int)
	CALLEE: net.bytebuddy.matcher.CollectionSizeMatcher#<init>(int)
	CALLEE: net.bytebuddy.matcher.MethodParametersMatcher#<init>(net.bytebuddy.matcher.ElementMatcher)
CALLER: net.bytebuddy.ByteBuddy#subclass(java.lang.reflect.Type,net.bytebuddy.dynamic.scaffold.subclass.ConstructorStrategy)
	CALLEE: net.bytebuddy.ByteBuddy#subclass(net.bytebuddy.description.type.TypeDefinition,net.bytebuddy.dynamic.scaffold.subclass.ConstructorStrategy)
CALLER: static net.bytebuddy.dynamic.scaffold.inline.RebaseImplementationTarget.RebasedMethodInvocation#of(net.bytebuddy.description.method.MethodDescription,net.bytebuddy.description.type.TypeDescription,net.bytebuddy.implementation.bytecode.StackManipulation)
	CALLEE: net.bytebuddy.implementation.bytecode.constant.FieldConstant#isValid()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender.AccessorMethodInvocation#isValid()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.ForDefaultMethod#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.JavaConstantValue#isValid()
	CALLEE: net.bytebuddy.implementation.auxiliary.MethodCallProxy.AssignableSignatureCall#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.MethodConstant#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.MethodConstant.CachedMethod#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.assign.TypeCasting#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.member.HandleInvocation#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.collection.ArrayFactory.ArrayStackManipulation#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.TextConstant#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.FieldConstant.Cached#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.SerializedConstant#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.MethodConstant.CachedConstructor#isValid()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.ForSuperMethodByConstructor#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.TypeCreation#isValid()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.ForSuperMethodByReflectionFactory#isValid()
	CALLEE: net.bytebuddy.dynamic.scaffold.inline.RebaseImplementationTarget.RebasedMethodInvocation#<init>(net.bytebuddy.description.method.MethodDescription,net.bytebuddy.description.type.TypeDescription,net.bytebuddy.implementation.bytecode.StackManipulation)
CALLER: net.bytebuddy.ClassFileVersion#isAtLeast(net.bytebuddy.ClassFileVersion)
	CALLEE: net.bytebuddy.ClassFileVersion#compareTo(net.bytebuddy.ClassFileVersion)
CALLER: net.bytebuddy.implementation.FixedValue.ForValue#<init>(java.lang.String,java.lang.Object)
CALLER: net.bytebuddy.implementation.FieldAccessor#access(net.bytebuddy.description.field.FieldDescription,net.bytebuddy.description.method.MethodDescription,net.bytebuddy.implementation.bytecode.StackManipulation)
	CALLEE: net.bytebuddy.implementation.bytecode.constant.FieldConstant#isValid()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender.AccessorMethodInvocation#isValid()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.ForDefaultMethod#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.JavaConstantValue#isValid()
	CALLEE: net.bytebuddy.implementation.auxiliary.MethodCallProxy.AssignableSignatureCall#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.MethodConstant#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.MethodConstant.CachedMethod#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.assign.TypeCasting#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.member.HandleInvocation#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.collection.ArrayFactory.ArrayStackManipulation#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.TextConstant#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.FieldConstant.Cached#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.SerializedConstant#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.constant.MethodConstant.CachedConstructor#isValid()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.ForSuperMethodByConstructor#isValid()
	CALLEE: net.bytebuddy.implementation.bytecode.TypeCreation#isValid()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.ForSuperMethodByReflectionFactory#isValid()
CALLER: static net.bytebuddy.matcher.ElementMatchers#fieldType(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#erasure(net.bytebuddy.matcher.ElementMatcher)
	CALLEE: static net.bytebuddy.matcher.ElementMatchers#genericFieldType(net.bytebuddy.matcher.ElementMatcher)
CALLER: static net.bytebuddy.implementation.InvocationHandlerAdapter#of(java.lang.reflect.InvocationHandler)
	CALLEE: net.bytebuddy.TypeCache.StorageKey#hashCode()
	CALLEE: net.bytebuddy.dynamic.Nexus#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender.AccessorMethodInvocation#hashCode()
	CALLEE: net.bytebuddy.matcher.CachingMatcher#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall#hashCode()
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForInstance.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForImplicitProperty.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.TypeProxy.MethodCall.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.auxiliary.MethodCallProxy.MethodCall.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.MethodCall.Appender#hashCode()
	CALLEE: net.bytebuddy.utility.JavaModule#hashCode()
	CALLEE: net.bytebuddy.description.type.TypeVariableToken#hashCode()
	CALLEE: net.bytebuddy.implementation.bytecode.collection.ArrayFactory.ArrayStackManipulation#hashCode()
	CALLEE: net.bytebuddy.implementation.InvokeDynamic.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.FieldAccessor.ForParameterSetter.Appender#hashCode()
	CALLEE: net.bytebuddy.TypeCache.LookupKey#hashCode()
	CALLEE: net.bytebuddy.implementation.FixedValue.ForOriginType.Appender#hashCode()
	CALLEE: net.bytebuddy.implementation.InvocationHandlerAdapter.ForField.Appender#hashCode()
	CALLEE: net.bytebuddy.dynamic.loading.ByteArrayClassLoader.ClassDefinitionAction#hashCode()
	CALLEE: net.bytebuddy.build.maven.MavenCoordinate#hashCode()
	CALLEE: static net.bytebuddy.utility.RandomString#hashOf(int)
	CALLEE: static net.bytebuddy.implementation.InvocationHandlerAdapter#of(java.lang.reflect.InvocationHandler,java.lang.String)
